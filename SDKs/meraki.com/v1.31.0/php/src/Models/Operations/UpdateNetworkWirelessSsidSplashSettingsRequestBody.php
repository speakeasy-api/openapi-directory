<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkWirelessSsidSplashSettingsRequestBody
{
    /**
     * Whether or not to allow simultaneous logins from different devices.
     * 
     * @var ?bool $allowSimultaneousLogins
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowSimultaneousLogins')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowSimultaneousLogins = null;
    
    /**
     * Details associated with billing splash.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodyBilling $billing
     */
	#[\JMS\Serializer\Annotation\SerializedName('billing')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodyBilling')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidSplashSettingsRequestBodyBilling $billing = null;
    
    /**
     * How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
     * 
     * @var ?bool $blockAllTrafficBeforeSignOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('blockAllTrafficBeforeSignOn')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $blockAllTrafficBeforeSignOn = null;
    
    /**
     * How login attempts should be handled when the controller is unreachable. Can be either 'open', 'restricted', or 'default'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodyControllerDisconnectionBehaviorEnum $controllerDisconnectionBehavior
     */
	#[\JMS\Serializer\Annotation\SerializedName('controllerDisconnectionBehavior')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodyControllerDisconnectionBehaviorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidSplashSettingsRequestBodyControllerDisconnectionBehaviorEnum $controllerDisconnectionBehavior = null;
    
    /**
     * Details associated with guest sponsored splash.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodyGuestSponsorship $guestSponsorship
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestSponsorship')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodyGuestSponsorship')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidSplashSettingsRequestBodyGuestSponsorship $guestSponsorship = null;
    
    /**
     * The custom redirect URL where the users will go after the splash page.
     * 
     * @var ?string $redirectUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('redirectUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $redirectUrl = null;
    
    /**
     * Systems Manager sentry enrollment splash settings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySentryEnrollment $sentryEnrollment
     */
	#[\JMS\Serializer\Annotation\SerializedName('sentryEnrollment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySentryEnrollment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidSplashSettingsRequestBodySentryEnrollment $sentryEnrollment = null;
    
    /**
     * The image used in the splash page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashImage $splashImage
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashImage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashImage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashImage $splashImage = null;
    
    /**
     * The logo used in the splash page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashLogo $splashLogo
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashLogo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashLogo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashLogo $splashLogo = null;
    
    /**
     * The prepaid front image used in the splash page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashPrepaidFront $splashPrepaidFront
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashPrepaidFront')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashPrepaidFront')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidSplashSettingsRequestBodySplashPrepaidFront $splashPrepaidFront = null;
    
    /**
     * Splash timeout in minutes. This will determine how often users will see the splash page.
     * 
     * @var ?int $splashTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashTimeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $splashTimeout = null;
    
    /**
     * [optional] The custom splash URL of the click-through splash page. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'
     * 
     * @var ?string $splashUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $splashUrl = null;
    
    /**
     * The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page. A custom redirect URL must be set if this is true.
     * 
     * @var ?bool $useRedirectUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('useRedirectUrl')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useRedirectUrl = null;
    
    /**
     * [optional] Boolean indicating whether the users will be redirected to the custom splash url. A custom splash URL must be set if this is true. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.
     * 
     * @var ?bool $useSplashUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('useSplashUrl')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useSplashUrl = null;
    
    /**
     * The welcome message for the users on the splash page.
     * 
     * @var ?string $welcomeMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('welcomeMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $welcomeMessage = null;
    
	public function __construct()
	{
		$this->allowSimultaneousLogins = null;
		$this->billing = null;
		$this->blockAllTrafficBeforeSignOn = null;
		$this->controllerDisconnectionBehavior = null;
		$this->guestSponsorship = null;
		$this->redirectUrl = null;
		$this->sentryEnrollment = null;
		$this->splashImage = null;
		$this->splashLogo = null;
		$this->splashPrepaidFront = null;
		$this->splashTimeout = null;
		$this->splashUrl = null;
		$this->useRedirectUrl = null;
		$this->useSplashUrl = null;
		$this->welcomeMessage = null;
	}
}
