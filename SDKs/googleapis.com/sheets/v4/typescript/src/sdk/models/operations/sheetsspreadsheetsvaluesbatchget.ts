/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SheetsSpreadsheetsValuesBatchGetSecurityOption1 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesBatchGetSecurityOption2 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesBatchGetSecurityOption3 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesBatchGetSecurityOption4 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesBatchGetSecurityOption5 extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export class SheetsSpreadsheetsValuesBatchGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, option=true" })
  option1?: SheetsSpreadsheetsValuesBatchGetSecurityOption1;

  @SpeakeasyMetadata({ data: "security, option=true" })
  option2?: SheetsSpreadsheetsValuesBatchGetSecurityOption2;

  @SpeakeasyMetadata({ data: "security, option=true" })
  option3?: SheetsSpreadsheetsValuesBatchGetSecurityOption3;

  @SpeakeasyMetadata({ data: "security, option=true" })
  option4?: SheetsSpreadsheetsValuesBatchGetSecurityOption4;

  @SpeakeasyMetadata({ data: "security, option=true" })
  option5?: SheetsSpreadsheetsValuesBatchGetSecurityOption5;
}

/**
 * How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
 */
export enum SheetsSpreadsheetsValuesBatchGetDateTimeRenderOptionEnum {
  SerialNumber = "SERIAL_NUMBER",
  FormattedString = "FORMATTED_STRING",
}

/**
 * The major dimension that results should use. For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then requesting `ranges=["A1:B2"],majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `ranges=["A1:B2"],majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
 */
export enum SheetsSpreadsheetsValuesBatchGetMajorDimensionEnum {
  DimensionUnspecified = "DIMENSION_UNSPECIFIED",
  Rows = "ROWS",
  Columns = "COLUMNS",
}

/**
 * How values should be represented in the output. The default render option is ValueRenderOption.FORMATTED_VALUE.
 */
export enum SheetsSpreadsheetsValuesBatchGetValueRenderOptionEnum {
  FormattedValue = "FORMATTED_VALUE",
  UnformattedValue = "UNFORMATTED_VALUE",
  Formula = "FORMULA",
}

export class SheetsSpreadsheetsValuesBatchGetRequest extends SpeakeasyBase {
  /**
   * V1 error format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=$.xgafv",
  })
  dollarXgafv?: shared.XgafvEnum;

  /**
   * OAuth access token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=access_token",
  })
  accessToken?: string;

  /**
   * Data format for response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * JSONP
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dateTimeRenderOption",
  })
  dateTimeRenderOption?: SheetsSpreadsheetsValuesBatchGetDateTimeRenderOptionEnum;

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * The major dimension that results should use. For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then requesting `ranges=["A1:B2"],majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `ranges=["A1:B2"],majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=majorDimension",
  })
  majorDimension?: SheetsSpreadsheetsValuesBatchGetMajorDimensionEnum;

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * The [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell) of the range to retrieve values from.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ranges",
  })
  ranges?: string[];

  /**
   * The ID of the spreadsheet to retrieve data from.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spreadsheetId",
  })
  spreadsheetId: string;

  /**
   * Legacy upload protocol for media (e.g. "media", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=uploadType",
  })
  uploadType?: string;

  /**
   * Upload protocol for media (e.g. "raw", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=upload_protocol",
  })
  uploadProtocol?: string;

  /**
   * How values should be represented in the output. The default render option is ValueRenderOption.FORMATTED_VALUE.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=valueRenderOption",
  })
  valueRenderOption?: SheetsSpreadsheetsValuesBatchGetValueRenderOptionEnum;
}

export class SheetsSpreadsheetsValuesBatchGetResponse extends SpeakeasyBase {
  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  batchGetValuesResponse?: shared.BatchGetValuesResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
