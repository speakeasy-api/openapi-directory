// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateNetworkCellularGatewayDhcpRequestBody struct {
	// DHCP Lease time for all MG of the network. Possible values are '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'.
	DhcpLeaseTime *string `json:"dhcpLeaseTime,omitempty"`
	// list of fixed IPs representing the the DNS Name servers when the mode is 'custom'
	DNSCustomNameservers []string `json:"dnsCustomNameservers,omitempty"`
	// DNS name servers mode for all MG of the network. Possible values are: 'upstream_dns', 'google_dns', 'opendns', 'custom'.
	DNSNameservers *string `json:"dnsNameservers,omitempty"`
}

type UpdateNetworkCellularGatewayDhcpRequest struct {
	RequestBody *UpdateNetworkCellularGatewayDhcpRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                       `pathParam:"style=simple,explode=false,name=networkId"`
}

// UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum - DHCP Lease time for all MG in the network.
type UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum string

const (
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnumOneDay        UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum = "1 day"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnumOneHour       UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum = "1 hour"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnumOneWeek       UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum = "1 week"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnumTwelveHours   UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum = "12 hours"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnumThirtyMinutes UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum = "30 minutes"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnumFourHours     UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum = "4 hours"
)

func (e *UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1 day":
		fallthrough
	case "1 hour":
		fallthrough
	case "1 week":
		fallthrough
	case "12 hours":
		fallthrough
	case "30 minutes":
		fallthrough
	case "4 hours":
		*e = UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum: %s", s)
	}
}

// UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum - DNS name servers mode for all MG in the network.
type UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum string

const (
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnumCustom      UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum = "custom"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnumGoogleDNS   UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum = "google_dns"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnumOpendns     UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum = "opendns"
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnumUpstreamDNS UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum = "upstream_dns"
)

func (e *UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "custom":
		fallthrough
	case "google_dns":
		fallthrough
	case "opendns":
		fallthrough
	case "upstream_dns":
		*e = UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum: %s", s)
	}
}

// UpdateNetworkCellularGatewayDhcp200ApplicationJSON - Successful operation
type UpdateNetworkCellularGatewayDhcp200ApplicationJSON struct {
	// DHCP Lease time for all MG in the network.
	DhcpLeaseTime *UpdateNetworkCellularGatewayDhcp200ApplicationJSONDhcpLeaseTimeEnum `json:"dhcpLeaseTime,omitempty"`
	// List of fixed IPs representing the the DNS Name servers when the mode is 'custom'.
	DNSCustomNameservers []string `json:"dnsCustomNameservers,omitempty"`
	// DNS name servers mode for all MG in the network.
	DNSNameservers *UpdateNetworkCellularGatewayDhcp200ApplicationJSONDNSNameserversEnum `json:"dnsNameservers,omitempty"`
}

type UpdateNetworkCellularGatewayDhcpResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkCellularGatewayDhcp200ApplicationJSONObject *UpdateNetworkCellularGatewayDhcp200ApplicationJSON
}
