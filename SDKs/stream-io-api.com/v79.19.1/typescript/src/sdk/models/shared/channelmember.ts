/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Permission level of the member in the channel (DEPRECATED: use channel_role instead)
 */
export enum ChannelMemberRoleEnum {
  Member = "member",
  Moderator = "moderator",
  Admin = "admin",
  Owner = "owner",
}

export class ChannelMember extends SpeakeasyBase {
  /**
   * Expiration date of the ban
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ban_expires" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  banExpires?: Date;

  /**
   * Whether member is banned this channel or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "banned" })
  banned: boolean;

  /**
   * Role of the member in the channel
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel_role" })
  channelRole: string;

  /**
   * Date/time of creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedAt?: Date;

  /**
   * Date when invite was accepted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invite_accepted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  inviteAcceptedAt?: Date;

  /**
   * Date when invite was rejected
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invite_rejected_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  inviteRejectedAt?: Date;

  /**
   * Whether member was invited or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invited" })
  invited?: boolean;

  /**
   * Whether member is channel moderator or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_moderator" })
  isModerator?: boolean;

  /**
   * Permission level of the member in the channel (DEPRECATED: use channel_role instead)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: ChannelMemberRoleEnum;

  /**
   * Whether member is shadow banned in this channel or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shadow_banned" })
  shadowBanned: boolean;

  /**
   * Date/time of the last update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * Represents chat user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;
}
