// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// NewsByDateFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type NewsByDateFormatEnum string

const (
	NewsByDateFormatEnumXML  NewsByDateFormatEnum = "XML"
	NewsByDateFormatEnumJSON NewsByDateFormatEnum = "JSON"
)

func (e NewsByDateFormatEnum) ToPointer() *NewsByDateFormatEnum {
	return &e
}

func (e *NewsByDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = NewsByDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NewsByDateFormatEnum: %v", v)
	}
}

type NewsByDateRequest struct {
	// The date of the news.
	//  <br>Examples: <code>2018-JAN-31</code>, <code>2017-OCT-01</code>.
	//
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format NewsByDateFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type NewsByDateResponse struct {
	ContentType string
	News        []shared.News
	StatusCode  int
	RawResponse *http.Response
}
