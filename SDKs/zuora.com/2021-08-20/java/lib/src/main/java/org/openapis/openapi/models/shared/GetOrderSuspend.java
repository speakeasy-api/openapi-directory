/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * GetOrderSuspend - Information about an order action of type `Suspend`.
 * 
 */
public class GetOrderSuspend {
    /**
     * The suspend date when the suspension takes effect. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("suspendDate")
    public LocalDate suspendDate;
    public GetOrderSuspend withSuspendDate(LocalDate suspendDate) {
        this.suspendDate = suspendDate;
        return this;
    }
    
    /**
     * This field is applicable only when the `suspendPolicy` field is set to `FixedPeriodsFromToday`. It must be used together with the `suspendPeriodsType` field. Note this field is not applicable in a Suspend order action auto-created by the Order Metrics migration.
     * 
     * The total number of the periods used to specify when a subscription suspension takes effect. The subscription suspension will take place after the specified time frame (`suspendPeriods` multiplied by `suspendPeriodsType`) from today's date. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspendPeriods")
    public Long suspendPeriods;
    public GetOrderSuspend withSuspendPeriods(Long suspendPeriods) {
        this.suspendPeriods = suspendPeriods;
        return this;
    }
    
    /**
     * This field is applicable only when the `suspendPolicy` field is set to `FixedPeriodsFromToday`. It must be used together with the `suspendPeriods` field. Note this field is not applicable in a Suspend order action auto-created by the Order Metrics migration.
     * 
     * The period type used to specify when a subscription suspension takes effect. The subscription suspension will take place after the specified time frame (`suspendPeriods` multiplied by `suspendPeriodsType`) from today's date. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspendPeriodsType")
    public GetOrderSuspendSuspendPeriodsTypeEnum suspendPeriodsType;
    public GetOrderSuspend withSuspendPeriodsType(GetOrderSuspendSuspendPeriodsTypeEnum suspendPeriodsType) {
        this.suspendPeriodsType = suspendPeriodsType;
        return this;
    }
    
    /**
     * Suspend methods. Specify a way to suspend a subscription. See [Suspend Date](https://knowledgecenter.zuora.com/BC_Subscription_Management/Subscriptions/Suspend_a_Subscription#Suspend_Date) for more information. Note this field is not applicable in a Suspend order action auto-created by the Order Metrics migration.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspendPolicy")
    public GetOrderSuspendSuspendPolicyEnum suspendPolicy;
    public GetOrderSuspend withSuspendPolicy(GetOrderSuspendSuspendPolicyEnum suspendPolicy) {
        this.suspendPolicy = suspendPolicy;
        return this;
    }
    
    /**
     * This field is applicable only when the `suspendPolicy` field is set to `SpecificDate`. Note this field is not applicable in a Suspend order action auto-created by the Order Metrics migration.
     * 
     * A specific date when the subscription suspension takes effect, in YYYY-MM-DD format. The value should not be earlier than the subscription's contract effective date or later than the subscription's term end date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("suspendSpecificDate")
    public LocalDate suspendSpecificDate;
    public GetOrderSuspend withSuspendSpecificDate(LocalDate suspendSpecificDate) {
        this.suspendSpecificDate = suspendSpecificDate;
        return this;
    }
    
}
