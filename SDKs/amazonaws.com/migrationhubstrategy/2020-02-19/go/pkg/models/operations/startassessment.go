// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StartAssessmentRequestBody struct {
	// List of criteria for assessment.
	AssessmentTargets []shared.AssessmentTarget `json:"assessmentTargets,omitempty"`
	//  The S3 bucket used by the collectors to send analysis data to the service. The bucket name must begin with <code>migrationhub-strategy-</code>.
	S3bucketForAnalysisData *string `json:"s3bucketForAnalysisData,omitempty"`
	//  The S3 bucket where all the reports generated by the service are stored. The bucket name must begin with <code>migrationhub-strategy-</code>.
	S3bucketForReportData *string `json:"s3bucketForReportData,omitempty"`
}

type StartAssessmentRequest struct {
	RequestBody       StartAssessmentRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartAssessmentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StartAssessmentResponse *shared.StartAssessmentResponse
	StatusCode              int
	RawResponse             *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
