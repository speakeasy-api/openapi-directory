/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UpdateNetworkSmDevicesTagsRequestBody extends SpeakeasyBase {
  /**
   * The ids of the devices to be modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ids" })
  ids?: string;

  /**
   * The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * The serials of the devices to be modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serials" })
  serials?: string;

  /**
   * The tags to be added, deleted, or updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags: string;

  /**
   * One of add, delete, or update. Only devices that have been modified will be returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateAction" })
  updateAction: string;

  /**
   * The wifiMacs of the devices to be modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wifiMacs" })
  wifiMacs?: string;
}

export class UpdateNetworkSmDevicesTagsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateNetworkSmDevicesTagsRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkSmDevicesTagsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkSmDevicesTags200ApplicationJSONObject?: Record<string, any>;
}
