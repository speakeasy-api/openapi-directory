"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Export:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_export_csv_registrierkassen_registrierkasse_uuid_belege(self, request: operations.GetExportCsvRegistrierkassenRegistrierkasseUUIDBelegeRequest) -> operations.GetExportCsvRegistrierkassenRegistrierkasseUUIDBelegeResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportCsvRegistrierkassenRegistrierkasseUUIDBelegeRequest, base_url, '/export/csv/registrierkassen/{registrierkasseUuid}/belege', request)
        
        query_params = utils.get_query_params(operations.GetExportCsvRegistrierkassenRegistrierkasseUUIDBelegeRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportCsvRegistrierkassenRegistrierkasseUUIDBelegeResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_dep131_registrierkassen_registrierkasse_uuid_belege(self, request: operations.GetExportDep131RegistrierkassenRegistrierkasseUUIDBelegeRequest) -> operations.GetExportDep131RegistrierkassenRegistrierkasseUUIDBelegeResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportDep131RegistrierkassenRegistrierkasseUUIDBelegeRequest, base_url, '/export/dep131/registrierkassen/{registrierkasseUuid}/belege', request)
        
        query_params = utils.get_query_params(operations.GetExportDep131RegistrierkassenRegistrierkasseUUIDBelegeRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportDep131RegistrierkassenRegistrierkasseUUIDBelegeResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_dep7_registrierkassen_registrierkasse_uuid_belege(self, request: operations.GetExportDep7RegistrierkassenRegistrierkasseUUIDBelegeRequest) -> operations.GetExportDep7RegistrierkassenRegistrierkasseUUIDBelegeResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportDep7RegistrierkassenRegistrierkasseUUIDBelegeRequest, base_url, '/export/dep7/registrierkassen/{registrierkasseUuid}/belege', request)
        
        query_params = utils.get_query_params(operations.GetExportDep7RegistrierkassenRegistrierkasseUUIDBelegeRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportDep7RegistrierkassenRegistrierkasseUUIDBelegeResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_gobd_registrierkassen_registrierkasse_uuid_(self, request: operations.GetExportGobdRegistrierkassenRegistrierkasseUUIDRequest) -> operations.GetExportGobdRegistrierkassenRegistrierkasseUUIDResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportGobdRegistrierkassenRegistrierkasseUUIDRequest, base_url, '/export/gobd/registrierkassen/{registrierkasseUuid}', request)
        
        query_params = utils.get_query_params(operations.GetExportGobdRegistrierkassenRegistrierkasseUUIDRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportGobdRegistrierkassenRegistrierkasseUUIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_html_belege_beleg_uuid_(self, request: operations.GetExportHTMLBelegeBelegUUIDRequest) -> operations.GetExportHTMLBelegeBelegUUIDResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportHTMLBelegeBelegUUIDRequest, base_url, '/export/html/belege/{belegUuid}', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportHTMLBelegeBelegUUIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_pdf_belege_beleg_uuid_(self, request: operations.GetExportPdfBelegeBelegUUIDRequest) -> operations.GetExportPdfBelegeBelegUUIDResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportPdfBelegeBelegUUIDRequest, base_url, '/export/pdf/belege/{belegUuid}', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportPdfBelegeBelegUUIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_qr_belege_beleg_uuid_(self, request: operations.GetExportQrBelegeBelegUUIDRequest) -> operations.GetExportQrBelegeBelegUUIDResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportQrBelegeBelegUUIDRequest, base_url, '/export/qr/belege/{belegUuid}', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportQrBelegeBelegUUIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_thermal_print_belege_beleg_uuid_(self, request: operations.GetExportThermalPrintBelegeBelegUUIDRequest) -> operations.GetExportThermalPrintBelegeBelegUUIDResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportThermalPrintBelegeBelegUUIDRequest, base_url, '/export/thermal-print/belege/{belegUuid}', request)
        
        query_params = utils.get_query_params(operations.GetExportThermalPrintBelegeBelegUUIDRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportThermalPrintBelegeBelegUUIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_export_xls_registrierkassen_registrierkasse_uuid_belege(self, request: operations.GetExportXlsRegistrierkassenRegistrierkasseUUIDBelegeRequest) -> operations.GetExportXlsRegistrierkassenRegistrierkasseUUIDBelegeResponse:
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetExportXlsRegistrierkassenRegistrierkasseUUIDBelegeRequest, base_url, '/export/xls/registrierkassen/{registrierkasseUuid}/belege', request)
        
        query_params = utils.get_query_params(operations.GetExportXlsRegistrierkassenRegistrierkasseUUIDBelegeRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetExportXlsRegistrierkassenRegistrierkasseUUIDBelegeResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    