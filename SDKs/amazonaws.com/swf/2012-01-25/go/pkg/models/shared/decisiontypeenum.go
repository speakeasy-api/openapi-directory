// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DecisionTypeEnum string

const (
	DecisionTypeEnumScheduleActivityTask                   DecisionTypeEnum = "ScheduleActivityTask"
	DecisionTypeEnumRequestCancelActivityTask              DecisionTypeEnum = "RequestCancelActivityTask"
	DecisionTypeEnumCompleteWorkflowExecution              DecisionTypeEnum = "CompleteWorkflowExecution"
	DecisionTypeEnumFailWorkflowExecution                  DecisionTypeEnum = "FailWorkflowExecution"
	DecisionTypeEnumCancelWorkflowExecution                DecisionTypeEnum = "CancelWorkflowExecution"
	DecisionTypeEnumContinueAsNewWorkflowExecution         DecisionTypeEnum = "ContinueAsNewWorkflowExecution"
	DecisionTypeEnumRecordMarker                           DecisionTypeEnum = "RecordMarker"
	DecisionTypeEnumStartTimer                             DecisionTypeEnum = "StartTimer"
	DecisionTypeEnumCancelTimer                            DecisionTypeEnum = "CancelTimer"
	DecisionTypeEnumSignalExternalWorkflowExecution        DecisionTypeEnum = "SignalExternalWorkflowExecution"
	DecisionTypeEnumRequestCancelExternalWorkflowExecution DecisionTypeEnum = "RequestCancelExternalWorkflowExecution"
	DecisionTypeEnumStartChildWorkflowExecution            DecisionTypeEnum = "StartChildWorkflowExecution"
	DecisionTypeEnumScheduleLambdaFunction                 DecisionTypeEnum = "ScheduleLambdaFunction"
)

func (e DecisionTypeEnum) ToPointer() *DecisionTypeEnum {
	return &e
}

func (e *DecisionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ScheduleActivityTask":
		fallthrough
	case "RequestCancelActivityTask":
		fallthrough
	case "CompleteWorkflowExecution":
		fallthrough
	case "FailWorkflowExecution":
		fallthrough
	case "CancelWorkflowExecution":
		fallthrough
	case "ContinueAsNewWorkflowExecution":
		fallthrough
	case "RecordMarker":
		fallthrough
	case "StartTimer":
		fallthrough
	case "CancelTimer":
		fallthrough
	case "SignalExternalWorkflowExecution":
		fallthrough
	case "RequestCancelExternalWorkflowExecution":
		fallthrough
	case "StartChildWorkflowExecution":
		fallthrough
	case "ScheduleLambdaFunction":
		*e = DecisionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DecisionTypeEnum: %v", v)
	}
}
