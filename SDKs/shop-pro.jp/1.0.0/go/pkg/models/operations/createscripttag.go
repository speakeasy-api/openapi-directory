// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateScriptTagSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// CreateScriptTagRequestBodyScriptTagDisplayScopeEnum - スクリプトを出力するページ。
//
// - `all`: ショップページと注文完了ページの両方
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
// - `cart`: カートの途中のページ
type CreateScriptTagRequestBodyScriptTagDisplayScopeEnum string

const (
	CreateScriptTagRequestBodyScriptTagDisplayScopeEnumAll        CreateScriptTagRequestBodyScriptTagDisplayScopeEnum = "all"
	CreateScriptTagRequestBodyScriptTagDisplayScopeEnumShop       CreateScriptTagRequestBodyScriptTagDisplayScopeEnum = "shop"
	CreateScriptTagRequestBodyScriptTagDisplayScopeEnumThanksPage CreateScriptTagRequestBodyScriptTagDisplayScopeEnum = "thanks_page"
	CreateScriptTagRequestBodyScriptTagDisplayScopeEnumCart       CreateScriptTagRequestBodyScriptTagDisplayScopeEnum = "cart"
)

func (e CreateScriptTagRequestBodyScriptTagDisplayScopeEnum) ToPointer() *CreateScriptTagRequestBodyScriptTagDisplayScopeEnum {
	return &e
}

func (e *CreateScriptTagRequestBodyScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		fallthrough
	case "shop":
		fallthrough
	case "thanks_page":
		fallthrough
	case "cart":
		*e = CreateScriptTagRequestBodyScriptTagDisplayScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateScriptTagRequestBodyScriptTagDisplayScopeEnum: %v", v)
	}
}

type CreateScriptTagRequestBodyScriptTag struct {
	// スクリプトを出力するページ。
	//
	// - `all`: ショップページと注文完了ページの両方
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	// - `cart`: カートの途中のページ
	//
	DisplayScope *CreateScriptTagRequestBodyScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
}

// CreateScriptTagRequestBody - 作成するスクリプトタグの情報
type CreateScriptTagRequestBody struct {
	ScriptTag *CreateScriptTagRequestBodyScriptTag `json:"script_tag,omitempty"`
}

// CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum - スクリプトを出力するページ。
//
// - `all`: ショップページと注文完了ページの両方
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
// - `cart`: カートの途中のページ
type CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum string

const (
	CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumAll        CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "all"
	CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumShop       CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "shop"
	CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumThanksPage CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "thanks_page"
	CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumCart       CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "cart"
)

func (e CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) ToPointer() *CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum {
	return &e
}

func (e *CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		fallthrough
	case "shop":
		fallthrough
	case "thanks_page":
		fallthrough
	case "cart":
		*e = CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum: %v", v)
	}
}

type CreateScriptTag200ApplicationJSONScriptTag struct {
	// スクリプトを出力するページ。
	//
	// - `all`: ショップページと注文完了ページの両方
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	// - `cart`: カートの途中のページ
	//
	DisplayScope *CreateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトタグID
	ID *int64 `json:"id,omitempty"`
	// 作成日時
	MakeDate *int64 `json:"make_date,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
	// 更新日時
	UpdateDate *int64 `json:"update_date,omitempty"`
}

type CreateScriptTag200ApplicationJSON struct {
	ScriptTag *CreateScriptTag200ApplicationJSONScriptTag `json:"script_tag,omitempty"`
}

type CreateScriptTagResponse struct {
	ContentType                             string
	StatusCode                              int
	RawResponse                             *http.Response
	CreateScriptTag200ApplicationJSONObject *CreateScriptTag200ApplicationJSON
}
