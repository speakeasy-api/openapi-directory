"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InboundAchTransferReturn = exports.InboundAchTransferReturnTypeEnum = exports.InboundACHTransferReturnInboundACHTransferReturnSubmission = exports.InboundAchTransferReturnStatusEnum = exports.InboundAchTransferReturnReasonEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The reason why this transfer will be returned. This is sent to the initiating bank.
 */
var InboundAchTransferReturnReasonEnum;
(function (InboundAchTransferReturnReasonEnum) {
    InboundAchTransferReturnReasonEnum["AuthorizationRevokedByCustomer"] = "authorization_revoked_by_customer";
    InboundAchTransferReturnReasonEnum["PaymentStopped"] = "payment_stopped";
    InboundAchTransferReturnReasonEnum["CustomerAdvisedUnauthorizedImproperIneligibleOrIncomplete"] = "customer_advised_unauthorized_improper_ineligible_or_incomplete";
    InboundAchTransferReturnReasonEnum["RepresentativePayeeDeceasedOrUnableToContinueInThatCapacity"] = "representative_payee_deceased_or_unable_to_continue_in_that_capacity";
    InboundAchTransferReturnReasonEnum["BeneficiaryOrAccountHolderDeceased"] = "beneficiary_or_account_holder_deceased";
    InboundAchTransferReturnReasonEnum["CreditEntryRefusedByReceiver"] = "credit_entry_refused_by_receiver";
    InboundAchTransferReturnReasonEnum["DuplicateEntry"] = "duplicate_entry";
    InboundAchTransferReturnReasonEnum["CorporateCustomerAdvisedNotAuthorized"] = "corporate_customer_advised_not_authorized";
})(InboundAchTransferReturnReasonEnum = exports.InboundAchTransferReturnReasonEnum || (exports.InboundAchTransferReturnReasonEnum = {}));
/**
 * The lifecycle status of the transfer.
 */
var InboundAchTransferReturnStatusEnum;
(function (InboundAchTransferReturnStatusEnum) {
    InboundAchTransferReturnStatusEnum["PendingSubmitting"] = "pending_submitting";
    InboundAchTransferReturnStatusEnum["Submitted"] = "submitted";
})(InboundAchTransferReturnStatusEnum = exports.InboundAchTransferReturnStatusEnum || (exports.InboundAchTransferReturnStatusEnum = {}));
/**
 * After the return is submitted to FedACH, this will contain supplemental details.
 */
var InboundACHTransferReturnInboundACHTransferReturnSubmission = /** @class */ (function (_super) {
    __extends(InboundACHTransferReturnInboundACHTransferReturnSubmission, _super);
    function InboundACHTransferReturnInboundACHTransferReturnSubmission() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submitted_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], InboundACHTransferReturnInboundACHTransferReturnSubmission.prototype, "submittedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trace_number" }),
        __metadata("design:type", String)
    ], InboundACHTransferReturnInboundACHTransferReturnSubmission.prototype, "traceNumber", void 0);
    return InboundACHTransferReturnInboundACHTransferReturnSubmission;
}(utils_1.SpeakeasyBase));
exports.InboundACHTransferReturnInboundACHTransferReturnSubmission = InboundACHTransferReturnInboundACHTransferReturnSubmission;
/**
 * A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`.
 */
var InboundAchTransferReturnTypeEnum;
(function (InboundAchTransferReturnTypeEnum) {
    InboundAchTransferReturnTypeEnum["InboundAchTransferReturn"] = "inbound_ach_transfer_return";
})(InboundAchTransferReturnTypeEnum = exports.InboundAchTransferReturnTypeEnum || (exports.InboundAchTransferReturnTypeEnum = {}));
/**
 * If unauthorized activity occurs via ACH, you can create an Inbound ACH Transfer Return and we'll reverse the transaction. You can create an Inbound ACH Transfer return the first two days after receiving an Inbound ACH Transfer.
 */
var InboundAchTransferReturn = /** @class */ (function (_super) {
    __extends(InboundAchTransferReturn, _super);
    function InboundAchTransferReturn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], InboundAchTransferReturn.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inbound_ach_transfer_transaction_id" }),
        __metadata("design:type", String)
    ], InboundAchTransferReturn.prototype, "inboundAchTransferTransactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reason" }),
        __metadata("design:type", String)
    ], InboundAchTransferReturn.prototype, "reason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], InboundAchTransferReturn.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submission" }),
        (0, class_transformer_1.Type)(function () { return InboundACHTransferReturnInboundACHTransferReturnSubmission; }),
        __metadata("design:type", InboundACHTransferReturnInboundACHTransferReturnSubmission)
    ], InboundAchTransferReturn.prototype, "submission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], InboundAchTransferReturn.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], InboundAchTransferReturn.prototype, "type", void 0);
    return InboundAchTransferReturn;
}(utils_1.SpeakeasyBase));
exports.InboundAchTransferReturn = InboundAchTransferReturn;
