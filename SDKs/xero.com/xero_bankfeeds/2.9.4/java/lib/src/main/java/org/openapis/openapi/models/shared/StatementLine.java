/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * StatementLine - the lines details for a statement
 */
public class StatementLine {
    /**
     * Transaction amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;

    public StatementLine withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The cheque/check number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chequeNumber")
    public String chequeNumber;

    public StatementLine withChequeNumber(String chequeNumber) {
        this.chequeNumber = chequeNumber;
        return this;
    }
    
    /**
     * If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditDebitIndicator")
    public CreditDebitIndicatorEnum creditDebitIndicator;

    public StatementLine withCreditDebitIndicator(CreditDebitIndicatorEnum creditDebitIndicator) {
        this.creditDebitIndicator = creditDebitIndicator;
        return this;
    }
    
    /**
     * Transaction description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public StatementLine withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Typically the merchant or payee name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payeeName")
    public String payeeName;

    public StatementLine withPayeeName(String payeeName) {
        this.payeeName = payeeName;
        return this;
    }
    
    /**
     * The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("postedDate")
    public LocalDate postedDate;

    public StatementLine withPostedDate(LocalDate postedDate) {
        this.postedDate = postedDate;
        return this;
    }
    
    /**
     * Optional field to enhance the Description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public StatementLine withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionId")
    public String transactionId;

    public StatementLine withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    public StatementLine(){}
}
