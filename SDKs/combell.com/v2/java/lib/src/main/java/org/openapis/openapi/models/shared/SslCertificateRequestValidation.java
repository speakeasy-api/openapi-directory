/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SslCertificateRequestValidation {
    /**
     * Returns true if no user interaction is required and the domain validation will be verified automatic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auto_validated")
    public Boolean autoValidated;

    public SslCertificateRequestValidation withAutoValidated(Boolean autoValidated) {
        this.autoValidated = autoValidated;
        return this;
    }
    
    /**
     * The value-part (Point To) of the CNAME-record that must be created as part of domain verification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cname_validation_content")
    public String cnameValidationContent;

    public SslCertificateRequestValidation withCnameValidationContent(String cnameValidationContent) {
        this.cnameValidationContent = cnameValidationContent;
        return this;
    }
    
    /**
     * The host-part (Name) of the CNAME-record that must be created as part of domain verification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cname_validation_name")
    public String cnameValidationName;

    public SslCertificateRequestValidation withCnameValidationName(String cnameValidationName) {
        this.cnameValidationName = cnameValidationName;
        return this;
    }
    
    /**
     * A domain name of the certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dns_name")
    public String dnsName;

    public SslCertificateRequestValidation withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }
    
    /**
     * An array of eligible domain verification email addresses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email_addresses")
    public String[] emailAddresses;

    public SslCertificateRequestValidation withEmailAddresses(String[] emailAddresses) {
        this.emailAddresses = emailAddresses;
        return this;
    }
    
    /**
     * The content your verification file must contain, consisting of three lines of plain-text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_validation_content")
    public String[] fileValidationContent;

    public SslCertificateRequestValidation withFileValidationContent(String[] fileValidationContent) {
        this.fileValidationContent = fileValidationContent;
        return this;
    }
    
    /**
     * The URL (http format) your verification file must be uploaded to as part of domain verification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_validation_url_http")
    public String fileValidationUrlHttp;

    public SslCertificateRequestValidation withFileValidationUrlHttp(String fileValidationUrlHttp) {
        this.fileValidationUrlHttp = fileValidationUrlHttp;
        return this;
    }
    
    /**
     * The URL (https format) your verification file must be uploaded to as part of domain verification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_validation_url_https")
    public String fileValidationUrlHttps;

    public SslCertificateRequestValidation withFileValidationUrlHttps(String fileValidationUrlHttps) {
        this.fileValidationUrlHttps = fileValidationUrlHttps;
        return this;
    }
    
    /**
     * The domain validation verification type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public SslCertificateRequestValidationTypeEnum type;

    public SslCertificateRequestValidation withType(SslCertificateRequestValidationTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public SslCertificateRequestValidation(){}
}
