/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CapacitySpecification - &lt;p&gt;Amazon Keyspaces has two read/write capacity modes for processing reads and writes on your tables: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;On-demand (default)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Provisioned&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The read/write capacity mode that you choose controls how you are charged for read and write throughput and how table throughput capacity is managed.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/ReadWriteCapacityMode.html"&gt;Read/write capacity modes&lt;/a&gt; in the &lt;i&gt;Amazon Keyspaces Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class CapacitySpecification {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readCapacityUnits")
    public Long readCapacityUnits;
    public CapacitySpecification withReadCapacityUnits(Long readCapacityUnits) {
        this.readCapacityUnits = readCapacityUnits;
        return this;
    }
    
    @JsonProperty("throughputMode")
    public ThroughputModeEnum throughputMode;
    public CapacitySpecification withThroughputMode(ThroughputModeEnum throughputMode) {
        this.throughputMode = throughputMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("writeCapacityUnits")
    public Long writeCapacityUnits;
    public CapacitySpecification withWriteCapacityUnits(Long writeCapacityUnits) {
        this.writeCapacityUnits = writeCapacityUnits;
        return this;
    }
    
}
