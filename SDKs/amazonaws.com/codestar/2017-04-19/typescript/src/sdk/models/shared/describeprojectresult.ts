/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProjectStatus } from "./projectstatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeProjectResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "clientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "projectTemplateId" })
  projectTemplateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stackId" })
  stackId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => ProjectStatus)
  status?: ProjectStatus;
}
