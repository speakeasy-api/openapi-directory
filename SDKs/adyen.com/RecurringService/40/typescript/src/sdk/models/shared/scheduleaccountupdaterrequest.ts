/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Card } from "./card";
import { Expose, Type } from "class-transformer";

export class ScheduleAccountUpdaterRequest extends SpeakeasyBase {
  /**
   * This field contains additional data, which may be required for a particular request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalData" })
  additionalData?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => Card)
  card?: Card;

  /**
   * Account of the merchant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantAccount" })
  merchantAccount: string;

  /**
   * A reference that merchants can apply for the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  /**
   * The selected detail recurring reference.
   *
   * @remarks
   *
   * Optional if `card` is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedRecurringDetailReference" })
  selectedRecurringDetailReference?: string;

  /**
   * The reference of the shopper that owns the recurring contract.
   *
   * @remarks
   *
   * Optional if `card` is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperReference" })
  shopperReference?: string;
}
