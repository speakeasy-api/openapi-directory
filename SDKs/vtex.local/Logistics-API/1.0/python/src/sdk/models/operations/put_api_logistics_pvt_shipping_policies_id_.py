"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRangesDeliveryCapacity:
    
    capacity_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capacityType') }})
    r"""Defines how the delivery capacity is measured for this reservation window, by maximum number of orders (`\\"ORDERS_QUANTITY\\"`) or SKUs (`\\"SKUS_QUANTITY\\"`)."""  
    max_value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxValue') }})
    r"""Maximum number of orders or SKUs that the store is capable of fulfilling."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRanges:
    
    end_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime') }})
    r"""End time for day of the week."""  
    list_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPrice') }})
    r"""List price for day of the week."""  
    start_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime') }})
    r"""Start time for day of the week."""  
    delivery_capacity: Optional[list[PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRangesDeliveryCapacity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryCapacity'), 'exclude': lambda f: f is None }})
    r"""Sets maximum delivery capacity for a given reservation window for scheduled delivery."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettingsDayOfWeekForDelivery:
    
    day_of_week: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeek') }})
    r"""Day of the week, from `0` (sunday) to `6` (saturday)."""  
    delivery_ranges: list[PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRanges] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryRanges') }})
    r"""Reservation windows for scheduled delivery."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettings:
    r"""Settings for the Scheduled Delivery feature."""
    
    day_of_week_for_delivery: list[PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettingsDayOfWeekForDelivery] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeekForDelivery') }})
    r"""Select the chosen days for delivery. Values for each day of the week are: 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday. Make sure to add the available hours for the chosen days, following the example."""  
    max_range_delivery: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxRangeDelivery') }})
    r"""Range of days available within a delivery window, for the customer to choose the scheduled delivery. For example, if the configured maxRangeDelivery is equal 7, and the customer buys something on a Tuesday, the options for scheduled delivery will be shown until the following Tuesday (7 days from the purchase day). If no options are available within the maxRangeDelivery set, this shipping policy won't be shown on the checkout."""  
    use_delivery_schedule: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useDeliverySchedule') }})
    r"""Select the Scheduled Delivery configuration."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDRequestBodyMaxDimension:
    r"""Object containing attributes of maximum dimension permitted by the shipping policy (carrier)."""
    
    largest_measure: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('largestMeasure') }})
    r"""Largest measure of the package."""  
    max_measure_sum: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxMeasureSum') }})
    r"""Sum of all maximum measures of the package."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDRequestBody:
    
    delivery_on_weekends: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryOnWeekends') }})
    r"""If the shipping policy (carrier) delivers on weekends"""  
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isActive') }})
    r"""If the shipping policy is active or not."""  
    max_dimension: PutAPILogisticsPvtShippingPoliciesIDRequestBodyMaxDimension = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxDimension') }})
    r"""Object containing attributes of maximum dimension permitted by the shipping policy (carrier)."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the shipping policy"""  
    shipping_method: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingMethod') }})
    r"""Type of shipping available for this shipping policy (carrier). Options shown on freight simulation."""  
    delivery_schedule_settings: Optional[PutAPILogisticsPvtShippingPoliciesIDRequestBodyDeliveryScheduleSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryScheduleSettings'), 'exclude': lambda f: f is None }})
    r"""Settings for the Scheduled Delivery feature."""  
    

@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Shipping policy's ID"""  
    request_body: Optional[PutAPILogisticsPvtShippingPoliciesIDRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PutAPILogisticsPvtShippingPoliciesIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    