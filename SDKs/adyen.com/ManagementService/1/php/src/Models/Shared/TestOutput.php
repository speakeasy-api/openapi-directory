<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TestOutput
{
    /**
     * Unique identifier of the merchant account that the notification is about.
     * 
     * @var ?string $merchantId
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantId = null;
    
    /**
     * The response your server returned for the test webhook.
     * 
     * 
     * Your server must respond with **[accepted]** for the test webhook to be successful (`data.status`: **success**). Find out more about [accepting notifications](https://docs.adyen.com/development-resources/webhooks#accept-notifications)
     * 
     * You can use the value of this field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot unsuccessful test webhooks.
     * 
     * @var ?string $output
     */
	#[\JMS\Serializer\Annotation\SerializedName('output')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $output = null;
    
    /**
     * The [body of the notification webhook](https://docs.adyen.com/development-resources/webhooks/understand-notifications#notification-structure) that was sent to your server.
     * 
     * @var ?string $requestSent
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestSent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestSent = null;
    
    /**
     * The HTTP response code for your server's response to the test webhook.
     * 
     * 
     * You can use the value of this field together with the the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field value to troubleshoot failed test webhooks.
     * 
     * @var ?string $responseCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('responseCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $responseCode = null;
    
    /**
     * The time between sending the test webhook and receiving the response from your server. You can use it as an indication of how long your server takes to process a webhook notification. Measured in milliseconds, for example **304 ms**.
     * 
     * @var ?string $responseTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('responseTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $responseTime = null;
    
    /**
     * The status of the test request. Possible values are:
     * 
     * * **success**, if `data.output`: **[accepted]** and `data.responseCode`: **200**.
     * * **failed**, in all other cases.
     * 
     * You can use the value of the [`output`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-output) field together with the [`responseCode`](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/merchants/{merchantId}/webhooks/{id}/test__resParam_data-responseCode) value to troubleshoot failed test webhooks.
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
	public function __construct()
	{
		$this->merchantId = null;
		$this->output = null;
		$this->requestSent = null;
		$this->responseCode = null;
		$this->responseTime = null;
		$this->status = "";
	}
}
