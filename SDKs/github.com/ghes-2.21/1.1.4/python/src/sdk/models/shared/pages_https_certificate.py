"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Any, Optional

class PagesHTTPSCertificateStateEnum(str, Enum):
    NEW = 'new'
    AUTHORIZATION_CREATED = 'authorization_created'
    AUTHORIZATION_PENDING = 'authorization_pending'
    AUTHORIZED = 'authorized'
    AUTHORIZATION_REVOKED = 'authorization_revoked'
    ISSUED = 'issued'
    UPLOADED = 'uploaded'
    APPROVED = 'approved'
    ERRORED = 'errored'
    BAD_AUTHZ = 'bad_authz'
    DESTROY_PENDING = 'destroy_pending'
    DNS_CHANGED = 'dns_changed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PagesHTTPSCertificate:
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    domains: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domains') }})
    r"""Array of the domain set and its alternate name (if it is configured)"""  
    state: PagesHTTPSCertificateStateEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})  
    expires_at: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_at'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    