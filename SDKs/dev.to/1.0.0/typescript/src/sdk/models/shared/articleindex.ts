/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArticleFlareTag } from "./articleflaretag";
import { SharedOrganization } from "./sharedorganization";
import { SharedUser } from "./shareduser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Representation of an article or post returned in a list
 */
export class ArticleIndex extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "canonical_url" })
  canonicalUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cover_image" })
  coverImage: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "crossposted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  crosspostedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "edited_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  editedAt: Date;

  /**
   * Flare tag of the article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flare_tag" })
  @Type(() => ArticleFlareTag)
  flareTag?: ArticleFlareTag;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_comment_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastCommentAt: Date;

  /**
   * The organization the resource belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  @Type(() => SharedOrganization)
  organization?: SharedOrganization;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  @SpeakeasyMetadata()
  @Expose({ name: "positive_reactions_count" })
  positiveReactionsCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "public_reactions_count" })
  publicReactionsCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "published_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publishedAt: Date;

  /**
   * Crossposting or published date time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published_timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publishedTimestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "readable_publish_date" })
  readablePublishDate: string;

  /**
   * Reading time, in minutes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reading_time_minutes" })
  readingTimeMinutes: number;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "social_image" })
  socialImage: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tag_list" })
  tagList: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type_of" })
  typeOf: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * The resource creator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => SharedUser)
  user: SharedUser;
}
