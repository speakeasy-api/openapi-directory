"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreativeRequirementsCreativeFormatEnum(str, Enum):
    r"""Output only. The format of the creative, only applicable for programmatic guaranteed and preferred deals."""
    CREATIVE_FORMAT_UNSPECIFIED = 'CREATIVE_FORMAT_UNSPECIFIED'
    DISPLAY = 'DISPLAY'
    VIDEO = 'VIDEO'

class CreativeRequirementsCreativePreApprovalPolicyEnum(str, Enum):
    r"""Output only. Specifies the creative pre-approval policy."""
    CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED = 'CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED'
    SELLER_PRE_APPROVAL_REQUIRED = 'SELLER_PRE_APPROVAL_REQUIRED'
    SELLER_PRE_APPROVAL_NOT_REQUIRED = 'SELLER_PRE_APPROVAL_NOT_REQUIRED'

class CreativeRequirementsCreativeSafeFrameCompatibilityEnum(str, Enum):
    r"""Output only. Specifies whether the creative is safeFrame compatible."""
    CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED = 'CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED'
    COMPATIBLE = 'COMPATIBLE'
    INCOMPATIBLE = 'INCOMPATIBLE'

class CreativeRequirementsProgrammaticCreativeSourceEnum(str, Enum):
    r"""Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by the buyer."""
    PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED = 'PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED'
    ADVERTISER = 'ADVERTISER'
    PUBLISHER = 'PUBLISHER'

class CreativeRequirementsSkippableAdTypeEnum(str, Enum):
    r"""Output only. Skippable video ads allow viewers to skip ads after 5 seconds. Only applicable for deals with video creatives."""
    SKIPPABLE_AD_TYPE_UNSPECIFIED = 'SKIPPABLE_AD_TYPE_UNSPECIFIED'
    SKIPPABLE = 'SKIPPABLE'
    INSTREAM_SELECT = 'INSTREAM_SELECT'
    NOT_SKIPPABLE = 'NOT_SKIPPABLE'
    ANY = 'ANY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreativeRequirements:
    r"""Message captures data about the creatives in the deal."""
    
    creative_format: Optional[CreativeRequirementsCreativeFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeFormat'), 'exclude': lambda f: f is None }})
    r"""Output only. The format of the creative, only applicable for programmatic guaranteed and preferred deals."""  
    creative_pre_approval_policy: Optional[CreativeRequirementsCreativePreApprovalPolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativePreApprovalPolicy'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies the creative pre-approval policy."""  
    creative_safe_frame_compatibility: Optional[CreativeRequirementsCreativeSafeFrameCompatibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeSafeFrameCompatibility'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies whether the creative is safeFrame compatible."""  
    max_ad_duration_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxAdDurationMs'), 'exclude': lambda f: f is None }})
    r"""Output only. The max duration of the video creative in milliseconds. only applicable for deals with video creatives."""  
    programmatic_creative_source: Optional[CreativeRequirementsProgrammaticCreativeSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('programmaticCreativeSource'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies the creative source for programmatic deals. PUBLISHER means creative is provided by seller and ADVERTISER means creative is provided by the buyer."""  
    skippable_ad_type: Optional[CreativeRequirementsSkippableAdTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skippableAdType'), 'exclude': lambda f: f is None }})
    r"""Output only. Skippable video ads allow viewers to skip ads after 5 seconds. Only applicable for deals with video creatives."""  
    