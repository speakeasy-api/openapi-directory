// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"net/http"
)

type PostAssetsCorrelationMatrixShrinkageRequestBody2 struct {
	Assets int64 `json:"assets"`
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
	ShrinkageFactor         float64     `json:"shrinkageFactor"`
	// targetCorrelationMatrix[i][j] is the target correlation between the asset i and the asset j
	TargetCorrelationMatrix [][]float64 `json:"targetCorrelationMatrix"`
}

// PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum - The shrinkage target correlation matrix
type PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum string

const (
	PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnumMinimumEquicorrelationMatrix PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum = "minimumEquicorrelationMatrix"
	PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnumZeroEquicorrelationMatrix    PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum = "zeroEquicorrelationMatrix"
	PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnumMaximumEquicorrelationMatrix PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum = "maximumEquicorrelationMatrix"
)

func (e *PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minimumEquicorrelationMatrix":
		fallthrough
	case "zeroEquicorrelationMatrix":
		fallthrough
	case "maximumEquicorrelationMatrix":
		*e = PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum: %s", s)
	}
}

type PostAssetsCorrelationMatrixShrinkageRequestBody1 struct {
	Assets int64 `json:"assets"`
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
	// The shrinkage factor
	ShrinkageFactor float64 `json:"shrinkageFactor"`
	// The shrinkage target correlation matrix
	TargetEquicorrelationMatrix PostAssetsCorrelationMatrixShrinkageRequestBody1TargetEquicorrelationMatrixEnum `json:"targetEquicorrelationMatrix"`
}

type PostAssetsCorrelationMatrixShrinkageRequestBodyType string

const (
	PostAssetsCorrelationMatrixShrinkageRequestBodyTypePostAssetsCorrelationMatrixShrinkageRequestBody1 PostAssetsCorrelationMatrixShrinkageRequestBodyType = "post_/assets/correlation/matrix/shrinkage_requestBody_1"
	PostAssetsCorrelationMatrixShrinkageRequestBodyTypePostAssetsCorrelationMatrixShrinkageRequestBody2 PostAssetsCorrelationMatrixShrinkageRequestBodyType = "post_/assets/correlation/matrix/shrinkage_requestBody_2"
)

type PostAssetsCorrelationMatrixShrinkageRequestBody struct {
	PostAssetsCorrelationMatrixShrinkageRequestBody1 *PostAssetsCorrelationMatrixShrinkageRequestBody1
	PostAssetsCorrelationMatrixShrinkageRequestBody2 *PostAssetsCorrelationMatrixShrinkageRequestBody2

	Type PostAssetsCorrelationMatrixShrinkageRequestBodyType
}

func CreatePostAssetsCorrelationMatrixShrinkageRequestBodyPostAssetsCorrelationMatrixShrinkageRequestBody1(postAssetsCorrelationMatrixShrinkageRequestBody1 PostAssetsCorrelationMatrixShrinkageRequestBody1) PostAssetsCorrelationMatrixShrinkageRequestBody {
	typ := PostAssetsCorrelationMatrixShrinkageRequestBodyTypePostAssetsCorrelationMatrixShrinkageRequestBody1

	return PostAssetsCorrelationMatrixShrinkageRequestBody{
		PostAssetsCorrelationMatrixShrinkageRequestBody1: &postAssetsCorrelationMatrixShrinkageRequestBody1,
		Type: typ,
	}
}

func CreatePostAssetsCorrelationMatrixShrinkageRequestBodyPostAssetsCorrelationMatrixShrinkageRequestBody2(postAssetsCorrelationMatrixShrinkageRequestBody2 PostAssetsCorrelationMatrixShrinkageRequestBody2) PostAssetsCorrelationMatrixShrinkageRequestBody {
	typ := PostAssetsCorrelationMatrixShrinkageRequestBodyTypePostAssetsCorrelationMatrixShrinkageRequestBody2

	return PostAssetsCorrelationMatrixShrinkageRequestBody{
		PostAssetsCorrelationMatrixShrinkageRequestBody2: &postAssetsCorrelationMatrixShrinkageRequestBody2,
		Type: typ,
	}
}

func (u *PostAssetsCorrelationMatrixShrinkageRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	postAssetsCorrelationMatrixShrinkageRequestBody1 := new(PostAssetsCorrelationMatrixShrinkageRequestBody1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postAssetsCorrelationMatrixShrinkageRequestBody1); err == nil {
		u.PostAssetsCorrelationMatrixShrinkageRequestBody1 = postAssetsCorrelationMatrixShrinkageRequestBody1
		u.Type = PostAssetsCorrelationMatrixShrinkageRequestBodyTypePostAssetsCorrelationMatrixShrinkageRequestBody1
		return nil
	}

	postAssetsCorrelationMatrixShrinkageRequestBody2 := new(PostAssetsCorrelationMatrixShrinkageRequestBody2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postAssetsCorrelationMatrixShrinkageRequestBody2); err == nil {
		u.PostAssetsCorrelationMatrixShrinkageRequestBody2 = postAssetsCorrelationMatrixShrinkageRequestBody2
		u.Type = PostAssetsCorrelationMatrixShrinkageRequestBodyTypePostAssetsCorrelationMatrixShrinkageRequestBody2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostAssetsCorrelationMatrixShrinkageRequestBody) MarshalJSON() ([]byte, error) {
	if u.PostAssetsCorrelationMatrixShrinkageRequestBody1 != nil {
		return json.Marshal(u.PostAssetsCorrelationMatrixShrinkageRequestBody1)
	}

	if u.PostAssetsCorrelationMatrixShrinkageRequestBody2 != nil {
		return json.Marshal(u.PostAssetsCorrelationMatrixShrinkageRequestBody2)
	}

	return nil, nil
}

// PostAssetsCorrelationMatrixShrinkage200ApplicationJSON - OK
type PostAssetsCorrelationMatrixShrinkage200ApplicationJSON struct {
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
}

type PostAssetsCorrelationMatrixShrinkageResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PostAssetsCorrelationMatrixShrinkage200ApplicationJSONObject *PostAssetsCorrelationMatrixShrinkage200ApplicationJSON
}
