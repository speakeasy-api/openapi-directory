"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conditionalsplitactivity as shared_conditionalsplitactivity
from ..shared import contactcenteractivity as shared_contactcenteractivity
from ..shared import custommessageactivity as shared_custommessageactivity
from ..shared import emailmessageactivity as shared_emailmessageactivity
from ..shared import holdoutactivity as shared_holdoutactivity
from ..shared import multiconditionalsplitactivity as shared_multiconditionalsplitactivity
from ..shared import pushmessageactivity as shared_pushmessageactivity
from ..shared import randomsplitactivity as shared_randomsplitactivity
from ..shared import smsmessageactivity as shared_smsmessageactivity
from ..shared import waitactivity as shared_waitactivity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Activity:
    r"""Specifies the configuration and other settings for an activity in a journey."""
    
    conditional_split: Optional[shared_conditionalsplitactivity.ConditionalSplitActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConditionalSplit'), 'exclude': lambda f: f is None }})  
    contact_center: Optional[shared_contactcenteractivity.ContactCenterActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContactCenter'), 'exclude': lambda f: f is None }})  
    custom: Optional[shared_custommessageactivity.CustomMessageActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CUSTOM'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    email: Optional[shared_emailmessageactivity.EmailMessageActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EMAIL'), 'exclude': lambda f: f is None }})  
    holdout: Optional[shared_holdoutactivity.HoldoutActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Holdout'), 'exclude': lambda f: f is None }})  
    multi_condition: Optional[shared_multiconditionalsplitactivity.MultiConditionalSplitActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MultiCondition'), 'exclude': lambda f: f is None }})  
    push: Optional[shared_pushmessageactivity.PushMessageActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PUSH'), 'exclude': lambda f: f is None }})  
    random_split: Optional[shared_randomsplitactivity.RandomSplitActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RandomSplit'), 'exclude': lambda f: f is None }})  
    sms: Optional[shared_smsmessageactivity.SMSMessageActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SMS'), 'exclude': lambda f: f is None }})  
    wait: Optional[shared_waitactivity.WaitActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Wait'), 'exclude': lambda f: f is None }})  
    