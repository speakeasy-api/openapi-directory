// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TypeSyntaxEnum - The source syntax.
type TypeSyntaxEnum string

const (
	TypeSyntaxEnumSyntaxProto2   TypeSyntaxEnum = "SYNTAX_PROTO2"
	TypeSyntaxEnumSyntaxProto3   TypeSyntaxEnum = "SYNTAX_PROTO3"
	TypeSyntaxEnumSyntaxEditions TypeSyntaxEnum = "SYNTAX_EDITIONS"
)

func (e TypeSyntaxEnum) ToPointer() *TypeSyntaxEnum {
	return &e
}

func (e *TypeSyntaxEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYNTAX_PROTO2":
		fallthrough
	case "SYNTAX_PROTO3":
		fallthrough
	case "SYNTAX_EDITIONS":
		*e = TypeSyntaxEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TypeSyntaxEnum: %v", v)
	}
}

// Type - A protocol buffer message type.
type Type struct {
	// The source edition string, only valid when syntax is SYNTAX_EDITIONS.
	Edition *string `json:"edition,omitempty"`
	// The list of fields.
	Fields []Field `json:"fields,omitempty"`
	// The fully qualified message name.
	Name *string `json:"name,omitempty"`
	// The list of types appearing in `oneof` definitions in this type.
	Oneofs []string `json:"oneofs,omitempty"`
	// The protocol buffer options.
	Options []Option `json:"options,omitempty"`
	// `SourceContext` represents information about the source of a protobuf element, like the file in which it is defined.
	SourceContext *SourceContext `json:"sourceContext,omitempty"`
	// The source syntax.
	Syntax *TypeSyntaxEnum `json:"syntax,omitempty"`
}
