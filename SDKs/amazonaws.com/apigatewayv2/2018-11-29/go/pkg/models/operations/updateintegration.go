// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateIntegrationPathParams struct {
	// The API identifier.
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The integration ID.
	IntegrationID string `pathParam:"style=simple,explode=false,name=integrationId"`
}

type UpdateIntegrationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateIntegrationRequestBodyConnectionTypeEnum - Represents a connection type.
type UpdateIntegrationRequestBodyConnectionTypeEnum string

const (
	UpdateIntegrationRequestBodyConnectionTypeEnumInternet UpdateIntegrationRequestBodyConnectionTypeEnum = "INTERNET"
	UpdateIntegrationRequestBodyConnectionTypeEnumVpcLink  UpdateIntegrationRequestBodyConnectionTypeEnum = "VPC_LINK"
)

func (e *UpdateIntegrationRequestBodyConnectionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INTERNET":
		fallthrough
	case "VPC_LINK":
		*e = UpdateIntegrationRequestBodyConnectionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateIntegrationRequestBodyConnectionTypeEnum: %s", s)
	}
}

// UpdateIntegrationRequestBodyContentHandlingStrategyEnum - Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
type UpdateIntegrationRequestBodyContentHandlingStrategyEnum string

const (
	UpdateIntegrationRequestBodyContentHandlingStrategyEnumConvertToBinary UpdateIntegrationRequestBodyContentHandlingStrategyEnum = "CONVERT_TO_BINARY"
	UpdateIntegrationRequestBodyContentHandlingStrategyEnumConvertToText   UpdateIntegrationRequestBodyContentHandlingStrategyEnum = "CONVERT_TO_TEXT"
)

func (e *UpdateIntegrationRequestBodyContentHandlingStrategyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONVERT_TO_BINARY":
		fallthrough
	case "CONVERT_TO_TEXT":
		*e = UpdateIntegrationRequestBodyContentHandlingStrategyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateIntegrationRequestBodyContentHandlingStrategyEnum: %s", s)
	}
}

// UpdateIntegrationRequestBodyIntegrationTypeEnum - Represents an API method integration type.
type UpdateIntegrationRequestBodyIntegrationTypeEnum string

const (
	UpdateIntegrationRequestBodyIntegrationTypeEnumAws       UpdateIntegrationRequestBodyIntegrationTypeEnum = "AWS"
	UpdateIntegrationRequestBodyIntegrationTypeEnumHTTP      UpdateIntegrationRequestBodyIntegrationTypeEnum = "HTTP"
	UpdateIntegrationRequestBodyIntegrationTypeEnumMock      UpdateIntegrationRequestBodyIntegrationTypeEnum = "MOCK"
	UpdateIntegrationRequestBodyIntegrationTypeEnumHTTPProxy UpdateIntegrationRequestBodyIntegrationTypeEnum = "HTTP_PROXY"
	UpdateIntegrationRequestBodyIntegrationTypeEnumAwsProxy  UpdateIntegrationRequestBodyIntegrationTypeEnum = "AWS_PROXY"
)

func (e *UpdateIntegrationRequestBodyIntegrationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS":
		fallthrough
	case "HTTP":
		fallthrough
	case "MOCK":
		fallthrough
	case "HTTP_PROXY":
		fallthrough
	case "AWS_PROXY":
		*e = UpdateIntegrationRequestBodyIntegrationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateIntegrationRequestBodyIntegrationTypeEnum: %s", s)
	}
}

// UpdateIntegrationRequestBodyPassthroughBehaviorEnum - Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
type UpdateIntegrationRequestBodyPassthroughBehaviorEnum string

const (
	UpdateIntegrationRequestBodyPassthroughBehaviorEnumWhenNoMatch     UpdateIntegrationRequestBodyPassthroughBehaviorEnum = "WHEN_NO_MATCH"
	UpdateIntegrationRequestBodyPassthroughBehaviorEnumNever           UpdateIntegrationRequestBodyPassthroughBehaviorEnum = "NEVER"
	UpdateIntegrationRequestBodyPassthroughBehaviorEnumWhenNoTemplates UpdateIntegrationRequestBodyPassthroughBehaviorEnum = "WHEN_NO_TEMPLATES"
)

func (e *UpdateIntegrationRequestBodyPassthroughBehaviorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WHEN_NO_MATCH":
		fallthrough
	case "NEVER":
		fallthrough
	case "WHEN_NO_TEMPLATES":
		*e = UpdateIntegrationRequestBodyPassthroughBehaviorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateIntegrationRequestBodyPassthroughBehaviorEnum: %s", s)
	}
}

// UpdateIntegrationRequestBodyTLSConfig - The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
type UpdateIntegrationRequestBodyTLSConfig struct {
	ServerNameToVerify *string `json:"ServerNameToVerify,omitempty"`
}

type UpdateIntegrationRequestBody struct {
	// A string with a length between [1-1024].
	ConnectionID *string `json:"connectionId,omitempty"`
	// Represents a connection type.
	ConnectionType *UpdateIntegrationRequestBodyConnectionTypeEnum `json:"connectionType,omitempty"`
	// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
	ContentHandlingStrategy *UpdateIntegrationRequestBodyContentHandlingStrategyEnum `json:"contentHandlingStrategy,omitempty"`
	// Represents an Amazon Resource Name (ARN).
	CredentialsArn *string `json:"credentialsArn,omitempty"`
	// A string with a length between [0-1024].
	Description *string `json:"description,omitempty"`
	// A string with a length between [1-64].
	IntegrationMethod *string `json:"integrationMethod,omitempty"`
	// A string with a length between [1-128].
	IntegrationSubtype *string `json:"integrationSubtype,omitempty"`
	// Represents an API method integration type.
	IntegrationType *UpdateIntegrationRequestBodyIntegrationTypeEnum `json:"integrationType,omitempty"`
	// A string representation of a URI with a length between [1-2048].
	IntegrationURI *string `json:"integrationUri,omitempty"`
	// Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
	PassthroughBehavior *UpdateIntegrationRequestBodyPassthroughBehaviorEnum `json:"passthroughBehavior,omitempty"`
	// A string with a length between [1-64].
	PayloadFormatVersion *string `json:"payloadFormatVersion,omitempty"`
	// <p>For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>
	//           , where
	//             <replaceable>{location}</replaceable>
	//            is querystring, path, or header; and
	//             <replaceable>{name}</replaceable>
	//            must be a valid and unique method request parameter name.</p> <p>For HTTP API integrations with a specified integrationSubtype, request parameters are a key-value map specifying parameters that are passed to AWS_PROXY integrations. You can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services.html">Working with AWS service integrations for HTTP APIs</a>.</p> <p>For HTTP API integrations without a specified integrationSubtype request parameters are a key-value map specifying how to transform HTTP requests before sending them to the backend. The key should follow the pattern &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where action can be append, overwrite or remove. For values, you can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html">Transforming API requests and responses</a>.</p>
	RequestParameters map[string]string `json:"requestParameters,omitempty"`
	// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
	RequestTemplates map[string]string `json:"requestTemplates,omitempty"`
	// Supported only for HTTP APIs. You use response parameters to transform the HTTP response from a backend integration before returning the response to clients.
	ResponseParameters map[string]map[string]string `json:"responseParameters,omitempty"`
	// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
	TemplateSelectionExpression *string `json:"templateSelectionExpression,omitempty"`
	// An integer with a value between [50-30000].
	TimeoutInMillis *int64 `json:"timeoutInMillis,omitempty"`
	// The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
	TLSConfig *UpdateIntegrationRequestBodyTLSConfig `json:"tlsConfig,omitempty"`
}

type UpdateIntegrationRequest struct {
	PathParams UpdateIntegrationPathParams
	Headers    UpdateIntegrationHeaders
	Request    UpdateIntegrationRequestBody `request:"mediaType=application/json"`
}

type UpdateIntegrationResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateIntegrationResult *shared.UpdateIntegrationResult
}
