"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ExitEventTypeEnum(str, Enum):
    r"""Required. The type of the exit event."""
    EXIT_EVENT_TYPE_UNSPECIFIED = 'EXIT_EVENT_TYPE_UNSPECIFIED'
    EXIT_EVENT_TYPE_DEFAULT = 'EXIT_EVENT_TYPE_DEFAULT'
    EXIT_EVENT_TYPE_BACKUP = 'EXIT_EVENT_TYPE_BACKUP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExitEvent:
    r"""Exit event of the creative."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the click tag of the exit event. The name must be unique within one creative. Leave it empty or unset for creatives containing image assets only."""  
    reporting_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportingName'), 'exclude': lambda f: f is None }})
    r"""The name used to identify this event in reports. Leave it empty or unset for creatives containing image assets only."""  
    type: Optional[ExitEventTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. The type of the exit event."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""Required. The click through URL of the exit event. This is required when type is: * `EXIT_EVENT_TYPE_DEFAULT` * `EXIT_EVENT_TYPE_BACKUP`"""  
    