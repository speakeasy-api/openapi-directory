/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AdvancedSeasonStatOffense {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drives")
    public Long drives;
    public AdvancedSeasonStatOffense withDrives(Long drives) {
        this.drives = drives;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("explosiveness")
    public Double explosiveness;
    public AdvancedSeasonStatOffense withExplosiveness(Double explosiveness) {
        this.explosiveness = explosiveness;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldPosition")
    public AdvancedSeasonStatOffenseFieldPosition fieldPosition;
    public AdvancedSeasonStatOffense withFieldPosition(AdvancedSeasonStatOffenseFieldPosition fieldPosition) {
        this.fieldPosition = fieldPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("havoc")
    public AdvancedSeasonStatOffenseHavoc havoc;
    public AdvancedSeasonStatOffense withHavoc(AdvancedSeasonStatOffenseHavoc havoc) {
        this.havoc = havoc;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineYards")
    public Double lineYards;
    public AdvancedSeasonStatOffense withLineYards(Double lineYards) {
        this.lineYards = lineYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineYardsTotal")
    public Double lineYardsTotal;
    public AdvancedSeasonStatOffense withLineYardsTotal(Double lineYardsTotal) {
        this.lineYardsTotal = lineYardsTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openFieldYards")
    public Double openFieldYards;
    public AdvancedSeasonStatOffense withOpenFieldYards(Double openFieldYards) {
        this.openFieldYards = openFieldYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openFieldYardsTotal")
    public Long openFieldYardsTotal;
    public AdvancedSeasonStatOffense withOpenFieldYardsTotal(Long openFieldYardsTotal) {
        this.openFieldYardsTotal = openFieldYardsTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passingDowns")
    public AdvancedSeasonStatOffensePassingDowns passingDowns;
    public AdvancedSeasonStatOffense withPassingDowns(AdvancedSeasonStatOffensePassingDowns passingDowns) {
        this.passingDowns = passingDowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passingPlays")
    public AdvancedSeasonStatOffensePassingPlays passingPlays;
    public AdvancedSeasonStatOffense withPassingPlays(AdvancedSeasonStatOffensePassingPlays passingPlays) {
        this.passingPlays = passingPlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plays")
    public Long plays;
    public AdvancedSeasonStatOffense withPlays(Long plays) {
        this.plays = plays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pointsPerOpportunity")
    public Double pointsPerOpportunity;
    public AdvancedSeasonStatOffense withPointsPerOpportunity(Double pointsPerOpportunity) {
        this.pointsPerOpportunity = pointsPerOpportunity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powerSuccess")
    public Double powerSuccess;
    public AdvancedSeasonStatOffense withPowerSuccess(Double powerSuccess) {
        this.powerSuccess = powerSuccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ppa")
    public Double ppa;
    public AdvancedSeasonStatOffense withPpa(Double ppa) {
        this.ppa = ppa;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rushingPlays")
    public AdvancedSeasonStatOffenseRushingPlays rushingPlays;
    public AdvancedSeasonStatOffense withRushingPlays(AdvancedSeasonStatOffenseRushingPlays rushingPlays) {
        this.rushingPlays = rushingPlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondLevelYards")
    public Double secondLevelYards;
    public AdvancedSeasonStatOffense withSecondLevelYards(Double secondLevelYards) {
        this.secondLevelYards = secondLevelYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondLevelYardsTotal")
    public Long secondLevelYardsTotal;
    public AdvancedSeasonStatOffense withSecondLevelYardsTotal(Long secondLevelYardsTotal) {
        this.secondLevelYardsTotal = secondLevelYardsTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standardDowns")
    public AdvancedSeasonStatOffenseStandardDowns standardDowns;
    public AdvancedSeasonStatOffense withStandardDowns(AdvancedSeasonStatOffenseStandardDowns standardDowns) {
        this.standardDowns = standardDowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stuffRate")
    public Double stuffRate;
    public AdvancedSeasonStatOffense withStuffRate(Double stuffRate) {
        this.stuffRate = stuffRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("successRate")
    public Double successRate;
    public AdvancedSeasonStatOffense withSuccessRate(Double successRate) {
        this.successRate = successRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalOpportunies")
    public Long totalOpportunies;
    public AdvancedSeasonStatOffense withTotalOpportunies(Long totalOpportunies) {
        this.totalOpportunies = totalOpportunies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalPPA")
    public Double totalPPA;
    public AdvancedSeasonStatOffense withTotalPPA(Double totalPPA) {
        this.totalPPA = totalPPA;
        return this;
    }
    
}
