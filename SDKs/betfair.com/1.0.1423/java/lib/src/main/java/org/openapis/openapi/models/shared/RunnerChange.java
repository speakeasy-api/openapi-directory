/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RunnerChange {
    /**
     * Available To Back - PriceVol tuple delta of price changes (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("atb")
    public Double[][] atb;
    public RunnerChange withAtb(Double[][] atb) {
        this.atb = atb;
        return this;
    }
    
    /**
     * Available To Lay - PriceVol tuple delta of price changes (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("atl")
    public Double[][] atl;
    public RunnerChange withAtl(Double[][] atl) {
        this.atl = atl;
        return this;
    }
    
    /**
     * Best Available To Back - LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batb")
    public Double[][] batb;
    public RunnerChange withBatb(Double[][] batb) {
        this.batb = batb;
        return this;
    }
    
    /**
     * Best Available To Lay - LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batl")
    public Double[][] batl;
    public RunnerChange withBatl(Double[][] batl) {
        this.batl = batl;
        return this;
    }
    
    /**
     * Best Display Available To Back (includes virtual prices)- LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bdatb")
    public Double[][] bdatb;
    public RunnerChange withBdatb(Double[][] bdatb) {
        this.bdatb = bdatb;
        return this;
    }
    
    /**
     * Best Display Available To Lay (includes virtual prices)- LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bdatl")
    public Double[][] bdatl;
    public RunnerChange withBdatl(Double[][] bdatl) {
        this.bdatl = bdatl;
        return this;
    }
    
    /**
     * Handicap - the handicap of the runner (selection) (null if not applicable)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hc")
    public Double hc;
    public RunnerChange withHc(Double hc) {
        this.hc = hc;
        return this;
    }
    
    /**
     * Selection Id - the id of the runner (selection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public RunnerChange withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Last Traded Price - The last traded price (or null if un-changed)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ltp")
    public Double ltp;
    public RunnerChange withLtp(Double ltp) {
        this.ltp = ltp;
        return this;
    }
    
    /**
     * Starting Price Back - PriceVol tuple delta of price changes (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spb")
    public Double[][] spb;
    public RunnerChange withSpb(Double[][] spb) {
        this.spb = spb;
        return this;
    }
    
    /**
     * Starting Price Far - The far starting price (or null if un-changed)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spf")
    public Double spf;
    public RunnerChange withSpf(Double spf) {
        this.spf = spf;
        return this;
    }
    
    /**
     * Starting Price Lay - PriceVol tuple delta of price changes (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spl")
    public Double[][] spl;
    public RunnerChange withSpl(Double[][] spl) {
        this.spl = spl;
        return this;
    }
    
    /**
     * Starting Price Near - The far starting price (or null if un-changed)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spn")
    public Double spn;
    public RunnerChange withSpn(Double spn) {
        this.spn = spn;
        return this;
    }
    
    /**
     * Traded - PriceVol tuple delta of price changes (0 vol is remove)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trd")
    public Double[][] trd;
    public RunnerChange withTrd(Double[][] trd) {
        this.trd = trd;
        return this;
    }
    
    /**
     * The total amount matched. This value is truncated at 2dp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tv")
    public Double tv;
    public RunnerChange withTv(Double tv) {
        this.tv = tv;
        return this;
    }
    
}
