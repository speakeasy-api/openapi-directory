/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
 */
export enum CreateNetworkSwitchQosRuleRequestBodyProtocolEnum {
  Any = "ANY",
  Tcp = "TCP",
  Udp = "UDP",
}

export class CreateNetworkSwitchQosRuleRequestBody extends SpeakeasyBase {
  /**
   * DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dscp" })
  dscp?: number;

  /**
   * The destination port of the incoming packet. Applicable only if protocol is TCP or UDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dstPort" })
  dstPort?: number;

  /**
   * The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dstPortRange" })
  dstPortRange?: string;

  /**
   * The protocol of the incoming packet. Can be one of "ANY", "TCP" or "UDP". Default value is "ANY"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: CreateNetworkSwitchQosRuleRequestBodyProtocolEnum;

  /**
   * The source port of the incoming packet. Applicable only if protocol is TCP or UDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcPort" })
  srcPort?: number;

  /**
   * The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcPortRange" })
  srcPortRange?: string;

  /**
   * The VLAN of the incoming packet. A null value will match any VLAN.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlan" })
  vlan: number;
}

export class CreateNetworkSwitchQosRuleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateNetworkSwitchQosRuleRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class CreateNetworkSwitchQosRuleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createNetworkSwitchQosRule201ApplicationJSONObject?: Record<string, any>;
}
