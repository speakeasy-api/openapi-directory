"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cluster as shared_cluster
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClusteringMetrics:
    r"""Evaluation metrics for clustering models."""
    
    clusters: Optional[list[shared_cluster.Cluster]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusters'), 'exclude': lambda f: f is None }})
    r"""Information for all clusters."""  
    davies_bouldin_index: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('daviesBouldinIndex'), 'exclude': lambda f: f is None }})
    r"""Davies-Bouldin index."""  
    mean_squared_distance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meanSquaredDistance'), 'exclude': lambda f: f is None }})
    r"""Mean of squared distances between each sample to its cluster centroid."""  
    