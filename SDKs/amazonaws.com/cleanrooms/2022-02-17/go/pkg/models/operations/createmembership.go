// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateMembershipHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateMembershipRequestBodyQueryLogStatusEnum - An indicator as to whether query logging has been enabled or disabled for the collaboration.
type CreateMembershipRequestBodyQueryLogStatusEnum string

const (
	CreateMembershipRequestBodyQueryLogStatusEnumEnabled  CreateMembershipRequestBodyQueryLogStatusEnum = "ENABLED"
	CreateMembershipRequestBodyQueryLogStatusEnumDisabled CreateMembershipRequestBodyQueryLogStatusEnum = "DISABLED"
)

func (e *CreateMembershipRequestBodyQueryLogStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		*e = CreateMembershipRequestBodyQueryLogStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateMembershipRequestBodyQueryLogStatusEnum: %s", s)
	}
}

type CreateMembershipRequestBody struct {
	// The unique ID for the associated collaboration.
	CollaborationIdentifier string `json:"collaborationIdentifier"`
	// An indicator as to whether query logging has been enabled or disabled for the collaboration.
	QueryLogStatus CreateMembershipRequestBodyQueryLogStatusEnum `json:"queryLogStatus"`
}

type CreateMembershipRequest struct {
	Headers CreateMembershipHeaders
	Request CreateMembershipRequestBody `request:"mediaType=application/json"`
}

type CreateMembershipResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateMembershipOutput *shared.CreateMembershipOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
