// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PolicyControllerBundleInstallSpecManagementEnum - Management specifies how the bundle will be managed by the controller.
type PolicyControllerBundleInstallSpecManagementEnum string

const (
	PolicyControllerBundleInstallSpecManagementEnumManagementUnspecified PolicyControllerBundleInstallSpecManagementEnum = "MANAGEMENT_UNSPECIFIED"
	PolicyControllerBundleInstallSpecManagementEnumInstalled             PolicyControllerBundleInstallSpecManagementEnum = "INSTALLED"
)

func (e *PolicyControllerBundleInstallSpecManagementEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MANAGEMENT_UNSPECIFIED":
		fallthrough
	case "INSTALLED":
		*e = PolicyControllerBundleInstallSpecManagementEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyControllerBundleInstallSpecManagementEnum: %s", s)
	}
}

// PolicyControllerBundleInstallSpec - BundleInstallSpec is the specification configuration for a single managed bundle.
type PolicyControllerBundleInstallSpec struct {
	// the set of namespaces to be exempted from the bundle
	ExemptedNamespaces []string `json:"exemptedNamespaces,omitempty"`
	// Management specifies how the bundle will be managed by the controller.
	Management *PolicyControllerBundleInstallSpecManagementEnum `json:"management,omitempty"`
}
