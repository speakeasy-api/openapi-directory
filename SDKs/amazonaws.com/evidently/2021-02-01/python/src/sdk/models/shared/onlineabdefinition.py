"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnlineAbDefinition:
    r"""A structure that contains the configuration of which variation to use as the \\"control\\" version. The \\"control\\" version is used for comparison with other variations. This structure also specifies how much experiment traffic is allocated to each variation."""
    
    control_treatment_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('controlTreatmentName'), 'exclude': lambda f: f is None }})  
    treatment_weights: Optional[dict[str, int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('treatmentWeights'), 'exclude': lambda f: f is None }})  
    