// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuthenticationDecisionEnum string

const (
	AuthenticationDecisionEnumAccept               AuthenticationDecisionEnum = "ACCEPT"
	AuthenticationDecisionEnumReject               AuthenticationDecisionEnum = "REJECT"
	AuthenticationDecisionEnumNotEnoughSpeech      AuthenticationDecisionEnum = "NOT_ENOUGH_SPEECH"
	AuthenticationDecisionEnumSpeakerNotEnrolled   AuthenticationDecisionEnum = "SPEAKER_NOT_ENROLLED"
	AuthenticationDecisionEnumSpeakerOptedOut      AuthenticationDecisionEnum = "SPEAKER_OPTED_OUT"
	AuthenticationDecisionEnumSpeakerIDNotProvided AuthenticationDecisionEnum = "SPEAKER_ID_NOT_PROVIDED"
	AuthenticationDecisionEnumSpeakerExpired       AuthenticationDecisionEnum = "SPEAKER_EXPIRED"
)

func (e *AuthenticationDecisionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCEPT":
		fallthrough
	case "REJECT":
		fallthrough
	case "NOT_ENOUGH_SPEECH":
		fallthrough
	case "SPEAKER_NOT_ENROLLED":
		fallthrough
	case "SPEAKER_OPTED_OUT":
		fallthrough
	case "SPEAKER_ID_NOT_PROVIDED":
		fallthrough
	case "SPEAKER_EXPIRED":
		*e = AuthenticationDecisionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthenticationDecisionEnum: %s", s)
	}
}
