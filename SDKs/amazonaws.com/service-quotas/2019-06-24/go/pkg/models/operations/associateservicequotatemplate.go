// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// AssociateServiceQuotaTemplateXAmzTargetEnum
type AssociateServiceQuotaTemplateXAmzTargetEnum string

const (
	AssociateServiceQuotaTemplateXAmzTargetEnumServiceQuotasV20190624AssociateServiceQuotaTemplate AssociateServiceQuotaTemplateXAmzTargetEnum = "ServiceQuotasV20190624.AssociateServiceQuotaTemplate"
)

func (e AssociateServiceQuotaTemplateXAmzTargetEnum) ToPointer() *AssociateServiceQuotaTemplateXAmzTargetEnum {
	return &e
}

func (e *AssociateServiceQuotaTemplateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ServiceQuotasV20190624.AssociateServiceQuotaTemplate":
		*e = AssociateServiceQuotaTemplateXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateServiceQuotaTemplateXAmzTargetEnum: %v", v)
	}
}

type AssociateServiceQuotaTemplateRequest struct {
	RequestBody       map[string]interface{}                      `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        AssociateServiceQuotaTemplateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateServiceQuotaTemplateResponse struct {
	// AWSServiceAccessNotEnabledException
	AWSServiceAccessNotEnabledException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	AssociateServiceQuotaTemplateResponse map[string]interface{}
	ContentType                           string
	// DependencyAccessDeniedException
	DependencyAccessDeniedException interface{}
	// NoAvailableOrganizationException
	NoAvailableOrganizationException interface{}
	// OrganizationNotInAllFeaturesModeException
	OrganizationNotInAllFeaturesModeException interface{}
	StatusCode                                int
	RawResponse                               *http.Response
	// ServiceException
	ServiceException interface{}
	// TemplatesNotAvailableInRegionException
	TemplatesNotAvailableInRegionException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
