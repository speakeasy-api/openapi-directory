"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import country as shared_country
from ..shared import error as shared_error
from ..shared import errorlimit as shared_errorlimit
from enum import Enum
from typing import Optional

class GetCountryOrderEnum(str, Enum):
    r"""The direction to sort the result country states by."""
    ASCENDING = 'ascending'
    DESCENDING = 'descending'

class GetCountrySortEnum(str, Enum):
    r"""The term to sort the result country states by."""
    KEY = 'key'
    LABEL = 'label'


@dataclasses.dataclass
class GetCountryRequest:
    
    country_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'countryKey', 'style': 'simple', 'explode': False }})
    r"""The country key"""  
    market_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'marketId', 'style': 'form', 'explode': True }})
    r"""MarketId in which the request is being made, and for which responses should be localized"""  
    order: Optional[GetCountryOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""The direction to sort the result country states by."""  
    sort: Optional[GetCountrySortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""The term to sort the result country states by."""  
    

@dataclasses.dataclass
class GetCountryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    array_of_country: Optional[list[shared_country.Country]] = dataclasses.field(default=None)
    r"""Request was successful"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Country not found"""  
    error_limit: Optional[shared_errorlimit.ErrorLimit] = dataclasses.field(default=None)
    r"""Too many requests received within interval"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    