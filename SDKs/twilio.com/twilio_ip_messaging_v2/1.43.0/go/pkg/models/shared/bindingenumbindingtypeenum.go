// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BindingEnumBindingTypeEnum string

const (
	BindingEnumBindingTypeEnumGcm BindingEnumBindingTypeEnum = "gcm"
	BindingEnumBindingTypeEnumApn BindingEnumBindingTypeEnum = "apn"
	BindingEnumBindingTypeEnumFcm BindingEnumBindingTypeEnum = "fcm"
)

func (e BindingEnumBindingTypeEnum) ToPointer() *BindingEnumBindingTypeEnum {
	return &e
}

func (e *BindingEnumBindingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "gcm":
		fallthrough
	case "apn":
		fallthrough
	case "fcm":
		*e = BindingEnumBindingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BindingEnumBindingTypeEnum: %v", v)
	}
}
