// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LogoTypeEnum string

const (
	LogoTypeEnumLogo       LogoTypeEnum = "LOGO"
	LogoTypeEnumBanner     LogoTypeEnum = "BANNER"
	LogoTypeEnumScreenshot LogoTypeEnum = "SCREENSHOT"
)

func (e LogoTypeEnum) ToPointer() *LogoTypeEnum {
	return &e
}

func (e *LogoTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOGO":
		fallthrough
	case "BANNER":
		fallthrough
	case "SCREENSHOT":
		*e = LogoTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LogoTypeEnum: %v", v)
	}
}

type Logo struct {
	ContentType *string       `json:"content_type,omitempty"`
	ID          *string       `json:"id,omitempty"`
	Type        *LogoTypeEnum `json:"type,omitempty"`
	URL         string        `json:"url"`
}
