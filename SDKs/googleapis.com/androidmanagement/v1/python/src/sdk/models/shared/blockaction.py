"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BlockActionBlockScopeEnum(str, Enum):
    r"""Specifies the scope of this BlockAction. Only applicable to devices that are company-owned."""
    BLOCK_SCOPE_UNSPECIFIED = 'BLOCK_SCOPE_UNSPECIFIED'
    BLOCK_SCOPE_WORK_PROFILE = 'BLOCK_SCOPE_WORK_PROFILE'
    BLOCK_SCOPE_DEVICE = 'BLOCK_SCOPE_DEVICE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BlockAction:
    r"""An action to block access to apps and data on a fully managed device or in a work profile. This action also triggers a device or work profile to displays a user-facing notification with information (where possible) on how to correct the compliance issue. Note: wipeAction must also be specified."""
    
    block_after_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blockAfterDays'), 'exclude': lambda f: f is None }})
    r"""Number of days the policy is non-compliant before the device or work profile is blocked. To block access immediately, set to 0. blockAfterDays must be less than wipeAfterDays."""  
    block_scope: Optional[BlockActionBlockScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blockScope'), 'exclude': lambda f: f is None }})
    r"""Specifies the scope of this BlockAction. Only applicable to devices that are company-owned."""  
    