"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MaximizeSpendBidStrategyPerformanceGoalTypeEnum(str, Enum):
    r"""Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy."""
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED'
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA'
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC'
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM'
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO'
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA'
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN'
    BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MaximizeSpendBidStrategy:
    r"""A strategy that automatically adjusts the bid to optimize a specified performance goal while spending the full budget."""
    
    custom_bidding_algorithm_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customBiddingAlgorithmId'), 'exclude': lambda f: f is None }})
    r"""The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`."""  
    max_average_cpm_bid_amount_micros: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxAverageCpmBidAmountMicros'), 'exclude': lambda f: f is None }})
    r"""The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. For example, 1500000 represents 1.5 standard units of the currency."""  
    performance_goal_type: Optional[MaximizeSpendBidStrategyPerformanceGoalTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceGoalType'), 'exclude': lambda f: f is None }})
    r"""Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy."""  
    raise_bid_for_deals: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('raiseBidForDeals'), 'exclude': lambda f: f is None }})
    r"""Whether the strategy takes deal floor prices into account."""  
    