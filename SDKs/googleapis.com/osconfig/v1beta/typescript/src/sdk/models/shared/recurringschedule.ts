/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonthlySchedule } from "./monthlyschedule";
import { TimeOfDay } from "./timeofday";
import { TimeZone } from "./timezone";
import { WeeklySchedule } from "./weeklyschedule";
import { Expose, Type } from "class-transformer";

/**
 * Required. The frequency unit of this recurring schedule.
 */
export enum RecurringScheduleFrequencyEnum {
  FrequencyUnspecified = "FREQUENCY_UNSPECIFIED",
  Weekly = "WEEKLY",
  Monthly = "MONTHLY",
  Daily = "DAILY",
}

/**
 * Sets the time for recurring patch deployments.
 */
export class RecurringSchedule extends SpeakeasyBase {
  /**
   * Optional. The end time at which a recurring patch deployment schedule is no longer active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Required. The frequency unit of this recurring schedule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency?: RecurringScheduleFrequencyEnum;

  /**
   * Output only. The time the last patch job ran successfully.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastExecuteTime" })
  lastExecuteTime?: string;

  /**
   * Represents a monthly schedule. An example of a valid monthly schedule is "on the third Tuesday of the month" or "on the 15th of the month".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "monthly" })
  @Type(() => MonthlySchedule)
  monthly?: MonthlySchedule;

  /**
   * Output only. The time the next patch job is scheduled to run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextExecuteTime" })
  nextExecuteTime?: string;

  /**
   * Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeOfDay" })
  @Type(() => TimeOfDay)
  timeOfDay?: TimeOfDay;

  /**
   * Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  @Type(() => TimeZone)
  timeZone?: TimeZone;

  /**
   * Represents a weekly schedule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weekly" })
  @Type(() => WeeklySchedule)
  weekly?: WeeklySchedule;
}

/**
 * Sets the time for recurring patch deployments.
 */
export class RecurringScheduleInput extends SpeakeasyBase {
  /**
   * Optional. The end time at which a recurring patch deployment schedule is no longer active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Required. The frequency unit of this recurring schedule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency?: RecurringScheduleFrequencyEnum;

  /**
   * Represents a monthly schedule. An example of a valid monthly schedule is "on the third Tuesday of the month" or "on the 15th of the month".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "monthly" })
  @Type(() => MonthlySchedule)
  monthly?: MonthlySchedule;

  /**
   * Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeOfDay" })
  @Type(() => TimeOfDay)
  timeOfDay?: TimeOfDay;

  /**
   * Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  @Type(() => TimeZone)
  timeZone?: TimeZone;

  /**
   * Represents a weekly schedule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weekly" })
  @Type(() => WeeklySchedule)
  weekly?: WeeklySchedule;
}
