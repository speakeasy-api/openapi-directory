/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * A duplicate customer profile that is to be merged into a main profile.
 */
export class MergeProfilesRequestBodyFieldSourceProfileIds extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountNumber" })
  accountNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalInformation" })
  additionalInformation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Attributes" })
  attributes?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "BillingAddress" })
  billingAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BirthDate" })
  birthDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BusinessEmailAddress" })
  businessEmailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BusinessName" })
  businessName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BusinessPhoneNumber" })
  businessPhoneNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmailAddress" })
  emailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FirstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Gender" })
  gender?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HomePhoneNumber" })
  homePhoneNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastName" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MailingAddress" })
  mailingAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MiddleName" })
  middleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MobilePhoneNumber" })
  mobilePhoneNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PartyType" })
  partyType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PersonalEmailAddress" })
  personalEmailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PhoneNumber" })
  phoneNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ShippingAddress" })
  shippingAddress?: string;
}

export class MergeProfilesRequestBody extends SpeakeasyBase {
  /**
   * A duplicate customer profile that is to be merged into a main profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FieldSourceProfileIds" })
  @Type(() => MergeProfilesRequestBodyFieldSourceProfileIds)
  fieldSourceProfileIds?: MergeProfilesRequestBodyFieldSourceProfileIds;

  /**
   * The identifier of the profile to be taken.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MainProfileId" })
  mainProfileId: string;

  /**
   * The identifier of the profile to be merged into MainProfileId.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProfileIdsToBeMerged" })
  profileIdsToBeMerged: string[];
}

export class MergeProfilesRequest extends SpeakeasyBase {
  /**
   * The unique name of the domain.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=DomainName",
  })
  domainName: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: MergeProfilesRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class MergeProfilesResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  mergeProfilesResponse?: shared.MergeProfilesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
