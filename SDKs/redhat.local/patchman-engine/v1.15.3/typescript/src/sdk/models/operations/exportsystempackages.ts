/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ExportSystemPackagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-rh-identity",
  })
  rhIdentity: string;
}

export class ExportSystemPackagesRequest extends SpeakeasyBase {
  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[description]",
  })
  filterDescription?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[evra]",
  })
  filterEvra?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[name]",
  })
  filterName?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[summary]",
  })
  filterSummary?: string;

  /**
   * Filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[updatable]",
  })
  filterUpdatable?: boolean;

  /**
   * Inventory ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=inventory_id",
  })
  inventoryId: string;

  /**
   * Find matching text
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;
}

export class ExportSystemPackagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.ControllersSystemPackageInline })
  controllersSystemPackageInlines?: shared.ControllersSystemPackageInline[];
}
