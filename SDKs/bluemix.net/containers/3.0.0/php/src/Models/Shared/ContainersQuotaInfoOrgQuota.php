<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ContainersQuotaInfoOrgQuota
{
    /**
     * The number of public IP addresses that can be assigned across all spaces of the organization.
     * 
     * @var ?string $floatingIpsMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('floating_ips_max')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $floatingIpsMax = null;
    
    /**
     * The number of public IP addresses that are required for one space. If the number of public IP addresses is not available, then a new space cannot be created to be used with IBM Containers. 
     * 
     * @var ?string $floatingIpsSpaceDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('floating_ips_space_default')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $floatingIpsSpaceDefault = null;
    
    /**
     * The number of public IP addresses that are currently assigned to the spaces of the organization.
     * 
     * @var ?int $floatingIpsUsage
     */
	#[\JMS\Serializer\Annotation\SerializedName('floating_ips_usage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $floatingIpsUsage = null;
    
    /**
     * The maximum amount of container memory on the compute host that can be assigned across the spaces of the organization.
     * 
     * @var ?int $ramMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('ram_max')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ramMax = null;
    
    /**
     * The amount of container memory that is required to be used for one space. If this amount is not available, then a new space cannot be created to be used with IBM Containers. 
     * 
     * @var ?int $ramSpaceDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('ram_space_default')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ramSpaceDefault = null;
    
    /**
     * The amount of container memory that is currently used across all spaces of the organization.
     * 
     * @var ?int $ramUsage
     */
	#[\JMS\Serializer\Annotation\SerializedName('ram_usage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ramUsage = null;
    
    /**
     * The number of subnets that were created across all spaces of the organization.
     * 
     * @var ?int $subnetUsage
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnet_usage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subnetUsage = null;
    
    /**
     * The number of subnets that is required to create a new space. If this number is not available, then a new space cannot be created to be used with IBM Containers.
     * 
     * @var ?int $subnetsDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnets_default')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subnetsDefault = null;
    
    /**
     * The maximum number of container private subnet that can be created across all spaces of the organization.
     * 
     * @var ?int $subnetsMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnets_max')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subnetsMax = null;
    
	public function __construct()
	{
		$this->floatingIpsMax = null;
		$this->floatingIpsSpaceDefault = null;
		$this->floatingIpsUsage = null;
		$this->ramMax = null;
		$this->ramSpaceDefault = null;
		$this->ramUsage = null;
		$this->subnetUsage = null;
		$this->subnetsDefault = null;
		$this->subnetsMax = null;
	}
}
