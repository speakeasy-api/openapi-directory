// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateOrganizationSamlRolePathParams struct {
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
	SamlRoleID     string `pathParam:"style=simple,explode=false,name=samlRoleId"`
}

// UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum - The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admins'
type UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum string

const (
	UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnumFull            UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "full"
	UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnumGuestAmbassador UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "guest-ambassador"
	UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnumMonitorOnly     UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "monitor-only"
	UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnumReadOnly        UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "read-only"
	UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnumSsidAdmins      UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "ssid-admins"
)

func (e *UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "guest-ambassador":
		fallthrough
	case "monitor-only":
		fallthrough
	case "read-only":
		fallthrough
	case "ssid-admins":
		*e = UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum: %s", s)
	}
}

type UpdateOrganizationSamlRoleRequestBodyNetworks struct {
	// The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admins'
	Access UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum `json:"access"`
	// The network ID
	ID string `json:"id"`
}

// UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum - The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'
type UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum string

const (
	UpdateOrganizationSamlRoleRequestBodyOrgAccessEnumEnterprise UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum = "enterprise"
	UpdateOrganizationSamlRoleRequestBodyOrgAccessEnumFull       UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum = "full"
	UpdateOrganizationSamlRoleRequestBodyOrgAccessEnumNone       UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum = "none"
	UpdateOrganizationSamlRoleRequestBodyOrgAccessEnumReadOnly   UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum = "read-only"
)

func (e *UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enterprise":
		fallthrough
	case "full":
		fallthrough
	case "none":
		fallthrough
	case "read-only":
		*e = UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum: %s", s)
	}
}

// UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum - The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
type UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum string

const (
	UpdateOrganizationSamlRoleRequestBodyTagsAccessEnumFull            UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum = "full"
	UpdateOrganizationSamlRoleRequestBodyTagsAccessEnumGuestAmbassador UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum = "guest-ambassador"
	UpdateOrganizationSamlRoleRequestBodyTagsAccessEnumMonitorOnly     UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum = "monitor-only"
	UpdateOrganizationSamlRoleRequestBodyTagsAccessEnumReadOnly        UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum = "read-only"
)

func (e *UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "guest-ambassador":
		fallthrough
	case "monitor-only":
		fallthrough
	case "read-only":
		*e = UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum: %s", s)
	}
}

type UpdateOrganizationSamlRoleRequestBodyTags struct {
	// The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
	Access UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum `json:"access"`
	// The name of the tag
	Tag string `json:"tag"`
}

type UpdateOrganizationSamlRoleRequestBody struct {
	// The list of networks that the SAML administrator has privileges on
	Networks []UpdateOrganizationSamlRoleRequestBodyNetworks `json:"networks,omitempty"`
	// The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'
	OrgAccess *UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum `json:"orgAccess,omitempty"`
	// The role of the SAML administrator
	Role *string `json:"role,omitempty"`
	// The list of tags that the SAML administrator has privleges on
	Tags []UpdateOrganizationSamlRoleRequestBodyTags `json:"tags,omitempty"`
}

type UpdateOrganizationSamlRoleRequest struct {
	PathParams UpdateOrganizationSamlRolePathParams
	Request    *UpdateOrganizationSamlRoleRequestBody `request:"mediaType=application/json"`
}

type UpdateOrganizationSamlRole200ApplicationJSONNetworks struct {
	// The privilege of the SAML administrator on the network
	Access *string `json:"access,omitempty"`
	// The network ID
	ID *string `json:"id,omitempty"`
}

type UpdateOrganizationSamlRole200ApplicationJSONTags struct {
	// The privilege of the SAML administrator on the tag
	Access *string `json:"access,omitempty"`
	// The name of the tag
	Tag *string `json:"tag,omitempty"`
}

// UpdateOrganizationSamlRole200ApplicationJSON - Successful operation
type UpdateOrganizationSamlRole200ApplicationJSON struct {
	// ID associated with the SAML role
	ID *string `json:"id,omitempty"`
	// The list of networks that the SAML administrator has privileges on
	Networks []UpdateOrganizationSamlRole200ApplicationJSONNetworks `json:"networks,omitempty"`
	// The privilege of the SAML administrator on the organization
	OrgAccess *string `json:"orgAccess,omitempty"`
	// The role of the SAML administrator
	Role *string `json:"role,omitempty"`
	// The list of tags that the SAML administrator has privleges on
	Tags []UpdateOrganizationSamlRole200ApplicationJSONTags `json:"tags,omitempty"`
}

type UpdateOrganizationSamlRoleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateOrganizationSamlRole200ApplicationJSONObject *UpdateOrganizationSamlRole200ApplicationJSON
}
