// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TextFinalTextResultEnum - Result of text (SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
type TextFinalTextResultEnum string

const (
	TextFinalTextResultEnumSent             TextFinalTextResultEnum = "SENT"
	TextFinalTextResultEnumReceived         TextFinalTextResultEnum = "RECEIVED"
	TextFinalTextResultEnumDnt              TextFinalTextResultEnum = "DNT"
	TextFinalTextResultEnumTooBig           TextFinalTextResultEnum = "TOO_BIG"
	TextFinalTextResultEnumInternalError    TextFinalTextResultEnum = "INTERNAL_ERROR"
	TextFinalTextResultEnumCarrierError     TextFinalTextResultEnum = "CARRIER_ERROR"
	TextFinalTextResultEnumCarrierTempError TextFinalTextResultEnum = "CARRIER_TEMP_ERROR"
	TextFinalTextResultEnumUndialed         TextFinalTextResultEnum = "UNDIALED"
	TextFinalTextResultEnumInvalidNumber    TextFinalTextResultEnum = "INVALID_NUMBER"
)

func (e *TextFinalTextResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SENT":
		fallthrough
	case "RECEIVED":
		fallthrough
	case "DNT":
		fallthrough
	case "TOO_BIG":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "CARRIER_ERROR":
		fallthrough
	case "CARRIER_TEMP_ERROR":
		fallthrough
	case "UNDIALED":
		fallthrough
	case "INVALID_NUMBER":
		*e = TextFinalTextResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TextFinalTextResultEnum: %s", s)
	}
}

// TextStateEnum - Current state of an action (READY, SELECTED, CALLBACK, DISABLED, FINISHED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
type TextStateEnum string

const (
	TextStateEnumReady            TextStateEnum = "READY"
	TextStateEnumSelected         TextStateEnum = "SELECTED"
	TextStateEnumCallback         TextStateEnum = "CALLBACK"
	TextStateEnumFinished         TextStateEnum = "FINISHED"
	TextStateEnumDisabled         TextStateEnum = "DISABLED"
	TextStateEnumSkipped          TextStateEnum = "SKIPPED"
	TextStateEnumDnc              TextStateEnum = "DNC"
	TextStateEnumDup              TextStateEnum = "DUP"
	TextStateEnumInvalid          TextStateEnum = "INVALID"
	TextStateEnumTimeout          TextStateEnum = "TIMEOUT"
	TextStateEnumPeriodLimit      TextStateEnum = "PERIOD_LIMIT"
	TextStateEnumRestrictedNumber TextStateEnum = "RESTRICTED_NUMBER"
)

func (e *TextStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "READY":
		fallthrough
	case "SELECTED":
		fallthrough
	case "CALLBACK":
		fallthrough
	case "FINISHED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "SKIPPED":
		fallthrough
	case "DNC":
		fallthrough
	case "DUP":
		fallthrough
	case "INVALID":
		fallthrough
	case "TIMEOUT":
		fallthrough
	case "PERIOD_LIMIT":
		fallthrough
	case "RESTRICTED_NUMBER":
		*e = TextStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TextStateEnum: %s", s)
	}
}

// Text - Represents a text action sent or received by CallFire platform
type Text struct {
	// Map of user-defined string attributes associated with an action
	Attributes map[string]string `json:"attributes,omitempty"`
	// An id of contact batch associated with an action
	BatchID *int64 `json:"batchId,omitempty"`
	// An id of broadcast if given text was sent as a part of text broadcast
	CampaignID *int64 `json:"campaignId,omitempty"`
	// Represents a contact in CallFire platform. Contains info about the people you want to contact. It allows you to store a user-defined properties for each contact
	Contact *Contact `json:"contact,omitempty"`
	// The time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT
	Created *int64 `json:"created,omitempty"`
	// Result of text (SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
	FinalTextResult *TextFinalTextResultEnum `json:"finalTextResult,omitempty"`
	// Sender's phone number in E.164 format (11-digit) or short code. Example: 12132000384, 67076
	FromNumber *string `json:"fromNumber,omitempty"`
	// An id of an action
	ID *int64 `json:"id,omitempty"`
	// An action inbound
	Inbound *bool `json:"inbound,omitempty"`
	// Labels associated with an action
	Labels []string `json:"labels,omitempty"`
	// ~
	Media []Media `json:"media,omitempty"`
	// A text message
	Message *string `json:"message,omitempty"`
	// The time when the given resource was modified, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT
	Modified *int64 `json:"modified,omitempty"`
	// List of text records, each record contains additional details: time of sending, cost, current state.  A single contact may have multiple numbers. If given text was sent as part of broadcast with configured retry logic then each text record will contain details about attempted number
	Records []TextRecord `json:"records,omitempty"`
	// Current state of an action (READY, SELECTED, CALLBACK, DISABLED, FINISHED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states and results](https://developers.callfire.com/results-responses-errors.html)
	State *TextStateEnum `json:"state,omitempty"`
	// Recipient's phone number in E.164 format (11-digit) or short code. Example: 12132000384, 67076
	ToNumber *string `json:"toNumber,omitempty"`
}
