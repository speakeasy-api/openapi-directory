"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import leg as shared_leg
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Bet:
    
    legs: list[shared_leg.Leg] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legs') }})  
    number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number') }})
    r"""The bet number"""  
    stake: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stake') }})
    r"""The amount of the stake placed on the bet"""  
    type_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('typeCode') }})
    r"""The bet type code of the bet. For example: TBL (Treble)"""  
    delayed_bet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delayedBetId'), 'exclude': lambda f: f is None }})
    r"""The delayed bet identifier"""  
    free_bet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freeBetId'), 'exclude': lambda f: f is None }})
    r"""The ID number of the free bet token if used in conjunction with this bet"""  
    