/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceRequest {
    /**
     * The function source code. Must be valid JavaScript code.
     */
    @SpeakeasyMetadata("request:mediaType=text/plain")
    public String requestBody;

    public PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceRequest withRequestBody(String requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=appId")
    public Integer appId;

    public PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceRequest withAppId(Integer appId) {
        this.appId = appId;
        return this;
    }
    
    /**
     * The ID of the custom workflow action.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=definitionId")
    public String definitionId;

    public PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceRequest withDefinitionId(String definitionId) {
        this.definitionId = definitionId;
        return this;
    }
    
    /**
     * The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=functionId")
    public String functionId;

    public PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceRequest withFunctionId(String functionId) {
        this.functionId = functionId;
        return this;
    }
    
    /**
     * The type of function. This determines when the function will be called.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=functionType")
    public PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceFunctionTypeEnum functionType;

    public PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceRequest withFunctionType(PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceFunctionTypeEnum functionType) {
        this.functionType = functionType;
        return this;
    }
    
    public PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceRequest(@JsonProperty("RequestBody") String requestBody, @JsonProperty("appId") Integer appId, @JsonProperty("definitionId") String definitionId, @JsonProperty("functionId") String functionId, @JsonProperty("functionType") PutAutomationV4ActionsAppIdDefinitionIdFunctionsFunctionTypeFunctionIdCreateOrReplaceFunctionTypeEnum functionType) {
        this.requestBody = requestBody;
        this.appId = appId;
        this.definitionId = definitionId;
        this.functionId = functionId;
        this.functionType = functionType;
  }
}
