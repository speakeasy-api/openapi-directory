/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * When nodes may be removed from the pool, if the pool size is decreasing.
 */
export enum PoolResizeParameterNodeDeallocationOptionEnum {
  Requeue = "requeue",
  Terminate = "terminate",
  Taskcompletion = "taskcompletion",
  Retaineddata = "retaineddata",
}

/**
 * Parameters for a CloudPoolOperations.Resize request.
 */
export class PoolResizeParameter extends SpeakeasyBase {
  /**
   * When nodes may be removed from the pool, if the pool size is decreasing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeDeallocationOption" })
  nodeDeallocationOption?: PoolResizeParameterNodeDeallocationOptionEnum;

  /**
   * The timeout for allocation of compute nodes to the pool or removal of compute nodes from the pool. The default value is 10 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resizeTimeout" })
  resizeTimeout?: string;

  /**
   * The desired number of compute nodes in the pool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetDedicated" })
  targetDedicated: number;
}
