"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceRights:
    r"""The rights of the current user on a score or collection"""
    
    acl_admin: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aclAdmin'), 'exclude': lambda f: f is None }})
    r"""`True` if the current user can manage the current document (i.e. share, delete)
    
    If this is a right of a Collection, the capabilities of the associated user can be lower than this permission, check out the `capabilities` property as the end-user to have the complete possibilities with the collection.
    """  
    acl_read: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aclRead'), 'exclude': lambda f: f is None }})
    r"""`True` if the current user can read the current document"""  
    acl_write: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aclWrite'), 'exclude': lambda f: f is None }})
    r"""`True` if the current user can modify the current document.
    
    If this is a right of a Collection, the capabilities of the associated user can be lower than this permission, check out the `capabilities` property as the end-user to have the complete possibilities with the collection.
    """  
    is_collaborator: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCollaborator'), 'exclude': lambda f: f is None }})
    r"""`True` if the current user is a collaborator of the current document (direct or via group)."""  
    