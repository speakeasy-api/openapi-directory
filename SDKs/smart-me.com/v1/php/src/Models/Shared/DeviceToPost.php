<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
/**
 * DeviceToPost - Container Class for the Web API
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DeviceToPost
{
    /**
     * The Active Power or current flow rate. In kW or m3/h
     * 
     * @var ?float $activePower
     */
	#[\JMS\Serializer\Annotation\SerializedName('ActivePower')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=ActivePower')]
    public ?float $activePower = null;
    
    /**
     * The Meter Counter Reading (Total Energy used) in kWh or m3.
     * 
     * @var ?float $counterReading
     */
	#[\JMS\Serializer\Annotation\SerializedName('CounterReading')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CounterReading')]
    public ?float $counterReading = null;
    
    /**
     * The Meter Counter Reading only export
     * 
     * @var ?float $counterReadingExport
     */
	#[\JMS\Serializer\Annotation\SerializedName('CounterReadingExport')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CounterReadingExport')]
    public ?float $counterReadingExport = null;
    
    /**
     * The Meter Counter Reading only export (Tariff 1)
     * 
     * @var ?float $counterReadingExportT1
     */
	#[\JMS\Serializer\Annotation\SerializedName('CounterReadingExportT1')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CounterReadingExportT1')]
    public ?float $counterReadingExportT1 = null;
    
    /**
     * The Meter Counter Reading only export (Tariff 2)
     * 
     * @var ?float $counterReadingExportT2
     */
	#[\JMS\Serializer\Annotation\SerializedName('CounterReadingExportT2')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CounterReadingExportT2')]
    public ?float $counterReadingExportT2 = null;
    
    /**
     * The Meter Counter Reading Tariff 1 in kWh or m3.
     * 
     * @var ?float $counterReadingT1
     */
	#[\JMS\Serializer\Annotation\SerializedName('CounterReadingT1')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CounterReadingT1')]
    public ?float $counterReadingT1 = null;
    
    /**
     * The Meter Counter Reading Tariff 2 in kWh or m3.
     * 
     * @var ?float $counterReadingT2
     */
	#[\JMS\Serializer\Annotation\SerializedName('CounterReadingT2')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CounterReadingT2')]
    public ?float $counterReadingT2 = null;
    
    /**
     * The Current (in A)
     * 
     * @var ?float $current
     */
	#[\JMS\Serializer\Annotation\SerializedName('Current')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Current')]
    public ?float $current = null;
    
    /**
     * The Current Phase L1 (in A)
     * 
     * @var ?float $currentL1
     */
	#[\JMS\Serializer\Annotation\SerializedName('CurrentL1')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CurrentL1')]
    public ?float $currentL1 = null;
    
    /**
     * The Current Phase L2 (in A)
     * 
     * @var ?float $currentL2
     */
	#[\JMS\Serializer\Annotation\SerializedName('CurrentL2')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CurrentL2')]
    public ?float $currentL2 = null;
    
    /**
     * The Current Phase L3 (in A)
     * 
     * @var ?float $currentL3
     */
	#[\JMS\Serializer\Annotation\SerializedName('CurrentL3')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CurrentL3')]
    public ?float $currentL3 = null;
    
    /**
     * The Energy Type of this device
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeviceToPostDeviceEnergyTypeEnum $deviceEnergyType
     */
	#[\JMS\Serializer\Annotation\SerializedName('DeviceEnergyType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DeviceToPostDeviceEnergyTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=DeviceEnergyType')]
    public ?DeviceToPostDeviceEnergyTypeEnum $deviceEnergyType = null;
    
    /**
     * The digital input number 1
     * 
     * @var ?bool $digitalInput1
     */
	#[\JMS\Serializer\Annotation\SerializedName('DigitalInput1')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=DigitalInput1')]
    public ?bool $digitalInput1 = null;
    
    /**
     * The ID of the device
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Id')]
    public ?string $id = null;
    
    /**
     * The Sub Type of this Meter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeviceToPostMeterSubTypeEnum $meterSubType
     */
	#[\JMS\Serializer\Annotation\SerializedName('MeterSubType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DeviceToPostMeterSubTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=MeterSubType')]
    public ?DeviceToPostMeterSubTypeEnum $meterSubType = null;
    
    /**
     * The Name of the Device
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Name')]
    public ?string $name = null;
    
    /**
     * The Power Factor (cos phi). Range: 0 - 1
     * 
     * @var ?float $powerFactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('PowerFactor')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=PowerFactor')]
    public ?float $powerFactor = null;
    
    /**
     * The Power Factor (cos phi) Phase L1. Range: 0 - 1
     * 
     * @var ?float $powerFactorL1
     */
	#[\JMS\Serializer\Annotation\SerializedName('PowerFactorL1')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=PowerFactorL1')]
    public ?float $powerFactorL1 = null;
    
    /**
     * The Power Factor (cos phi) Phase L2. Range: 0 - 1
     * 
     * @var ?float $powerFactorL2
     */
	#[\JMS\Serializer\Annotation\SerializedName('PowerFactorL2')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=PowerFactorL2')]
    public ?float $powerFactorL2 = null;
    
    /**
     * The Power Factor (cos phi) Phase L3. Range: 0 - 1
     * 
     * @var ?float $powerFactorL3
     */
	#[\JMS\Serializer\Annotation\SerializedName('PowerFactorL3')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=PowerFactorL3')]
    public ?float $powerFactorL3 = null;
    
    /**
     * The Serial number
     * 
     * @var ?int $serial
     */
	#[\JMS\Serializer\Annotation\SerializedName('Serial')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Serial')]
    public ?int $serial = null;
    
    /**
     * The Temperature (in degree celsius)
     * 
     * @var ?float $temperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('Temperature')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Temperature')]
    public ?float $temperature = null;
    
    /**
     * The Date of the Value (in UTC). If this is null the Server Time is used.
     * 
     * @var ?\DateTime $valueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ValueDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=ValueDate,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $valueDate = null;
    
    /**
     * The Voltage (in V)
     * 
     * @var ?float $voltage
     */
	#[\JMS\Serializer\Annotation\SerializedName('Voltage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Voltage')]
    public ?float $voltage = null;
    
    /**
     * The Voltage Phase L1 (in V)
     * 
     * @var ?float $voltageL1
     */
	#[\JMS\Serializer\Annotation\SerializedName('VoltageL1')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=VoltageL1')]
    public ?float $voltageL1 = null;
    
    /**
     * The Voltage Phase L2 (in V)
     * 
     * @var ?float $voltageL2
     */
	#[\JMS\Serializer\Annotation\SerializedName('VoltageL2')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=VoltageL2')]
    public ?float $voltageL2 = null;
    
    /**
     * The Voltage Phase L3 (in V)
     * 
     * @var ?float $voltageL3
     */
	#[\JMS\Serializer\Annotation\SerializedName('VoltageL3')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=VoltageL3')]
    public ?float $voltageL3 = null;
    
	public function __construct()
	{
		$this->activePower = null;
		$this->counterReading = null;
		$this->counterReadingExport = null;
		$this->counterReadingExportT1 = null;
		$this->counterReadingExportT2 = null;
		$this->counterReadingT1 = null;
		$this->counterReadingT2 = null;
		$this->current = null;
		$this->currentL1 = null;
		$this->currentL2 = null;
		$this->currentL3 = null;
		$this->deviceEnergyType = null;
		$this->digitalInput1 = null;
		$this->id = null;
		$this->meterSubType = null;
		$this->name = null;
		$this->powerFactor = null;
		$this->powerFactorL1 = null;
		$this->powerFactorL2 = null;
		$this->powerFactorL3 = null;
		$this->serial = null;
		$this->temperature = null;
		$this->valueDate = null;
		$this->voltage = null;
		$this->voltageL1 = null;
		$this->voltageL2 = null;
		$this->voltageL3 = null;
	}
}
