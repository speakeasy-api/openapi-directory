/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetAccountingSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  fdcAuth: string;
}

export enum GetAccountingHydrateEnum {
  Items = "items",
}

export class GetAccountingRequest extends SpeakeasyBase {
  /**
   * Orders invoice date. Date-time in ISO 8601 format for selecting orders after, or at, the specified time
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fromDate",
  })
  fromDate: string;

  /**
   * Adds additional information to the response, uses a CSV format for multiple values.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=hydrate",
  })
  hydrate: GetAccountingHydrateEnum[];

  /**
   * The numbers of items to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * A CSV of FDC order id, '123' or '1,2,3'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderIds",
  })
  orderIds?: number[];

  /**
   * A multiplier of the number of items (limit parameter) to skip before returning results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Orders invoice date. Date-time in ISO 8601 format for selecting orders before, or at, the specified time
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=toDate",
  })
  toDate: string;

  /**
   * A CSV of warehouse id, '123' or '1,2,3'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=warehouseIds",
  })
  warehouseIds?: number[];
}

export class GetAccountingAccountingArrayV2AccountingV2Fees extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "box" })
  box?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "envelope" })
  envelope?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fulfillment" })
  fulfillment?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "insert" })
  insert?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "kitting" })
  kitting?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "picking" })
  picking?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "postage" })
  postage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "print" })
  print?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class GetAccountingAccountingArrayV2AccountingV2Items extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "wmsItemId" })
  wmsItemId?: string;
}

export class GetAccountingAccountingArrayV2AccountingV2Merchant extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Name of the merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class GetAccountingAccountingArrayV2AccountingV2Order extends SpeakeasyBase {
  /**
   * FDC order id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Date of the order when it was recorded by accounting.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  invoiceDate?: Date;

  /**
   * Merchant order id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantOrderId" })
  merchantOrderId?: number;

  /**
   * Date of the order when it was initially received.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recordedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  recordedDate?: Date;
}

export class GetAccountingAccountingArrayV2AccountingV2Warehouse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Name of the merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

export class GetAccountingAccountingArrayV2AccountingV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fees" })
  @Type(() => GetAccountingAccountingArrayV2AccountingV2Fees)
  fees?: GetAccountingAccountingArrayV2AccountingV2Fees;

  /**
   * Total number of items accounted for
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemCount" })
  itemCount?: number;

  @SpeakeasyMetadata({
    elemType: GetAccountingAccountingArrayV2AccountingV2Items,
  })
  @Expose({ name: "items" })
  @Type(() => GetAccountingAccountingArrayV2AccountingV2Items)
  items?: GetAccountingAccountingArrayV2AccountingV2Items[];

  @SpeakeasyMetadata()
  @Expose({ name: "merchant" })
  @Type(() => GetAccountingAccountingArrayV2AccountingV2Merchant)
  merchant?: GetAccountingAccountingArrayV2AccountingV2Merchant;

  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  @Type(() => GetAccountingAccountingArrayV2AccountingV2Order)
  order?: GetAccountingAccountingArrayV2AccountingV2Order;

  @SpeakeasyMetadata()
  @Expose({ name: "warehouse" })
  @Type(() => GetAccountingAccountingArrayV2AccountingV2Warehouse)
  warehouse?: GetAccountingAccountingArrayV2AccountingV2Warehouse;
}

export class GetAccountingAccountingArrayV2MetaPaginationV2 extends SpeakeasyBase {
  /**
   * Count of records returned in response, this will be equal to or less then the limit parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Current page of the response, this will match the page parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentPage" })
  currentPage?: number;

  /**
   * Total number of records available to request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  /**
   * Total number of pages available to request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalPages" })
  totalPages?: number;
}

export class GetAccountingAccountingArrayV2Meta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => GetAccountingAccountingArrayV2MetaPaginationV2)
  pagination?: GetAccountingAccountingArrayV2MetaPaginationV2;
}

/**
 * Accounting
 */
export class GetAccountingAccountingArrayV2 extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetAccountingAccountingArrayV2AccountingV2 })
  @Expose({ name: "data" })
  @Type(() => GetAccountingAccountingArrayV2AccountingV2)
  data?: GetAccountingAccountingArrayV2AccountingV2[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => GetAccountingAccountingArrayV2Meta)
  meta?: GetAccountingAccountingArrayV2Meta;
}

export class GetAccountingResponse extends SpeakeasyBase {
  /**
   * Accounting
   */
  @SpeakeasyMetadata()
  accountingArrayV2?: GetAccountingAccountingArrayV2;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
