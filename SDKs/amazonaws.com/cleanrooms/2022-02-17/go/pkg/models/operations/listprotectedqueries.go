// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListProtectedQueriesPathParams struct {
	// The identifier for the membership in the collaboration.
	MembershipIdentifier string `pathParam:"style=simple,explode=false,name=membershipIdentifier"`
}

// ListProtectedQueriesStatusEnum - A filter on the status of the protected query.
type ListProtectedQueriesStatusEnum string

const (
	ListProtectedQueriesStatusEnumSubmitted  ListProtectedQueriesStatusEnum = "SUBMITTED"
	ListProtectedQueriesStatusEnumStarted    ListProtectedQueriesStatusEnum = "STARTED"
	ListProtectedQueriesStatusEnumCancelled  ListProtectedQueriesStatusEnum = "CANCELLED"
	ListProtectedQueriesStatusEnumCancelling ListProtectedQueriesStatusEnum = "CANCELLING"
	ListProtectedQueriesStatusEnumFailed     ListProtectedQueriesStatusEnum = "FAILED"
	ListProtectedQueriesStatusEnumSuccess    ListProtectedQueriesStatusEnum = "SUCCESS"
	ListProtectedQueriesStatusEnumTimedOut   ListProtectedQueriesStatusEnum = "TIMED_OUT"
)

func (e *ListProtectedQueriesStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBMITTED":
		fallthrough
	case "STARTED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "TIMED_OUT":
		*e = ListProtectedQueriesStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListProtectedQueriesStatusEnum: %s", s)
	}
}

type ListProtectedQueriesQueryParams struct {
	// The maximum size of the results that is returned per call. Service chooses a default if it has not been set. Service can return a nextToken even if the maximum results has not been met.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token value retrieved from a previous call to access the next page of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// A filter on the status of the protected query.
	Status *ListProtectedQueriesStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListProtectedQueriesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListProtectedQueriesRequest struct {
	PathParams  ListProtectedQueriesPathParams
	QueryParams ListProtectedQueriesQueryParams
	Headers     ListProtectedQueriesHeaders
}

type ListProtectedQueriesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListProtectedQueriesOutput *shared.ListProtectedQueriesOutput
	StatusCode                 int
	RawResponse                *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
