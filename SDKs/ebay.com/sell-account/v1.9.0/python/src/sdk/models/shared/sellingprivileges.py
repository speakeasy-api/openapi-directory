"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sellinglimit as shared_sellinglimit
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SellingPrivileges:
    r"""This type is used by the base response of the <b>getPrivileges</b> method."""
    
    seller_registration_completed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellerRegistrationCompleted'), 'exclude': lambda f: f is None }})
    r"""If this field is returned as <code>true</code>, the seller's registration is completed. If this field is returned as <code>false</code>, the registration process is not complete."""  
    selling_limit: Optional[shared_sellinglimit.SellingLimit] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellingLimit'), 'exclude': lambda f: f is None }})
    r"""Type used by the <b>sellingLimit</b> container, a container that lists the monthly cap for the quantity of items sold and total sales amount allowed for the seller's account."""  
    