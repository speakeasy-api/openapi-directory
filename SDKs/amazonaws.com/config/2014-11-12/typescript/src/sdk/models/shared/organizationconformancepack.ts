/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConformancePackInputParameter } from "./conformancepackinputparameter";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An organization conformance pack that has information about conformance packs that Config creates in member accounts.
 */
export class OrganizationConformancePack extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ConformancePackInputParameter })
  @Expose({ name: "ConformancePackInputParameters" })
  @Type(() => ConformancePackInputParameter)
  conformancePackInputParameters?: ConformancePackInputParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryS3Bucket" })
  deliveryS3Bucket?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryS3KeyPrefix" })
  deliveryS3KeyPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExcludedAccounts" })
  excludedAccounts?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "OrganizationConformancePackArn" })
  organizationConformancePackArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OrganizationConformancePackName" })
  organizationConformancePackName: string;
}
