// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateThingGroupRequestBodyThingGroupProperties - Thing group properties.
type CreateThingGroupRequestBodyThingGroupProperties struct {
	AttributePayload      *shared.AttributePayload `json:"attributePayload,omitempty"`
	ThingGroupDescription *string                  `json:"thingGroupDescription,omitempty"`
}

type CreateThingGroupRequestBody struct {
	// The name of the parent thing group.
	ParentGroupName *string `json:"parentGroupName,omitempty"`
	// Metadata which can be used to manage the thing group.
	Tags []shared.Tag `json:"tags,omitempty"`
	// Thing group properties.
	ThingGroupProperties *CreateThingGroupRequestBodyThingGroupProperties `json:"thingGroupProperties,omitempty"`
}

type CreateThingGroupRequest struct {
	RequestBody       CreateThingGroupRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The thing group name to create.
	ThingGroupName string `pathParam:"style=simple,explode=false,name=thingGroupName"`
}

type CreateThingGroupResponse struct {
	ContentType string
	// Success
	CreateThingGroupResponse *shared.CreateThingGroupResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
