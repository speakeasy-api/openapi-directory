/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NonComplianceDetail - Provides detail about non-compliance with a policy setting.
 */
public class NonComplianceDetail {
    /**
     * If the policy setting could not be applied, the current value of the setting on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentValue")
    public Object currentValue;
    public NonComplianceDetail withCurrentValue(Object currentValue) {
        this.currentValue = currentValue;
        return this;
    }
    
    /**
     * For settings with nested fields, if a particular nested field is out of compliance, this specifies the full path to the offending field. The path is formatted in the same way the policy JSON field would be referenced in JavaScript, that is: 1) For object-typed fields, the field name is followed by a dot then by a subfield name. 2) For array-typed fields, the field name is followed by the array index enclosed in brackets. For example, to indicate a problem with the url field in the externalData field in the 3rd application, the path would be applications[2].externalData.url
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldPath")
    public String fieldPath;
    public NonComplianceDetail withFieldPath(String fieldPath) {
        this.fieldPath = fieldPath;
        return this;
    }
    
    /**
     * If package_name is set and the non-compliance reason is APP_NOT_INSTALLED or APP_NOT_UPDATED, the detailed reason the app can't be installed or updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("installationFailureReason")
    public NonComplianceDetailInstallationFailureReasonEnum installationFailureReason;
    public NonComplianceDetail withInstallationFailureReason(NonComplianceDetailInstallationFailureReasonEnum installationFailureReason) {
        this.installationFailureReason = installationFailureReason;
        return this;
    }
    
    /**
     * The reason the device is not in compliance with the setting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonComplianceReason")
    public NonComplianceDetailNonComplianceReasonEnum nonComplianceReason;
    public NonComplianceDetail withNonComplianceReason(NonComplianceDetailNonComplianceReasonEnum nonComplianceReason) {
        this.nonComplianceReason = nonComplianceReason;
        return this;
    }
    
    /**
     * The package name indicating which app is out of compliance, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageName")
    public String packageName;
    public NonComplianceDetail withPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }
    
    /**
     * The name of the policy setting. This is the JSON field name of a top-level Policy field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settingName")
    public String settingName;
    public NonComplianceDetail withSettingName(String settingName) {
        this.settingName = settingName;
        return this;
    }
    
    /**
     * Additional context for SpecificNonComplianceReason.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specificNonComplianceContext")
    public SpecificNonComplianceContext specificNonComplianceContext;
    public NonComplianceDetail withSpecificNonComplianceContext(SpecificNonComplianceContext specificNonComplianceContext) {
        this.specificNonComplianceContext = specificNonComplianceContext;
        return this;
    }
    
    /**
     * The policy-specific reason the device is not in compliance with the setting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specificNonComplianceReason")
    public NonComplianceDetailSpecificNonComplianceReasonEnum specificNonComplianceReason;
    public NonComplianceDetail withSpecificNonComplianceReason(NonComplianceDetailSpecificNonComplianceReasonEnum specificNonComplianceReason) {
        this.specificNonComplianceReason = specificNonComplianceReason;
        return this;
    }
    
}
