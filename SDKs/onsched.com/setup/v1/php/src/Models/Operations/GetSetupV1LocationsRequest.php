<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSetupV1LocationsRequest
{
    /**
     * Filter locations on deleted status
     * 
     * @var ?bool $deleted
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=deleted')]
    public ?bool $deleted = null;
    
    /**
     * friendlyId of location
     * 
     * @var ?string $friendlyId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=friendlyId')]
    public ?string $friendlyId = null;
    
    /**
     * Page limit default 20, max 100
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Location name(full or partial) to filter on
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * Starting row of page, default 0
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Find locations that offer this service
     * 
     * @var ?string $serviceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=serviceId')]
    public ?string $serviceId = null;
    
	public function __construct()
	{
		$this->deleted = null;
		$this->friendlyId = null;
		$this->limit = null;
		$this->name = null;
		$this->offset = null;
		$this->serviceId = null;
	}
}
