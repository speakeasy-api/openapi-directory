// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateClusterRequestBodyKubernetesNetworkConfig - The Kubernetes network configuration for the cluster.
type CreateClusterRequestBodyKubernetesNetworkConfig struct {
	IPFamily        *shared.IPFamilyEnum `json:"ipFamily,omitempty"`
	ServiceIpv4Cidr *string              `json:"serviceIpv4Cidr,omitempty"`
}

// CreateClusterRequestBodyLogging - An object representing the logging configuration for resources in your cluster.
type CreateClusterRequestBodyLogging struct {
	ClusterLogging []shared.LogSetup `json:"clusterLogging,omitempty"`
}

// CreateClusterRequestBodyOutpostConfig - The configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a cluster on an Outpost, review <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-create.html">Creating a local cluster on an Outpost</a> in the <i>Amazon EKS User Guide</i>. This API isn't available for Amazon EKS clusters on the Amazon Web Services cloud.
type CreateClusterRequestBodyOutpostConfig struct {
	ControlPlaneInstanceType *string                              `json:"controlPlaneInstanceType,omitempty"`
	ControlPlanePlacement    *shared.ControlPlanePlacementRequest `json:"controlPlanePlacement,omitempty"`
	OutpostArns              []string                             `json:"outpostArns,omitempty"`
}

// CreateClusterRequestBodyResourcesVpcConfig - An object representing the VPC configuration to use for an Amazon EKS cluster.
type CreateClusterRequestBodyResourcesVpcConfig struct {
	EndpointPrivateAccess *bool    `json:"endpointPrivateAccess,omitempty"`
	EndpointPublicAccess  *bool    `json:"endpointPublicAccess,omitempty"`
	PublicAccessCidrs     []string `json:"publicAccessCidrs,omitempty"`
	SecurityGroupIds      []string `json:"securityGroupIds,omitempty"`
	SubnetIds             []string `json:"subnetIds,omitempty"`
}

type CreateClusterRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
	ClientRequestToken *string `json:"clientRequestToken,omitempty"`
	// The encryption configuration for the cluster.
	EncryptionConfig []shared.EncryptionConfig `json:"encryptionConfig,omitempty"`
	// The Kubernetes network configuration for the cluster.
	KubernetesNetworkConfig *CreateClusterRequestBodyKubernetesNetworkConfig `json:"kubernetesNetworkConfig,omitempty"`
	// An object representing the logging configuration for resources in your cluster.
	Logging *CreateClusterRequestBodyLogging `json:"logging,omitempty"`
	// The unique name to give to your cluster.
	Name string `json:"name"`
	// The configuration of your local Amazon EKS cluster on an Amazon Web Services Outpost. Before creating a cluster on an Outpost, review <a href="https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-local-cluster-create.html">Creating a local cluster on an Outpost</a> in the <i>Amazon EKS User Guide</i>. This API isn't available for Amazon EKS clusters on the Amazon Web Services cloud.
	OutpostConfig *CreateClusterRequestBodyOutpostConfig `json:"outpostConfig,omitempty"`
	// An object representing the VPC configuration to use for an Amazon EKS cluster.
	ResourcesVpcConfig CreateClusterRequestBodyResourcesVpcConfig `json:"resourcesVpcConfig"`
	// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to Amazon Web Services API operations on your behalf. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html">Amazon EKS Service IAM Role</a> in the <i> <i>Amazon EKS User Guide</i> </i>.
	RoleArn string `json:"roleArn"`
	// The metadata to apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value. You define both.
	Tags map[string]string `json:"tags,omitempty"`
	// <p>The desired Kubernetes version for your cluster. If you don't specify a value here, the default version available in Amazon EKS is used.</p> <note> <p>The default version might not be the latest version available.</p> </note>
	Version *string `json:"version,omitempty"`
}

type CreateClusterRequest struct {
	RequestBody       CreateClusterRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateClusterResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	CreateClusterResponse *shared.CreateClusterResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	// ServerException
	ServerException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// UnsupportedAvailabilityZoneException
	UnsupportedAvailabilityZoneException interface{}
}
