// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetStudioSessionMappingXAmzTargetEnum
type GetStudioSessionMappingXAmzTargetEnum string

const (
	GetStudioSessionMappingXAmzTargetEnumElasticMapReduceGetStudioSessionMapping GetStudioSessionMappingXAmzTargetEnum = "ElasticMapReduce.GetStudioSessionMapping"
)

func (e GetStudioSessionMappingXAmzTargetEnum) ToPointer() *GetStudioSessionMappingXAmzTargetEnum {
	return &e
}

func (e *GetStudioSessionMappingXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ElasticMapReduce.GetStudioSessionMapping":
		*e = GetStudioSessionMappingXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetStudioSessionMappingXAmzTargetEnum: %v", v)
	}
}

type GetStudioSessionMappingRequest struct {
	GetStudioSessionMappingInput shared.GetStudioSessionMappingInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   GetStudioSessionMappingXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetStudioSessionMappingResponse struct {
	ContentType string
	// Success
	GetStudioSessionMappingOutput *shared.GetStudioSessionMappingOutput
	// InternalServerError
	InternalServerError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
