/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class HistoryListForUserRequest {
    /**
     * Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;
    public HistoryListForUserRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * Display format. Leave blank or set to `full` or `parent`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=display")
    public String display;
    public HistoryListForUserRequest withDisplay(String display) {
        this.display = display;
        return this;
    }
    
    /**
     * Leave blank or set to a date/time to filter later entries.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end_at")
    public OffsetDateTime endAt;
    public HistoryListForUserRequest withEndAt(OffsetDateTime endAt) {
        this.endAt = endAt;
        return this;
    }
    
    /**
     * Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Integer perPage;
    public HistoryListForUserRequest withPerPage(Integer perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[user_id]=desc`). Valid fields are `user_id` and `created_at`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public java.util.Map<String, Object> sortBy;
    public HistoryListForUserRequest withSortBy(java.util.Map<String, Object> sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Leave blank or set to a date/time to filter earlier entries.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start_at")
    public OffsetDateTime startAt;
    public HistoryListForUserRequest withStartAt(OffsetDateTime startAt) {
        this.startAt = startAt;
        return this;
    }
    
    /**
     * User ID.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=user_id")
    public Integer userId;
    public HistoryListForUserRequest withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
}
