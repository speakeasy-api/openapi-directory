// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDevEnvironmentRequestBodyInstanceTypeEnum - <p>The Amazon EC2 instace type to use for the Dev Environment. </p> <note> <p>Changing this value will cause a restart of the Dev Environment if it is running.</p> </note>
type UpdateDevEnvironmentRequestBodyInstanceTypeEnum string

const (
	UpdateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Small  UpdateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.small"
	UpdateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Medium UpdateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.medium"
	UpdateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Large  UpdateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.large"
	UpdateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Xlarge UpdateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.xlarge"
)

func (e UpdateDevEnvironmentRequestBodyInstanceTypeEnum) ToPointer() *UpdateDevEnvironmentRequestBodyInstanceTypeEnum {
	return &e
}

func (e *UpdateDevEnvironmentRequestBodyInstanceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dev.standard1.small":
		fallthrough
	case "dev.standard1.medium":
		fallthrough
	case "dev.standard1.large":
		fallthrough
	case "dev.standard1.xlarge":
		*e = UpdateDevEnvironmentRequestBodyInstanceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDevEnvironmentRequestBodyInstanceTypeEnum: %v", v)
	}
}

type UpdateDevEnvironmentRequestBody struct {
	// The user-specified alias for the Dev Environment. Changing this value will not cause a restart.
	Alias *string `json:"alias,omitempty"`
	// A user-specified idempotency token. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries return the result from the original successful request and have no additional effect.
	ClientToken *string `json:"clientToken,omitempty"`
	// Information about the integrated development environment (IDE) configured for a Dev Environment.
	Ides []shared.IdeConfiguration `json:"ides,omitempty"`
	// <p>The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.</p> <note> <p>Changing this value will cause a restart of the Dev Environment if it is running.</p> </note>
	InactivityTimeoutMinutes *int64 `json:"inactivityTimeoutMinutes,omitempty"`
	// <p>The Amazon EC2 instace type to use for the Dev Environment. </p> <note> <p>Changing this value will cause a restart of the Dev Environment if it is running.</p> </note>
	InstanceType *UpdateDevEnvironmentRequestBodyInstanceTypeEnum `json:"instanceType,omitempty"`
}

type UpdateDevEnvironmentRequest struct {
	RequestBody UpdateDevEnvironmentRequestBody `request:"mediaType=application/json"`
	// The system-generated unique ID of the Dev Environment.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The name of the project in the space.
	ProjectName string `pathParam:"style=simple,explode=false,name=projectName"`
	// The name of the space.
	SpaceName string `pathParam:"style=simple,explode=false,name=spaceName"`
}

type UpdateDevEnvironmentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateDevEnvironmentResponse *shared.UpdateDevEnvironmentResponse
	// ValidationException
	ValidationException interface{}
}
