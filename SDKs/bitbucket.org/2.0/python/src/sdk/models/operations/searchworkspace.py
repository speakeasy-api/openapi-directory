"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import search_result_page as shared_search_result_page
from typing import Any, Optional


@dataclasses.dataclass
class SearchWorkspaceRequest:
    
    search_query: str = dataclasses.field(metadata={'query_param': { 'field_name': 'search_query', 'style': 'form', 'explode': True }})
    r"""The search query"""  
    workspace: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace', 'style': 'simple', 'explode': False }})
    r"""The workspace to search in; either the slug or the UUID in curly braces"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Which page of the search results to retrieve"""  
    pagelen: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pagelen', 'style': 'form', 'explode': True }})
    r"""How many search results to retrieve per page"""  
    

@dataclasses.dataclass
class SearchWorkspaceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""If the search request was invalid due to one of the
    following reasons:
    
    * the specified type of target account doesn''t match the actual
    account type;
    
    * malformed pagination properties;
    
    * missing or malformed search query, in the latter case an error
    key will be returned in `error.data.key` property.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    search_result_page: Optional[shared_search_result_page.SearchResultPage] = dataclasses.field(default=None)
    r"""Successful search"""  
    