<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LegalHoldSummary - Summary of the hold which has just been created.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LegalHoldSummary
{
    /**
     * Date at which the snapshot will expire if the legal hold is dissolved.
     * 
     * 
     * 
     * @var ?\DateTime $expectedExpirationDateWithoutLegalHold
     */
	#[\JMS\Serializer\Annotation\SerializedName('expectedExpirationDateWithoutLegalHold')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expectedExpirationDateWithoutLegalHold = null;
    
    /**
     * A Boolean value that indicates whether custom retention is applied to the specified snapshot. Value is true when custom retention is applied to the snapshot.
     * 
     * 
     * 
     * @var bool $isCustomRetentionApplied
     */
	#[\JMS\Serializer\Annotation\SerializedName('isCustomRetentionApplied')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isCustomRetentionApplied;
    
    /**
     * A Boolean that specifies whether a snapshot is an On Demand snapshot. When this value is 'true,' the snapshot is an On Demand snapshot.
     * 
     * @var bool $isOnDemandSnapshot
     */
	#[\JMS\Serializer\Annotation\SerializedName('isOnDemandSnapshot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isOnDemandSnapshot;
    
    /**
     * Current locations of the snapshot.
     * 
     * @var array<string> $locationsPresent
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationsPresent')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $locationsPresent;
    
	#[\JMS\Serializer\Annotation\SerializedName('objectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $objectId;
    
	#[\JMS\Serializer\Annotation\SerializedName('objectName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $objectName;
    
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $objectType;
    
    /**
     * Time at which the snapshot was put on hold.
     * 
     * @var \DateTime $placeOnHoldTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('placeOnHoldTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $placeOnHoldTime;
    
	#[\JMS\Serializer\Annotation\SerializedName('snapshotId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $snapshotId;
    
    /**
     * Time at which the snapshot was taken.
     * 
     * @var \DateTime $snapshotTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $snapshotTime;
    
	public function __construct()
	{
		$this->expectedExpirationDateWithoutLegalHold = null;
		$this->isCustomRetentionApplied = false;
		$this->isOnDemandSnapshot = false;
		$this->locationsPresent = [];
		$this->objectId = "";
		$this->objectName = "";
		$this->objectType = "";
		$this->placeOnHoldTime = new \DateTime();
		$this->snapshotId = "";
		$this->snapshotTime = new \DateTime();
	}
}
