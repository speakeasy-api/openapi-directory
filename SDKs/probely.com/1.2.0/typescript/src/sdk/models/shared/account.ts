/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountAutoCollectionEnum } from "./accountautocollectionenum";
import { AccountStatusEnum } from "./accountstatusenum";
import { Plan } from "./plan";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Account data
 */
export class Account extends SpeakeasyBase {
  /**
   * Collection for the next billing period is autommatic/manual
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auto_collection" })
  autoCollection?: AccountAutoCollectionEnum;

  /**
   * Account balance in cents
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  /**
   * 3 letter currency code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance_currency_code" })
  balanceCurrencyCode?: string;

  /**
   * Number of free targets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "free_target_quantity" })
  freeTargetQuantity?: number;

  /**
   * Has account used up it's trial
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_used_trial" })
  hasUsedTrial?: boolean;

  /**
   * Heroku accounts (for future use)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "heroku" })
  heroku?: boolean;

  /**
   * Date of next billing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_billing_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextBillingAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "plan" })
  @Type(() => Plan)
  plan?: Plan;

  /**
   * Number of subscribed targets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_target_quantity" })
  planTargetQuantity?: number;

  /**
   * Maximum number of subscribed target for pool plans
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pool_size" })
  poolSize?: number;

  /**
   * * active - active subscription, either trial or paying
   *
   * @remarks
   * * trial_ended - trial ended and subscription was discontinued
   * * canceled - subscription canceled
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AccountStatusEnum;

  /**
   * Trial termination date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trialEnd" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trialEnd?: Date;
}
