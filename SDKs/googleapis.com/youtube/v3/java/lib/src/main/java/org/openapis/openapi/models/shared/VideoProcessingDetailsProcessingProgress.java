/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VideoProcessingDetailsProcessingProgress - Video processing progress and completion time estimate.
 */
public class VideoProcessingDetailsProcessingProgress {
    /**
     * The number of parts of the video that YouTube has already processed. You can estimate the percentage of the video that YouTube has already processed by calculating: 100 * parts_processed / parts_total Note that since the estimated number of parts could increase without a corresponding increase in the number of parts that have already been processed, it is possible that the calculated progress could periodically decrease while YouTube processes a video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partsProcessed")
    public String partsProcessed;
    public VideoProcessingDetailsProcessingProgress withPartsProcessed(String partsProcessed) {
        this.partsProcessed = partsProcessed;
        return this;
    }
    
    /**
     * An estimate of the total number of parts that need to be processed for the video. The number may be updated with more precise estimates while YouTube processes the video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partsTotal")
    public String partsTotal;
    public VideoProcessingDetailsProcessingProgress withPartsTotal(String partsTotal) {
        this.partsTotal = partsTotal;
        return this;
    }
    
    /**
     * An estimate of the amount of time, in millseconds, that YouTube needs to finish processing the video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeLeftMs")
    public String timeLeftMs;
    public VideoProcessingDetailsProcessingProgress withTimeLeftMs(String timeLeftMs) {
        this.timeLeftMs = timeLeftMs;
        return this;
    }
    
}
