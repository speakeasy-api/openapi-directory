// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SoundTouchResponseMessageEnum - Response message
type SoundTouchResponseMessageEnum string

const (
	SoundTouchResponseMessageEnumSoundTouchExecuted                          SoundTouchResponseMessageEnum = "SoundTouch Executed"
	SoundTouchResponseMessageEnumCallUUIDParameterMissing                    SoundTouchResponseMessageEnum = "CallUUID Parameter Missing"
	SoundTouchResponseMessageEnumAudioDirectionParameterMustBeInOrOut        SoundTouchResponseMessageEnum = "AudioDirection Parameter Must be 'in' or 'out'"
	SoundTouchResponseMessageEnumPitchSemiTonesParameterMustBeFloat          SoundTouchResponseMessageEnum = "PitchSemiTones Parameter must be float"
	SoundTouchResponseMessageEnumPitchSemiTonesParameterMustBeBetween14And14 SoundTouchResponseMessageEnum = "PitchSemiTones Parameter must be between -14 and 14"
	SoundTouchResponseMessageEnumPitchOctavesParameterMustBeFloat            SoundTouchResponseMessageEnum = "PitchOctaves Parameter must be float"
	SoundTouchResponseMessageEnumPitchOctavesParameterMustBeBetween1And1     SoundTouchResponseMessageEnum = "PitchOctaves Parameter must be between -1 and 1"
	SoundTouchResponseMessageEnumPitchParameterMustBeFloat                   SoundTouchResponseMessageEnum = "Pitch Parameter must be float"
	SoundTouchResponseMessageEnumPitchParameterMustBeGreaterThan0            SoundTouchResponseMessageEnum = "Pitch Parameter must be > 0"
	SoundTouchResponseMessageEnumRateParameterMustBeFloat                    SoundTouchResponseMessageEnum = "Rate Parameter must be float"
	SoundTouchResponseMessageEnumRateParameterMustBeGreaterThan0             SoundTouchResponseMessageEnum = "Rate Parameter must be > 0"
	SoundTouchResponseMessageEnumTempoParameterMustBeFloat                   SoundTouchResponseMessageEnum = "Tempo Parameter must be float"
	SoundTouchResponseMessageEnumTempoParameterMustBeGreaterThan0            SoundTouchResponseMessageEnum = "Tempo Parameter must be > 0"
	SoundTouchResponseMessageEnumSoundTouchFailedCallNotFound                SoundTouchResponseMessageEnum = "SoundTouch Failed -- Call not found"
	SoundTouchResponseMessageEnumSoundTouchFailed                            SoundTouchResponseMessageEnum = "SoundTouch Failed"
)

func (e SoundTouchResponseMessageEnum) ToPointer() *SoundTouchResponseMessageEnum {
	return &e
}

func (e *SoundTouchResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SoundTouch Executed":
		fallthrough
	case "CallUUID Parameter Missing":
		fallthrough
	case "AudioDirection Parameter Must be 'in' or 'out'":
		fallthrough
	case "PitchSemiTones Parameter must be float":
		fallthrough
	case "PitchSemiTones Parameter must be between -14 and 14":
		fallthrough
	case "PitchOctaves Parameter must be float":
		fallthrough
	case "PitchOctaves Parameter must be between -1 and 1":
		fallthrough
	case "Pitch Parameter must be float":
		fallthrough
	case "Pitch Parameter must be > 0":
		fallthrough
	case "Rate Parameter must be float":
		fallthrough
	case "Rate Parameter must be > 0":
		fallthrough
	case "Tempo Parameter must be float":
		fallthrough
	case "Tempo Parameter must be > 0":
		fallthrough
	case "SoundTouch Failed -- Call not found":
		fallthrough
	case "SoundTouch Failed":
		*e = SoundTouchResponseMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SoundTouchResponseMessageEnum: %v", v)
	}
}

// SoundTouchResponse - Response
type SoundTouchResponse struct {
	// Response message
	Message SoundTouchResponseMessageEnum `json:"Message"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
