"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import encryptionconfiguration as shared_encryptionconfiguration
from ..shared import firewallpolicy as shared_firewallpolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateFirewallPolicyRequest:
    
    firewall_policy: shared_firewallpolicy.FirewallPolicy = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirewallPolicy') }})  
    update_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdateToken') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    dry_run: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DryRun'), 'exclude': lambda f: f is None }})  
    encryption_configuration: Optional[shared_encryptionconfiguration.EncryptionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EncryptionConfiguration'), 'exclude': lambda f: f is None }})  
    firewall_policy_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirewallPolicyArn'), 'exclude': lambda f: f is None }})  
    firewall_policy_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirewallPolicyName'), 'exclude': lambda f: f is None }})  
    