// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateWorkflowXAmzTargetEnum
type UpdateWorkflowXAmzTargetEnum string

const (
	UpdateWorkflowXAmzTargetEnumAwsGlueUpdateWorkflow UpdateWorkflowXAmzTargetEnum = "AWSGlue.UpdateWorkflow"
)

func (e UpdateWorkflowXAmzTargetEnum) ToPointer() *UpdateWorkflowXAmzTargetEnum {
	return &e
}

func (e *UpdateWorkflowXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.UpdateWorkflow":
		*e = UpdateWorkflowXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateWorkflowXAmzTargetEnum: %v", v)
	}
}

type UpdateWorkflowRequest struct {
	UpdateWorkflowRequest shared.UpdateWorkflowRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            UpdateWorkflowXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateWorkflowResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateWorkflowResponse *shared.UpdateWorkflowResponse
}
