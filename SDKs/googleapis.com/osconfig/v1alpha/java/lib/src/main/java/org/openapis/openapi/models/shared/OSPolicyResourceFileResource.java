/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OSPolicyResourceFileResource - A resource that manages the state of a file.
 */
public class OSPolicyResourceFileResource {
    /**
     * A a file with this content. The size of the content is limited to 32KiB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;
    public OSPolicyResourceFileResource withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * A remote or local file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file")
    public OSPolicyResourceFile file;
    public OSPolicyResourceFileResource withFile(OSPolicyResourceFile file) {
        this.file = file;
        return this;
    }
    
    /**
     * Required. The absolute path of the file within the VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public OSPolicyResourceFileResource withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public String permissions;
    public OSPolicyResourceFileResource withPermissions(String permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * Required. Desired state of the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public OSPolicyResourceFileResourceStateEnum state;
    public OSPolicyResourceFileResource withState(OSPolicyResourceFileResourceStateEnum state) {
        this.state = state;
        return this;
    }
    
}
