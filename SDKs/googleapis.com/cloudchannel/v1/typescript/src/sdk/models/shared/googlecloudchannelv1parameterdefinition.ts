/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudChannelV1Value } from "./googlecloudchannelv1value";
import { Expose, Type } from "class-transformer";

/**
 * Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here.
 */
export enum GoogleCloudChannelV1ParameterDefinitionParameterTypeEnum {
  ParameterTypeUnspecified = "PARAMETER_TYPE_UNSPECIFIED",
  Int64 = "INT64",
  String = "STRING",
  Double = "DOUBLE",
}

/**
 * Parameter's definition. Specifies what parameter is required to use the current Offer to purchase.
 */
export class GoogleCloudChannelV1ParameterDefinition extends SpeakeasyBase {
  /**
   * If not empty, parameter values must be drawn from this list. For example, [us-west1, us-west2, ...] Applicable to STRING parameter type.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudChannelV1Value })
  @Expose({ name: "allowedValues" })
  @Type(() => GoogleCloudChannelV1Value)
  allowedValues?: GoogleCloudChannelV1Value[];

  /**
   * Data type and value of a parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxValue" })
  @Type(() => GoogleCloudChannelV1Value)
  maxValue?: GoogleCloudChannelV1Value;

  /**
   * Data type and value of a parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minValue" })
  @Type(() => GoogleCloudChannelV1Value)
  minValue?: GoogleCloudChannelV1Value;

  /**
   * Name of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * If set to true, parameter is optional to purchase this Offer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "optional" })
  optional?: boolean;

  /**
   * Data type of the parameter. Minimal value, Maximum value and allowed values will use specified data type here.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameterType" })
  parameterType?: GoogleCloudChannelV1ParameterDefinitionParameterTypeEnum;
}
