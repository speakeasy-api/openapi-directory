// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// HLRLookupRequestBodyOutputCaseEnum - The output case style
type HLRLookupRequestBodyOutputCaseEnum string

const (
	HLRLookupRequestBodyOutputCaseEnumCamel HLRLookupRequestBodyOutputCaseEnum = "camel"
)

func (e *HLRLookupRequestBodyOutputCaseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "camel":
		*e = HLRLookupRequestBodyOutputCaseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HLRLookupRequestBodyOutputCaseEnum: %s", s)
	}
}

type HLRLookupRequestBody struct {
	// ISO 2-letter country code, assume numbers are based in this country. <br>If not set numbers are assumed to be in international format (with or without the leading + sign)
	CountryCode *string `form:"name=country-code"`
	// A phone number
	Number string `form:"name=number"`
	// The output case style
	OutputCase *HLRLookupRequestBodyOutputCaseEnum `form:"name=output-case"`
}

type HLRLookupRequest struct {
	Request *HLRLookupRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
}

type HLRLookupResponse struct {
	// Your API request has been rejected. Check error code for details
	APIError          *shared.APIError
	ContentType       string
	HLRLookupResponse *shared.HLRLookupResponse
	StatusCode        int
	RawResponse       *http.Response
}
