<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Managedconfigurationsforuser 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Removes a per-user managed configuration for an app for the specified user.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteResponse
     */
	public function androidenterpriseManagedconfigurationsforuserDelete(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser/{managedConfigurationForUserId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Retrieves details of a per-user managed configuration for an app for the specified user.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetResponse
     */
	public function androidenterpriseManagedconfigurationsforuserGet(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser/{managedConfigurationForUserId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->managedConfiguration = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ManagedConfiguration', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists all the per-user managed configurations for the specified user. Only the ID is set.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListResponse
     */
	public function androidenterpriseManagedconfigurationsforuserList(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->managedConfigurationsForUserListResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ManagedConfigurationsForUserListResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Adds or updates the managed configuration settings for an app for the specified user. If you support the Managed configurations iframe, you can apply managed configurations to a user by specifying an mcmId and its associated configuration variables (if any) in the request. Alternatively, all EMMs can apply managed configurations by passing a list of managed properties.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateResponse
     */
	public function androidenterpriseManagedconfigurationsforuserUpdate(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser/{managedConfigurationForUserId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "managedConfiguration", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseManagedconfigurationsforuserUpdateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->managedConfiguration = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ManagedConfiguration', 'json');
            }
        }

        return $response;
    }
}