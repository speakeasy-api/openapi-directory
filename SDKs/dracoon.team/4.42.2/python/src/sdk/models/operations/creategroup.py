"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import creategrouprequest as shared_creategrouprequest
from ..shared import errorresponse as shared_errorresponse
from ..shared import group as shared_group
from enum import Enum
from typing import Optional

class CreateGroupXSdsDateFormatEnum(str, Enum):
    r"""Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"""
    UTC = 'UTC'
    LOCAL = 'LOCAL'
    OFFSET = 'OFFSET'
    EPOCH = 'EPOCH'
    LEET = 'LEET'


@dataclasses.dataclass
class CreateGroupRequest:
    
    create_group_request: shared_creategrouprequest.CreateGroupRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_sds_auth_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Sds-Auth-Token', 'style': 'simple', 'explode': False }})
    r"""Authentication token"""  
    x_sds_date_format: Optional[CreateGroupXSdsDateFormatEnum] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Sds-Date-Format', 'style': 'simple', 'explode': False }})
    r"""Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))"""  
    

@dataclasses.dataclass
class CreateGroupResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad Request"""  
    group: Optional[shared_group.Group] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    