// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintoutPrinter - The printer.
type Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintoutPrinter struct {
	Desc  *string `json:"desc,omitempty"`
	Value *string `json:"value,omitempty"`
}

// Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintoutStatus - Status of the printout (Pending/Printed/Canceled).
type Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintoutStatus struct {
	Desc  *string `json:"desc,omitempty"`
	Value *string `json:"value,omitempty"`
}

// Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintout - Printout Object.
type Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintout struct {
	// The time that the letter has been send to the Printout Queue.
	Date *time.Time `json:"date,omitempty"`
	// The printout id.
	ID *string `json:"id,omitempty"`
	// Letter Html body.
	Letter *string `json:"letter,omitempty"`
	Link   *string `json:"link,omitempty"`
	// The printer.
	Printer *Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintoutPrinter `json:"printer,omitempty"`
	// The printout name.
	Printout *string `json:"printout,omitempty"`
	// The size of the letter.
	Size *string `json:"size,omitempty"`
	// The user who printed the letter.
	Source *string `json:"source,omitempty"`
	// Status of the printout (Pending/Printed/Canceled).
	Status *Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintoutStatus `json:"status,omitempty"`
}

// Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchema - A list of printouts.
type Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchema struct {
	// printout object.
	Printout []Onealmaws1v11taskLists1printoutsGetResponses200ContentApplication1jsonSchemaPrintout `json:"printout,omitempty"`
	// The total number of printouts.
	TotalRecordCount *int `json:"total_record_count,omitempty"`
}
