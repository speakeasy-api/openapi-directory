"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MailerMailgunExporterConfigTypeEnum(str, Enum):
    r"""Type of mailer"""
    MAILGUN = 'mailgun'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MailerMailgunExporterConfig:
    r"""Data Exporter config"""
    
    type: MailerMailgunExporterConfigTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of mailer"""  
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiKey'), 'exclude': lambda f: f is None }})
    r"""Mailgun apiKey"""  
    domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain'), 'exclude': lambda f: f is None }})
    r"""Mailgun domain"""  
    eu: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eu'), 'exclude': lambda f: f is None }})
    r"""Whether the mailgun server is european"""  
    to: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to'), 'exclude': lambda f: f is None }})
    r"""Email adresses of recipents"""  
    