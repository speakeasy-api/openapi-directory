/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSource } from "./datasource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A filter for listing data quality recommendation runs.
 */
export class DataQualityRuleRecommendationRunFilter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataSource" })
  @Type(() => DataSource)
  dataSource: DataSource;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedBefore?: Date;
}
