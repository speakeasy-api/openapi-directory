/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalyticsMetadataType } from "./analyticsmetadatatype";
import { AuthFlowTypeEnum } from "./authflowtypeenum";
import { ContextDataType } from "./contextdatatype";
import { Expose, Type } from "class-transformer";

/**
 * Initiates the authorization request, as an administrator.
 */
export class AdminInitiateAuthRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnalyticsMetadata" })
  @Type(() => AnalyticsMetadataType)
  analyticsMetadata?: AnalyticsMetadataType;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthFlow" })
  authFlow: AuthFlowTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthParameters" })
  authParameters?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientId" })
  clientId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientMetadata" })
  clientMetadata?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "ContextData" })
  @Type(() => ContextDataType)
  contextData?: ContextDataType;

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolId" })
  userPoolId: string;
}
