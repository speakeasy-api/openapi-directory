// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ListTrackersResponseEntryPricingPlanEnum - Always returns <code>RequestBasedUsage</code>.Deprecated. Always returns RequestBasedUsage.
type ListTrackersResponseEntryPricingPlanEnum string

const (
	ListTrackersResponseEntryPricingPlanEnumRequestBasedUsage     ListTrackersResponseEntryPricingPlanEnum = "RequestBasedUsage"
	ListTrackersResponseEntryPricingPlanEnumMobileAssetTracking   ListTrackersResponseEntryPricingPlanEnum = "MobileAssetTracking"
	ListTrackersResponseEntryPricingPlanEnumMobileAssetManagement ListTrackersResponseEntryPricingPlanEnum = "MobileAssetManagement"
)

func (e ListTrackersResponseEntryPricingPlanEnum) ToPointer() *ListTrackersResponseEntryPricingPlanEnum {
	return &e
}

func (e *ListTrackersResponseEntryPricingPlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = ListTrackersResponseEntryPricingPlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTrackersResponseEntryPricingPlanEnum: %v", v)
	}
}

// ListTrackersResponseEntry - Contains the tracker resource details.
type ListTrackersResponseEntry struct {
	CreateTime            time.Time                                 `json:"CreateTime"`
	Description           string                                    `json:"Description"`
	PricingPlan           *ListTrackersResponseEntryPricingPlanEnum `json:"PricingPlan,omitempty"`
	PricingPlanDataSource *string                                   `json:"PricingPlanDataSource,omitempty"`
	TrackerName           string                                    `json:"TrackerName"`
	UpdateTime            time.Time                                 `json:"UpdateTime"`
}
