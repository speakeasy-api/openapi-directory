/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExternalPaymentDetails - Stores details about an external payment. Contains only non-confidential information.
 * For more information, see 
 * [Take External Payments](https://developer.squareup.com/docs/payments-api/take-payments/external-payments).
 */
public class ExternalPaymentDetails {
    /**
     * A description of the external payment source. For example, 
     * "Food Delivery Service".
     */
    @JsonProperty("source")
    public String source;

    public ExternalPaymentDetails withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_fee_money")
    public Money sourceFeeMoney;

    public ExternalPaymentDetails withSourceFeeMoney(Money sourceFeeMoney) {
        this.sourceFeeMoney = sourceFeeMoney;
        return this;
    }
    
    /**
     * An ID to associate the payment to its originating source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_id")
    public String sourceId;

    public ExternalPaymentDetails withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    /**
     * The type of external payment the seller received. It can be one of the following:
     * - CHECK - Paid using a physical check.
     * - BANK_TRANSFER - Paid using external bank transfer.
     * - OTHER\_GIFT\_CARD - Paid using a non-Square gift card.
     * - CRYPTO - Paid using a crypto currency.
     * - SQUARE_CASH - Paid using Square Cash App.
     * - SOCIAL - Paid using peer-to-peer payment applications.
     * - EXTERNAL - A third-party application gathered this payment outside of Square.
     * - EMONEY - Paid using an E-money provider.
     * - CARD - A credit or debit card that Square does not support.
     * - STORED_BALANCE - Use for house accounts, store credit, and so forth.
     * - FOOD_VOUCHER - Restaurant voucher provided by employers to employees to pay for meals
     * - OTHER - A type not listed here.
     */
    @JsonProperty("type")
    public String type;

    public ExternalPaymentDetails withType(String type) {
        this.type = type;
        return this;
    }
    
    public ExternalPaymentDetails(@JsonProperty("source") String source, @JsonProperty("type") String type) {
        this.source = source;
        this.type = type;
  }
}
