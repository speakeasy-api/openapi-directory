/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Search Parameters
 */
export class InstitutionAccountsSearch extends SpeakeasyBase {
  /**
   * filter by email
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * filter by institution_user_id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "institution_user_id" })
  institutionUserId?: string;

  /**
   * Filter by active status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_active" })
  isActive?: number;

  /**
   * Number of results included on a page. Used for pagination with query
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  /**
   * Page number. Used for pagination with page_size
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  /**
   * The number of results included on a page. Used for pagination with page
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * Search term
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_for" })
  searchFor?: string;
}
