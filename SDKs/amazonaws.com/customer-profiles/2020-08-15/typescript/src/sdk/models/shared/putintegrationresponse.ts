/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class PutIntegrationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsUnstructured" })
  isUnstructured?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ObjectTypeName" })
  objectTypeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ObjectTypeNames" })
  objectTypeNames?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Uri" })
  uri: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkflowId" })
  workflowId?: string;
}
