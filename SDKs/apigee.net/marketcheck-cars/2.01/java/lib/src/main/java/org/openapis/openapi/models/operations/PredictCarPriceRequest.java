/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PredictCarPriceRequest {
    /**
     * The API Authentication Key. Mandatory with all API calls.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=api_key")
    public String apiKey;
    public PredictCarPriceRequest withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * Base exterior color of the car
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=base_exterior_color")
    public String baseExteriorColor;
    public PredictCarPriceRequest withBaseExteriorColor(String baseExteriorColor) {
        this.baseExteriorColor = baseExteriorColor;
        return this;
    }
    
    /**
     * Base interior color of the car
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=base_interior_color")
    public String baseInteriorColor;
    public PredictCarPriceRequest withBaseInteriorColor(String baseInteriorColor) {
        this.baseInteriorColor = baseInteriorColor;
        return this;
    }
    
    /**
     * Car condition
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=car_type")
    public PredictCarPriceCarTypeEnum carType;
    public PredictCarPriceRequest withCarType(PredictCarPriceCarTypeEnum carType) {
        this.carType = carType;
        return this;
    }
    
    /**
     * Boolean to indicate car is carfax one owner or not
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=carfax_1_owner")
    public Boolean carfax1Owner;
    public PredictCarPriceRequest withCarfax1Owner(Boolean carfax1Owner) {
        this.carfax1Owner = carfax1Owner;
        return this;
    }
    
    /**
     * Boolean to indicate car has clean title or not
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=carfax_clean_title")
    public Boolean carfaxCleanTitle;
    public PredictCarPriceRequest withCarfaxCleanTitle(Boolean carfaxCleanTitle) {
        this.carfaxCleanTitle = carfaxCleanTitle;
        return this;
    }
    
    /**
     * City mileage of the car
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=city_mpg")
    public Long cityMpg;
    public PredictCarPriceRequest withCityMpg(Long cityMpg) {
        this.cityMpg = cityMpg;
        return this;
    }
    
    /**
     * Country for which car price will be predicted
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=country")
    public PredictCarPriceCountryEnum country;
    public PredictCarPriceRequest withCountry(PredictCarPriceCountryEnum country) {
        this.country = country;
        return this;
    }
    
    /**
     * Number of cylinders in the vehicle
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cylinders")
    public Long cylinders;
    public PredictCarPriceRequest withCylinders(Long cylinders) {
        this.cylinders = cylinders;
        return this;
    }
    
    /**
     * Number of doors in the vehicle
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=doors")
    public Long doors;
    public PredictCarPriceRequest withDoors(Long doors) {
        this.doors = doors;
        return this;
    }
    
    /**
     * Drivetrain on the car
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=drivetrain")
    public PredictCarPriceDrivetrainEnum drivetrain;
    public PredictCarPriceRequest withDrivetrain(PredictCarPriceDrivetrainEnum drivetrain) {
        this.drivetrain = drivetrain;
        return this;
    }
    
    /**
     * Engine Block of the car
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=engine_block")
    public PredictCarPriceEngineBlockEnum engineBlock;
    public PredictCarPriceRequest withEngineBlock(PredictCarPriceEngineBlockEnum engineBlock) {
        this.engineBlock = engineBlock;
        return this;
    }
    
    /**
     * Engine Size of the car
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=engine_size")
    public Double engineSize;
    public PredictCarPriceRequest withEngineSize(Double engineSize) {
        this.engineSize = engineSize;
        return this;
    }
    
    /**
     * Highway mileage
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=highway_mpg")
    public Long highwayMpg;
    public PredictCarPriceRequest withHighwayMpg(Long highwayMpg) {
        this.highwayMpg = highwayMpg;
        return this;
    }
    
    /**
     * Boolean to indicate car is certified or not
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_certified")
    public Boolean isCertified;
    public PredictCarPriceRequest withIsCertified(Boolean isCertified) {
        this.isCertified = isCertified;
        return this;
    }
    
    /**
     * Latitude component of the location
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=latitude")
    public Double latitude;
    public PredictCarPriceRequest withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * Longitude component of the location
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=longitude")
    public Double longitude;
    public PredictCarPriceRequest withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * Car's make
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=make")
    public String make;
    public PredictCarPriceRequest withMake(String make) {
        this.make = make;
        return this;
    }
    
    /**
     * miles vehicle has driven in total
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=miles")
    public Long miles;
    public PredictCarPriceRequest withMiles(Long miles) {
        this.miles = miles;
        return this;
    }
    
    /**
     * Car's model
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=model")
    public String model;
    public PredictCarPriceRequest withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * Transmission on the car
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=transmission")
    public PredictCarPriceTransmissionEnum transmission;
    public PredictCarPriceRequest withTransmission(PredictCarPriceTransmissionEnum transmission) {
        this.transmission = transmission;
        return this;
    }
    
    /**
     * Car's trim
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=trim")
    public String trim;
    public PredictCarPriceRequest withTrim(String trim) {
        this.trim = trim;
        return this;
    }
    
    /**
     * Predict price for a VIN
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=vin")
    public String vin;
    public PredictCarPriceRequest withVin(String vin) {
        this.vin = vin;
        return this;
    }
    
    /**
     * Car manufacturing year
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=year")
    public Long year;
    public PredictCarPriceRequest withYear(Long year) {
        this.year = year;
        return this;
    }
    
    /**
     * Location zip
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=zip")
    public String zip;
    public PredictCarPriceRequest withZip(String zip) {
        this.zip = zip;
        return this;
    }
    
}
