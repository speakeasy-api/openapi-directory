"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import inline_response_202 as shared_inline_response_202
from typing import Optional


@dataclasses.dataclass
class AuthkeyPatchRequest:
    
    auth_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'auth_key', 'style': 'form', 'explode': True }})
    r"""auth key to mark as compromised"""  
    comments: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'comments', 'style': 'form', 'explode': True }})
    r"""Comments (like how was this compromised)"""  
    

@dataclasses.dataclass
class AuthkeyPatchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    inline_response_202: Optional[shared_inline_response_202.InlineResponse202] = dataclasses.field(default=None)
    r"""Auth key marked as compromised and locked"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    