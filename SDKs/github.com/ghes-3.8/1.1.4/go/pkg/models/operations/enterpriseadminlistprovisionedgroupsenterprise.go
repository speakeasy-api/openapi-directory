// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type EnterpriseAdminListProvisionedGroupsEnterpriseQueryParams struct {
	// Used for pagination: the number of results to return per page.
	Count *int `queryParam:"style=form,explode=true,name=count"`
	// Excludes the specified attribute from being returned in the results. Using this parameter can speed up response time.
	ExcludedAttributes *string `queryParam:"style=form,explode=true,name=excludedAttributes"`
	// If specified, only results that match the specified filter will be returned. Multiple filters are not supported. Possible filters are `externalId`, `id`, and `displayName`. For example, `?filter="externalId eq '9138790-10932-109120392-12321'"`.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Used for pagination: the starting index of the first result to return when paginating through values.
	StartIndex *int `queryParam:"style=form,explode=true,name=startIndex"`
}

type EnterpriseAdminListProvisionedGroupsEnterpriseRequest struct {
	QueryParams EnterpriseAdminListProvisionedGroupsEnterpriseQueryParams
}

type EnterpriseAdminListProvisionedGroupsEnterpriseResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success, either groups were found or not found
	ScimEnterpriseGroupList *shared.ScimEnterpriseGroupList
	// Bad request
	ScimError *shared.ScimError
}
