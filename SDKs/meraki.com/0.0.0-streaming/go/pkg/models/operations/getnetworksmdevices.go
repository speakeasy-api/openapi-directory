// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkSmDevicesPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

type GetNetworkSmDevicesQueryParams struct {
	// Number of devices to return, 1000 is the default as well as the max.
	BatchSize *int64 `queryParam:"style=form,explode=true,name=batchSize"`
	// If the network has more devices than the batch size, a batch token will be returned
	//     as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.
	//     Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in
	//     with the original request. Additional parameters passed in with the batchToken will be ignored.
	BatchToken *string `queryParam:"style=form,explode=true,name=batchToken"`
	// Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.
	//     The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,
	//     systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,
	//     ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,
	//     simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,
	//     isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,
	//     hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Filter devices by id(s). Multiple ids can be passed in as comma separated values.
	Ids *string `queryParam:"style=form,explode=true,name=ids"`
	// Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.
	Scope *string `queryParam:"style=form,explode=true,name=scope"`
	// Filter devices by serial(s). Multiple serials can be passed in as comma separated values.
	Serials *string `queryParam:"style=form,explode=true,name=serials"`
	// Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values.
	WifiMacs *string `queryParam:"style=form,explode=true,name=wifiMacs"`
}

type GetNetworkSmDevicesRequest struct {
	PathParams  GetNetworkSmDevicesPathParams
	QueryParams GetNetworkSmDevicesQueryParams
}

type GetNetworkSmDevicesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkSmDevices200ApplicationJSONObject map[string]interface{}
}
