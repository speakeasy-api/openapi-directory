// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeInstanceStatusActionEnum
type POSTDescribeInstanceStatusActionEnum string

const (
	POSTDescribeInstanceStatusActionEnumDescribeInstanceStatus POSTDescribeInstanceStatusActionEnum = "DescribeInstanceStatus"
)

func (e *POSTDescribeInstanceStatusActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeInstanceStatus":
		*e = POSTDescribeInstanceStatusActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeInstanceStatusActionEnum: %s", s)
	}
}

// POSTDescribeInstanceStatusVersionEnum
type POSTDescribeInstanceStatusVersionEnum string

const (
	POSTDescribeInstanceStatusVersionEnumTwoThousandAndSixteen1115 POSTDescribeInstanceStatusVersionEnum = "2016-11-15"
)

func (e *POSTDescribeInstanceStatusVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDescribeInstanceStatusVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeInstanceStatusVersionEnum: %s", s)
	}
}

type POSTDescribeInstanceStatusQueryParams struct {
	Action POSTDescribeInstanceStatusActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string                               `queryParam:"style=form,explode=true,name=NextToken"`
	Version   POSTDescribeInstanceStatusVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeInstanceStatusHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeInstanceStatusRequest struct {
	QueryParams POSTDescribeInstanceStatusQueryParams
	Headers     POSTDescribeInstanceStatusHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeInstanceStatusResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
