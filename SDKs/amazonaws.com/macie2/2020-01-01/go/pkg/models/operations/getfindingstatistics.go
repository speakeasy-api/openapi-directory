// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFindingStatisticsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// GetFindingStatisticsRequestBodyFindingCriteria - Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
type GetFindingStatisticsRequestBodyFindingCriteria struct {
	Criterion map[string]shared.CriterionAdditionalProperties `json:"criterion,omitempty"`
}

// GetFindingStatisticsRequestBodyGroupByEnum - <p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity level of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>
type GetFindingStatisticsRequestBodyGroupByEnum string

const (
	GetFindingStatisticsRequestBodyGroupByEnumResourcesAffectedS3BucketName GetFindingStatisticsRequestBodyGroupByEnum = "resourcesAffected.s3Bucket.name"
	GetFindingStatisticsRequestBodyGroupByEnumType                          GetFindingStatisticsRequestBodyGroupByEnum = "type"
	GetFindingStatisticsRequestBodyGroupByEnumClassificationDetailsJobID    GetFindingStatisticsRequestBodyGroupByEnum = "classificationDetails.jobId"
	GetFindingStatisticsRequestBodyGroupByEnumSeverityDescription           GetFindingStatisticsRequestBodyGroupByEnum = "severity.description"
)

func (e *GetFindingStatisticsRequestBodyGroupByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "resourcesAffected.s3Bucket.name":
		fallthrough
	case "type":
		fallthrough
	case "classificationDetails.jobId":
		fallthrough
	case "severity.description":
		*e = GetFindingStatisticsRequestBodyGroupByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFindingStatisticsRequestBodyGroupByEnum: %s", s)
	}
}

// GetFindingStatisticsRequestBodySortCriteria - Specifies criteria for sorting the results of a query that retrieves aggregated statistical data about findings.
type GetFindingStatisticsRequestBodySortCriteria struct {
	AttributeName *shared.FindingStatisticsSortAttributeNameEnum `json:"attributeName,omitempty"`
	OrderBy       *shared.OrderByEnum                            `json:"orderBy,omitempty"`
}

type GetFindingStatisticsRequestBody struct {
	// Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
	FindingCriteria *GetFindingStatisticsRequestBodyFindingCriteria `json:"findingCriteria,omitempty"`
	// <p>The finding property to use to group the query results. Valid values are:</p> <ul><li><p>classificationDetails.jobId - The unique identifier for the classification job that produced the finding.</p></li> <li><p>resourcesAffected.s3Bucket.name - The name of the S3 bucket that the finding applies to.</p></li> <li><p>severity.description - The severity level of the finding, such as High or Medium.</p></li> <li><p>type - The type of finding, such as Policy:IAMUser/S3BucketPublic and SensitiveData:S3Object/Personal.</p></li></ul>
	GroupBy GetFindingStatisticsRequestBodyGroupByEnum `json:"groupBy"`
	// The maximum number of items to include in each page of the response.
	Size *int64 `json:"size,omitempty"`
	// Specifies criteria for sorting the results of a query that retrieves aggregated statistical data about findings.
	SortCriteria *GetFindingStatisticsRequestBodySortCriteria `json:"sortCriteria,omitempty"`
}

type GetFindingStatisticsRequest struct {
	Headers GetFindingStatisticsHeaders
	Request GetFindingStatisticsRequestBody `request:"mediaType=application/json"`
}

type GetFindingStatisticsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	GetFindingStatisticsResponse *shared.GetFindingStatisticsResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
