/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SparkConnectorTarget - Specifies a target that uses an Apache Spark connector.
 */
public class SparkConnectorTarget {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalOptions")
    public java.util.Map<String, String> additionalOptions;

    public SparkConnectorTarget withAdditionalOptions(java.util.Map<String, String> additionalOptions) {
        this.additionalOptions = additionalOptions;
        return this;
    }
    
    @JsonProperty("ConnectionName")
    public String connectionName;

    public SparkConnectorTarget withConnectionName(String connectionName) {
        this.connectionName = connectionName;
        return this;
    }
    
    @JsonProperty("ConnectionType")
    public String connectionType;

    public SparkConnectorTarget withConnectionType(String connectionType) {
        this.connectionType = connectionType;
        return this;
    }
    
    @JsonProperty("ConnectorName")
    public String connectorName;

    public SparkConnectorTarget withConnectorName(String connectorName) {
        this.connectorName = connectorName;
        return this;
    }
    
    @JsonProperty("Inputs")
    public String[] inputs;

    public SparkConnectorTarget withInputs(String[] inputs) {
        this.inputs = inputs;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public SparkConnectorTarget withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputSchemas")
    public GlueSchema[] outputSchemas;

    public SparkConnectorTarget withOutputSchemas(GlueSchema[] outputSchemas) {
        this.outputSchemas = outputSchemas;
        return this;
    }
    
    public SparkConnectorTarget(@JsonProperty("ConnectionName") String connectionName, @JsonProperty("ConnectionType") String connectionType, @JsonProperty("ConnectorName") String connectorName, @JsonProperty("Inputs") String[] inputs, @JsonProperty("Name") String name) {
        this.connectionName = connectionName;
        this.connectionType = connectionType;
        this.connectorName = connectorName;
        this.inputs = inputs;
        this.name = name;
  }
}
