/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * The thermal printer dialect.
 */
export enum GetExportThermalPrintBelegeBelegUuidDialectEnum {
  Escpos = "escpos",
  Escposlite = "escposlite",
  Star = "star",
  Text = "text",
}

/**
 * The encoding of the binary data.
 */
export enum GetExportThermalPrintBelegeBelegUuidEncodingEnum {
  Raw = "raw",
  Base64 = "base64",
}

export class GetExportThermalPrintBelegeBelegUuidRequest extends SpeakeasyBase {
  /**
   * The `_uuid` of a particular `Beleg` to export.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=belegUuid",
  })
  belegUuid: string;

  /**
   * The thermal printer dialect.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dialect",
  })
  dialect?: GetExportThermalPrintBelegeBelegUuidDialectEnum;

  /**
   * The encoding of the binary data.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=encoding",
  })
  encoding?: GetExportThermalPrintBelegeBelegUuidEncodingEnum;

  /**
   * Should the RKSV QR code should be rendered?
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=qr" })
  qr?: boolean;

  /**
   * Number of characters per line.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=width" })
  width?: number;
}

export class GetExportThermalPrintBelegeBelegUuidResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
