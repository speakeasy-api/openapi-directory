"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromeManagementV1AudioStatusReport:
    r"""Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceAudioStatus](https://chromeenterprise.google/policies/#ReportDeviceAudioStatus) * Data Collection Frequency: 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A"""
    
    input_device: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputDevice'), 'exclude': lambda f: f is None }})
    r"""Output only. Active input device's name."""  
    input_gain: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputGain'), 'exclude': lambda f: f is None }})
    r"""Output only. Active input device's gain in [0, 100]."""  
    input_mute: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputMute'), 'exclude': lambda f: f is None }})
    r"""Output only. Is active input device mute or not."""  
    output_device: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputDevice'), 'exclude': lambda f: f is None }})
    r"""Output only. Active output device's name."""  
    output_mute: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputMute'), 'exclude': lambda f: f is None }})
    r"""Output only. Is active output device mute or not."""  
    output_volume: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputVolume'), 'exclude': lambda f: f is None }})
    r"""Output only. Active output device's volume in [0, 100]."""  
    report_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Timestamp of when the sample was collected on device."""  
    