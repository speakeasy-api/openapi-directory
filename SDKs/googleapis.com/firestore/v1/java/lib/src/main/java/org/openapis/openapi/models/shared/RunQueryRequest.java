/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RunQueryRequest - The request for Firestore.RunQuery.
 */
public class RunQueryRequest {
    /**
     * Options for creating a new transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newTransaction")
    public TransactionOptions newTransaction;

    public RunQueryRequest withNewTransaction(TransactionOptions newTransaction) {
        this.newTransaction = newTransaction;
        return this;
    }
    
    /**
     * Reads documents as they were at the given time. This may not be older than 270 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTime")
    public String readTime;

    public RunQueryRequest withReadTime(String readTime) {
        this.readTime = readTime;
        return this;
    }
    
    /**
     * A Firestore query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("structuredQuery")
    public StructuredQuery structuredQuery;

    public RunQueryRequest withStructuredQuery(StructuredQuery structuredQuery) {
        this.structuredQuery = structuredQuery;
        return this;
    }
    
    /**
     * Run the query within an already active transaction. The value here is the opaque transaction ID to execute the query in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transaction")
    public String transaction;

    public RunQueryRequest withTransaction(String transaction) {
        this.transaction = transaction;
        return this;
    }
    
    public RunQueryRequest(){}
}
