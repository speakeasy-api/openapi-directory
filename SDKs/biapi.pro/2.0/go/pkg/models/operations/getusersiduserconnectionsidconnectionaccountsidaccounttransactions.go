// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
	"time"
)

type GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsPathParams struct {
	IDAccount    int64 `pathParam:"style=simple,explode=false,name=id_account"`
	IDConnection int64 `pathParam:"style=simple,explode=false,name=id_connection"`
	// Hint: you can use 'me' or 'all'
	IDUser string `pathParam:"style=simple,explode=false,name=id_user"`
}

type GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsQueryParams struct {
	// display all transactions, including deleted ones
	All *bool `queryParam:"style=form,explode=true,name=all"`
	// display only deleted transactions
	Deleted *bool   `queryParam:"style=form,explode=true,name=deleted"`
	Expand  *string `queryParam:"style=form,explode=true,name=expand"`
	// filter on given category id(s) (comma separated) or "null"
	IDCategory *int64 `queryParam:"style=form,explode=true,name=id_category"`
	// filter on income or expenditures
	Income *bool `queryParam:"style=form,explode=true,name=income"`
	// get only transactions updated after the specified datetime
	LastUpdate *time.Time `queryParam:"style=form,explode=true,name=last_update"`
	// limit number of results
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// maximum (inclusive) date
	MaxDate *types.Date `queryParam:"style=form,explode=true,name=max_date"`
	// maximum (inclusive) value
	MaxValue *float32 `queryParam:"style=form,explode=true,name=max_value"`
	// minimal (inclusive) date
	MinDate *types.Date `queryParam:"style=form,explode=true,name=min_date"`
	// minimal (inclusive) value
	MinValue *float32 `queryParam:"style=form,explode=true,name=min_value"`
	// offset of first result
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// search in labels, dates, values and categories
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// "XX|-XX" or "Â±XX"
	Value *string `queryParam:"style=form,explode=true,name=value"`
	// filter transactions containing the given string
	Wording *string `queryParam:"style=form,explode=true,name=wording"`
}

type GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsRequest struct {
	PathParams  GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsPathParams
	QueryParams GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsQueryParams
}

// GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactions200ApplicationJSON - transactions
type GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactions200ApplicationJSON struct {
	// total number of results
	Total        *float64             `json:"total,omitempty"`
	Transactions []shared.Transaction `json:"transactions"`
}

type GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// transactions
	GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactions200ApplicationJSONObject *GetUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactions200ApplicationJSON
}
