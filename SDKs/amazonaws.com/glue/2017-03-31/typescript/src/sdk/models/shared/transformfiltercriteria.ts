/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SchemaColumn } from "./schemacolumn";
import { TransformStatusTypeEnum } from "./transformstatustypeenum";
import { TransformTypeEnum } from "./transformtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The criteria used to filter the machine learning transforms.
 */
export class TransformFilterCriteria extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "GlueVersion" })
  glueVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: SchemaColumn })
  @Expose({ name: "Schema" })
  @Type(() => SchemaColumn)
  schema?: SchemaColumn[];

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: TransformStatusTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TransformType" })
  transformType?: TransformTypeEnum;
}
