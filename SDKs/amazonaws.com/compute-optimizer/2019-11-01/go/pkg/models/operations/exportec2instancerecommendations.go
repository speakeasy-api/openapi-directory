// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ExportEc2InstanceRecommendationsXAmzTargetEnum
type ExportEc2InstanceRecommendationsXAmzTargetEnum string

const (
	ExportEc2InstanceRecommendationsXAmzTargetEnumComputeOptimizerServiceExportEc2InstanceRecommendations ExportEc2InstanceRecommendationsXAmzTargetEnum = "ComputeOptimizerService.ExportEC2InstanceRecommendations"
)

func (e *ExportEc2InstanceRecommendationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ComputeOptimizerService.ExportEC2InstanceRecommendations":
		*e = ExportEc2InstanceRecommendationsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportEc2InstanceRecommendationsXAmzTargetEnum: %s", s)
	}
}

type ExportEc2InstanceRecommendationsHeaders struct {
	XAmzAlgorithm     *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ExportEc2InstanceRecommendationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ExportEc2InstanceRecommendationsRequest struct {
	Headers ExportEc2InstanceRecommendationsHeaders
	Request shared.ExportEc2InstanceRecommendationsRequest `request:"mediaType=application/json"`
}

type ExportEc2InstanceRecommendationsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	ExportEc2InstanceRecommendationsResponse *shared.ExportEc2InstanceRecommendationsResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// MissingAuthenticationToken
	MissingAuthenticationToken interface{}
	// OptInRequiredException
	OptInRequiredException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
