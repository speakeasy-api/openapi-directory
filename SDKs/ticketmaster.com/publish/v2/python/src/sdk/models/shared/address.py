"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Address:
    r"""Address"""
    
    line1s: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line1s'), 'exclude': lambda f: f is None }})
    r"""Aaddress first line - multi-lingual fields"""  
    line2s: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line2s'), 'exclude': lambda f: f is None }})
    r"""Address second line - multi-lingual fields"""  
    line3s: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line3s'), 'exclude': lambda f: f is None }})
    r"""Address third line - multi-lingual fields"""  
    