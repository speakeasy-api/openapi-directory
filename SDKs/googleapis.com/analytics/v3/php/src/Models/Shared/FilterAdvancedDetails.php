<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FilterAdvancedDetails - Details for the filter of the type ADVANCED.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FilterAdvancedDetails
{
    /**
     * Indicates if the filter expressions are case sensitive.
     * 
     * @var ?bool $caseSensitive
     */
	#[\JMS\Serializer\Annotation\SerializedName('caseSensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $caseSensitive = null;
    
    /**
     * Expression to extract from field A.
     * 
     * @var ?string $extractA
     */
	#[\JMS\Serializer\Annotation\SerializedName('extractA')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $extractA = null;
    
    /**
     * Expression to extract from field B.
     * 
     * @var ?string $extractB
     */
	#[\JMS\Serializer\Annotation\SerializedName('extractB')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $extractB = null;
    
    /**
     * Field A.
     * 
     * @var ?string $fieldA
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldA')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fieldA = null;
    
    /**
     * The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
     * 
     * @var ?int $fieldAIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldAIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fieldAIndex = null;
    
    /**
     * Indicates if field A is required to match.
     * 
     * @var ?bool $fieldARequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldARequired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fieldARequired = null;
    
    /**
     * Field B.
     * 
     * @var ?string $fieldB
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldB')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fieldB = null;
    
    /**
     * The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
     * 
     * @var ?int $fieldBIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldBIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fieldBIndex = null;
    
    /**
     * Indicates if field B is required to match.
     * 
     * @var ?bool $fieldBRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldBRequired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fieldBRequired = null;
    
    /**
     * Expression used to construct the output value.
     * 
     * @var ?string $outputConstructor
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputConstructor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $outputConstructor = null;
    
    /**
     * Output field.
     * 
     * @var ?string $outputToField
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputToField')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $outputToField = null;
    
    /**
     * The Index of the custom dimension. Required if field is a CUSTOM_DIMENSION.
     * 
     * @var ?int $outputToFieldIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputToFieldIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $outputToFieldIndex = null;
    
    /**
     * Indicates if the existing value of the output field, if any, should be overridden by the output expression.
     * 
     * @var ?bool $overrideOutputField
     */
	#[\JMS\Serializer\Annotation\SerializedName('overrideOutputField')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $overrideOutputField = null;
    
	public function __construct()
	{
		$this->caseSensitive = null;
		$this->extractA = null;
		$this->extractB = null;
		$this->fieldA = null;
		$this->fieldAIndex = null;
		$this->fieldARequired = null;
		$this->fieldB = null;
		$this->fieldBIndex = null;
		$this->fieldBRequired = null;
		$this->outputConstructor = null;
		$this->outputToField = null;
		$this->outputToFieldIndex = null;
		$this->overrideOutputField = null;
	}
}
