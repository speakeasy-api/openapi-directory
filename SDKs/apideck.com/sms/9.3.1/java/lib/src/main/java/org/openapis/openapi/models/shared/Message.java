/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Message {
    /**
     * The message text.
     */
    @JsonProperty("body")
    public String body;

    public Message withBody(String body) {
        this.body = body;
        return this;
    }
    
    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public Message withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The user who created the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public String createdBy;

    public Message withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * The direction of the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public MessageDirectionEnum direction;

    public Message withDirection(MessageDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The error returned if your message status is failed or undelivered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public MessageError error;

    public Message withError(MessageError error) {
        this.error = error;
        return this;
    }
    
    /**
     * The phone number that initiated the message.
     */
    @JsonProperty("from")
    public String from;

    public Message withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Message withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the Messaging Service used with the message. In case of Plivo this links to the Powerpack ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messaging_service_id")
    public String messagingServiceId;

    public Message withMessagingServiceId(String messagingServiceId) {
        this.messagingServiceId = messagingServiceId;
        return this;
    }
    
    /**
     * The number of media files associated with the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number_of_media_files")
    public Long numberOfMediaFiles;

    public Message withNumberOfMediaFiles(Long numberOfMediaFiles) {
        this.numberOfMediaFiles = numberOfMediaFiles;
        return this;
    }
    
    /**
     * The number of units that make up the complete message. Messages can be split up due to the constraints of the message size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number_of_units")
    public Long numberOfUnits;

    public Message withNumberOfUnits(Long numberOfUnits) {
        this.numberOfUnits = numberOfUnits;
        return this;
    }
    
    /**
     * Price of the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public MessagePrice price;

    public Message withPrice(MessagePrice price) {
        this.price = price;
        return this;
    }
    
    /**
     * A client reference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public Message withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The scheduled date and time of the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduled_at")
    public OffsetDateTime scheduledAt;

    public Message withScheduledAt(OffsetDateTime scheduledAt) {
        this.scheduledAt = scheduledAt;
        return this;
    }
    
    /**
     * The date and time that the message was sent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("sent_at")
    public OffsetDateTime sentAt;

    public Message withSentAt(OffsetDateTime sentAt) {
        this.sentAt = sentAt;
        return this;
    }
    
    /**
     * Status of the delivery of the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public MessageStatusEnum status;

    public Message withStatus(MessageStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subject")
    public String subject;

    public Message withSubject(String subject) {
        this.subject = subject;
        return this;
    }
    
    /**
     * The phone number that received the message.
     */
    @JsonProperty("to")
    public String to;

    public Message withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Set to sms for SMS messages and mms for MMS messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public MessageMessageTypeEnum type;

    public Message withType(MessageMessageTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public Message withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The user who last updated the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_by")
    public String updatedBy;

    public Message withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    /**
     * Define a webhook to receive delivery notifications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhook_url")
    public String webhookUrl;

    public Message withWebhookUrl(String webhookUrl) {
        this.webhookUrl = webhookUrl;
        return this;
    }
    
    public Message(@JsonProperty("body") String body, @JsonProperty("from") String from, @JsonProperty("to") String to) {
        this.body = body;
        this.from = from;
        this.to = to;
  }
}
