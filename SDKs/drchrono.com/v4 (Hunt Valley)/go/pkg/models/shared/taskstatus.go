// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskStatusStatusCategoryEnum - Can be one of the following `O`(open), `P`(In progress), `H`(On hold), `C`(Complete), default to `O`(Open)
type TaskStatusStatusCategoryEnum string

const (
	TaskStatusStatusCategoryEnumO TaskStatusStatusCategoryEnum = "O"
	TaskStatusStatusCategoryEnumP TaskStatusStatusCategoryEnum = "P"
	TaskStatusStatusCategoryEnumH TaskStatusStatusCategoryEnum = "H"
	TaskStatusStatusCategoryEnumC TaskStatusStatusCategoryEnum = "C"
)

func (e *TaskStatusStatusCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "O":
		fallthrough
	case "P":
		fallthrough
	case "H":
		fallthrough
	case "C":
		*e = TaskStatusStatusCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskStatusStatusCategoryEnum: %s", s)
	}
}

// TaskStatus - Created
type TaskStatus struct {
	Archived      *bool   `json:"archived,omitempty"`
	CreatedAt     *string `json:"created_at,omitempty"`
	ID            *int64  `json:"id,omitempty"`
	Name          string  `json:"name"`
	PracticeGroup int64   `json:"practice_group"`
	// Can be one of the following `O`(open), `P`(In progress), `H`(On hold), `C`(Complete), default to `O`(Open)
	StatusCategory *TaskStatusStatusCategoryEnum `json:"status_category,omitempty"`
	// ID of `/api/task_categories`
	TaskCategory *int64  `json:"task_category,omitempty"`
	UpdatedAt    *string `json:"updated_at,omitempty"`
}
