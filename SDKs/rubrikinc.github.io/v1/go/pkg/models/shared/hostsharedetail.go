// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HostShareDetailShareTypeEnum - The type of NAS share.
type HostShareDetailShareTypeEnum string

const (
	HostShareDetailShareTypeEnumNfs HostShareDetailShareTypeEnum = "NFS"
	HostShareDetailShareTypeEnumSmb HostShareDetailShareTypeEnum = "SMB"
)

func (e HostShareDetailShareTypeEnum) ToPointer() *HostShareDetailShareTypeEnum {
	return &e
}

func (e *HostShareDetailShareTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NFS":
		fallthrough
	case "SMB":
		*e = HostShareDetailShareTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HostShareDetailShareTypeEnum: %v", v)
	}
}

type HostShareDetail struct {
	// The domain of the SMB share.
	Domain *string `json:"domain,omitempty"`
	// The NFS export point or SMB share name for the NAS share.
	ExportPoint string `json:"exportPoint"`
	// The host ID of the NAS Share host.
	HostID              *string              `json:"hostId,omitempty"`
	HostShareParameters *HostShareParameters `json:"hostShareParameters,omitempty"`
	// The hostname of the NAS host.
	Hostname string `json:"hostname"`
	// The unique ID of the NAS Share.
	ID string `json:"id"`
	// The ID of the primary Rubrik cluster.
	PrimaryClusterID string `json:"primaryClusterId"`
	// The type of NAS share.
	ShareType HostShareDetailShareTypeEnum `json:"shareType"`
	// The status of connection between the Rubrik cluster and the NAS Share. Possible responses are Connected and Disconnected.
	Status string `json:"status"`
	// The username to access the NAS share.
	Username *string `json:"username,omitempty"`
	// NAS Vendor Type.
	VendorType *NasVendorTypeEnum `json:"vendorType,omitempty"`
}
