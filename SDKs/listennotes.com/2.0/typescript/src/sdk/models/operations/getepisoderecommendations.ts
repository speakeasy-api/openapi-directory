/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetEpisodeRecommendationsRequest extends SpeakeasyBase {
  /**
   * Get API Key on listennotes.com/api
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-ListenAPI-Key",
  })
  xListenAPIKey: string;

  /**
   * Episode id.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Whether or not to exclude podcasts with explicit language. 1 is yes, and 0 is no.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=safe_mode",
  })
  safeMode?: shared.SafeModeParamEnum;
}

export class GetEpisodeRecommendationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getEpisodeRecommendationsResponse?: shared.GetEpisodeRecommendationsResponse;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
