"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import branch_protection as shared_branch_protection
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShortBranchCommit:
    
    sha: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sha') }})  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShortBranch:
    r"""Short Branch"""
    
    commit: ShortBranchCommit = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commit') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    protected: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protected') }})  
    protection: Optional[shared_branch_protection.BranchProtection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protection'), 'exclude': lambda f: f is None }})
    r"""Branch Protection"""  
    protection_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protection_url'), 'exclude': lambda f: f is None }})  
    