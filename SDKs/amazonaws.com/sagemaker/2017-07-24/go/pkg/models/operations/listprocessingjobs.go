// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListProcessingJobsXAmzTargetEnum
type ListProcessingJobsXAmzTargetEnum string

const (
	ListProcessingJobsXAmzTargetEnumSageMakerListProcessingJobs ListProcessingJobsXAmzTargetEnum = "SageMaker.ListProcessingJobs"
)

func (e ListProcessingJobsXAmzTargetEnum) ToPointer() *ListProcessingJobsXAmzTargetEnum {
	return &e
}

func (e *ListProcessingJobsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.ListProcessingJobs":
		*e = ListProcessingJobsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListProcessingJobsXAmzTargetEnum: %v", v)
	}
}

type ListProcessingJobsRequest struct {
	ListProcessingJobsRequest shared.ListProcessingJobsRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                          `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListProcessingJobsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListProcessingJobsResponse struct {
	ContentType string
	// Success
	ListProcessingJobsResponse *shared.ListProcessingJobsResponse
	StatusCode                 int
	RawResponse                *http.Response
}
