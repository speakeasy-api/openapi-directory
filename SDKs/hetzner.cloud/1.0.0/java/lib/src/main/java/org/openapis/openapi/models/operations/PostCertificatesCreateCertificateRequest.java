/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostCertificatesCreateCertificateRequest {
    /**
     * Certificate and chain in PEM format, in order so that each record directly certifies the one preceding. Required for type `uploaded` Certificates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificate")
    public String certificate;
    public PostCertificatesCreateCertificateRequest withCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }
    
    /**
     * Domains and subdomains that should be contained in the Certificate issued by *Let's Encrypt*. Required for type `managed` Certificates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain_names")
    public String[] domainNames;
    public PostCertificatesCreateCertificateRequest withDomainNames(String[] domainNames) {
        this.domainNames = domainNames;
        return this;
    }
    
    /**
     * User-defined labels (key-value pairs)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, Object> labels;
    public PostCertificatesCreateCertificateRequest withLabels(java.util.Map<String, Object> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Name of the Certificate
     */
    @JsonProperty("name")
    public String name;
    public PostCertificatesCreateCertificateRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Certificate key in PEM format. Required for type `uploaded` Certificates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("private_key")
    public String privateKey;
    public PostCertificatesCreateCertificateRequest withPrivateKey(String privateKey) {
        this.privateKey = privateKey;
        return this;
    }
    
    /**
     * Choose between uploading a Certificate in PEM format or requesting a managed *Let's Encrypt* Certificate. If omitted defaults to `uploaded`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public PostCertificatesCreateCertificateRequestTypeEnum type;
    public PostCertificatesCreateCertificateRequest withType(PostCertificatesCreateCertificateRequestTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
