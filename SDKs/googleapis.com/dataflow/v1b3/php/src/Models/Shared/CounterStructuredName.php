<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CounterStructuredName - Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CounterStructuredName
{
    /**
     * Name of the optimized step being executed by the workers.
     * 
     * @var ?string $componentStepName
     */
	#[\JMS\Serializer\Annotation\SerializedName('componentStepName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $componentStepName = null;
    
    /**
     * Name of the stage. An execution step contains multiple component steps.
     * 
     * @var ?string $executionStepName
     */
	#[\JMS\Serializer\Annotation\SerializedName('executionStepName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $executionStepName = null;
    
    /**
     * Index of an input collection that's being read from/written to as a side input. The index identifies a step's side inputs starting by 1 (e.g. the first side input has input_index 1, the third has input_index 3). Side inputs are identified by a pair of (original_step_name, input_index). This field helps uniquely identify them.
     * 
     * @var ?int $inputIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $inputIndex = null;
    
    /**
     * Counter name. Not necessarily globally-unique, but unique within the context of the other fields. Required.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * One of the standard Origins defined above.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CounterStructuredNameOriginEnum $origin
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CounterStructuredNameOriginEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CounterStructuredNameOriginEnum $origin = null;
    
    /**
     * A string containing a more specific namespace of the counter's origin.
     * 
     * @var ?string $originNamespace
     */
	#[\JMS\Serializer\Annotation\SerializedName('originNamespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originNamespace = null;
    
    /**
     * The step name requesting an operation, such as GBK. I.e. the ParDo causing a read/write from shuffle to occur, or a read from side inputs.
     * 
     * @var ?string $originalRequestingStepName
     */
	#[\JMS\Serializer\Annotation\SerializedName('originalRequestingStepName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalRequestingStepName = null;
    
    /**
     * System generated name of the original step in the user's graph, before optimization.
     * 
     * @var ?string $originalStepName
     */
	#[\JMS\Serializer\Annotation\SerializedName('originalStepName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalStepName = null;
    
    /**
     * Portion of this counter, either key or value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CounterStructuredNamePortionEnum $portion
     */
	#[\JMS\Serializer\Annotation\SerializedName('portion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CounterStructuredNamePortionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CounterStructuredNamePortionEnum $portion = null;
    
    /**
     * ID of a particular worker.
     * 
     * @var ?string $workerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('workerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workerId = null;
    
	public function __construct()
	{
		$this->componentStepName = null;
		$this->executionStepName = null;
		$this->inputIndex = null;
		$this->name = null;
		$this->origin = null;
		$this->originNamespace = null;
		$this->originalRequestingStepName = null;
		$this->originalStepName = null;
		$this->portion = null;
		$this->workerId = null;
	}
}
