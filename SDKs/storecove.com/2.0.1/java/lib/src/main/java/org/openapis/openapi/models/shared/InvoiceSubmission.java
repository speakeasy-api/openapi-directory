/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InvoiceSubmission - DEPRECATED. The invoice you want Storecove to process, with some meta-data.
 */
public class InvoiceSubmission {
    /**
     * An array of attachments. You may provide up to 10 attchments, but the total size must not exceed 10MB after Base64 encoding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attachments")public Attachment[] attachments;
    public InvoiceSubmission withAttachments(Attachment[] attachments) {
        this.attachments = attachments;
        return this;
    }
    
    /**
     * DEPRECATED. In the future we will no longer support creating PDF invoices. Whether or not to create a primary image (PDF) if one is not provided. For customers who started from December 1st 2022, the default is false. For customers who started before that, the default is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createPrimaryImage")public Boolean createPrimaryImage;
    public InvoiceSubmission withCreatePrimaryImage(Boolean createPrimaryImage) {
        this.createPrimaryImage = createPrimaryImage;
        return this;
    }
    
    /**
     * DEPRECATED. Use attachments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("document")public String document;
    public InvoiceSubmission withDocument(String document) {
        this.document = document;
        return this;
    }
    
    /**
     * DEPRECATED. Use attachments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentUrl")public String documentUrl;
    public InvoiceSubmission withDocumentUrl(String documentUrl) {
        this.documentUrl = documentUrl;
        return this;
    }
    
    /**
     * A guid that you generated for this InvoiceSubmission to achieve idempotency. If you submit multiple documents with the same idempotencyGuid, only the first one will be processed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idempotencyGuid")public String idempotencyGuid;
    public InvoiceSubmission withIdempotencyGuid(String idempotencyGuid) {
        this.idempotencyGuid = idempotencyGuid;
        return this;
    }
    
    /**
     * The invoice to send. Provide either invoice, or invoiceData, but not both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoice")public Invoice invoice;
    public InvoiceSubmission withInvoice(Invoice invoice) {
        this.invoice = invoice;
        return this;
    }
    
    /**
     * The invoice to send, in base64 encoded format. Provide either invoice, or invoiceData, but not both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceData")public InvoiceData invoiceData;
    public InvoiceSubmission withInvoiceData(InvoiceData invoiceData) {
        this.invoiceData = invoiceData;
        return this;
    }
    
    /**
     * The different ways to send the invoice to the recipient. The publicIdentifiers are used to send via the Peppol network, if the recipient is not registered on the Peppol network, the invoice will be sent to the email addresses in the emails property. This property is only mandatory when sending the invoice data using the &lt;&lt;_openapi_invoice&gt;&gt; property, not when sending using the &lt;&lt;_openapi_invoicedata&gt;&gt; property, in which case this information will be extracted from the &lt;&lt;_openapi_invoicedata&gt;&gt; object. If you do specify an &lt;&lt;_openapi_invoicerecipient&gt;&gt; object and an &lt;&lt;_openapi_invoicedata&gt;&gt; object, the data from the two will be merged.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceRecipient")public InvoiceRecipient invoiceRecipient;
    public InvoiceSubmission withInvoiceRecipient(InvoiceRecipient invoiceRecipient) {
        this.invoiceRecipient = invoiceRecipient;
        return this;
    }
    
    /**
     * The id of the LegalEntity this invoice should be sent for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legalEntityId")public Long legalEntityId;
    public InvoiceSubmission withLegalEntityId(Long legalEntityId) {
        this.legalEntityId = legalEntityId;
        return this;
    }
    
    /**
     * DEPRECATED. Use legalEntityId
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legalSupplierId")public Long legalSupplierId;
    public InvoiceSubmission withLegalSupplierId(Long legalSupplierId) {
        this.legalSupplierId = legalSupplierId;
        return this;
    }
    
    /**
     * DEPRECATED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")public InvoiceSubmissionModeEnum mode;
    public InvoiceSubmission withMode(InvoiceSubmissionModeEnum mode) {
        this.mode = mode;
        return this;
    }
    
    /**
     * The different ways to send the invoice to the recipient. The publicIdentifiers are used to send via the Peppol network, if the recipient is not registered on the Peppol network, the invoice will be sent to the email addresses in the emails property. This property is only mandatory when sending the invoice data using the &lt;&lt;_openapi_invoice&gt;&gt; property, not when sending using the &lt;&lt;_openapi_invoicedata&gt;&gt; property, in which case this information will be extracted from the &lt;&lt;_openapi_invoicedata&gt;&gt; object. If you do specify an &lt;&lt;_openapi_invoicerecipient&gt;&gt; object and an &lt;&lt;_openapi_invoicedata&gt;&gt; object, the data from the two will be merged.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routing")public Routing routing;
    public InvoiceSubmission withRouting(Routing routing) {
        this.routing = routing;
        return this;
    }
    
    /**
     * DEPRECATED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplierId")public Long supplierId;
    public InvoiceSubmission withSupplierId(Long supplierId) {
        this.supplierId = supplierId;
        return this;
    }
    
}
