/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateUnderstandSampleServerList = [
  "https://preview.twilio.com",
] as const;

export class UpdateUnderstandSampleSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateUnderstandSampleUpdateUnderstandSampleRequest extends SpeakeasyBase {
  /**
   * An ISO language-country string of the sample.
   */
  @SpeakeasyMetadata({ data: "form, name=Language" })
  language?: string;

  /**
   * The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null
   */
  @SpeakeasyMetadata({ data: "form, name=SourceChannel" })
  sourceChannel?: string;

  /**
   * The text example of how end-users may express this task. The sample may contain Field tag blocks.
   */
  @SpeakeasyMetadata({ data: "form, name=TaggedText" })
  taggedText?: string;
}

export class UpdateUnderstandSampleRequest extends SpeakeasyBase {
  /**
   * The unique ID of the Assistant.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AssistantSid",
  })
  assistantSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateUnderstandSampleUpdateUnderstandSampleRequest;

  /**
   * A 34 character string that uniquely identifies this resource.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;

  /**
   * The unique ID of the Task associated with this Sample.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=TaskSid",
  })
  taskSid: string;
}

export class UpdateUnderstandSampleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  previewUnderstandAssistantTaskSample?: shared.PreviewUnderstandAssistantTaskSample;
}
