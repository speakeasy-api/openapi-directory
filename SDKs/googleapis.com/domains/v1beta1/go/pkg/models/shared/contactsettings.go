// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ContactSettingsPrivacyEnum - Required. Privacy setting for the contacts associated with the `Registration`.
type ContactSettingsPrivacyEnum string

const (
	ContactSettingsPrivacyEnumContactPrivacyUnspecified ContactSettingsPrivacyEnum = "CONTACT_PRIVACY_UNSPECIFIED"
	ContactSettingsPrivacyEnumPublicContactData         ContactSettingsPrivacyEnum = "PUBLIC_CONTACT_DATA"
	ContactSettingsPrivacyEnumPrivateContactData        ContactSettingsPrivacyEnum = "PRIVATE_CONTACT_DATA"
	ContactSettingsPrivacyEnumRedactedContactData       ContactSettingsPrivacyEnum = "REDACTED_CONTACT_DATA"
)

func (e *ContactSettingsPrivacyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONTACT_PRIVACY_UNSPECIFIED":
		fallthrough
	case "PUBLIC_CONTACT_DATA":
		fallthrough
	case "PRIVATE_CONTACT_DATA":
		fallthrough
	case "REDACTED_CONTACT_DATA":
		*e = ContactSettingsPrivacyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactSettingsPrivacyEnum: %s", s)
	}
}

// ContactSettings - Defines the contact information associated with a `Registration`. [ICANN](https://icann.org/) requires all domain names to have associated contact information. The `registrant_contact` is considered the domain's legal owner, and often the other contacts are identical.
type ContactSettings struct {
	// Details required for a contact associated with a `Registration`.
	AdminContact *Contact `json:"adminContact,omitempty"`
	// Required. Privacy setting for the contacts associated with the `Registration`.
	Privacy *ContactSettingsPrivacyEnum `json:"privacy,omitempty"`
	// Details required for a contact associated with a `Registration`.
	RegistrantContact *Contact `json:"registrantContact,omitempty"`
	// Details required for a contact associated with a `Registration`.
	TechnicalContact *Contact `json:"technicalContact,omitempty"`
}
