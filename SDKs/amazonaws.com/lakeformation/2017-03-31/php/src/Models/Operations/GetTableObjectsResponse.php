<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetTableObjectsResponse
{
	
    public string $contentType;
    
    /**
     * EntityNotFoundException
     * 
     * @var mixed $entityNotFoundException
     */
	
    public mixed $entityNotFoundException = null;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GetTableObjectsResponse $getTableObjectsResponse
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\GetTableObjectsResponse $getTableObjectsResponse = null;
    
    /**
     * InternalServiceException
     * 
     * @var mixed $internalServiceException
     */
	
    public mixed $internalServiceException = null;
    
    /**
     * InvalidInputException
     * 
     * @var mixed $invalidInputException
     */
	
    public mixed $invalidInputException = null;
    
    /**
     * OperationTimeoutException
     * 
     * @var mixed $operationTimeoutException
     */
	
    public mixed $operationTimeoutException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * ResourceNotReadyException
     * 
     * @var mixed $resourceNotReadyException
     */
	
    public mixed $resourceNotReadyException = null;
    
    /**
     * TransactionCanceledException
     * 
     * @var mixed $transactionCanceledException
     */
	
    public mixed $transactionCanceledException = null;
    
    /**
     * TransactionCommittedException
     * 
     * @var mixed $transactionCommittedException
     */
	
    public mixed $transactionCommittedException = null;
    
	public function __construct()
	{
		$this->contentType = "";
		$this->entityNotFoundException = null;
		$this->getTableObjectsResponse = null;
		$this->internalServiceException = null;
		$this->invalidInputException = null;
		$this->operationTimeoutException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->resourceNotReadyException = null;
		$this->transactionCanceledException = null;
		$this->transactionCommittedException = null;
	}
}
