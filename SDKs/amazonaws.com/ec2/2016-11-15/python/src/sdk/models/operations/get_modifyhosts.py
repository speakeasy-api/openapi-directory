"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GETModifyHostsActionEnum(str, Enum):
    MODIFY_HOSTS = 'ModifyHosts'

class GETModifyHostsAutoPlacementEnum(str, Enum):
    r"""Specify whether to enable or disable auto-placement."""
    ON = 'on'
    OFF = 'off'

class GETModifyHostsHostMaintenanceEnum(str, Enum):
    r"""Indicates whether to enable or disable host maintenance for the Dedicated Host. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-maintenance.html\\"> Host maintenance</a> in the <i>Amazon EC2 User Guide</i>."""
    ON = 'on'
    OFF = 'off'

class GETModifyHostsHostRecoveryEnum(str, Enum):
    r"""Indicates whether to enable or disable host recovery for the Dedicated Host. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html\\"> Host recovery</a> in the <i>Amazon EC2 User Guide</i>."""
    ON = 'on'
    OFF = 'off'

class GETModifyHostsVersionEnum(str, Enum):
    TWO_THOUSAND_AND_SIXTEEN_11_15 = '2016-11-15'


@dataclasses.dataclass
class GETModifyHostsRequest:
    
    action: GETModifyHostsActionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Action', 'style': 'form', 'explode': True }})  
    host_id: list[str] = dataclasses.field(metadata={'query_param': { 'field_name': 'HostId', 'style': 'form', 'explode': True }})
    r"""The IDs of the Dedicated Hosts to modify."""  
    version: GETModifyHostsVersionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Version', 'style': 'form', 'explode': True }})  
    auto_placement: Optional[GETModifyHostsAutoPlacementEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AutoPlacement', 'style': 'form', 'explode': True }})
    r"""Specify whether to enable or disable auto-placement."""  
    host_maintenance: Optional[GETModifyHostsHostMaintenanceEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'HostMaintenance', 'style': 'form', 'explode': True }})
    r"""Indicates whether to enable or disable host maintenance for the Dedicated Host. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-maintenance.html\\"> Host maintenance</a> in the <i>Amazon EC2 User Guide</i>."""  
    host_recovery: Optional[GETModifyHostsHostRecoveryEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'HostRecovery', 'style': 'form', 'explode': True }})
    r"""Indicates whether to enable or disable host recovery for the Dedicated Host. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-recovery.html\\"> Host recovery</a> in the <i>Amazon EC2 User Guide</i>."""  
    instance_family: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'InstanceFamily', 'style': 'form', 'explode': True }})
    r"""<p>Specifies the instance family to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support multiple instance types within its current instance family.</p> <p>If you want to modify a Dedicated Host to support a specific instance type only, omit this parameter and specify <b>InstanceType</b> instead. You cannot specify <b>InstanceFamily</b> and <b>InstanceType</b> in the same request.</p>"""  
    instance_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'InstanceType', 'style': 'form', 'explode': True }})
    r"""<p>Specifies the instance type to be supported by the Dedicated Host. Specify this parameter to modify a Dedicated Host to support only a specific instance type.</p> <p>If you want to modify a Dedicated Host to support multiple instance types in its current instance family, omit this parameter and specify <b>InstanceFamily</b> instead. You cannot specify <b>InstanceType</b> and <b>InstanceFamily</b> in the same request.</p>"""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GETModifyHostsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    