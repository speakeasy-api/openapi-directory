// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETListStacksActionEnum
type GETListStacksActionEnum string

const (
	GETListStacksActionEnumListStacks GETListStacksActionEnum = "ListStacks"
)

func (e *GETListStacksActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListStacks":
		*e = GETListStacksActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListStacksActionEnum: %s", s)
	}
}

// GETListStacksVersionEnum
type GETListStacksVersionEnum string

const (
	GETListStacksVersionEnumTwoThousandAndTen0515 GETListStacksVersionEnum = "2010-05-15"
)

func (e *GETListStacksVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETListStacksVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListStacksVersionEnum: %s", s)
	}
}

type GETListStacksRequest struct {
	Action GETListStacksActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A string that identifies the next page of stacks that you want to retrieve.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// Stack status to use as a filter. Specify one or more stack status codes to list only stacks with the specified status codes. For a complete list of stack status codes, see the <code>StackStatus</code> parameter of the <a>Stack</a> data type.
	StackStatusFilter []shared.StackStatusEnum `queryParam:"style=form,explode=true,name=StackStatusFilter"`
	Version           GETListStacksVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListStacksResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
