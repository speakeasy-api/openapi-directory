// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDataflowEndpointGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateDataflowEndpointGroupRequestBody struct {
	// Amount of time, in seconds, after a contact ends for the contact to remain in a <code>POSTPASS</code> state. A CloudWatch event is emitted when the contact enters and exits the <code>POSTPASS</code> state.
	ContactPostPassDurationSeconds *int64 `json:"contactPostPassDurationSeconds,omitempty"`
	// Amount of time, in seconds, prior to contact start for the contact to remain in a <code>PREPASS</code> state. A CloudWatch event is emitted when the contact enters and exits the <code>PREPASS</code> state.
	ContactPrePassDurationSeconds *int64 `json:"contactPrePassDurationSeconds,omitempty"`
	// Endpoint details of each endpoint in the dataflow endpoint group.
	EndpointDetails []shared.EndpointDetails `json:"endpointDetails"`
	// Tags of a dataflow endpoint group.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateDataflowEndpointGroupRequest struct {
	Headers CreateDataflowEndpointGroupHeaders
	Request CreateDataflowEndpointGroupRequestBody `request:"mediaType=application/json"`
}

type CreateDataflowEndpointGroupResponse struct {
	ContentType string
	// Success
	DataflowEndpointGroupIDResponse *shared.DataflowEndpointGroupIDResponse
	// DependencyException
	DependencyException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
