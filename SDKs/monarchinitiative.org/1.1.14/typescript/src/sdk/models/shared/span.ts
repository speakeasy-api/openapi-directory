/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Token } from "./token";
import { Expose, Type } from "class-transformer";

export class Span extends SpeakeasyBase {
  /**
   * end of span text relative to content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end?: number;

  /**
   * start of span text relative to content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start?: number;

  /**
   * span text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;

  /**
   * A token or entity extracted from the span text
   */
  @SpeakeasyMetadata({ elemType: Token })
  @Expose({ name: "token" })
  @Type(() => Token)
  token?: Token[];
}
