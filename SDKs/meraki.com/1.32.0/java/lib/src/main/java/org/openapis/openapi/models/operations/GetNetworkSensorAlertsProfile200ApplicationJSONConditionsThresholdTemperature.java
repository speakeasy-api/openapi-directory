/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperature - Temperature threshold. One of 'celsius', 'fahrenheit', or 'quality' must be provided.
 */
public class GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperature {
    /**
     * Alerting threshold in degrees Celsius.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("celsius")
    public Float celsius;

    public GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperature withCelsius(Float celsius) {
        this.celsius = celsius;
        return this;
    }
    
    /**
     * Alerting threshold in degrees Fahrenheit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fahrenheit")
    public Float fahrenheit;

    public GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperature withFahrenheit(Float fahrenheit) {
        this.fahrenheit = fahrenheit;
        return this;
    }
    
    /**
     * Alerting threshold as a qualitative temperature level.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quality")
    public GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperatureQualityEnum quality;

    public GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperature withQuality(GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperatureQualityEnum quality) {
        this.quality = quality;
        return this;
    }
    
    public GetNetworkSensorAlertsProfile200ApplicationJSONConditionsThresholdTemperature(){}
}
