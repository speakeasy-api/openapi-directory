"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import cryptokey as shared_cryptokey
from ..shared import httpvalidationerror as shared_httpvalidationerror
from typing import Optional


@dataclasses.dataclass
class GetPrivateKeysSecurity:
    
    api_key_header: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-api-key' }})  
    

@dataclasses.dataclass
class GetPrivateKeysRequest:
    
    firmware_hash: str = dataclasses.field(metadata={'path_param': { 'field_name': 'firmware_hash', 'style': 'simple', 'explode': False }})
    r"""SHA2 hash of device firmware"""  
    

@dataclasses.dataclass
class GetPrivateKeysResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    crypto_keys: Optional[list[shared_cryptokey.CryptoKey]] = dataclasses.field(default=None)
    r"""Successful Response"""  
    http_validation_error: Optional[shared_httpvalidationerror.HTTPValidationError] = dataclasses.field(default=None)
    r"""Validation Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    