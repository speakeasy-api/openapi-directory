"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any

class ConferenceListMembersResponseMessageEnum(str, Enum):
    r"""Response message"""
    CONFERENCE_LIST_MEMBERS_EXECUTED = 'Conference ListMembers Executed'
    CONFERENCE_NAME_PARAMETER_MUST_BE_PRESENT = 'ConferenceName Parameter must be present'
    CONFERENCE_LIST_MEMBERS_FAILED_TO_PARSE_RESULT = 'Conference ListMembers Failed to parse result'
    CONFERENCE_LIST_MEMBERS_FAILED_CONFERENCE_NOT_FOUND = 'Conference ListMembers Failed -- Conference not found'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConferenceListMembersResponse:
    r"""Response"""
    
    list_: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('List') }})
    r"""List of established conferences"""  
    message: ConferenceListMembersResponseMessageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message') }})
    r"""Response message"""  
    success: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Success') }})
    r"""Whether the request was successful or not"""  
    