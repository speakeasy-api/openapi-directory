"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldtypedefinition as shared_fieldtypedefinition
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InputFieldDefinitionSupportedValueTypesEnum(str, Enum):
    STATIC_VALUE = 'STATIC_VALUE'
    OBJECT_PROPERTY = 'OBJECT_PROPERTY'
    FIELD_DATA = 'FIELD_DATA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InputFieldDefinition:
    r"""Configuration for an input field on the custom action"""
    
    is_required: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isRequired') }})
    r"""Whether the field is required for the custom action to be valid"""  
    type_definition: shared_fieldtypedefinition.FieldTypeDefinition = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('typeDefinition') }})
    r"""The data type expected by an input field."""  
    supported_value_types: Optional[list[InputFieldDefinitionSupportedValueTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportedValueTypes'), 'exclude': lambda f: f is None }})
    r"""Controls what kind of input a customer can use to specify the field value. Must contain exactly one of `STATIC_VALUE` or `OBJECT_PROPERTY`. If `STATIC_VALUE`, the customer will be able to choose a value when configuring the custom action; if `OBJECT_PROPERTY`, the customer will be able to choose a property from the enrolled workflow object that the field value will be copied from. In the future we may support more than one input control type here."""  
    