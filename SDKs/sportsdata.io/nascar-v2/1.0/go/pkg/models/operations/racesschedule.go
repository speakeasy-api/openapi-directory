// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RacesScheduleFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type RacesScheduleFormatEnum string

const (
	RacesScheduleFormatEnumXML  RacesScheduleFormatEnum = "xml"
	RacesScheduleFormatEnumJSON RacesScheduleFormatEnum = "json"
)

func (e *RacesScheduleFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = RacesScheduleFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RacesScheduleFormatEnum: %s", s)
	}
}

type RacesScheduleRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format RacesScheduleFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season.
	// <br>Examples: <code>2015</code>, <code>2016</code>.
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type RacesScheduleResponse struct {
	ContentType string
	Races       []shared.Race
	StatusCode  int
	RawResponse *http.Response
}
