/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attributes } from "./attributes";
import { Data } from "./data";
import { TypeEnum } from "./typeenum";
import { Expose, Type } from "class-transformer";

export class UpdateCalendarEventRequestDataRelationshipsOwner extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => Data)
  data?: Data;
}

export class UpdateCalendarEventRequestDataRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => UpdateCalendarEventRequestDataRelationshipsOwner)
  owner?: UpdateCalendarEventRequestDataRelationshipsOwner;
}

export class UpdateCalendarEventRequestData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => Attributes)
  attributes?: Attributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => UpdateCalendarEventRequestDataRelationships)
  relationships?: UpdateCalendarEventRequestDataRelationships;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TypeEnum;
}

export class UpdateCalendarEventRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => UpdateCalendarEventRequestData)
  data?: UpdateCalendarEventRequestData;
}
