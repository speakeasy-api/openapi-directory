/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MySqlDatabase - Success
 */
public class MySqlDatabase {
    /**
     * The account id for the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_id")
    public Integer accountId;

    public MySqlDatabase withAccountId(Integer accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The actual size in MB for the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actual_size")
    public Integer actualSize;

    public MySqlDatabase withActualSize(Integer actualSize) {
        this.actualSize = actualSize;
        return this;
    }
    
    /**
     * Hostname
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;

    public MySqlDatabase withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * The maximim size in MB for the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_size")
    public Integer maxSize;

    public MySqlDatabase withMaxSize(Integer maxSize) {
        this.maxSize = maxSize;
        return this;
    }
    
    /**
     * Database name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public MySqlDatabase withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The number of users.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_count")
    public Integer userCount;

    public MySqlDatabase withUserCount(Integer userCount) {
        this.userCount = userCount;
        return this;
    }
    
    public MySqlDatabase(){}
}
