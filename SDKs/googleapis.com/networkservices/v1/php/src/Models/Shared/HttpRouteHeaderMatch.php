<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HttpRouteHeaderMatch - Specifies how to select a route rule based on HTTP request headers.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HttpRouteHeaderMatch
{
    /**
     * The value of the header should match exactly the content of exact_match.
     * 
     * @var ?string $exactMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('exactMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $exactMatch = null;
    
    /**
     * The name of the HTTP header to match against.
     * 
     * @var ?string $header
     */
	#[\JMS\Serializer\Annotation\SerializedName('header')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $header = null;
    
    /**
     * If specified, the match result will be inverted before checking. Default value is set to false.
     * 
     * @var ?bool $invertMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('invertMatch')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $invertMatch = null;
    
    /**
     * The value of the header must start with the contents of prefix_match.
     * 
     * @var ?string $prefixMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('prefixMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $prefixMatch = null;
    
    /**
     * A header with header_name must exist. The match takes place whether or not the header has a value.
     * 
     * @var ?bool $presentMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('presentMatch')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $presentMatch = null;
    
    /**
     * Represents an integer value range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HttpRouteHeaderMatchIntegerRange $rangeMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('rangeMatch')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HttpRouteHeaderMatchIntegerRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HttpRouteHeaderMatchIntegerRange $rangeMatch = null;
    
    /**
     * The value of the header must match the regular expression specified in regex_match. For regular expression grammar, please see: https://github.com/google/re2/wiki/Syntax
     * 
     * @var ?string $regexMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('regexMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $regexMatch = null;
    
    /**
     * The value of the header must end with the contents of suffix_match.
     * 
     * @var ?string $suffixMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('suffixMatch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $suffixMatch = null;
    
	public function __construct()
	{
		$this->exactMatch = null;
		$this->header = null;
		$this->invertMatch = null;
		$this->prefixMatch = null;
		$this->presentMatch = null;
		$this->rangeMatch = null;
		$this->regexMatch = null;
		$this->suffixMatch = null;
	}
}
