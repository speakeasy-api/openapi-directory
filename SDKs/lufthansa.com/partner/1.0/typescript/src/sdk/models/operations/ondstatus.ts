/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ONDStatusSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  auth: string;
}

export class ONDStatusRequest extends SpeakeasyBase {
  /**
   * Mandatory http header:  application/xml or application/json
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Carrier for which the OND will be retrieved (e.g. 'LH')
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=catalogues",
  })
  catalogues?: string;

  /**
   * Enter if newly added routes should be returned in the response. (Acceptable values are: "", "true", "false")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=new-routes",
  })
  newRoutes?: string;

  /**
   * Enter if old (deleted) routes should be returned in the response. (Acceptable values are: "", "true", "false")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=old-routes",
  })
  oldRoutes?: string;
}

export class ONDStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  ondStatus200ApplicationJSONString?: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
