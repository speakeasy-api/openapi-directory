"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FailoverInstanceRequestDataProtectionModeEnum(str, Enum):
    r"""Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default."""
    DATA_PROTECTION_MODE_UNSPECIFIED = 'DATA_PROTECTION_MODE_UNSPECIFIED'
    LIMITED_DATA_LOSS = 'LIMITED_DATA_LOSS'
    FORCE_DATA_LOSS = 'FORCE_DATA_LOSS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FailoverInstanceRequest:
    r"""Request for Failover."""
    
    data_protection_mode: Optional[FailoverInstanceRequestDataProtectionModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataProtectionMode'), 'exclude': lambda f: f is None }})
    r"""Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default."""  
    