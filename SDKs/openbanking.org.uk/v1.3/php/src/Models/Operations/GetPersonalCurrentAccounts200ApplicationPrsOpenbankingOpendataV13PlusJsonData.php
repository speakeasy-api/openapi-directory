<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonData - Personal Current Account
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonData
{
    /**
     * Ways to interact with the bank when managing account
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataAccessChannelsEnum> $accessChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccessChannels')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataAccessChannelsEnum>>')]
    public array $accessChannels;
    
    /**
     * Benefit
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefits $benefits
     */
	#[\JMS\Serializer\Annotation\SerializedName('Benefits')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefits')]
    public GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefits $benefits;
    
    /**
     * $caPricing
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCAPricing> $caPricing
     */
	#[\JMS\Serializer\Annotation\SerializedName('CAPricing')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCAPricing>')]
    public array $caPricing;
    
    /**
     * Optional additional notes to supplement the card details
     * 
     * @var ?string $cardNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('CardNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardNotes = null;
    
    /**
     * Card Type available
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCardTypeEnum> $cardType
     */
	#[\JMS\Serializer\Annotation\SerializedName('CardType')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCardTypeEnum>>')]
    public array $cardType;
    
    /**
     * The daily Limit that a customer can get via the ATM. This describes the default limit rather than the maximum
     * 
     * @var string $cardWithdrawalLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('CardWithdrawalLimit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardWithdrawalLimit;
    
    /**
     * Can a chequebook be issued
     * 
     * @var bool $chequeBookAvailable
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChequeBookAvailable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $chequeBookAvailable;
    
    /**
     * Does the card issued have contactless facility
     * 
     * @var bool $contactless
     */
	#[\JMS\Serializer\Annotation\SerializedName('Contactless')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $contactless;
    
    /**
     * Credit Interest
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditInterest $creditInterest
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditInterest')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditInterest')]
    public GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditInterest $creditInterest;
    
    /**
     * Indicates whether a credit check performed on an inquiry to open an account is submitted
     * 
     * @var bool $creditScoringPartOfAccountOpeningForGettingAnAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditScoringPartOfAccountOpeningForGettingAnAccount')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $creditScoringPartOfAccountOpeningForGettingAnAccount;
    
    /**
     * Indicates whether a credit check is used to check the address of a potential new account holder
     * 
     * @var ?bool $creditScoringPartOfAccountOpeningForIDVerification
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditScoringPartOfAccountOpeningForIDVerification')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $creditScoringPartOfAccountOpeningForIDVerification = null;
    
    /**
     * $creditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScoreEnum> $creditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScoreEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $creditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore = null;
    
    /**
     * Details on the specific credit scoring
     * 
     * @var ?array<string> $creditScoringPartOfAccountOpeningIDVerificationText
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditScoringPartOfAccountOpeningIDVerificationText')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $creditScoringPartOfAccountOpeningIDVerificationText = null;
    
    /**
     * Describes the type of credit scoring
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditScoringPartOfAccountOpeningIsAHardOrSoftCreditScoreEnum> $creditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditScoringPartOfAccountOpeningIsAHardOrSoftCreditScoreEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $creditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore = null;
    
    /**
     * Details on the specific credit scoring
     * 
     * @var ?string $creditScoringPartOfAccountOpeningText
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditScoringPartOfAccountOpeningText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditScoringPartOfAccountOpeningText = null;
    
    /**
     * Currency of the Account. Default to GBP at present
     * 
     * @var array<string> $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('Currency')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $currency;
    
    /**
     * Eligibility
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibility $eligibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('Eligibility')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibility')]
    public GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibility $eligibility;
    
    /**
     * $feature
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataFeature> $feature
     */
	#[\JMS\Serializer\Annotation\SerializedName('Feature')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataFeature>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $feature = null;
    
    /**
     * $feesAndCharges
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataFeesAndCharges> $feesAndCharges
     */
	#[\JMS\Serializer\Annotation\SerializedName('FeesAndCharges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataFeesAndCharges>')]
    public array $feesAndCharges;
    
    /**
     * Indicates that the account supports international payments
     * 
     * @var bool $internationalPaymentsSupported
     */
	#[\JMS\Serializer\Annotation\SerializedName('InternationalPaymentsSupported')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $internationalPaymentsSupported;
    
    /**
     * The maximum Relevant Charges that could accrue
     * 
     * @var ?string $maximumMonthlyCharge
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaximumMonthlyCharge')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maximumMonthlyCharge = null;
    
    /**
     * Mobile wallet supported by this product. A mobile wallet being any electronic device that allows an individual to make electronic commerce transactions
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataMobileWalletEnum> $mobileWallet
     */
	#[\JMS\Serializer\Annotation\SerializedName('MobileWallet')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataMobileWalletEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mobileWallet = null;
    
    /**
     * Organisation
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataOrganisation $organisation
     */
	#[\JMS\Serializer\Annotation\SerializedName('Organisation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataOrganisation')]
    public GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataOrganisation $organisation;
    
    /**
     * $overdraft
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataOverdraft> $overdraft
     */
	#[\JMS\Serializer\Annotation\SerializedName('Overdraft')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataOverdraft>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $overdraft = null;
    
    /**
     * Indicates whether an overdraft offered for this account
     * 
     * @var bool $overdraftOffered
     */
	#[\JMS\Serializer\Annotation\SerializedName('OverdraftOffered')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $overdraftOffered;
    
    /**
     * Description of the product provided by the parent organisation
     * 
     * @var string $productDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productDescription;
    
    /**
     * Identifier within the parent organisation for the product. Must be unique in the organisation
     * 
     * @var string $productIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductIdentifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productIdentifier;
    
    /**
     * The name of the product used for marketing purposes from a customer perspective. i.e. what the customer would recognise
     * 
     * @var ?string $productName
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $productName = null;
    
    /**
     * $productSegment
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataProductSegmentEnum> $productSegment
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductSegment')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataProductSegmentEnum>>')]
    public array $productSegment;
    
    /**
     * Descriptive code for the product category
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataProductTypeEnum $productType
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataProductTypeEnum>')]
    public GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataProductTypeEnum $productType;
    
    /**
     * URL provided by the organisation which redirects to the product (on live products only). There might be more than one product at a given URL
     * 
     * @var array<string> $productURL
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductURL')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $productURL;
    
    /**
     * URL provided by the parent organisation which redirects to the current T&Cs
     * 
     * @var array<string> $tsandCs
     */
	#[\JMS\Serializer\Annotation\SerializedName('TsandCs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $tsandCs;
    
	public function __construct()
	{
		$this->accessChannels = [];
		$this->benefits = new \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefits();
		$this->caPricing = [];
		$this->cardNotes = null;
		$this->cardType = [];
		$this->cardWithdrawalLimit = "";
		$this->chequeBookAvailable = false;
		$this->contactless = false;
		$this->creditInterest = new \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataCreditInterest();
		$this->creditScoringPartOfAccountOpeningForGettingAnAccount = false;
		$this->creditScoringPartOfAccountOpeningForIDVerification = null;
		$this->creditScoringPartOfAccountOpeningIDVerificationIsAHardOrSoftCreditScore = null;
		$this->creditScoringPartOfAccountOpeningIDVerificationText = null;
		$this->creditScoringPartOfAccountOpeningIsAHardOrSoftCreditScore = null;
		$this->creditScoringPartOfAccountOpeningText = null;
		$this->currency = [];
		$this->eligibility = new \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataEligibility();
		$this->feature = null;
		$this->feesAndCharges = [];
		$this->internationalPaymentsSupported = false;
		$this->maximumMonthlyCharge = null;
		$this->mobileWallet = null;
		$this->organisation = new \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataOrganisation();
		$this->overdraft = null;
		$this->overdraftOffered = false;
		$this->productDescription = "";
		$this->productIdentifier = "";
		$this->productName = null;
		$this->productSegment = [];
		$this->productType = \OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataProductTypeEnum::PCA;
		$this->productURL = [];
		$this->tsandCs = [];
	}
}
