/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostApiV1ReportsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

export class PostApiV1ReportsRequestBody extends SpeakeasyBase {
  /**
   * ID of the account to report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: string;

  /**
   * Reason for the report (default max 1000 characters)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * If the account is remote, should the report be forwarded to the remote admin?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "forward" })
  forward?: boolean;

  /**
   * Array of Statuses to attach to the report, for context
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_ids" })
  statusIds?: string[];
}

export class PostApiV1ReportsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing Authorization header
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Successfully reported.
   */
  @SpeakeasyMetadata()
  report?: shared.Report;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
