/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GameSessionConnectionInfo } from "./gamesessionconnectioninfo";
import { MatchmakingConfigurationStatusEnum } from "./matchmakingconfigurationstatusenum";
import { Player } from "./player";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Ticket generated to track the progress of a matchmaking request. Each ticket is uniquely identified by a ticket ID, supplied by the requester, when creating a matchmaking request.
 */
export class MatchmakingTicket extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationArn" })
  configurationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationName" })
  configurationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EstimatedWaitTime" })
  estimatedWaitTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "GameSessionConnectionInfo" })
  @Type(() => GameSessionConnectionInfo)
  gameSessionConnectionInfo?: GameSessionConnectionInfo;

  @SpeakeasyMetadata({ elemType: Player })
  @Expose({ name: "Players" })
  @Type(() => Player)
  players?: Player[];

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: MatchmakingConfigurationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TicketId" })
  ticketId?: string;
}
