"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromeManagementV1ChromeAppRequest:
    r"""Details of an app installation request."""
    
    app_details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appDetails'), 'exclude': lambda f: f is None }})
    r"""Output only. Format: app_details=customers/{customer_id}/apps/chrome/{app_id}"""  
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appId'), 'exclude': lambda f: f is None }})
    r"""Output only. Unique store identifier for the app. Example: \\"gmbmikajjgmnabiglmofipeabaddhgne\\" for the Save to Google Drive Chrome extension."""  
    detail_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detailUri'), 'exclude': lambda f: f is None }})
    r"""Output only. The uri for the detail page of the item."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Output only. App's display name."""  
    icon_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iconUri'), 'exclude': lambda f: f is None }})
    r"""Output only. A link to an image that can be used as an icon for the product."""  
    latest_request_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latestRequestTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp of the most recently made request for this app."""  
    request_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestCount'), 'exclude': lambda f: f is None }})
    r"""Output only. Total count of requests for this app."""  
    