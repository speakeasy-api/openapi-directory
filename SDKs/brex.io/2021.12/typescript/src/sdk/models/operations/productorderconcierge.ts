/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class ProductOrderConciergeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=user_key",
  })
  userKey: string;
}

/**
 * Parameters for the concierge order
 */
export class ProductOrderConciergeRequestBody extends SpeakeasyBase {
  /**
   * Name of the company for which a document should be ordered. (Not required if subjectId is given)
   */
  @SpeakeasyMetadata({ data: "form, name=companyName" })
  companyName?: string;

  /**
   * Contact E-Mail, will be contacted if concierge costs are exceeding the threshhold configured on your plan
   */
  @SpeakeasyMetadata({ data: "form, name=contactEmail" })
  contactEmail?: string;

  /**
   * Contact phone, will be contacted if concierge costs are exceeding the threshhold configured on your plan
   */
  @SpeakeasyMetadata({ data: "form, name=contactPhone" })
  contactPhone?: string;

  /**
   * If the concierge cost should require additional confirmation if a threshold is reached (configured on your plan)
   */
  @SpeakeasyMetadata({ data: "form, name=costConfirmation" })
  costConfirmation?: boolean;

  /**
   * Two letter ISO code of the country of the company
   */
  @SpeakeasyMetadata({ data: "form, name=country" })
  country?: string;

  /**
   * If you want financial data of the company to be retrieved
   */
  @SpeakeasyMetadata({ data: "form, name=financialData" })
  financialData?: boolean;

  /**
   * If you want historical data of the company to be retrieved
   */
  @SpeakeasyMetadata({ data: "form, name=historicInformation" })
  historicInformation?: boolean;

  /**
   * Requirements on what document or information should be provided. Please be very precise
   */
  @SpeakeasyMetadata({ data: "form, name=informationRequirements" })
  informationRequirements?: string;

  /**
   * If the companies residency should be investigated
   */
  @SpeakeasyMetadata({ data: "form, name=locationInvestigation" })
  locationInvestigation?: boolean;

  /**
   * Priority of order: standard/express are allowed
   */
  @SpeakeasyMetadata({ data: "form, name=priority" })
  priority?: string;

  /**
   * If you want register data of the company to be retrieved
   */
  @SpeakeasyMetadata({ data: "form, name=registerData" })
  registerData?: boolean;

  /**
   * Registration number of the company for which a document should be ordered. (Not required if subjectId is given)
   */
  @SpeakeasyMetadata({ data: "form, name=registerNumber" })
  registerNumber?: string;

  /**
   * Kompanyid of the company you want to place the order for
   */
  @SpeakeasyMetadata({ data: "form, name=subjectId" })
  subjectId?: string;
}

/**
 * Detailed information about the error
 */
export class ProductOrderConciergeDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fault" })
  fault?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag: string;
}

/**
 * Product order details
 */
export class ProductOrderConcierge200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  identity: string;

  @SpeakeasyMetadata()
  @Expose({ name: "option" })
  option: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ordered" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  ordered: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner: string;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectId" })
  subjectId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectValue" })
  subjectValue: string;
}

export class ProductOrderConciergeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Product order details
   */
  @SpeakeasyMetadata()
  productOrderConcierge200ApplicationJSONObject?: ProductOrderConcierge200ApplicationJSON;

  /**
   * Detailed information about the error
   */
  @SpeakeasyMetadata()
  productOrderConciergeDefaultApplicationJSONObject?: ProductOrderConciergeDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
