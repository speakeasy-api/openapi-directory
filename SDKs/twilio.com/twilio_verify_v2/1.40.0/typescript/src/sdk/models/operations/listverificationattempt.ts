/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListVerificationAttemptServerList = [
  "https://verify.twilio.com",
] as const;

export class ListVerificationAttemptSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListVerificationAttemptRequest extends SpeakeasyBase {
  /**
   * Filter used to query Verification Attempts by communication channel. Valid values are `SMS` and `CALL`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Channel",
  })
  channel?: shared.VerificationAttemptEnumChannelsEnum;

  /**
   * Destination of a verification. It is phone number in E.164 format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ChannelData.To",
  })
  channelDataTo?: string;

  /**
   * Filter used to query Verification Attempts sent to the specified destination country.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Country",
  })
  country?: string;

  /**
   * Datetime filter used to query Verification Attempts created after this datetime. Given as GMT in RFC 2822 format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedAfter?: Date;

  /**
   * Datetime filter used to query Verification Attempts created before this datetime. Given as GMT in RFC 2822 format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedBefore?: Date;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * Filter used to query Verification Attempts by conversion status. Valid values are `UNCONVERTED`, for attempts that were not converted, and `CONVERTED`, for attempts that were confirmed.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Status",
  })
  status?: shared.VerificationAttemptEnumConversionStatusEnum;

  /**
   * Filter used to return all the Verification Attempts of a single verification. Only attempts of the provided verification SID will be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VerificationSid",
  })
  verificationSid?: string;

  /**
   * Filter used to query Verification Attempts by verify service. Only attempts of the provided SID will be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VerifyServiceSid",
  })
  verifyServiceSid?: string;
}

export class ListVerificationAttemptListVerificationAttemptResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListVerificationAttemptListVerificationAttemptResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.VerifyV2VerificationAttempt })
  @Expose({ name: "attempts" })
  @Type(() => shared.VerifyV2VerificationAttempt)
  attempts?: shared.VerifyV2VerificationAttempt[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListVerificationAttemptListVerificationAttemptResponseMeta)
  meta?: ListVerificationAttemptListVerificationAttemptResponseMeta;
}

export class ListVerificationAttemptResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listVerificationAttemptResponse?: ListVerificationAttemptListVerificationAttemptResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
