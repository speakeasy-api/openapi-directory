// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkAlertsHistoryRequest struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	NetworkID    string  `pathParam:"style=simple,explode=false,name=networkId"`
	// The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
}

// GetNetworkAlertsHistory200ApplicationJSONDestinationsEmail - email destinations for this alert
type GetNetworkAlertsHistory200ApplicationJSONDestinationsEmail struct {
	// time when the alert was sent to the user(s) for this channel
	SentAt *string `json:"sentAt,omitempty"`
}

// GetNetworkAlertsHistory200ApplicationJSONDestinationsPush - push destinations for this alert
type GetNetworkAlertsHistory200ApplicationJSONDestinationsPush struct {
	// time when the alert was sent to the user(s) for this channel
	SentAt *string `json:"sentAt,omitempty"`
}

// GetNetworkAlertsHistory200ApplicationJSONDestinationsSms - sms destinations for this alert
type GetNetworkAlertsHistory200ApplicationJSONDestinationsSms struct {
	// time when the alert was sent to the user(s) for this channel
	SentAt *string `json:"sentAt,omitempty"`
}

// GetNetworkAlertsHistory200ApplicationJSONDestinationsWebhook - webhook destinations for this alert
type GetNetworkAlertsHistory200ApplicationJSONDestinationsWebhook struct {
	// time when the alert was sent to the user(s) for this channel
	SentAt *string `json:"sentAt,omitempty"`
}

// GetNetworkAlertsHistory200ApplicationJSONDestinations - the destinations this alert is configured to be delivered to
type GetNetworkAlertsHistory200ApplicationJSONDestinations struct {
	// email destinations for this alert
	Email *GetNetworkAlertsHistory200ApplicationJSONDestinationsEmail `json:"email,omitempty"`
	// push destinations for this alert
	Push *GetNetworkAlertsHistory200ApplicationJSONDestinationsPush `json:"push,omitempty"`
	// sms destinations for this alert
	Sms *GetNetworkAlertsHistory200ApplicationJSONDestinationsSms `json:"sms,omitempty"`
	// webhook destinations for this alert
	Webhook *GetNetworkAlertsHistory200ApplicationJSONDestinationsWebhook `json:"webhook,omitempty"`
}

// GetNetworkAlertsHistory200ApplicationJSONDevice - info related to the device that caused the alert
type GetNetworkAlertsHistory200ApplicationJSONDevice struct {
	// device serial
	Serial *string `json:"serial,omitempty"`
}

type GetNetworkAlertsHistory200ApplicationJSON struct {
	// relevant data about the event that caused the alert
	AlertData map[string]interface{} `json:"alertData,omitempty"`
	// user friendly alert type
	AlertType *string `json:"alertType,omitempty"`
	// type of alert
	AlertTypeID *string `json:"alertTypeId,omitempty"`
	// the destinations this alert is configured to be delivered to
	Destinations *GetNetworkAlertsHistory200ApplicationJSONDestinations `json:"destinations,omitempty"`
	// info related to the device that caused the alert
	Device *GetNetworkAlertsHistory200ApplicationJSONDevice `json:"device,omitempty"`
	// time when the event occurred
	OccurredAt *string `json:"occurredAt,omitempty"`
}

type GetNetworkAlertsHistoryResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkAlertsHistory200ApplicationJSONObjects []GetNetworkAlertsHistory200ApplicationJSON
}
