"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import image as shared_image
from ..shared import marketpricedetail as shared_marketpricedetail
from ..shared import ratingaspect as shared_ratingaspect
from typing import Optional


@dataclasses.dataclass
class MerchandisedProduct:
    r"""The type that defines the fields for product information, including price, condition, ratings, etc."""
    
    average_rating: Optional[str] = dataclasses.field(default=None)
    r"""The average rating for the product based on eBay user ratings."""  
    epid: Optional[str] = dataclasses.field(default=None)
    r"""The eBay product identifier of a product from the eBay product catalog. You can use this value in the Browse API <b>search</b> method to retrieve items for this product."""  
    image: Optional[shared_image.Image] = dataclasses.field(default=None)
    r"""Type the defines the details of an image, such as size and URL. Currently only <b> imageUrl</b> is getting populated. The <b> height</b> and <b> width</b> were added for future use."""  
    market_price_details: Optional[list[shared_marketpricedetail.MarketPriceDetail]] = dataclasses.field(default=None)
    r"""An array of containers for the product market price details, such as condition and market price."""  
    rating_aspects: Optional[list[shared_ratingaspect.RatingAspect]] = dataclasses.field(default=None)
    r"""An array of containers for ratings of the product aspects, such as \\"Is it a good value\\"."""  
    rating_count: Optional[int] = dataclasses.field(default=None)
    r"""The total number of eBay users that rated the product."""  
    review_count: Optional[int] = dataclasses.field(default=None)
    r"""The total number of eBay users that wrote a review for the product."""  
    title: Optional[str] = dataclasses.field(default=None)
    r"""The title of the product."""  
    