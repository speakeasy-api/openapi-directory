/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Configuration - &lt;note&gt; &lt;p&gt;Amazon EMR releases 4.x or later.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;An optional configuration specification to be used when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file. For more information, see &lt;a href="https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html"&gt;Configuring Applications&lt;/a&gt;.&lt;/p&gt;
 */
public class Configuration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Classification")
    public String classification;

    public Configuration withClassification(String classification) {
        this.classification = classification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Configurations")
    public Configuration[] configurations;

    public Configuration withConfigurations(Configuration[] configurations) {
        this.configurations = configurations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Properties")
    public java.util.Map<String, String> properties;

    public Configuration withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    public Configuration(){}
}
