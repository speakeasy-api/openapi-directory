// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LogDeliveryConfigurationStatusEnum string

const (
	LogDeliveryConfigurationStatusEnumActive    LogDeliveryConfigurationStatusEnum = "active"
	LogDeliveryConfigurationStatusEnumEnabling  LogDeliveryConfigurationStatusEnum = "enabling"
	LogDeliveryConfigurationStatusEnumModifying LogDeliveryConfigurationStatusEnum = "modifying"
	LogDeliveryConfigurationStatusEnumDisabling LogDeliveryConfigurationStatusEnum = "disabling"
	LogDeliveryConfigurationStatusEnumError     LogDeliveryConfigurationStatusEnum = "error"
)

func (e *LogDeliveryConfigurationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "enabling":
		fallthrough
	case "modifying":
		fallthrough
	case "disabling":
		fallthrough
	case "error":
		*e = LogDeliveryConfigurationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LogDeliveryConfigurationStatusEnum: %s", s)
	}
}
