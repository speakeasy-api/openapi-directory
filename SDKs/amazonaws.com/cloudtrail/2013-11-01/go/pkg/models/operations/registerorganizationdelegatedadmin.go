// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterOrganizationDelegatedAdminXAmzTargetEnum
type RegisterOrganizationDelegatedAdminXAmzTargetEnum string

const (
	RegisterOrganizationDelegatedAdminXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101RegisterOrganizationDelegatedAdmin RegisterOrganizationDelegatedAdminXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RegisterOrganizationDelegatedAdmin"
)

func (e RegisterOrganizationDelegatedAdminXAmzTargetEnum) ToPointer() *RegisterOrganizationDelegatedAdminXAmzTargetEnum {
	return &e
}

func (e *RegisterOrganizationDelegatedAdminXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RegisterOrganizationDelegatedAdmin":
		*e = RegisterOrganizationDelegatedAdminXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterOrganizationDelegatedAdminXAmzTargetEnum: %v", v)
	}
}

type RegisterOrganizationDelegatedAdminRequest struct {
	RegisterOrganizationDelegatedAdminRequest shared.RegisterOrganizationDelegatedAdminRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                            *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                  *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                         *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                RegisterOrganizationDelegatedAdminXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterOrganizationDelegatedAdminResponse struct {
	// AccountNotFoundException
	AccountNotFoundException interface{}
	// AccountRegisteredException
	AccountRegisteredException interface{}
	// CannotDelegateManagementAccountException
	CannotDelegateManagementAccountException interface{}
	// CloudTrailAccessNotEnabledException
	CloudTrailAccessNotEnabledException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// DelegatedAdminAccountLimitExceededException
	DelegatedAdminAccountLimitExceededException interface{}
	// InsufficientDependencyServiceAccessPermissionException
	InsufficientDependencyServiceAccessPermissionException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotOrganizationManagementAccountException
	NotOrganizationManagementAccountException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// OrganizationNotInAllFeaturesModeException
	OrganizationNotInAllFeaturesModeException interface{}
	// OrganizationsNotInUseException
	OrganizationsNotInUseException interface{}
	// Success
	RegisterOrganizationDelegatedAdminResponse map[string]interface{}
	StatusCode                                 int
	RawResponse                                *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
