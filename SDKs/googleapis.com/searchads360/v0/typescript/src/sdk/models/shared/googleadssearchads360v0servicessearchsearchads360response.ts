/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAdsSearchads360V0ServicesCustomColumnHeader } from "./googleadssearchads360v0servicescustomcolumnheader";
import { GoogleAdsSearchads360V0ServicesSearchAds360Row } from "./googleadssearchads360v0servicessearchads360row";
import { Expose, Type } from "class-transformer";

/**
 * Response message for SearchAds360Service.Search.
 */
export class GoogleAdsSearchads360V0ServicesSearchSearchAds360Response extends SpeakeasyBase {
  /**
   * The headers of the custom columns in the results.
   */
  @SpeakeasyMetadata({
    elemType: GoogleAdsSearchads360V0ServicesCustomColumnHeader,
  })
  @Expose({ name: "customColumnHeaders" })
  @Type(() => GoogleAdsSearchads360V0ServicesCustomColumnHeader)
  customColumnHeaders?: GoogleAdsSearchads360V0ServicesCustomColumnHeader[];

  /**
   * FieldMask that represents what fields were requested by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldMask" })
  fieldMask?: string;

  /**
   * Pagination token used to retrieve the next page of results. Pass the content of this string as the `page_token` attribute of the next request. `next_page_token` is not returned for the last page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The list of rows that matched the query.
   */
  @SpeakeasyMetadata({
    elemType: GoogleAdsSearchads360V0ServicesSearchAds360Row,
  })
  @Expose({ name: "results" })
  @Type(() => GoogleAdsSearchads360V0ServicesSearchAds360Row)
  results?: GoogleAdsSearchads360V0ServicesSearchAds360Row[];

  /**
   * A returned row from the query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "summaryRow" })
  @Type(() => GoogleAdsSearchads360V0ServicesSearchAds360Row)
  summaryRow?: GoogleAdsSearchads360V0ServicesSearchAds360Row;

  /**
   * Total number of results that match the query ignoring the LIMIT clause.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalResultsCount" })
  totalResultsCount?: string;
}
