"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsAttachmentTypeEnum(str, Enum):
    r"""The type of attachment used to provide connectivity between the Amazon Web Services Verified Access endpoint and the application."""
    VPC = 'vpc'

class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsEndpointTypeEnum(str, Enum):
    r"""The type of Amazon Web Services Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified."""
    LOAD_BALANCER = 'load-balancer'
    NETWORK_INTERFACE = 'network-interface'

class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsLoadBalancerOptionsProtocolEnum(str, Enum):
    r"""The IP protocol."""
    HTTP = 'http'
    HTTPS = 'https'


@dataclasses.dataclass
class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsLoadBalancerOptions:
    r"""The load balancer details if creating the Amazon Web Services Verified Access endpoint as <code>load-balancer</code>type."""
    
    load_balancer_arn: Optional[str] = dataclasses.field(default=None)  
    port: Optional[int] = dataclasses.field(default=None)  
    protocol: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsLoadBalancerOptionsProtocolEnum] = dataclasses.field(default=None)  
    subnet_ids: Optional[list[str]] = dataclasses.field(default=None)  
    
class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsNetworkInterfaceOptionsProtocolEnum(str, Enum):
    r"""The IP protocol."""
    HTTP = 'http'
    HTTPS = 'https'


@dataclasses.dataclass
class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsNetworkInterfaceOptions:
    r"""The options for network-interface type endpoint."""
    
    network_interface_id: Optional[str] = dataclasses.field(default=None)  
    port: Optional[int] = dataclasses.field(default=None)  
    protocol: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsNetworkInterfaceOptionsProtocolEnum] = dataclasses.field(default=None)  
    
class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsStatusCodeEnum(str, Enum):
    r"""The status code of the Verified Access endpoint."""
    PENDING = 'pending'
    ACTIVE = 'active'
    UPDATING = 'updating'
    DELETING = 'deleting'
    DELETED = 'deleted'


@dataclasses.dataclass
class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsStatus:
    r"""The endpoint status."""
    
    code: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsStatusCodeEnum] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpoints:
    r"""An Amazon Web Services Verified Access endpoint specifies the application that Amazon Web Services Verified Access provides access to. It must be attached to an Amazon Web Services Verified Access group. An Amazon Web Services Verified Access endpoint must also have an attached access policy before you attached it to a group."""
    
    application_domain: Optional[str] = dataclasses.field(default=None)  
    attachment_type: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsAttachmentTypeEnum] = dataclasses.field(default=None)  
    creation_time: Optional[str] = dataclasses.field(default=None)  
    deletion_time: Optional[str] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    device_validation_domain: Optional[str] = dataclasses.field(default=None)  
    domain_certificate_arn: Optional[str] = dataclasses.field(default=None)  
    endpoint_domain: Optional[str] = dataclasses.field(default=None)  
    endpoint_type: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsEndpointTypeEnum] = dataclasses.field(default=None)  
    last_updated_time: Optional[str] = dataclasses.field(default=None)  
    load_balancer_options: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsLoadBalancerOptions] = dataclasses.field(default=None)  
    network_interface_options: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsNetworkInterfaceOptions] = dataclasses.field(default=None)  
    security_group_ids: Optional[list[str]] = dataclasses.field(default=None)  
    status: Optional[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsStatus] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpointsTags]] = dataclasses.field(default=None)  
    verified_access_endpoint_id: Optional[str] = dataclasses.field(default=None)  
    verified_access_group_id: Optional[str] = dataclasses.field(default=None)  
    verified_access_instance_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeVerifiedAccessEndpointsResult:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None)  
    verified_access_endpoints: Optional[list[DescribeVerifiedAccessEndpointsResultVerifiedAccessEndpoints]] = dataclasses.field(default=None)  
    