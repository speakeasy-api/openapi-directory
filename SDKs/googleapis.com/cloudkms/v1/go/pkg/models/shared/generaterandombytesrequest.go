// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GenerateRandomBytesRequestProtectionLevelEnum - The ProtectionLevel to use when generating the random data. Currently, only HSM protection level is supported.
type GenerateRandomBytesRequestProtectionLevelEnum string

const (
	GenerateRandomBytesRequestProtectionLevelEnumProtectionLevelUnspecified GenerateRandomBytesRequestProtectionLevelEnum = "PROTECTION_LEVEL_UNSPECIFIED"
	GenerateRandomBytesRequestProtectionLevelEnumSoftware                   GenerateRandomBytesRequestProtectionLevelEnum = "SOFTWARE"
	GenerateRandomBytesRequestProtectionLevelEnumHsm                        GenerateRandomBytesRequestProtectionLevelEnum = "HSM"
	GenerateRandomBytesRequestProtectionLevelEnumExternal                   GenerateRandomBytesRequestProtectionLevelEnum = "EXTERNAL"
	GenerateRandomBytesRequestProtectionLevelEnumExternalVpc                GenerateRandomBytesRequestProtectionLevelEnum = "EXTERNAL_VPC"
)

func (e GenerateRandomBytesRequestProtectionLevelEnum) ToPointer() *GenerateRandomBytesRequestProtectionLevelEnum {
	return &e
}

func (e *GenerateRandomBytesRequestProtectionLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROTECTION_LEVEL_UNSPECIFIED":
		fallthrough
	case "SOFTWARE":
		fallthrough
	case "HSM":
		fallthrough
	case "EXTERNAL":
		fallthrough
	case "EXTERNAL_VPC":
		*e = GenerateRandomBytesRequestProtectionLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GenerateRandomBytesRequestProtectionLevelEnum: %v", v)
	}
}

// GenerateRandomBytesRequest - Request message for KeyManagementService.GenerateRandomBytes.
type GenerateRandomBytesRequest struct {
	// The length in bytes of the amount of randomness to retrieve. Minimum 8 bytes, maximum 1024 bytes.
	LengthBytes *int `json:"lengthBytes,omitempty"`
	// The ProtectionLevel to use when generating the random data. Currently, only HSM protection level is supported.
	ProtectionLevel *GenerateRandomBytesRequestProtectionLevelEnum `json:"protectionLevel,omitempty"`
}
