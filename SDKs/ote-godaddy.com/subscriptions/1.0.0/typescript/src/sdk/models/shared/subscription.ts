/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SubscriptionAddon } from "./subscriptionaddon";
import { SubscriptionBilling } from "./subscriptionbilling";
import { SubscriptionProduct } from "./subscriptionproduct";
import { SubscriptionRelations } from "./subscriptionrelations";
import { Expose, Type } from "class-transformer";

/**
 * Whether the Subscription is active or the specific non-active state
 */
export enum SubscriptionStatusEnum {
  Active = "ACTIVE",
  Pending = "PENDING",
  Canceled = "CANCELED",
}

/**
 * Request was successful
 */
export class Subscription extends SpeakeasyBase {
  /**
   * An array of additional products that have been purchased to augment this Subscription
   */
  @SpeakeasyMetadata({ elemType: SubscriptionAddon })
  @Expose({ name: "addons" })
  @Type(() => SubscriptionAddon)
  addons?: SubscriptionAddon[];

  @SpeakeasyMetadata()
  @Expose({ name: "billing" })
  @Type(() => SubscriptionBilling)
  billing: SubscriptionBilling;

  /**
   * Whether or not the Subscription is allowed to be canceled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancelable" })
  cancelable?: boolean;

  /**
   * When the Subscription was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt: string;

  /**
   * When the Subscription will expire
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiresAt" })
  expiresAt?: string;

  /**
   * A human readable description of this Subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * The url to use or manage this Subscription's active product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "launchUrl" })
  launchUrl?: string;

  /**
   * Unique identifier of the payment profile that will be used to automatically renew this Subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentProfileId" })
  paymentProfileId?: number;

  /**
   * Whether the renewal price will be based from the list price or a locked-in price for this shopper
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceLocked" })
  priceLocked: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "product" })
  @Type(() => SubscriptionProduct)
  product: SubscriptionProduct;

  @SpeakeasyMetadata()
  @Expose({ name: "relations" })
  @Type(() => SubscriptionRelations)
  relations?: SubscriptionRelations;

  /**
   * Whether or not the Subscription is set to be automatically renewed via the billing agent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renewAuto" })
  renewAuto: boolean;

  /**
   * Whether or not the Subscription is allowed to be renewed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renewable" })
  renewable: boolean;

  /**
   * Whether the Subscription is active or the specific non-active state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: SubscriptionStatusEnum;

  /**
   * Unique identifier of the Subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionId" })
  subscriptionId: string;

  /**
   * Whether or not the Subscription is allowed to be upgraded
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upgradeable" })
  upgradeable: boolean;
}
