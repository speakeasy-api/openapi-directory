/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Blueprint - Describes a blueprint (a virtual private server image).
 */
public class Blueprint {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appCategory")
    public AppCategoryEnum appCategory;

    public Blueprint withAppCategory(AppCategoryEnum appCategory) {
        this.appCategory = appCategory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blueprintId")
    public String blueprintId;

    public Blueprint withBlueprintId(String blueprintId) {
        this.blueprintId = blueprintId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Blueprint withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public String group;

    public Blueprint withGroup(String group) {
        this.group = group;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isActive")
    public Boolean isActive;

    public Blueprint withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseUrl")
    public String licenseUrl;

    public Blueprint withLicenseUrl(String licenseUrl) {
        this.licenseUrl = licenseUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minPower")
    public Long minPower;

    public Blueprint withMinPower(Long minPower) {
        this.minPower = minPower;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Blueprint withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public InstancePlatformEnum platform;

    public Blueprint withPlatform(InstancePlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productUrl")
    public String productUrl;

    public Blueprint withProductUrl(String productUrl) {
        this.productUrl = productUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public BlueprintTypeEnum type;

    public Blueprint withType(BlueprintTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public Blueprint withVersion(String version) {
        this.version = version;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionCode")
    public String versionCode;

    public Blueprint withVersionCode(String versionCode) {
        this.versionCode = versionCode;
        return this;
    }
    
    public Blueprint(){}
}
