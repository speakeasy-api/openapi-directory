<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BusinessCardRecognitionResult - Result of recognizing a business card, to extract the key information from the business card
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BusinessCardRecognitionResult
{
    /**
     * The address printed on the business card (if included on the business card)
     * 
     * @var ?string $addressString
     */
	#[\JMS\Serializer\Annotation\SerializedName('AddressString')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressString = null;
    
    /**
     * The name of the business printed on the business card (if included on the business card)
     * 
     * @var ?string $businessName
     */
	#[\JMS\Serializer\Annotation\SerializedName('BusinessName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $businessName = null;
    
    /**
     * The email address printed on the business card (if included on the business card)
     * 
     * @var ?string $emailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('EmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailAddress = null;
    
    /**
     * The name of the person printed on the business card (if included on the business card)
     * 
     * @var ?string $personName
     */
	#[\JMS\Serializer\Annotation\SerializedName('PersonName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $personName = null;
    
    /**
     * The title of the person printed on the business card (if included on the business card)
     * 
     * @var ?string $personTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('PersonTitle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $personTitle = null;
    
    /**
     * The phone number printed on the business card (if included on the business card)
     * 
     * @var ?string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('PhoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneNumber = null;
    
    /**
     * True if the operation was successful, false otherwise
     * 
     * @var ?bool $successful
     */
	#[\JMS\Serializer\Annotation\SerializedName('Successful')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $successful = null;
    
    /**
     * The date and time printed on the business card (if included on the business card)
     * 
     * @var ?\DateTime $timestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('Timestamp')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timestamp = null;
    
	public function __construct()
	{
		$this->addressString = null;
		$this->businessName = null;
		$this->emailAddress = null;
		$this->personName = null;
		$this->personTitle = null;
		$this->phoneNumber = null;
		$this->successful = null;
		$this->timestamp = null;
	}
}
