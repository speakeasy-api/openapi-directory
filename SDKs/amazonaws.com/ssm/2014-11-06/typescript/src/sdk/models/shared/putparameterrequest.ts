/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParameterTierEnum } from "./parametertierenum";
import { ParameterTypeEnum } from "./parametertypeenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class PutParameterRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowedPattern" })
  allowedPattern?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataType" })
  dataType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyId" })
  keyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Overwrite" })
  overwrite?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Policies" })
  policies?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "Tier" })
  tier?: ParameterTierEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: ParameterTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value: string;
}
