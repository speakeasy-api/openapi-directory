// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetContributorCollectionItemsSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// GetContributorCollectionItemsSortEnum - Sort order
type GetContributorCollectionItemsSortEnum string

const (
	GetContributorCollectionItemsSortEnumNewest GetContributorCollectionItemsSortEnum = "newest"
	GetContributorCollectionItemsSortEnumOldest GetContributorCollectionItemsSortEnum = "oldest"
)

func (e GetContributorCollectionItemsSortEnum) ToPointer() *GetContributorCollectionItemsSortEnum {
	return &e
}

func (e *GetContributorCollectionItemsSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "newest":
		fallthrough
	case "oldest":
		*e = GetContributorCollectionItemsSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetContributorCollectionItemsSortEnum: %v", v)
	}
}

type GetContributorCollectionItemsRequest struct {
	// Contributor ID
	ContributorID string `pathParam:"style=simple,explode=false,name=contributor_id"`
	// Collection ID that belongs to the contributor
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Sort order
	Sort *GetContributorCollectionItemsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetContributorCollectionItemsResponse struct {
	// OK
	CollectionItemDataList *shared.CollectionItemDataList
	ContentType            string
	StatusCode             int
	RawResponse            *http.Response
}
