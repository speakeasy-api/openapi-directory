/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TargetInput - A `Target` resource in the Google Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.
 */
public class TargetInput {
    /**
     * Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public TargetInput withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Information specifying an Anthos Cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("anthosCluster")
    public AnthosCluster anthosCluster;

    public TargetInput withAnthosCluster(AnthosCluster anthosCluster) {
        this.anthosCluster = anthosCluster;
        return this;
    }
    
    /**
     * Optional. Description of the `Target`. Max length is 255 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public TargetInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public TargetInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionConfigs")
    public ExecutionConfig[] executionConfigs;

    public TargetInput withExecutionConfigs(ExecutionConfig[] executionConfigs) {
        this.executionConfigs = executionConfigs;
        return this;
    }
    
    /**
     * Information specifying a GKE Cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gke")
    public GkeCluster gke;

    public TargetInput withGke(GkeCluster gke) {
        this.gke = gke;
        return this;
    }
    
    /**
     * Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public TargetInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Information specifying a multiTarget.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multiTarget")
    public MultiTarget multiTarget;

    public TargetInput withMultiTarget(MultiTarget multiTarget) {
        this.multiTarget = multiTarget;
        return this;
    }
    
    /**
     * Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public TargetInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. Whether or not the `Target` requires approval.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requireApproval")
    public Boolean requireApproval;

    public TargetInput withRequireApproval(Boolean requireApproval) {
        this.requireApproval = requireApproval;
        return this;
    }
    
    /**
     * Information specifying where to deploy a Cloud Run Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("run")
    public CloudRunLocation run;

    public TargetInput withRun(CloudRunLocation run) {
        this.run = run;
        return this;
    }
    
    public TargetInput(){}
}
