// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetContentSourceSectionJSONSourceEnum - Limits the set of items by originating source
//
// all = items from both The New York Times and The International New York Times
// nyt = New York Times items only
// iht = International New York Times items only
type GetContentSourceSectionJSONSourceEnum string

const (
	GetContentSourceSectionJSONSourceEnumAll GetContentSourceSectionJSONSourceEnum = "all"
	GetContentSourceSectionJSONSourceEnumNyt GetContentSourceSectionJSONSourceEnum = "nyt"
	GetContentSourceSectionJSONSourceEnumIht GetContentSourceSectionJSONSourceEnum = "iht"
)

func (e *GetContentSourceSectionJSONSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "nyt":
		fallthrough
	case "iht":
		*e = GetContentSourceSectionJSONSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetContentSourceSectionJSONSourceEnum: %s", s)
	}
}

type GetContentSourceSectionJSONRequest struct {
	// Limits the number of results, between 1 and 20
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Sets the starting point of the result set
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Limits the set of items by one or more sections
	// all | One or more section names, separated by semicolons
	//
	//  To get all sections, specify all. To get a particular section or sections, use the section names returned by this request:
	//  http://api.nytimes.com/svc/news/v3/content/section-list.json
	//
	Section string `pathParam:"style=simple,explode=false,name=section"`
	// Limits the set of items by originating source
	//
	// all = items from both The New York Times and The International New York Times
	// nyt = New York Times items only
	// iht = International New York Times items only
	//
	Source GetContentSourceSectionJSONSourceEnum `pathParam:"style=simple,explode=false,name=source"`
}

// GetContentSourceSectionJSON200ApplicationJSON - An array of Articles
type GetContentSourceSectionJSON200ApplicationJSON struct {
	Copyright  *string          `json:"copyright,omitempty"`
	NumResults *int64           `json:"num_results,omitempty"`
	Results    []shared.Article `json:"results,omitempty"`
	Status     *string          `json:"status,omitempty"`
}

type GetContentSourceSectionJSONResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// An array of Articles
	GetContentSourceSectionJSON200ApplicationJSONObject *GetContentSourceSectionJSON200ApplicationJSON
}
