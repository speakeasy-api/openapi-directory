// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteCrawlerXAmzTargetEnum
type DeleteCrawlerXAmzTargetEnum string

const (
	DeleteCrawlerXAmzTargetEnumAwsGlueDeleteCrawler DeleteCrawlerXAmzTargetEnum = "AWSGlue.DeleteCrawler"
)

func (e *DeleteCrawlerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.DeleteCrawler":
		*e = DeleteCrawlerXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteCrawlerXAmzTargetEnum: %s", s)
	}
}

type DeleteCrawlerHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteCrawlerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteCrawlerRequest struct {
	Headers DeleteCrawlerHeaders
	Request shared.DeleteCrawlerRequest `request:"mediaType=application/json"`
}

type DeleteCrawlerResponse struct {
	ContentType string
	// CrawlerRunningException
	CrawlerRunningException interface{}
	// Success
	DeleteCrawlerResponse map[string]interface{}
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// SchedulerTransitioningException
	SchedulerTransitioningException interface{}
}
