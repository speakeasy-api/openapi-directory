// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListSystemsSecurity struct {
	RhIdentity string `security:"scheme,type=apiKey,subtype=header,name=x-rh-identity"`
}

// ListSystemsSortEnum - Sort field
type ListSystemsSortEnum string

const (
	ListSystemsSortEnumID                ListSystemsSortEnum = "id"
	ListSystemsSortEnumDisplayName       ListSystemsSortEnum = "display_name"
	ListSystemsSortEnumLastEvaluation    ListSystemsSortEnum = "last_evaluation"
	ListSystemsSortEnumLastUpload        ListSystemsSortEnum = "last_upload"
	ListSystemsSortEnumRhsaCount         ListSystemsSortEnum = "rhsa_count"
	ListSystemsSortEnumRhbaCount         ListSystemsSortEnum = "rhba_count"
	ListSystemsSortEnumRheaCount         ListSystemsSortEnum = "rhea_count"
	ListSystemsSortEnumOtherCount        ListSystemsSortEnum = "other_count"
	ListSystemsSortEnumStale             ListSystemsSortEnum = "stale"
	ListSystemsSortEnumPackagesInstalled ListSystemsSortEnum = "packages_installed"
	ListSystemsSortEnumPackagesUpdatable ListSystemsSortEnum = "packages_updatable"
)

func (e *ListSystemsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "id":
		fallthrough
	case "display_name":
		fallthrough
	case "last_evaluation":
		fallthrough
	case "last_upload":
		fallthrough
	case "rhsa_count":
		fallthrough
	case "rhba_count":
		fallthrough
	case "rhea_count":
		fallthrough
	case "other_count":
		fallthrough
	case "stale":
		fallthrough
	case "packages_installed":
		fallthrough
	case "packages_updatable":
		*e = ListSystemsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSystemsSortEnum: %s", s)
	}
}

type ListSystemsRequest struct {
	// Filter
	FilterCreated *string `queryParam:"style=form,explode=true,name=filter[created]"`
	// Filter
	FilterCulledTimestamp *string `queryParam:"style=form,explode=true,name=filter[culled_timestamp]"`
	// Filter
	FilterDisplayName *string `queryParam:"style=form,explode=true,name=filter[display_name]"`
	// Filter
	FilterID *string `queryParam:"style=form,explode=true,name=filter[id]"`
	// Filter
	FilterInsightsID *string `queryParam:"style=form,explode=true,name=filter[insights_id]"`
	// Filter
	FilterLastEvaluation *string `queryParam:"style=form,explode=true,name=filter[last_evaluation]"`
	// Filter
	FilterLastUpload *string `queryParam:"style=form,explode=true,name=filter[last_upload]"`
	// Filter
	FilterOtherCount *string `queryParam:"style=form,explode=true,name=filter[other_count]"`
	// Filter
	FilterPackagesInstalled *string `queryParam:"style=form,explode=true,name=filter[packages_installed]"`
	// Filter
	FilterPackagesUpdatable *string `queryParam:"style=form,explode=true,name=filter[packages_updatable]"`
	// Filter
	FilterRhbaCount *string `queryParam:"style=form,explode=true,name=filter[rhba_count]"`
	// Filter
	FilterRheaCount *string `queryParam:"style=form,explode=true,name=filter[rhea_count]"`
	// Filter
	FilterRhsaCount *string `queryParam:"style=form,explode=true,name=filter[rhsa_count]"`
	// Filter
	FilterStale *string `queryParam:"style=form,explode=true,name=filter[stale]"`
	// Filter
	FilterStaleTimestamp *string `queryParam:"style=form,explode=true,name=filter[stale_timestamp]"`
	// Filter
	FilterStaleWarningTimestamp *string `queryParam:"style=form,explode=true,name=filter[stale_warning_timestamp]"`
	// Filter systems by their SAP SIDs
	FilterSystemProfileSapSidsIn []string `queryParam:"style=form,explode=true,name=filter[system_profile][sap_sids][in]"`
	// Filter only SAP systems
	FilterSystemProfileSapSystem *string `queryParam:"style=form,explode=true,name=filter[system_profile][sap_system]"`
	// Limit for paging, set -1 to return all
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Offset for paging
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Find matching text
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Sort field
	Sort *ListSystemsSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Tag filter
	Tags []string `queryParam:"style=form,explode=true,name=tags"`
}

type ListSystemsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ControllersSystemsResponse *shared.ControllersSystemsResponse
}
