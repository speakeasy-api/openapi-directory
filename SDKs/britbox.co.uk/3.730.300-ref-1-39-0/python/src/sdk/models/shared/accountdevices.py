"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import device as shared_device
from ..shared import deviceregistrationwindow as shared_deviceregistrationwindow
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountDevices:
    r"""OK"""
    
    devices: list[shared_device.Device] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices') }})
    r"""The array of registered playack devices."""  
    max_registered: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxRegistered') }})
    r"""The maximum number of playback devices that can be registered
    under an account at a single time.
    
    If there is no maximum defined this value will be `-1`.
    """  
    deregistration_window: Optional[shared_deviceregistrationwindow.DeviceRegistrationWindow] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deregistrationWindow'), 'exclude': lambda f: f is None }})  
    registration_window: Optional[shared_deviceregistrationwindow.DeviceRegistrationWindow] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrationWindow'), 'exclude': lambda f: f is None }})  
    