/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;

/**
 * View gitignore templates
 */
public class Gitignore {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Gitignore(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Get all gitignore templates
     * List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@2.19/rest/reference/repos#create-a-repository-for-the-authenticated-user).
     * https://docs.github.com/enterprise-server@2.19/rest/reference/gitignore#get-all-gitignore-templates - API method documentation
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GitignoreGetAllTemplatesResponse gitignoreGetAllTemplates() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/gitignore/templates");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GitignoreGetAllTemplatesResponse res = new org.openapis.openapi.models.operations.GitignoreGetAllTemplatesResponse(contentType, httpRes.statusCode()) {{
            gitignoreGetAllTemplates200ApplicationJSONStrings = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                String[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), String[].class);
                res.gitignoreGetAllTemplates200ApplicationJSONStrings = out;
            }
        }
        else if (httpRes.statusCode() == 304) {
        }

        return res;
    }

    /**
     * Get a gitignore template
     * The API also allows fetching the source of a single template.
     * Use the raw [media type](https://docs.github.com/enterprise-server@2.19/rest/overview/media-types/) to get the raw contents.
     * https://docs.github.com/enterprise-server@2.19/rest/reference/gitignore#get-a-gitignore-template - API method documentation
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GitignoreGetTemplateResponse gitignoreGetTemplate(org.openapis.openapi.models.operations.GitignoreGetTemplateRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GitignoreGetTemplateRequest.class, baseUrl, "/gitignore/templates/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GitignoreGetTemplateResponse res = new org.openapis.openapi.models.operations.GitignoreGetTemplateResponse(contentType, httpRes.statusCode()) {{
            gitignoreTemplate = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GitignoreTemplate out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GitignoreTemplate.class);
                res.gitignoreTemplate = out;
            }
        }
        else if (httpRes.statusCode() == 304) {
        }

        return res;
    }
}