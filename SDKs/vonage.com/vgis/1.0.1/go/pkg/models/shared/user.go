// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserRoles struct {
	// Code for the role
	Code *string `json:"code,omitempty"`
	// Name for the role
	Name *string `json:"name,omitempty"`
}

// UserStatusEnum - Status of the user
type UserStatusEnum string

const (
	UserStatusEnumPending  UserStatusEnum = "PENDING"
	UserStatusEnumActive   UserStatusEnum = "ACTIVE"
	UserStatusEnumDeleted  UserStatusEnum = "DELETED"
	UserStatusEnumArchived UserStatusEnum = "ARCHIVED"
)

func (e UserStatusEnum) ToPointer() *UserStatusEnum {
	return &e
}

func (e *UserStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETED":
		fallthrough
	case "ARCHIVED":
		*e = UserStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserStatusEnum: %v", v)
	}
}

type UserUcisHealth struct {
	Message *string `json:"message,omitempty"`
	Status  *string `json:"status,omitempty"`
}

type UserUcis struct {
	Health   *UserUcisHealth `json:"health,omitempty"`
	ID       *int64          `json:"id,omitempty"`
	Type     *string         `json:"type,omitempty"`
	UcpLabel *string         `json:"ucpLabel,omitempty"`
}

// User - Success
type User struct {
	// Unique identifier of the user's account
	AccountID *int64 `json:"accountId,omitempty"`
	// The name of the user's account
	AcountLabel *string `json:"acountLabel,omitempty"`
	// Contact number of the user
	ContactNumber *string `json:"contactNumber,omitempty"`
	// Email address of the user
	EmailAddress *string `json:"emailAddress,omitempty"`
	// First name of the user
	FirstName *string `json:"firstName,omitempty"`
	// Unique identifier of the user
	ID *int64 `json:"id,omitempty"`
	// Last name of the user
	LastName *string     `json:"lastName,omitempty"`
	Roles    []UserRoles `json:"roles,omitempty"`
	// Status of the user
	Status *UserStatusEnum `json:"status,omitempty"`
	Ucis   []UserUcis      `json:"ucis,omitempty"`
}
