"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RescheduleMaintenanceRequestRescheduleTypeEnum(str, Enum):
    r"""Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well."""
    RESCHEDULE_TYPE_UNSPECIFIED = 'RESCHEDULE_TYPE_UNSPECIFIED'
    IMMEDIATE = 'IMMEDIATE'
    NEXT_AVAILABLE_WINDOW = 'NEXT_AVAILABLE_WINDOW'
    SPECIFIC_TIME = 'SPECIFIC_TIME'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RescheduleMaintenanceRequest:
    r"""Request for RescheduleMaintenance."""
    
    reschedule_type: Optional[RescheduleMaintenanceRequestRescheduleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rescheduleType'), 'exclude': lambda f: f is None }})
    r"""Required. If reschedule type is SPECIFIC_TIME, must set up schedule_time as well."""  
    schedule_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduleTime'), 'exclude': lambda f: f is None }})
    r"""Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example `2012-11-15T16:19:00.094Z`."""  
    