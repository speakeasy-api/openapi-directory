// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecordTypeCodeEnum - An alphabetic value that identifies the type of data in the record. - G = General delivery (5-Digit ZIP, ZIP + 4, and Carrier Route products) - H = High-rise (ZIP + 4 only) - F = Firm (ZIP + 4 only) - S = Street (5-Digit ZIP, ZIP + 4, and Carrier Route products) - P = PO Box (5-Digit ZIP, ZIP + 4, and Carrier Route products) - R = Rural route/contract (5-Digit ZIP, ZIP + 4, and Carrier Route products) - M = Multi-carrier (Carrier Route product only)
type RecordTypeCodeEnum string

const (
	RecordTypeCodeEnumG       RecordTypeCodeEnum = "G"
	RecordTypeCodeEnumH       RecordTypeCodeEnum = "H"
	RecordTypeCodeEnumF       RecordTypeCodeEnum = "F"
	RecordTypeCodeEnumS       RecordTypeCodeEnum = "S"
	RecordTypeCodeEnumP       RecordTypeCodeEnum = "P"
	RecordTypeCodeEnumR       RecordTypeCodeEnum = "R"
	RecordTypeCodeEnumM       RecordTypeCodeEnum = "M"
	RecordTypeCodeEnumUnknown RecordTypeCodeEnum = ""
)

func (e *RecordTypeCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "G":
		fallthrough
	case "H":
		fallthrough
	case "F":
		fallthrough
	case "S":
		fallthrough
	case "P":
		fallthrough
	case "R":
		fallthrough
	case "M":
		fallthrough
	case "":
		*e = RecordTypeCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecordTypeCodeEnum: %s", s)
	}
}
