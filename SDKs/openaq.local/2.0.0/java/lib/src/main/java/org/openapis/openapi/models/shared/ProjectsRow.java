/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ProjectsRow {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bbox")
    public Double[] bbox;

    public ProjectsRow withBbox(Double[] bbox) {
        this.bbox = bbox;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countries")
    public String[] countries;

    public ProjectsRow withCountries(String[] countries) {
        this.countries = countries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entity")
    public String entity;

    public ProjectsRow withEntity(String entity) {
        this.entity = entity;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("firstUpdated")
    public OffsetDateTime firstUpdated;

    public ProjectsRow withFirstUpdated(OffsetDateTime firstUpdated) {
        this.firstUpdated = firstUpdated;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public ProjectsRow withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAnalysis")
    public Boolean isAnalysis;

    public ProjectsRow withIsAnalysis(Boolean isAnalysis) {
        this.isAnalysis = isAnalysis;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isMobile")
    public Boolean isMobile;

    public ProjectsRow withIsMobile(Boolean isMobile) {
        this.isMobile = isMobile;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdated")
    public OffsetDateTime lastUpdated;

    public ProjectsRow withLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    @JsonProperty("locationIds")
    public Long[] locationIds;

    public ProjectsRow withLocationIds(Long[] locationIds) {
        this.locationIds = locationIds;
        return this;
    }
    
    @JsonProperty("locations")
    public Long locations;

    public ProjectsRow withLocations(Long locations) {
        this.locations = locations;
        return this;
    }
    
    @JsonProperty("measurements")
    public Long measurements;

    public ProjectsRow withMeasurements(Long measurements) {
        this.measurements = measurements;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public ProjectsRow withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("parameters")
    public ProjectParameterDetails[] parameters;

    public ProjectsRow withParameters(ProjectParameterDetails[] parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sensorType")
    public String sensorType;

    public ProjectsRow withSensorType(String sensorType) {
        this.sensorType = sensorType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sources")
    public Object[] sources;

    public ProjectsRow withSources(Object[] sources) {
        this.sources = sources;
        return this;
    }
    
    @JsonProperty("subtitle")
    public String subtitle;

    public ProjectsRow withSubtitle(String subtitle) {
        this.subtitle = subtitle;
        return this;
    }
    
    public ProjectsRow(@JsonProperty("firstUpdated") OffsetDateTime firstUpdated, @JsonProperty("id") Long id, @JsonProperty("lastUpdated") OffsetDateTime lastUpdated, @JsonProperty("locationIds") Long[] locationIds, @JsonProperty("locations") Long locations, @JsonProperty("measurements") Long measurements, @JsonProperty("name") String name, @JsonProperty("parameters") ProjectParameterDetails[] parameters, @JsonProperty("subtitle") String subtitle) {
        this.firstUpdated = firstUpdated;
        this.id = id;
        this.lastUpdated = lastUpdated;
        this.locationIds = locationIds;
        this.locations = locations;
        this.measurements = measurements;
        this.name = name;
        this.parameters = parameters;
        this.subtitle = subtitle;
  }
}
