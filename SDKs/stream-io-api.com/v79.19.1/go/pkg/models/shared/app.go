// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// AppSearchBackendEnum - Backend implementation used for search
type AppSearchBackendEnum string

const (
	AppSearchBackendEnumElasticsearch AppSearchBackendEnum = "elasticsearch"
	AppSearchBackendEnumPostgres      AppSearchBackendEnum = "postgres"
	AppSearchBackendEnumDisabled      AppSearchBackendEnum = "disabled"
)

func (e *AppSearchBackendEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "elasticsearch":
		fallthrough
	case "postgres":
		fallthrough
	case "disabled":
		*e = AppSearchBackendEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppSearchBackendEnum: %s", s)
	}
}

type App struct {
	AgoraOptions             *Config `json:"agora_options,omitempty"`
	AsyncURLEnrichEnabled    bool    `json:"async_url_enrich_enabled"`
	AutoTranslationEnabled   *bool   `json:"auto_translation_enabled,omitempty"`
	BeforeMessageSendHookURL *string `json:"before_message_send_hook_url,omitempty"`
	CampaignEnabled          bool    `json:"campaign_enabled"`
	CdnExpirationSeconds     float64 `json:"cdn_expiration_seconds"`
	// Object with channel configs
	ChannelConfigs           map[string]ChannelConfig `json:"channel_configs"`
	CustomActionHandlerURL   string                   `json:"custom_action_handler_url"`
	DisableAuthChecks        bool                     `json:"disable_auth_checks"`
	DisablePermissionsChecks bool                     `json:"disable_permissions_checks"`
	EnforceUniqueUsernames   string                   `json:"enforce_unique_usernames"`
	FileUploadConfig         FileUploadConfig         `json:"file_upload_config"`
	Grants                   map[string][]string      `json:"grants"`
	HmsOptions               *Config                  `json:"hms_options,omitempty"`
	ImageModerationEnabled   bool                     `json:"image_moderation_enabled"`
	ImageModerationLabels    []string                 `json:"image_moderation_labels,omitempty"`
	ImageUploadConfig        FileUploadConfig         `json:"image_upload_config"`
	MultiTenantEnabled       bool                     `json:"multi_tenant_enabled"`
	Name                     string                   `json:"name"`
	Organization             string                   `json:"organization"`
	PermissionVersion        string                   `json:"permission_version"`
	Policies                 map[string][]Policy      `json:"policies"`
	PushNotifications        PushNotificationFields   `json:"push_notifications"`
	RemindersInterval        float64                  `json:"reminders_interval"`
	RevokeTokensIssuedBefore *time.Time               `json:"revoke_tokens_issued_before,omitempty"`
	// Backend implementation used for search
	SearchBackend             AppSearchBackendEnum `json:"search_backend"`
	SqsKey                    string               `json:"sqs_key"`
	SqsSecret                 string               `json:"sqs_secret"`
	SqsURL                    string               `json:"sqs_url"`
	Suspended                 bool                 `json:"suspended"`
	SuspendedExplanation      string               `json:"suspended_explanation"`
	UserSearchDisallowedRoles []string             `json:"user_search_disallowed_roles"`
	VideoProvider             string               `json:"video_provider"`
	WebhookEvents             []string             `json:"webhook_events"`
	WebhookURL                string               `json:"webhook_url"`
}
