"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import taskspec as shared_taskspec
from ..shared import taskstatus as shared_taskstatus
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AgentTaskIntendedStateEnum(str, Enum):
    r"""The intended state of the task."""
    INTENDED_STATE_UNSPECIFIED = 'INTENDED_STATE_UNSPECIFIED'
    ASSIGNED = 'ASSIGNED'
    CANCELLED = 'CANCELLED'
    DELETED = 'DELETED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AgentTask:
    r"""TODO(b/182501497) The message needs to be redefined when the Agent API server updates data in storage per the backend design."""
    
    intended_state: Optional[AgentTaskIntendedStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intendedState'), 'exclude': lambda f: f is None }})
    r"""The intended state of the task."""  
    reached_barrier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reachedBarrier'), 'exclude': lambda f: f is None }})
    r"""The highest barrier reached by all tasks in the task's TaskGroup."""  
    spec: Optional[shared_taskspec.TaskSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec'), 'exclude': lambda f: f is None }})
    r"""Spec of a task"""  
    status: Optional[shared_taskstatus.TaskStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of a task"""  
    task: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('task'), 'exclude': lambda f: f is None }})
    r"""Task name."""  
    