// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DestinationTypeEnum - **destination type specifier**
// - `"COUNTRY"`: destination is a country
// - `"REGION"`: destination is a recognized region of a country, such as a state, island within a country, stretch of coastline, etc.
// - `"CITY"`: destination is a city
type DestinationTypeEnum string

const (
	DestinationTypeEnumCity    DestinationTypeEnum = "CITY"
	DestinationTypeEnumCountry DestinationTypeEnum = "COUNTRY"
	DestinationTypeEnumRegion  DestinationTypeEnum = "REGION"
)

func (e DestinationTypeEnum) ToPointer() *DestinationTypeEnum {
	return &e
}

func (e *DestinationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CITY":
		fallthrough
	case "COUNTRY":
		fallthrough
	case "REGION":
		*e = DestinationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationTypeEnum: %v", v)
	}
}
