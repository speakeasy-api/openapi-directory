// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRequestEnvironmentInfoActionEnum
type GETRequestEnvironmentInfoActionEnum string

const (
	GETRequestEnvironmentInfoActionEnumRequestEnvironmentInfo GETRequestEnvironmentInfoActionEnum = "RequestEnvironmentInfo"
)

func (e *GETRequestEnvironmentInfoActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RequestEnvironmentInfo":
		*e = GETRequestEnvironmentInfoActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRequestEnvironmentInfoActionEnum: %s", s)
	}
}

// GETRequestEnvironmentInfoInfoTypeEnum - The type of information to request.
type GETRequestEnvironmentInfoInfoTypeEnum string

const (
	GETRequestEnvironmentInfoInfoTypeEnumTail   GETRequestEnvironmentInfoInfoTypeEnum = "tail"
	GETRequestEnvironmentInfoInfoTypeEnumBundle GETRequestEnvironmentInfoInfoTypeEnum = "bundle"
)

func (e *GETRequestEnvironmentInfoInfoTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tail":
		fallthrough
	case "bundle":
		*e = GETRequestEnvironmentInfoInfoTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRequestEnvironmentInfoInfoTypeEnum: %s", s)
	}
}

// GETRequestEnvironmentInfoVersionEnum
type GETRequestEnvironmentInfoVersionEnum string

const (
	GETRequestEnvironmentInfoVersionEnumTwoThousandAndTen1201 GETRequestEnvironmentInfoVersionEnum = "2010-12-01"
)

func (e *GETRequestEnvironmentInfoVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETRequestEnvironmentInfoVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRequestEnvironmentInfoVersionEnum: %s", s)
	}
}

type GETRequestEnvironmentInfoQueryParams struct {
	Action GETRequestEnvironmentInfoActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The ID of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentName, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
	EnvironmentID *string `queryParam:"style=form,explode=true,name=EnvironmentId"`
	// <p>The name of the environment of the requested data.</p> <p>If no such environment is found, <code>RequestEnvironmentInfo</code> returns an <code>InvalidParameterValue</code> error. </p> <p>Condition: You must specify either this or an EnvironmentId, or both. If you do not specify either, AWS Elastic Beanstalk returns <code>MissingRequiredParameter</code> error. </p>
	EnvironmentName *string `queryParam:"style=form,explode=true,name=EnvironmentName"`
	// The type of information to request.
	InfoType GETRequestEnvironmentInfoInfoTypeEnum `queryParam:"style=form,explode=true,name=InfoType"`
	Version  GETRequestEnvironmentInfoVersionEnum  `queryParam:"style=form,explode=true,name=Version"`
}

type GETRequestEnvironmentInfoHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRequestEnvironmentInfoRequest struct {
	QueryParams GETRequestEnvironmentInfoQueryParams
	Headers     GETRequestEnvironmentInfoHeaders
}

type GETRequestEnvironmentInfoResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
