"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import qospolicy as shared_qospolicy
from ..shared import vlanattachment as shared_vlanattachment
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VRFStateEnum(str, Enum):
    r"""The possible state of VRF."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    PROVISIONING = 'PROVISIONING'
    PROVISIONED = 'PROVISIONED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Vrf:
    r"""A network VRF."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the VRF."""  
    qos_policy: Optional[shared_qospolicy.QosPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qosPolicy'), 'exclude': lambda f: f is None }})
    r"""QOS policy parameters."""  
    state: Optional[VRFStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The possible state of VRF."""  
    vlan_attachments: Optional[list[shared_vlanattachment.VlanAttachment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vlanAttachments'), 'exclude': lambda f: f is None }})
    r"""The list of VLAN attachments for the VRF."""  
    