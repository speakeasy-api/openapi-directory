/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateRebalanceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

/**
 * Rebalance request triggering type. This describe the types of elements included in the values field
 */
export enum CreateRebalanceSwitchInstructionRequestTypeEnum {
  Pot = "pot",
  Investor = "investor",
  Portfolio = "portfolio",
}

/**
 * Definition of Switch instruction
 */
export class CreateRebalanceSwitchInstructionRequest extends SpeakeasyBase {
  /**
   * Unique request id to ensure idempotency. (eg: UUID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  /**
   * Rebalance request triggering type. This describe the types of elements included in the values field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CreateRebalanceSwitchInstructionRequestTypeEnum;

  /**
   * List of unique Ids from the mentioned type to trigger the rebalance process
   */
  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values: string[];
}

export class CreateRebalanceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreateRebalanceSwitchInstructionRequest;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class CreateRebalance500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class CreateRebalance429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum CreateRebalance409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class CreateRebalance409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreateRebalance409ApplicationJSONStatusEnum;
}

/**
 * The specified resource was not found
 */
export class CreateRebalance404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class CreateRebalance403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class CreateRebalance401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class CreateRebalance400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the rebalance on the specific pot_id
 */
export enum CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum {
  Processing = "processing",
  Failed = "failed",
  Completed = "completed",
}

/**
 * Each individual pot details on the rebalance request
 */
export class CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequest extends SpeakeasyBase {
  /**
   * portfolio deviation for the pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_deviation" })
  portfolioDeviation: string;

  /**
   * portfolio_template_id in used by the relevent pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_template_id" })
  portfolioTemplateId: string;

  /**
   * Identifier of pot triggered for rebalance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  /**
   * if the status is rejected then the reason for it.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason: string;

  /**
   * Current status of the rebalance on the specific pot_id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum;
}

/**
 * Status of the Rebalance instruction
 */
export enum CreateRebalance201ApplicationJSONStatusEnum {
  Processing = "processing",
  InProgress = "in_progress",
  Completed = "completed",
  Failed = "failed",
}

/**
 * success
 */
export class CreateRebalance201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequest,
  })
  @Expose({ name: "pot_details" })
  @Type(
    () =>
      CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequest
  )
  potDetails: CreateRebalance201ApplicationJSONEachPotInstructionOfTheRebalanceRequest[];

  /**
   * Unique identifier of the rebalance instruction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rebalance_request_id" })
  rebalanceRequestId: string;

  /**
   * Status of the Rebalance instruction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreateRebalance201ApplicationJSONStatusEnum;
}

export class CreateRebalanceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * success
   */
  @SpeakeasyMetadata()
  createRebalance201ApplicationJSONObject?: CreateRebalance201ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  createRebalance400ApplicationJSONObject?: CreateRebalance400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  createRebalance401ApplicationJSONObject?: CreateRebalance401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  createRebalance403ApplicationJSONObject?: CreateRebalance403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  createRebalance404ApplicationJSONObject?: CreateRebalance404ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  createRebalance409ApplicationJSONObject?: CreateRebalance409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  createRebalance429ApplicationJSONObject?: CreateRebalance429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  createRebalance500ApplicationJSONObject?: CreateRebalance500ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
