// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkloadImprovementStatusEnum - The improvement status for a workload.
type WorkloadImprovementStatusEnum string

const (
	WorkloadImprovementStatusEnumNotApplicable    WorkloadImprovementStatusEnum = "NOT_APPLICABLE"
	WorkloadImprovementStatusEnumNotStarted       WorkloadImprovementStatusEnum = "NOT_STARTED"
	WorkloadImprovementStatusEnumInProgress       WorkloadImprovementStatusEnum = "IN_PROGRESS"
	WorkloadImprovementStatusEnumComplete         WorkloadImprovementStatusEnum = "COMPLETE"
	WorkloadImprovementStatusEnumRiskAcknowledged WorkloadImprovementStatusEnum = "RISK_ACKNOWLEDGED"
)

func (e *WorkloadImprovementStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NOT_APPLICABLE":
		fallthrough
	case "NOT_STARTED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETE":
		fallthrough
	case "RISK_ACKNOWLEDGED":
		*e = WorkloadImprovementStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkloadImprovementStatusEnum: %s", s)
	}
}
