"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddInternalTransferBatchPaymentBatchItemInternalTransfer:
    r"""Details of the source account, destination account, amount and a reference."""
    
    amount: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""amount of funds to be transfered"""  
    ican_from: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icanFrom'), 'exclude': lambda f: f is None }})
    r"""The account ID for the fire.com account the funds are taken from"""  
    ican_to: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icanTo'), 'exclude': lambda f: f is None }})
    r"""The account ID for the fire.com account the funds are directed to"""  
    ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ref'), 'exclude': lambda f: f is None }})
    r"""The reference on the transaction"""  
    

@dataclasses.dataclass
class AddInternalTransferBatchPaymentRequest:
    
    batch_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'batchUuid', 'style': 'simple', 'explode': False }})  
    request_body: AddInternalTransferBatchPaymentBatchItemInternalTransfer = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Details of the source account, destination account, amount and a reference."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddInternalTransferBatchPaymentNewBatchItemResponse:
    r"""Batch payment added successfully. Note* Please use batchUuid when submitting a batch, not batchItemUuid."""
    
    batch_item_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchItemUuid'), 'exclude': lambda f: f is None }})
    r"""A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch."""  
    

@dataclasses.dataclass
class AddInternalTransferBatchPaymentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    new_batch_item_response: Optional[AddInternalTransferBatchPaymentNewBatchItemResponse] = dataclasses.field(default=None)
    r"""Batch payment added successfully. Note* Please use batchUuid when submitting a batch, not batchItemUuid."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    