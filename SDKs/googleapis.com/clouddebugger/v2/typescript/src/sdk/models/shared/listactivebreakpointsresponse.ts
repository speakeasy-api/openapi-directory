/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Breakpoint } from "./breakpoint";
import { Expose, Type } from "class-transformer";

/**
 * Response for listing active breakpoints.
 */
export class ListActiveBreakpointsResponse extends SpeakeasyBase {
  /**
   * List of all active breakpoints. The fields `id` and `location` are guaranteed to be set on each breakpoint.
   */
  @SpeakeasyMetadata({ elemType: Breakpoint })
  @Expose({ name: "breakpoints" })
  @Type(() => Breakpoint)
  breakpoints?: Breakpoint[];

  /**
   * A token that can be used in the next method call to block until the list of breakpoints changes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextWaitToken" })
  nextWaitToken?: string;

  /**
   * If set to `true`, indicates that there is no change to the list of active breakpoints and the server-selected timeout has expired. The `breakpoints` field would be empty and should be ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "waitExpired" })
  waitExpired?: boolean;
}
