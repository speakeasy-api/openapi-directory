// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NHEventTypeEnum - The type of event. "Event" is a festivity the player can take part in. "Nook Shopping" refers to the [seasonal events](https://nookipedia.com/wiki/Nook_Shopping_seasonal_event) in which exclusive item(s) are available via []Nook Shopping](https://nookipedia.com/wiki/Nook_Shopping). "Recipes" refers to the start or end of certain recipes being available. "Birthday" refers to the birthday of a villager or special character.
type NHEventTypeEnum string

const (
	NHEventTypeEnumEvent        NHEventTypeEnum = "Event"
	NHEventTypeEnumNookShopping NHEventTypeEnum = "Nook Shopping"
	NHEventTypeEnumRecipes      NHEventTypeEnum = "Recipes"
	NHEventTypeEnumBirthday     NHEventTypeEnum = "Birthday"
)

func (e NHEventTypeEnum) ToPointer() *NHEventTypeEnum {
	return &e
}

func (e *NHEventTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Event":
		fallthrough
	case "Nook Shopping":
		fallthrough
	case "Recipes":
		fallthrough
	case "Birthday":
		*e = NHEventTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NHEventTypeEnum: %v", v)
	}
}

type NHEvent struct {
	// The date of the event in YYYY-MM-DD format.
	Date *string `json:"date,omitempty"`
	// The description of the event.
	Event *string `json:"event,omitempty"`
	// The type of event. "Event" is a festivity the player can take part in. "Nook Shopping" refers to the [seasonal events](https://nookipedia.com/wiki/Nook_Shopping_seasonal_event) in which exclusive item(s) are available via []Nook Shopping](https://nookipedia.com/wiki/Nook_Shopping). "Recipes" refers to the start or end of certain recipes being available. "Birthday" refers to the birthday of a villager or special character.
	Type *NHEventTypeEnum `json:"type,omitempty"`
	// Link to the respective Nookipedia article for the event.
	URL *string `json:"url,omitempty"`
}
