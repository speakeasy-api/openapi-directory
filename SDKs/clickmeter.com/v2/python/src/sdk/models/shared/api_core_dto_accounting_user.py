"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APICoreDtoAccountingUser:
    
    bo_go_val: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boGoVal'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'boGoVal' }})  
    bonus_clicks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bonusClicks'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'bonusClicks' }})  
    company_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companyName'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'companyName' }})  
    company_role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companyRole'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'companyRole' }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'email' }})  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'firstName' }})  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'lastName' }})  
    phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'phone' }})  
    redirect_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redirectOnly'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'redirectOnly' }})  
    registration_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrationDate'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'registrationDate' }})
    r"""(A date in \\"YmdHis\\" format)"""  
    timeframe_min_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeframeMinDate'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'timeframeMinDate' }})
    r"""(A date in \\"YmdHis\\" format)"""  
    timezone: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timezone'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'timezone' }})  
    timezonename: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timezonename'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'timezonename' }})  
    