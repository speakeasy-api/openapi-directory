"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BinaryAuthorizationEvaluationModeEnum(str, Enum):
    r"""Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED."""
    EVALUATION_MODE_UNSPECIFIED = 'EVALUATION_MODE_UNSPECIFIED'
    DISABLED = 'DISABLED'
    PROJECT_SINGLETON_POLICY_ENFORCE = 'PROJECT_SINGLETON_POLICY_ENFORCE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BinaryAuthorization:
    r"""Configuration for Binary Authorization."""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""This field is deprecated. Leave this unset and instead configure BinaryAuthorization using evaluation_mode. If evaluation_mode is set to anything other than EVALUATION_MODE_UNSPECIFIED, this field is ignored."""  
    evaluation_mode: Optional[BinaryAuthorizationEvaluationModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('evaluationMode'), 'exclude': lambda f: f is None }})
    r"""Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED."""  
    