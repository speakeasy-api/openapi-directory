// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
	"time"
)

type DashboardIssueDetailZoomRoomSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type DashboardIssueDetailZoomRoomPathParams struct {
	// The Zoom room ID.
	ZoomroomID string `pathParam:"style=simple,explode=false,name=zoomroomId"`
}

type DashboardIssueDetailZoomRoomQueryParams struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
}

type DashboardIssueDetailZoomRoomRequest struct {
	PathParams  DashboardIssueDetailZoomRoomPathParams
	QueryParams DashboardIssueDetailZoomRoomQueryParams
	Security    DashboardIssueDetailZoomRoomSecurity
}

type DashboardIssueDetailZoomRoom200ApplicationXMLIssueDetails struct {
	// Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>
	// * `Room Controller disconnected`<br>
	// * `Room Controller connected`
	// * `Selected camera has disconnected`
	// * `Selected camera is reconnected`
	// * `Selected microphone has disconnected`
	// * `Selected microphone is reconnected`
	// * `Selected speaker has disconnected`
	// * `Selected speaker is reconnected`
	// * `Zoom room is offline`
	// * `Zoom room is online`
	// * `High CPU usage is detected`
	// * `Low bandwidth network is detected`
	// * `{name} battery is low`
	// * `{name} battery is normal`
	// * `{name} disconnected`
	// * `{name} connected`
	// * `{name} is not charging`
	//
	// Possible values for {name}: <br>
	// * Zoom Rooms Computer
	// * Controller
	// * Scheduling Display
	Issue *string
	// Time at which the issue was encountered.
	Time *time.Time
}

// DashboardIssueDetailZoomRoom200ApplicationXML - Pagination object.
type DashboardIssueDetailZoomRoom200ApplicationXML struct {
	// Start date for this report
	From         *types.Date
	IssueDetails []DashboardIssueDetailZoomRoom200ApplicationXMLIssueDetails
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of pages returned for the request made.
	PageCount *int64
	// The number of records returned within a single API call.
	PageSize *int64
	// End date for this report
	To *types.Date
	// The number of all records available across pages.
	TotalRecords *int64
}

type DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails struct {
	// Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>
	// * `Room Controller disconnected`<br>
	// * `Room Controller connected`
	// * `Selected camera has disconnected`
	// * `Selected camera is reconnected`
	// * `Selected microphone has disconnected`
	// * `Selected microphone is reconnected`
	// * `Selected speaker has disconnected`
	// * `Selected speaker is reconnected`
	// * `Zoom room is offline`
	// * `Zoom room is online`
	// * `High CPU usage is detected`
	// * `Low bandwidth network is detected`
	// * `{name} battery is low`
	// * `{name} battery is normal`
	// * `{name} disconnected`
	// * `{name} connected`
	// * `{name} is not charging`
	//
	// Possible values for {name}: <br>
	// * Zoom Rooms Computer
	// * Controller
	// * Scheduling Display
	Issue *string `json:"issue,omitempty"`
	// Time at which the issue was encountered.
	Time *time.Time `json:"time,omitempty"`
}

// DashboardIssueDetailZoomRoom200ApplicationJSON - Pagination object.
type DashboardIssueDetailZoomRoom200ApplicationJSON struct {
	// Start date for this report
	From         *types.Date                                                  `json:"from,omitempty"`
	IssueDetails []DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails `json:"issue_details,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of pages returned for the request made.
	PageCount *int64 `json:"page_count,omitempty"`
	// The number of records returned within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// End date for this report
	To *types.Date `json:"to,omitempty"`
	// The number of all records available across pages.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type DashboardIssueDetailZoomRoomResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Zoom Room with issue details returned
	DashboardIssueDetailZoomRoom200ApplicationJSONObject *DashboardIssueDetailZoomRoom200ApplicationJSON
}
