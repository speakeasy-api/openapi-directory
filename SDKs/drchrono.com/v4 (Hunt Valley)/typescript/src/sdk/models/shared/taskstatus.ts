/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Can be one of the following `O`(open), `P`(In progress), `H`(On hold), `C`(Complete), default to `O`(Open)
 */
export enum TaskStatusStatusCategoryEnum {
  O = "O",
  P = "P",
  H = "H",
  C = "C",
}

/**
 * Created
 */
export class TaskStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "practice_group" })
  practiceGroup: number;

  /**
   * Can be one of the following `O`(open), `P`(In progress), `H`(On hold), `C`(Complete), default to `O`(Open)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_category" })
  statusCategory?: TaskStatusStatusCategoryEnum;

  /**
   * ID of `/api/task_categories`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_category" })
  taskCategory?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
