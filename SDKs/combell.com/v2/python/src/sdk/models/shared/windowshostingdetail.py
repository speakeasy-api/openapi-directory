"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import applicationpool as shared_applicationpool
from ..shared import windowsiptype_enum as shared_windowsiptype_enum
from ..shared import windowssite as shared_windowssite
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WindowsHostingDetail:
    r"""Success"""
    
    actual_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actual_size'), 'exclude': lambda f: f is None }})
    r"""Used webspace size in MB"""  
    application_pool: Optional[shared_applicationpool.ApplicationPool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('application_pool'), 'exclude': lambda f: f is None }})
    r"""The application pool for the hosting account."""  
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain_name'), 'exclude': lambda f: f is None }})
    r"""Domain name for the Windows hosting account."""  
    ftp_username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ftp_username'), 'exclude': lambda f: f is None }})
    r"""Ftp username"""  
    ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip'), 'exclude': lambda f: f is None }})
    r"""Windows hosting IP address"""  
    ip_type: Optional[shared_windowsiptype_enum.WindowsIPTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip_type'), 'exclude': lambda f: f is None }})
    r"""Type of the hosting IP address (dedicated or shared)"""  
    max_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_size'), 'exclude': lambda f: f is None }})
    r"""Maximum webspace size in MB"""  
    mssql_database_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mssql_database_names'), 'exclude': lambda f: f is None }})
    r"""A list of mssql databases linked to the hosting account.<br />"""  
    servicepack_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('servicepack_id'), 'exclude': lambda f: f is None }})
    r"""Id of Windows hosting service package."""  
    sites: Optional[list[shared_windowssite.WindowsSite]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sites'), 'exclude': lambda f: f is None }})
    r"""A list of websites on the hosting account."""  
    