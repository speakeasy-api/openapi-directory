// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ChangeServerLifeCycleStateSourceServerLifecycleStateEnum string

const (
	ChangeServerLifeCycleStateSourceServerLifecycleStateEnumReadyForTest    ChangeServerLifeCycleStateSourceServerLifecycleStateEnum = "READY_FOR_TEST"
	ChangeServerLifeCycleStateSourceServerLifecycleStateEnumReadyForCutover ChangeServerLifeCycleStateSourceServerLifecycleStateEnum = "READY_FOR_CUTOVER"
	ChangeServerLifeCycleStateSourceServerLifecycleStateEnumCutover         ChangeServerLifeCycleStateSourceServerLifecycleStateEnum = "CUTOVER"
)

func (e *ChangeServerLifeCycleStateSourceServerLifecycleStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "READY_FOR_TEST":
		fallthrough
	case "READY_FOR_CUTOVER":
		fallthrough
	case "CUTOVER":
		*e = ChangeServerLifeCycleStateSourceServerLifecycleStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChangeServerLifeCycleStateSourceServerLifecycleStateEnum: %s", s)
	}
}
