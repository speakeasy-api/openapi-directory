// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateUserProfileXAmzTargetEnum
type UpdateUserProfileXAmzTargetEnum string

const (
	UpdateUserProfileXAmzTargetEnumCodeStar20170419UpdateUserProfile UpdateUserProfileXAmzTargetEnum = "CodeStar_20170419.UpdateUserProfile"
)

func (e *UpdateUserProfileXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeStar_20170419.UpdateUserProfile":
		*e = UpdateUserProfileXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateUserProfileXAmzTargetEnum: %s", s)
	}
}

type UpdateUserProfileHeaders struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateUserProfileXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateUserProfileRequest struct {
	Headers UpdateUserProfileHeaders
	Request shared.UpdateUserProfileRequest `request:"mediaType=application/json"`
}

type UpdateUserProfileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	UpdateUserProfileResult *shared.UpdateUserProfileResult
	// UserProfileNotFoundException
	UserProfileNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
