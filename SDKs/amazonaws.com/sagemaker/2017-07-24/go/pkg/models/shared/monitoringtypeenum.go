// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MonitoringTypeEnum string

const (
	MonitoringTypeEnumDataQuality         MonitoringTypeEnum = "DataQuality"
	MonitoringTypeEnumModelQuality        MonitoringTypeEnum = "ModelQuality"
	MonitoringTypeEnumModelBias           MonitoringTypeEnum = "ModelBias"
	MonitoringTypeEnumModelExplainability MonitoringTypeEnum = "ModelExplainability"
)

func (e MonitoringTypeEnum) ToPointer() *MonitoringTypeEnum {
	return &e
}

func (e *MonitoringTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DataQuality":
		fallthrough
	case "ModelQuality":
		fallthrough
	case "ModelBias":
		fallthrough
	case "ModelExplainability":
		*e = MonitoringTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitoringTypeEnum: %v", v)
	}
}
