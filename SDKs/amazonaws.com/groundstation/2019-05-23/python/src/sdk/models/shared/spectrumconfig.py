"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import frequency as shared_frequency
from ..shared import frequencybandwidth as shared_frequencybandwidth
from ..shared import polarization_enum as shared_polarization_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpectrumConfig:
    r"""Object that describes a spectral <code>Config</code>."""
    
    bandwidth: shared_frequencybandwidth.FrequencyBandwidth = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bandwidth') }})  
    center_frequency: shared_frequency.Frequency = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('centerFrequency') }})  
    polarization: Optional[shared_polarization_enum.PolarizationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('polarization'), 'exclude': lambda f: f is None }})  
    