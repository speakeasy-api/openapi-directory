<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LensReview - A lens review of a question.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LensReview
{
    /**
     * <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2::lens/serverless</code>.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1:123456789012:lens/my-lens</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
     * 
     * @var ?string $lensAlias
     */
	#[\JMS\Serializer\Annotation\SerializedName('LensAlias')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lensAlias = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LensArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lensArn = null;
    
    /**
     * The full name of the lens.
     * 
     * @var ?string $lensName
     */
	#[\JMS\Serializer\Annotation\SerializedName('LensName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lensName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LensStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LensStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LensStatusEnum $lensStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LensVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lensVersion = null;
    
    /**
     * The token to use to retrieve the next set of results.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('NextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * The notes associated with the workload.
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('Notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * List of pillar review summaries of lens review in a workload.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PillarReviewSummary> $pillarReviewSummaries
     */
	#[\JMS\Serializer\Annotation\SerializedName('PillarReviewSummaries')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PillarReviewSummary>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pillarReviewSummaries = null;
    
    /**
     * A map from risk names to the count of how questions have that rating.
     * 
     * @var ?array<string, int> $riskCounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('RiskCounts')]
    #[\JMS\Serializer\Annotation\Type('array<string, int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $riskCounts = null;
    
    /**
     * The date and time recorded.
     * 
     * @var ?\DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->lensAlias = null;
		$this->lensArn = null;
		$this->lensName = null;
		$this->lensStatus = null;
		$this->lensVersion = null;
		$this->nextToken = null;
		$this->notes = null;
		$this->pillarReviewSummaries = null;
		$this->riskCounts = null;
		$this->updatedAt = null;
	}
}
