/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ServiceMeshStatusDetails } from "./servicemeshstatusdetails";
import { Expose, Type } from "class-transformer";

/**
 * Lifecycle status of data plane management.
 */
export enum ServiceMeshDataPlaneManagementStateEnum {
  LifecycleStateUnspecified = "LIFECYCLE_STATE_UNSPECIFIED",
  Disabled = "DISABLED",
  FailedPrecondition = "FAILED_PRECONDITION",
  Provisioning = "PROVISIONING",
  Active = "ACTIVE",
  Stalled = "STALLED",
  NeedsAttention = "NEEDS_ATTENTION",
  Degraded = "DEGRADED",
}

/**
 * Status of data plane management. Only reported per-member.
 */
export class ServiceMeshDataPlaneManagement extends SpeakeasyBase {
  /**
   * Explanation of the status.
   */
  @SpeakeasyMetadata({ elemType: ServiceMeshStatusDetails })
  @Expose({ name: "details" })
  @Type(() => ServiceMeshStatusDetails)
  details?: ServiceMeshStatusDetails[];

  /**
   * Lifecycle status of data plane management.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ServiceMeshDataPlaneManagementStateEnum;
}
