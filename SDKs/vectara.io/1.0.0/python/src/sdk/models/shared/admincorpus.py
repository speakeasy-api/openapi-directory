"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import admindimension as shared_admindimension
from ..shared import adminfilterattribute as shared_adminfilterattribute
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AdminCorpus:
    
    custom_dimensions: Optional[list[shared_admindimension.AdminDimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customDimensions'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A description for the corpus."""  
    dt_provision: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dtProvision'), 'exclude': lambda f: f is None }})
    r"""The time at which the corpus was provisioned."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Whether the corpus is enabled for use or not."""  
    encoder_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encoderId'), 'exclude': lambda f: f is None }})
    r"""This is an advanced setting for changing the underlying model type.  The
    default value is \"1\", which is Vectara's high-performing global model.
    Underlying models may be swapped for some paying customers by contacting
    our support team.
    """  
    encrypted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encrypted'), 'exclude': lambda f: f is None }})
    r"""Encryption is on by default and cannot be turned off."""  
    filter_attributes: Optional[list[shared_adminfilterattribute.AdminFilterAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filterAttributes'), 'exclude': lambda f: f is None }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The Corpus ID."""  
    metadata_max_bytes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadataMaxBytes'), 'exclude': lambda f: f is None }})
    r"""An optional maximum size of the metadata that each document can contain."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the corpus."""  
    swap_ienc: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('swapIenc'), 'exclude': lambda f: f is None }})
    r"""The default query encoder is designed for normal question-answering types
    of queries when the text contains the answer.  Swapping the index encoder
    is generally rare, but can be used to help directly match questions to
    questions.  This can be useful if you have a FAQ dataset and you want to
    directly match the user question to the question in the FAQ.
    """  
    swap_qenc: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('swapQenc'), 'exclude': lambda f: f is None }})  
    textless: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textless'), 'exclude': lambda f: f is None }})
    r"""When a corpus is \\"textless\\", Vectara does not store the original text.
    Instead, Vectara converts the text to vectors and only retains metadata.
    """  
    