/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum UserInformationGenderEnum {
  Male = "male",
  Female = "female",
}

export enum UserInformationMaritalStatusEnum {
  Single = "single",
  Married = "married",
}

/**
 * Información relativa a la persona que hace login
 */
export class UserInformation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ID" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "birth_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  birthDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "birth_place" })
  birthPlace?: string;

  /**
   * Número de teléfono con el prefijo internacional, sin espacios
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cell_phone" })
  cellPhone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: UserInformationGenderEnum;

  /**
   * El valor aquí es muy variable de una entidad a otra: de indicar solamente si es cuenta propia o cuenta ajena a indicar el tipo de profesión
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job" })
  job?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "marital_status" })
  maritalStatus?: UserInformationMaritalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "postal_code" })
  postalCode?: string;
}
