"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import orderparametersserviceoffering as shared_orderparametersserviceoffering
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class OrderServiceOfferingRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of the resource"""  
    order_parameters_service_offering_input: shared_orderparametersserviceoffering.OrderParametersServiceOfferingInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Order parameters defining the service and provider control"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderServiceOffering200ApplicationJSON:
    r"""Returns a task ID for the order"""
    
    task_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('task_id'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class OrderServiceOfferingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    order_service_offering_200_application_json_object: Optional[OrderServiceOffering200ApplicationJSON] = dataclasses.field(default=None)
    r"""Returns a task ID for the order"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    