<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AppRestrictionsSchemaRestrictionRestrictionValue - A typed value for the restriction.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AppRestrictionsSchemaRestrictionRestrictionValue
{
    /**
     * The type of the value being provided.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AppRestrictionsSchemaRestrictionRestrictionValueTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AppRestrictionsSchemaRestrictionRestrictionValueTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AppRestrictionsSchemaRestrictionRestrictionValueTypeEnum $type = null;
    
    /**
     * The boolean value - this will only be present if type is bool.
     * 
     * @var ?bool $valueBool
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueBool')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $valueBool = null;
    
    /**
     * The integer value - this will only be present if type is integer.
     * 
     * @var ?int $valueInteger
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueInteger')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $valueInteger = null;
    
    /**
     * The list of string values - this will only be present if type is multiselect.
     * 
     * @var ?array<string> $valueMultiselect
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueMultiselect')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $valueMultiselect = null;
    
    /**
     * The string value - this will be present for types string, choice and hidden.
     * 
     * @var ?string $valueString
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueString')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $valueString = null;
    
	public function __construct()
	{
		$this->type = null;
		$this->valueBool = null;
		$this->valueInteger = null;
		$this->valueMultiselect = null;
		$this->valueString = null;
	}
}
