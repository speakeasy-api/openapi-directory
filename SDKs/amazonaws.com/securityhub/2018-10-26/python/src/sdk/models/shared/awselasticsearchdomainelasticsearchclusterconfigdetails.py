"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awselasticsearchdomainelasticsearchclusterconfigzoneawarenessconfigdetails as shared_awselasticsearchdomainelasticsearchclusterconfigzoneawarenessconfigdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsElasticsearchDomainElasticsearchClusterConfigDetails:
    r"""details about the configuration of an OpenSearch cluster."""
    
    dedicated_master_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DedicatedMasterCount'), 'exclude': lambda f: f is None }})  
    dedicated_master_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DedicatedMasterEnabled'), 'exclude': lambda f: f is None }})  
    dedicated_master_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DedicatedMasterType'), 'exclude': lambda f: f is None }})  
    instance_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceCount'), 'exclude': lambda f: f is None }})  
    instance_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceType'), 'exclude': lambda f: f is None }})  
    zone_awareness_config: Optional[shared_awselasticsearchdomainelasticsearchclusterconfigzoneawarenessconfigdetails.AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ZoneAwarenessConfig'), 'exclude': lambda f: f is None }})  
    zone_awareness_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ZoneAwarenessEnabled'), 'exclude': lambda f: f is None }})  
    