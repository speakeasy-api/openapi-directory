/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BookingAvailability200ApplicationJSONDataAvailability {
    /**
     * **indicator** - `true` if *this* tour grade is available to book
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("available")
    public Boolean available;

    public BookingAvailability200ApplicationJSONDataAvailability withAvailable(Boolean available) {
        this.available = available;
        return this;
    }
    
    /**
     * **date** on which *this* tour grade is available to be booked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookingDate")
    public String bookingDate;

    public BookingAvailability200ApplicationJSONDataAvailability withBookingDate(String bookingDate) {
        this.bookingDate = bookingDate;
        return this;
    }
    
    /**
     * **currency code** of the currency in which product pricing is displayed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;

    public BookingAvailability200ApplicationJSONDataAvailability withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * **alphanumeric identifier** for *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gradeCode")
    public String gradeCode;

    public BookingAvailability200ApplicationJSONDataAvailability withGradeCode(String gradeCode) {
        this.gradeCode = gradeCode;
        return this;
    }
    
    /**
     * **numeric merchant net rate** for *this* tour grade
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantNetPrice")
    public Double merchantNetPrice;

    public BookingAvailability200ApplicationJSONDataAvailability withMerchantNetPrice(Double merchantNetPrice) {
        this.merchantNetPrice = merchantNetPrice;
        return this;
    }
    
    /**
     * **currency-formatted merchant net rate** for *this* tour grade
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantNetPriceFormatted")
    public String merchantNetPriceFormatted;

    public BookingAvailability200ApplicationJSONDataAvailability withMerchantNetPriceFormatted(String merchantNetPriceFormatted) {
        this.merchantNetPriceFormatted = merchantNetPriceFormatted;
        return this;
    }
    
    /**
     * **numeric suggested retail price** for *this* tour grade
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retailPrice")
    public Double retailPrice;

    public BookingAvailability200ApplicationJSONDataAvailability withRetailPrice(Double retailPrice) {
        this.retailPrice = retailPrice;
        return this;
    }
    
    /**
     * **currency-formatted suggested retail price** for *this* tour grade
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retailPriceFormatted")
    public String retailPriceFormatted;

    public BookingAvailability200ApplicationJSONDataAvailability withRetailPriceFormatted(String retailPriceFormatted) {
        this.retailPriceFormatted = retailPriceFormatted;
        return this;
    }
    
    /**
     * **sort order** of this tour grade availability object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public Long sortOrder;

    public BookingAvailability200ApplicationJSONDataAvailability withSortOrder(Long sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * **natural-language explanation** as to why *this* tour grade is not available to be booked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unavailableReason")
    public String unavailableReason;

    public BookingAvailability200ApplicationJSONDataAvailability withUnavailableReason(String unavailableReason) {
        this.unavailableReason = unavailableReason;
        return this;
    }
    
    public BookingAvailability200ApplicationJSONDataAvailability(){}
}
