// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// TranscriptionJob - <p>Provides detailed information about a transcription job.</p> <p>To view the status of the specified transcription job, check the <code>TranscriptionJobStatus</code> field. If the status is <code>COMPLETED</code>, the job is finished and you can find the results at the location specified in <code>TranscriptFileUri</code>. If the status is <code>FAILED</code>, <code>FailureReason</code> provides details on why your transcription job failed.</p> <p>If you enabled content redaction, the redacted transcript can be found at the location specified in <code>RedactedTranscriptFileUri</code>.</p>
type TranscriptionJob struct {
	CompletionTime            *time.Time                    `json:"CompletionTime,omitempty"`
	ContentRedaction          *ContentRedaction             `json:"ContentRedaction,omitempty"`
	CreationTime              *time.Time                    `json:"CreationTime,omitempty"`
	FailureReason             *string                       `json:"FailureReason,omitempty"`
	IdentifiedLanguageScore   *float32                      `json:"IdentifiedLanguageScore,omitempty"`
	IdentifyLanguage          *bool                         `json:"IdentifyLanguage,omitempty"`
	IdentifyMultipleLanguages *bool                         `json:"IdentifyMultipleLanguages,omitempty"`
	JobExecutionSettings      *JobExecutionSettings         `json:"JobExecutionSettings,omitempty"`
	LanguageCode              *LanguageCodeEnum             `json:"LanguageCode,omitempty"`
	LanguageCodes             []LanguageCodeItem            `json:"LanguageCodes,omitempty"`
	LanguageIDSettings        map[string]LanguageIDSettings `json:"LanguageIdSettings,omitempty"`
	LanguageOptions           []LanguageCodeEnum            `json:"LanguageOptions,omitempty"`
	Media                     *Media                        `json:"Media,omitempty"`
	MediaFormat               *MediaFormatEnum              `json:"MediaFormat,omitempty"`
	MediaSampleRateHertz      *int64                        `json:"MediaSampleRateHertz,omitempty"`
	ModelSettings             *ModelSettings                `json:"ModelSettings,omitempty"`
	Settings                  *Settings                     `json:"Settings,omitempty"`
	StartTime                 *time.Time                    `json:"StartTime,omitempty"`
	Subtitles                 *SubtitlesOutput              `json:"Subtitles,omitempty"`
	Tags                      []Tag                         `json:"Tags,omitempty"`
	Transcript                *Transcript                   `json:"Transcript,omitempty"`
	TranscriptionJobName      *string                       `json:"TranscriptionJobName,omitempty"`
	TranscriptionJobStatus    *TranscriptionJobStatusEnum   `json:"TranscriptionJobStatus,omitempty"`
}
