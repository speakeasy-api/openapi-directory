<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - API Interface to retrieve company data and products from business registers
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
        /** Main endpoint */
		'https://api.kompany.com/',
	];
  	
    /**
     * Company Search methods
     * 
     * @var V1Company $$v1Company
     */
	public V1Company $v1Company;
	
    /**
     * US EIN tax number methods
     * 
     * @var V1EinVerification $$v1EinVerification
     */
	public V1EinVerification $v1EinVerification;
	
    /**
     * IBAN Verification methods
     * 
     * @var V1IbanVerification $$v1IbanVerification
     */
	public V1IbanVerification $v1IbanVerification;
	
    /**
     * NIF Verification methods
     * 
     * @var V1NifVerification $$v1NifVerification
     */
	public V1NifVerification $v1NifVerification;
	
    /**
     * Pep Sanction Check methods
     * 
     * @var V1Pepsanction $$v1Pepsanction
     */
	public V1Pepsanction $v1Pepsanction;
	
    /**
     * Product Search, Order and Retrieve methods
     * 
     * @var V1Product $$v1Product
     */
	public V1Product $v1Product;
	
    /**
     * System overview
     * 
     * @var V1System $$v1System
     */
	public V1System $v1System;
	
    /**
     * TIN Verification methods
     * 
     * @var V1TinVerification $$v1TinVerification
     */
	public V1TinVerification $v1TinVerification;
	
    /**
     * VAT Verification methods
     * 
     * @var V1VatVerification $$v1VatVerification
     */
	public V1VatVerification $v1VatVerification;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->v1Company = new V1Company(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1EinVerification = new V1EinVerification(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1IbanVerification = new V1IbanVerification(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1NifVerification = new V1NifVerification(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1Pepsanction = new V1Pepsanction(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1Product = new V1Product(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1System = new V1System(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1TinVerification = new V1TinVerification(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->v1VatVerification = new V1VatVerification(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}