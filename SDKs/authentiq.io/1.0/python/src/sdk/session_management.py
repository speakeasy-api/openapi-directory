"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class SessionManagement:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def authorize_iframe(self, request: operations.AuthorizeIframeRequest) -> operations.AuthorizeIframeResponse:
        r"""Include a session iframe
        An OpenID Connect Session Management iframe to facilitate e.g. single sign-on or remote logouts.
        
        The iframe implements the OIDC postMessage-based [change notification protocol](http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification) via which a client can receive notifications about session state changes.
        http://openid.net/specs/openid-connect-session-1_0.html#OPiframe - OIDC OP Session Management Iframe
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.AuthorizeIframeRequest, base_url, '/{client_id}/iframe', request)
        
        
        client = self._client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.AuthorizeIframeResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            

        return res

    