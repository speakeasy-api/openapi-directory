// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TableColumnPropertiesWidthTypeEnum - The width type of the column.
type TableColumnPropertiesWidthTypeEnum string

const (
	TableColumnPropertiesWidthTypeEnumWidthTypeUnspecified TableColumnPropertiesWidthTypeEnum = "WIDTH_TYPE_UNSPECIFIED"
	TableColumnPropertiesWidthTypeEnumEvenlyDistributed    TableColumnPropertiesWidthTypeEnum = "EVENLY_DISTRIBUTED"
	TableColumnPropertiesWidthTypeEnumFixedWidth           TableColumnPropertiesWidthTypeEnum = "FIXED_WIDTH"
)

func (e TableColumnPropertiesWidthTypeEnum) ToPointer() *TableColumnPropertiesWidthTypeEnum {
	return &e
}

func (e *TableColumnPropertiesWidthTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WIDTH_TYPE_UNSPECIFIED":
		fallthrough
	case "EVENLY_DISTRIBUTED":
		fallthrough
	case "FIXED_WIDTH":
		*e = TableColumnPropertiesWidthTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TableColumnPropertiesWidthTypeEnum: %v", v)
	}
}

// TableColumnProperties - The properties of a column in a table.
type TableColumnProperties struct {
	// A magnitude in a single direction in the specified units.
	Width *Dimension `json:"width,omitempty"`
	// The width type of the column.
	WidthType *TableColumnPropertiesWidthTypeEnum `json:"widthType,omitempty"`
}
