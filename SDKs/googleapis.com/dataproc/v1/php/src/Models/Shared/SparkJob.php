<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SparkJob - A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SparkJob
{
    /**
     * Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
     * 
     * @var ?array<string> $archiveUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('archiveUris')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $archiveUris = null;
    
    /**
     * Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
     * 
     * @var ?array<string> $args
     */
	#[\JMS\Serializer\Annotation\SerializedName('args')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $args = null;
    
    /**
     * Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
     * 
     * @var ?array<string> $fileUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileUris')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fileUris = null;
    
    /**
     * Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
     * 
     * @var ?array<string> $jarFileUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('jarFileUris')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $jarFileUris = null;
    
    /**
     * The runtime logging config of the job.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoggingConfig $loggingConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('loggingConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoggingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoggingConfig $loggingConfig = null;
    
    /**
     * The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jar_file_uris.
     * 
     * @var ?string $mainClass
     */
	#[\JMS\Serializer\Annotation\SerializedName('mainClass')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mainClass = null;
    
    /**
     * The HCFS URI of the jar file that contains the main class.
     * 
     * @var ?string $mainJarFileUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('mainJarFileUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mainJarFileUri = null;
    
    /**
     * Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
     * 
     * @var ?array<string, string> $properties
     */
	#[\JMS\Serializer\Annotation\SerializedName('properties')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $properties = null;
    
	public function __construct()
	{
		$this->archiveUris = null;
		$this->args = null;
		$this->fileUris = null;
		$this->jarFileUris = null;
		$this->loggingConfig = null;
		$this->mainClass = null;
		$this->mainJarFileUri = null;
		$this->properties = null;
	}
}
