"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aes128encryption as shared_aes128encryption
from ..shared import mpegcommonencryption as shared_mpegcommonencryption
from ..shared import sampleaesencryption as shared_sampleaesencryption
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Encryption:
    r"""Encryption settings."""
    
    aes128: Optional[shared_aes128encryption.Aes128Encryption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aes128'), 'exclude': lambda f: f is None }})
    r"""Configuration for AES-128 encryption."""  
    iv: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iv'), 'exclude': lambda f: f is None }})
    r"""Required. 128 bit Initialization Vector (IV) represented as lowercase hexadecimal digits."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Required. 128 bit encryption key represented as lowercase hexadecimal digits."""  
    mpeg_cenc: Optional[shared_mpegcommonencryption.MpegCommonEncryption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mpegCenc'), 'exclude': lambda f: f is None }})
    r"""Configuration for MPEG Common Encryption (MPEG-CENC)."""  
    sample_aes: Optional[shared_sampleaesencryption.SampleAesEncryption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleAes'), 'exclude': lambda f: f is None }})
    r"""Configuration for SAMPLE-AES encryption."""  
    