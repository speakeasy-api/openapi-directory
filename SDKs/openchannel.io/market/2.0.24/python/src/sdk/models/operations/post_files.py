"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PostFilesRequestBodyFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclasses.dataclass
class PostFilesRequestBody:
    
    file: PostFilesRequestBodyFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""The file to be uploaded"""  
    

@dataclasses.dataclass
class PostFilesRequest:
    
    request_body: PostFilesRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})  
    hash: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'hash', 'style': 'form', 'explode': True }})
    r"""A comma separated list of hashes to return in order to verify file integrity."""  
    is_private: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'isPrivate', 'style': 'form', 'explode': True }})
    r"""If true, this file will be protected as a private file and require the generation of a signed URL in order to download using the Download File API. The default is false."""  
    

@dataclasses.dataclass
class PostFilesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    