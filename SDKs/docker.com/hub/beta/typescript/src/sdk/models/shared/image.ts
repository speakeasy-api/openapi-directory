/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Layer } from "./layer";
import { Expose, Type } from "class-transformer";

/**
 * Status of the image
 */
export enum ImageStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class Image extends SpeakeasyBase {
  /**
   * CPU architecture
   */
  @SpeakeasyMetadata()
  @Expose({ name: "architecture" })
  architecture?: string;

  /**
   * image digest
   */
  @SpeakeasyMetadata()
  @Expose({ name: "digest" })
  digest?: string;

  /**
   * CPU features
   */
  @SpeakeasyMetadata()
  @Expose({ name: "features" })
  features?: string;

  /**
   * datetime of last pull
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_pulled" })
  lastPulled?: string;

  /**
   * datetime of last push
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_pushed" })
  lastPushed?: string;

  @SpeakeasyMetadata({ elemType: Layer })
  @Expose({ name: "layers" })
  @Type(() => Layer)
  layers?: Layer[];

  /**
   * operating system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os" })
  os?: string;

  /**
   * OS features
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_features" })
  osFeatures?: string;

  /**
   * OS version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_version" })
  osVersion?: string;

  /**
   * size of the image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  /**
   * Status of the image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ImageStatusEnum;

  /**
   * CPU variant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variant" })
  variant?: string;
}
