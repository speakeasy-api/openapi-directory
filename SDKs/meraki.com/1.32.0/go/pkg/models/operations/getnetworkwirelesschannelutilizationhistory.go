// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GetNetworkWirelessChannelUtilizationHistoryBandEnum - Filter results by band (either '2.4', '5' or '6').
type GetNetworkWirelessChannelUtilizationHistoryBandEnum string

const (
	GetNetworkWirelessChannelUtilizationHistoryBandEnumTwo4 GetNetworkWirelessChannelUtilizationHistoryBandEnum = "2.4"
	GetNetworkWirelessChannelUtilizationHistoryBandEnumFive GetNetworkWirelessChannelUtilizationHistoryBandEnum = "5"
	GetNetworkWirelessChannelUtilizationHistoryBandEnumSix  GetNetworkWirelessChannelUtilizationHistoryBandEnum = "6"
)

func (e GetNetworkWirelessChannelUtilizationHistoryBandEnum) ToPointer() *GetNetworkWirelessChannelUtilizationHistoryBandEnum {
	return &e
}

func (e *GetNetworkWirelessChannelUtilizationHistoryBandEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2.4":
		fallthrough
	case "5":
		fallthrough
	case "6":
		*e = GetNetworkWirelessChannelUtilizationHistoryBandEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNetworkWirelessChannelUtilizationHistoryBandEnum: %v", v)
	}
}

type GetNetworkWirelessChannelUtilizationHistoryRequest struct {
	// Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified.
	ApTag *string `queryParam:"style=form,explode=true,name=apTag"`
	// Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
	AutoResolution *bool `queryParam:"style=form,explode=true,name=autoResolution"`
	// Filter results by band (either '2.4', '5' or '6').
	Band *GetNetworkWirelessChannelUtilizationHistoryBandEnum `queryParam:"style=form,explode=true,name=band"`
	// Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history.
	ClientID *string `queryParam:"style=form,explode=true,name=clientId"`
	// Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified.
	DeviceSerial *string `queryParam:"style=form,explode=true,name=deviceSerial"`
	NetworkID    string  `pathParam:"style=simple,explode=false,name=networkId"`
	// The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400.
	Resolution *int64 `queryParam:"style=form,explode=true,name=resolution"`
	// The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
	T1 *string `queryParam:"style=form,explode=true,name=t1"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
}

type GetNetworkWirelessChannelUtilizationHistory200ApplicationJSON struct {
	// The end time of the query range
	EndTs *time.Time `json:"endTs,omitempty"`
	// The start time of the query range
	StartTs *time.Time `json:"startTs,omitempty"`
	// Average wifi utilization
	Utilization80211 *float32 `json:"utilization80211,omitempty"`
	// Average signal interference
	UtilizationNon80211 *float32 `json:"utilizationNon80211,omitempty"`
	// Total channel utilization
	UtilizationTotal *float32 `json:"utilizationTotal,omitempty"`
}

type GetNetworkWirelessChannelUtilizationHistoryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkWirelessChannelUtilizationHistory200ApplicationJSONObjects []GetNetworkWirelessChannelUtilizationHistory200ApplicationJSON
}
