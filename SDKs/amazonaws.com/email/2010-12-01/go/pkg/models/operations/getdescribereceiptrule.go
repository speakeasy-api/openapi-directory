// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeReceiptRuleActionEnum
type GETDescribeReceiptRuleActionEnum string

const (
	GETDescribeReceiptRuleActionEnumDescribeReceiptRule GETDescribeReceiptRuleActionEnum = "DescribeReceiptRule"
)

func (e GETDescribeReceiptRuleActionEnum) ToPointer() *GETDescribeReceiptRuleActionEnum {
	return &e
}

func (e *GETDescribeReceiptRuleActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeReceiptRule":
		*e = GETDescribeReceiptRuleActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeReceiptRuleActionEnum: %v", v)
	}
}

// GETDescribeReceiptRuleVersionEnum
type GETDescribeReceiptRuleVersionEnum string

const (
	GETDescribeReceiptRuleVersionEnumTwoThousandAndTen1201 GETDescribeReceiptRuleVersionEnum = "2010-12-01"
)

func (e GETDescribeReceiptRuleVersionEnum) ToPointer() *GETDescribeReceiptRuleVersionEnum {
	return &e
}

func (e *GETDescribeReceiptRuleVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETDescribeReceiptRuleVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeReceiptRuleVersionEnum: %v", v)
	}
}

type GETDescribeReceiptRuleRequest struct {
	Action GETDescribeReceiptRuleActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the receipt rule.
	RuleName string `queryParam:"style=form,explode=true,name=RuleName"`
	// The name of the receipt rule set that the receipt rule belongs to.
	RuleSetName       string                            `queryParam:"style=form,explode=true,name=RuleSetName"`
	Version           GETDescribeReceiptRuleVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeReceiptRuleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
