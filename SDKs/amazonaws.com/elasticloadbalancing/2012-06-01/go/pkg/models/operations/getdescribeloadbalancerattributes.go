// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeLoadBalancerAttributesActionEnum
type GETDescribeLoadBalancerAttributesActionEnum string

const (
	GETDescribeLoadBalancerAttributesActionEnumDescribeLoadBalancerAttributes GETDescribeLoadBalancerAttributesActionEnum = "DescribeLoadBalancerAttributes"
)

func (e *GETDescribeLoadBalancerAttributesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeLoadBalancerAttributes":
		*e = GETDescribeLoadBalancerAttributesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoadBalancerAttributesActionEnum: %s", s)
	}
}

// GETDescribeLoadBalancerAttributesVersionEnum
type GETDescribeLoadBalancerAttributesVersionEnum string

const (
	GETDescribeLoadBalancerAttributesVersionEnumTwoThousandAndTwelve0601 GETDescribeLoadBalancerAttributesVersionEnum = "2012-06-01"
)

func (e *GETDescribeLoadBalancerAttributesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-06-01":
		*e = GETDescribeLoadBalancerAttributesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoadBalancerAttributesVersionEnum: %s", s)
	}
}

type GETDescribeLoadBalancerAttributesQueryParams struct {
	Action GETDescribeLoadBalancerAttributesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the load balancer.
	LoadBalancerName string                                       `queryParam:"style=form,explode=true,name=LoadBalancerName"`
	Version          GETDescribeLoadBalancerAttributesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeLoadBalancerAttributesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeLoadBalancerAttributesRequest struct {
	QueryParams GETDescribeLoadBalancerAttributesQueryParams
	Headers     GETDescribeLoadBalancerAttributesHeaders
}

type GETDescribeLoadBalancerAttributesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
