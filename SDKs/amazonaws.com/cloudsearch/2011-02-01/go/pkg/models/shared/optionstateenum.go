// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OptionStateEnum - The state of processing a change to an option.
type OptionStateEnum string

const (
	OptionStateEnumRequiresIndexDocuments OptionStateEnum = "RequiresIndexDocuments"
	OptionStateEnumProcessing             OptionStateEnum = "Processing"
	OptionStateEnumActive                 OptionStateEnum = "Active"
)

func (e OptionStateEnum) ToPointer() *OptionStateEnum {
	return &e
}

func (e *OptionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequiresIndexDocuments":
		fallthrough
	case "Processing":
		fallthrough
	case "Active":
		*e = OptionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OptionStateEnum: %v", v)
	}
}
