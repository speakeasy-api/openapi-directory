"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import networkpathcomponentdetails as shared_networkpathcomponentdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkHeader:
    r"""Details about a network path component that occurs before or after the current component."""
    
    destination: Optional[shared_networkpathcomponentdetails.NetworkPathComponentDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Destination'), 'exclude': lambda f: f is None }})  
    protocol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Protocol'), 'exclude': lambda f: f is None }})  
    source: Optional[shared_networkpathcomponentdetails.NetworkPathComponentDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Source'), 'exclude': lambda f: f is None }})  
    