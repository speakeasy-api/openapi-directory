/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class CreateTrialComponentRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayName")
    public String displayName;

    public CreateTrialComponentRequest withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;

    public CreateTrialComponentRequest withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputArtifacts")
    public java.util.Map<String, TrialComponentArtifact> inputArtifacts;

    public CreateTrialComponentRequest withInputArtifacts(java.util.Map<String, TrialComponentArtifact> inputArtifacts) {
        this.inputArtifacts = inputArtifacts;
        return this;
    }
    
    /**
     * Metadata properties of the tracking entity, trial, or trial component.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetadataProperties")
    public MetadataProperties metadataProperties;

    public CreateTrialComponentRequest withMetadataProperties(MetadataProperties metadataProperties) {
        this.metadataProperties = metadataProperties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputArtifacts")
    public java.util.Map<String, TrialComponentArtifact> outputArtifacts;

    public CreateTrialComponentRequest withOutputArtifacts(java.util.Map<String, TrialComponentArtifact> outputArtifacts) {
        this.outputArtifacts = outputArtifacts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parameters")
    public java.util.Map<String, TrialComponentParameterValue> parameters;

    public CreateTrialComponentRequest withParameters(java.util.Map<String, TrialComponentParameterValue> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;

    public CreateTrialComponentRequest withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public TrialComponentStatus status;

    public CreateTrialComponentRequest withStatus(TrialComponentStatus status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;

    public CreateTrialComponentRequest withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonProperty("TrialComponentName")
    public String trialComponentName;

    public CreateTrialComponentRequest withTrialComponentName(String trialComponentName) {
        this.trialComponentName = trialComponentName;
        return this;
    }
    
    public CreateTrialComponentRequest(@JsonProperty("TrialComponentName") String trialComponentName) {
        this.trialComponentName = trialComponentName;
  }
}
