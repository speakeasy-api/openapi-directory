/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProductData } from "./productdata";
import { TransactionData } from "./transactiondata";
import { Expose, Type } from "class-transformer";

/**
 * Action associated with this e-commerce action.
 */
export enum EcommerceDataActionTypeEnum {
  Unknown = "UNKNOWN",
  Click = "CLICK",
  DetailsView = "DETAILS_VIEW",
  AddToCart = "ADD_TO_CART",
  RemoveFromCart = "REMOVE_FROM_CART",
  Checkout = "CHECKOUT",
  Payment = "PAYMENT",
  Refund = "REFUND",
  CheckoutOption = "CHECKOUT_OPTION",
}

/**
 * The type of this e-commerce activity.
 */
export enum EcommerceDataEcommerceTypeEnum {
  EcommerceTypeUnspecified = "ECOMMERCE_TYPE_UNSPECIFIED",
  Classic = "CLASSIC",
  Enhanced = "ENHANCED",
}

/**
 * E-commerce details associated with the user activity.
 */
export class EcommerceData extends SpeakeasyBase {
  /**
   * Action associated with this e-commerce action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actionType" })
  actionType?: EcommerceDataActionTypeEnum;

  /**
   * The type of this e-commerce activity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ecommerceType" })
  ecommerceType?: EcommerceDataEcommerceTypeEnum;

  /**
   * Details of the products in this transaction.
   */
  @SpeakeasyMetadata({ elemType: ProductData })
  @Expose({ name: "products" })
  @Type(() => ProductData)
  products?: ProductData[];

  /**
   * Represents details collected when the visitor performs a transaction on the page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction" })
  @Type(() => TransactionData)
  transaction?: TransactionData;
}
