"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lendingdetection as shared_lendingdetection
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LendingField:
    r"""Holds the normalized key-value pairs returned by AnalyzeDocument, including the document type, detected text, and geometry."""
    
    key_detection: Optional[shared_lendingdetection.LendingDetection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyDetection'), 'exclude': lambda f: f is None }})
    r"""The results extracted for a lending document."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    value_detections: Optional[list[shared_lendingdetection.LendingDetection]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValueDetections'), 'exclude': lambda f: f is None }})  
    