"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional

class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum(str, Enum):
    r"""The state of the association."""
    ASSOCIATING = 'associating'
    ASSOCIATED = 'associated'
    DISASSOCIATING = 'disassociating'
    DISASSOCIATED = 'disassociated'


@dataclasses.dataclass
class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociation:
    r"""The association."""
    
    state: Optional[DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum] = dataclasses.field(default=None)  
    transit_gateway_route_table_id: Optional[str] = dataclasses.field(default=None)  
    
class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum(str, Enum):
    r"""The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated."""
    VPC = 'vpc'
    VPN = 'vpn'
    DIRECT_CONNECT_GATEWAY = 'direct-connect-gateway'
    CONNECT = 'connect'
    PEERING = 'peering'
    TGW_PEERING = 'tgw-peering'

class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum(str, Enum):
    r"""The attachment state. Note that the <code>initiating</code> state has been deprecated."""
    INITIATING = 'initiating'
    INITIATING_REQUEST = 'initiatingRequest'
    PENDING_ACCEPTANCE = 'pendingAcceptance'
    ROLLING_BACK = 'rollingBack'
    PENDING = 'pending'
    AVAILABLE = 'available'
    MODIFYING = 'modifying'
    DELETING = 'deleting'
    DELETED = 'deleted'
    FAILED = 'failed'
    REJECTED = 'rejected'
    REJECTING = 'rejecting'
    FAILING = 'failing'


@dataclasses.dataclass
class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments:
    r"""Describes an attachment between a resource and a transit gateway."""
    
    association: Optional[DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociation] = dataclasses.field(default=None)  
    creation_time: Optional[datetime] = dataclasses.field(default=None)  
    resource_id: Optional[str] = dataclasses.field(default=None)  
    resource_owner_id: Optional[str] = dataclasses.field(default=None)  
    resource_type: Optional[DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum] = dataclasses.field(default=None)  
    state: Optional[DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags]] = dataclasses.field(default=None)  
    transit_gateway_attachment_id: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_id: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_owner_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeTransitGatewayAttachmentsResult:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_attachments: Optional[list[DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments]] = dataclasses.field(default=None)  
    