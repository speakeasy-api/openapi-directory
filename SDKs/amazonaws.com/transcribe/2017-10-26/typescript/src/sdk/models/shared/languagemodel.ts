/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BaseModelNameEnum } from "./basemodelnameenum";
import { CLMLanguageCodeEnum } from "./clmlanguagecodeenum";
import { InputDataConfig } from "./inputdataconfig";
import { ModelStatusEnum } from "./modelstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Provides information about a custom language model, including:</p> <ul> <li> <p>The base model name</p> </li> <li> <p>When the model was created</p> </li> <li> <p>The location of the files used to train the model</p> </li> <li> <p>When the model was last modified</p> </li> <li> <p>The name you chose for the model</p> </li> <li> <p>The model's language</p> </li> <li> <p>The model's processing state</p> </li> <li> <p>Any available upgrades for the base model</p> </li> </ul>
 */
export class LanguageModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BaseModelName" })
  baseModelName?: BaseModelNameEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataConfig" })
  @Type(() => InputDataConfig)
  inputDataConfig?: InputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "LanguageCode" })
  languageCode?: CLMLanguageCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelName" })
  modelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelStatus" })
  modelStatus?: ModelStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpgradeAvailability" })
  upgradeAvailability?: boolean;
}
