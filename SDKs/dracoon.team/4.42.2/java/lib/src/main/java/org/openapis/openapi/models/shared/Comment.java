/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Comment - Node comment information
 */
public class Comment {
    /**
     * Creation date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public Comment withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonProperty("createdBy")
    public UserInfo createdBy;
    public Comment withCreatedBy(UserInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Comment ID
     */
    @JsonProperty("id")
    public Long id;
    public Comment withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Determines whether comment was edited or not
     */
    @JsonProperty("isChanged")
    public Boolean isChanged;
    public Comment withIsChanged(Boolean isChanged) {
        this.isChanged = isChanged;
        return this;
    }
    
    /**
     * Determines whether comment was deleted or not
     */
    @JsonProperty("isDeleted")
    public Boolean isDeleted;
    public Comment withIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
        return this;
    }
    
    /**
     * Comment text
     */
    @JsonProperty("text")
    public String text;
    public Comment withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * Modification date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public Comment withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonProperty("updatedBy")
    public UserInfo updatedBy;
    public Comment withUpdatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
