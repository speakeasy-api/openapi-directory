"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRetailV2RuleOnewaySynonymsAction:
    r"""Maps a set of terms to a set of synonyms. Set of synonyms will be treated as synonyms of each query term only. `query_terms` will not be treated as synonyms of each other. Example: \\"sneakers\\" will use a synonym of \\"shoes\\". \\"shoes\\" will not use a synonym of \\"sneakers\\"."""
    
    oneway_terms: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onewayTerms'), 'exclude': lambda f: f is None }})
    r"""Will be [deprecated = true] post migration;"""  
    query_terms: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryTerms'), 'exclude': lambda f: f is None }})
    r"""Terms from the search query. Will treat synonyms as their synonyms. Not themselves synonyms of the synonyms. Can specify up to 100 terms."""  
    synonyms: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('synonyms'), 'exclude': lambda f: f is None }})
    r"""Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100 synonyms."""  
    