// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OrganizationTypeEnum - Type of organization.
//
// Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
type OrganizationTypeEnum string

const (
	OrganizationTypeEnumAssociationIncorporated  OrganizationTypeEnum = "associationIncorporated"
	OrganizationTypeEnumGovernmentalOrganization OrganizationTypeEnum = "governmentalOrganization"
	OrganizationTypeEnumListedPublicCompany      OrganizationTypeEnum = "listedPublicCompany"
	OrganizationTypeEnumNonProfit                OrganizationTypeEnum = "nonProfit"
	OrganizationTypeEnumPartnershipIncorporated  OrganizationTypeEnum = "partnershipIncorporated"
	OrganizationTypeEnumPrivateCompany           OrganizationTypeEnum = "privateCompany"
)

func (e OrganizationTypeEnum) ToPointer() *OrganizationTypeEnum {
	return &e
}

func (e *OrganizationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associationIncorporated":
		fallthrough
	case "governmentalOrganization":
		fallthrough
	case "listedPublicCompany":
		fallthrough
	case "nonProfit":
		fallthrough
	case "partnershipIncorporated":
		fallthrough
	case "privateCompany":
		*e = OrganizationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationTypeEnum: %v", v)
	}
}

// OrganizationVatAbsenceReasonEnum - The reason the organization has not provided a VAT number.
//
// Possible values: **industryExemption**, **belowTaxThreshold**.
type OrganizationVatAbsenceReasonEnum string

const (
	OrganizationVatAbsenceReasonEnumIndustryExemption OrganizationVatAbsenceReasonEnum = "industryExemption"
	OrganizationVatAbsenceReasonEnumBelowTaxThreshold OrganizationVatAbsenceReasonEnum = "belowTaxThreshold"
)

func (e OrganizationVatAbsenceReasonEnum) ToPointer() *OrganizationVatAbsenceReasonEnum {
	return &e
}

func (e *OrganizationVatAbsenceReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "industryExemption":
		fallthrough
	case "belowTaxThreshold":
		*e = OrganizationVatAbsenceReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationVatAbsenceReasonEnum: %v", v)
	}
}

type OrganizationInput struct {
	// The date when the organization was incorporated in YYYY-MM-DD format.
	DateOfIncorporation *string `json:"dateOfIncorporation,omitempty"`
	// Your description for the organization.
	Description *string `json:"description,omitempty"`
	// The organization's trading name, if different from the registered legal name.
	DoingBusinessAs *string `json:"doingBusinessAs,omitempty"`
	// The email address of the legal entity.
	Email *string `json:"email,omitempty"`
	// The organization's legal name.
	LegalName                string       `json:"legalName"`
	Phone                    *PhoneNumber `json:"phone,omitempty"`
	PrincipalPlaceOfBusiness *Address     `json:"principalPlaceOfBusiness,omitempty"`
	RegisteredAddress        Address      `json:"registeredAddress"`
	// The organization's registration number.
	RegistrationNumber *string    `json:"registrationNumber,omitempty"`
	StockData          *StockData `json:"stockData,omitempty"`
	// The tax information of the organization.
	TaxInformation             []TaxInformation            `json:"taxInformation,omitempty"`
	TaxReportingClassification *TaxReportingClassification `json:"taxReportingClassification,omitempty"`
	// Type of organization.
	//
	// Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
	Type *OrganizationTypeEnum `json:"type,omitempty"`
	// The reason the organization has not provided a VAT number.
	//
	// Possible values: **industryExemption**, **belowTaxThreshold**.
	VatAbsenceReason *OrganizationVatAbsenceReasonEnum `json:"vatAbsenceReason,omitempty"`
	// The organization's VAT number.
	VatNumber *string       `json:"vatNumber,omitempty"`
	WebData   *WebDataInput `json:"webData,omitempty"`
}

type Organization struct {
	// The date when the organization was incorporated in YYYY-MM-DD format.
	DateOfIncorporation *string `json:"dateOfIncorporation,omitempty"`
	// Your description for the organization.
	Description *string `json:"description,omitempty"`
	// The organization's trading name, if different from the registered legal name.
	DoingBusinessAs *string `json:"doingBusinessAs,omitempty"`
	// The email address of the legal entity.
	Email *string `json:"email,omitempty"`
	// The organization's legal name.
	LegalName                string       `json:"legalName"`
	Phone                    *PhoneNumber `json:"phone,omitempty"`
	PrincipalPlaceOfBusiness *Address     `json:"principalPlaceOfBusiness,omitempty"`
	RegisteredAddress        Address      `json:"registeredAddress"`
	// The organization's registration number.
	RegistrationNumber *string    `json:"registrationNumber,omitempty"`
	StockData          *StockData `json:"stockData,omitempty"`
	// The tax information of the organization.
	TaxInformation             []TaxInformation            `json:"taxInformation,omitempty"`
	TaxReportingClassification *TaxReportingClassification `json:"taxReportingClassification,omitempty"`
	// Type of organization.
	//
	// Possible values: **associationIncorporated**, **governmentalOrganization**, **listedPublicCompany**, **nonProfit**, **partnershipIncorporated**, **privateCompany**.
	Type *OrganizationTypeEnum `json:"type,omitempty"`
	// The reason the organization has not provided a VAT number.
	//
	// Possible values: **industryExemption**, **belowTaxThreshold**.
	VatAbsenceReason *OrganizationVatAbsenceReasonEnum `json:"vatAbsenceReason,omitempty"`
	// The organization's VAT number.
	VatNumber *string  `json:"vatNumber,omitempty"`
	WebData   *WebData `json:"webData,omitempty"`
}
