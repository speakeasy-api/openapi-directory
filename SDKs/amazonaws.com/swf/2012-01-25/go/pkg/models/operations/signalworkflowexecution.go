// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SignalWorkflowExecutionXAmzTargetEnum
type SignalWorkflowExecutionXAmzTargetEnum string

const (
	SignalWorkflowExecutionXAmzTargetEnumSimpleWorkflowServiceSignalWorkflowExecution SignalWorkflowExecutionXAmzTargetEnum = "SimpleWorkflowService.SignalWorkflowExecution"
)

func (e SignalWorkflowExecutionXAmzTargetEnum) ToPointer() *SignalWorkflowExecutionXAmzTargetEnum {
	return &e
}

func (e *SignalWorkflowExecutionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SimpleWorkflowService.SignalWorkflowExecution":
		*e = SignalWorkflowExecutionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SignalWorkflowExecutionXAmzTargetEnum: %v", v)
	}
}

type SignalWorkflowExecutionRequest struct {
	SignalWorkflowExecutionInput shared.SignalWorkflowExecutionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   SignalWorkflowExecutionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SignalWorkflowExecutionResponse struct {
	ContentType string
	// OperationNotPermittedFault
	OperationNotPermittedFault interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// UnknownResourceFault
	UnknownResourceFault interface{}
}
