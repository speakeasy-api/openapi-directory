// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RequestFileVersionListXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type RequestFileVersionListXSdsDateFormatEnum string

const (
	RequestFileVersionListXSdsDateFormatEnumUtc    RequestFileVersionListXSdsDateFormatEnum = "UTC"
	RequestFileVersionListXSdsDateFormatEnumLocal  RequestFileVersionListXSdsDateFormatEnum = "LOCAL"
	RequestFileVersionListXSdsDateFormatEnumOffset RequestFileVersionListXSdsDateFormatEnum = "OFFSET"
	RequestFileVersionListXSdsDateFormatEnumEpoch  RequestFileVersionListXSdsDateFormatEnum = "EPOCH"
	RequestFileVersionListXSdsDateFormatEnumLeet   RequestFileVersionListXSdsDateFormatEnum = "LEET"
)

func (e RequestFileVersionListXSdsDateFormatEnum) ToPointer() *RequestFileVersionListXSdsDateFormatEnum {
	return &e
}

func (e *RequestFileVersionListXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = RequestFileVersionListXSdsDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestFileVersionListXSdsDateFormatEnum: %v", v)
	}
}

type RequestFileVersionListRequest struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *RequestFileVersionListXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
	// Range limit.
	//
	// Maximum 500.
	//
	//  For more results please use paging (`offset` + `limit`).
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Range offset
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Reference ID
	ReferenceID int64 `pathParam:"style=simple,explode=false,name=reference_id"`
}

type RequestFileVersionListResponse struct {
	ContentType string
	// Unauthorized
	ErrorResponse *shared.ErrorResponse
	// OK
	FileVersionList *shared.FileVersionList
	StatusCode      int
	RawResponse     *http.Response
}
