// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EbsVolumeTypeEnum string

const (
	EbsVolumeTypeEnumStandard EbsVolumeTypeEnum = "standard"
	EbsVolumeTypeEnumIo1      EbsVolumeTypeEnum = "io1"
	EbsVolumeTypeEnumIo2      EbsVolumeTypeEnum = "io2"
	EbsVolumeTypeEnumGp2      EbsVolumeTypeEnum = "gp2"
	EbsVolumeTypeEnumGp3      EbsVolumeTypeEnum = "gp3"
	EbsVolumeTypeEnumSc1      EbsVolumeTypeEnum = "sc1"
	EbsVolumeTypeEnumSt1      EbsVolumeTypeEnum = "st1"
)

func (e *EbsVolumeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "standard":
		fallthrough
	case "io1":
		fallthrough
	case "io2":
		fallthrough
	case "gp2":
		fallthrough
	case "gp3":
		fallthrough
	case "sc1":
		fallthrough
	case "st1":
		*e = EbsVolumeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EbsVolumeTypeEnum: %s", s)
	}
}
