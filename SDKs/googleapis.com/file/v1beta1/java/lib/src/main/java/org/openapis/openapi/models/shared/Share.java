/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Share - A Filestore share.
 */
public class Share {
    /**
     * Immutable. Full name of the Cloud Filestore Backup resource that this Share is restored from, in the format of projects/{project_id}/locations/{location_id}/backups/{backup_id}. Empty, if the Share is created from scratch and not restored from a backup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backup")
    public String backup;

    public Share withBackup(String backup) {
        this.backup = backup;
        return this;
    }
    
    /**
     * File share capacity in gigabytes (GB). Filestore defines 1 GB as 1024^3 bytes. Must be greater than 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capacityGb")
    public String capacityGb;

    public Share withCapacityGb(String capacityGb) {
        this.capacityGb = capacityGb;
        return this;
    }
    
    /**
     * Output only. The time when the share was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Share withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A description of the share with 2048 characters or less. Requests with longer descriptions will be rejected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Share withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Resource labels to represent user provided metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Share withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The mount name of the share. Must be 63 characters or less and consist of uppercase or lowercase letters, numbers, and underscores.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mountName")
    public String mountName;

    public Share withMountName(String mountName) {
        this.mountName = mountName;
        return this;
    }
    
    /**
     * Output only. The resource name of the share, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/shares/{share_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Share withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Nfs Export Options. There is a limit of 10 export options per file share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nfsExportOptions")
    public NfsExportOptions[] nfsExportOptions;

    public Share withNfsExportOptions(NfsExportOptions[] nfsExportOptions) {
        this.nfsExportOptions = nfsExportOptions;
        return this;
    }
    
    /**
     * Output only. The share state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ShareStateEnum state;

    public Share withState(ShareStateEnum state) {
        this.state = state;
        return this;
    }
    
    public Share(){}
}
