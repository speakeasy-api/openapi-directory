/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles {
    /**
     * The URL using which the archived file can be downloaded. To download the archived file of a meeting or a webinar hosted in your account, create a [Zoom JWT App Type](https://marketplace.zoom.us/docs/guides/getting-started/app-types/create-jwt-app). Use the generated JWT token as the value of the access_token query parameter and include this query parameter at the end of the URL as shown in the example.
     *  
     * Example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{Your-JWT}}`
     * 
     * If a user has authorized and installed your OAuth app that supports archiving, use the user\u2019s [OAuth access token](https://marketplace.zoom.us/docs/guides/auth/oauth) to download the file.
     * 
     * Example: `https://{{base-domain}}/rec/archive/download/xxx?access_token={{ OAuth Access Token }}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("download_url")
    public String downloadUrl;
    public ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles withDownloadUrl(String downloadUrl) {
        this.downloadUrl = downloadUrl;
        return this;
    }
    
    /**
     * Extension of the recording file.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_extension")
    public String fileExtension;
    public ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles withFileExtension(String fileExtension) {
        this.fileExtension = fileExtension;
        return this;
    }
    
    /**
     * The recording file size.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_size")
    public Long fileSize;
    public ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles withFileSize(Long fileSize) {
        this.fileSize = fileSize;
        return this;
    }
    
    /**
     * Recorded file type. The value of this field could be one of the following:
     * 
     * `MP4`: Video file of the recording.&lt;br&gt;
     * `M4A`: Audio-only file of the recording.&lt;br&gt;
     * `TRANSCRIPT`: Transcription file of the recording in VTT format.
     * CHAT: A TXT file containing in-meeting chat messages that were sent during the meeting.&lt;br&gt;
     * `CC`: File containing closed captions of the recording in VTT file format.&lt;br&gt;
     * `CSV`: File containing polling data in csv format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_type")
    public String fileType;
    public ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles withFileType(String fileType) {
        this.fileType = fileType;
        return this;
    }
    
    /**
     * Unique identifier of the archived file.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The recording type. The value of this field can be one of the following:
     * * `shared_screen_with_speaker_view(CC)`
     * * `shared_screen_with_speaker_view`
     * * `shared_screen_with_gallery_view`
     * * `speaker_view`
     * * `gallery_view`
     * * `shared_screen`
     * * `audio_only`
     * * `audio_transcript`
     * * `chat_file`,
     * * `active_speaker`
     * * `host_video`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_type")
    public String recordingType;
    public ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles withRecordingType(String recordingType) {
        this.recordingType = recordingType;
        return this;
    }
    
    /**
     * Status of the archived file.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public ListArchivedFiles200ApplicationJSONMeetingsArchiveFiles withStatus(String status) {
        this.status = status;
        return this;
    }
    
}
