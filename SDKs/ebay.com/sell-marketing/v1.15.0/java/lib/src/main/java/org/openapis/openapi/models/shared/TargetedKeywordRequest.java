/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TargetedKeywordRequest - A type that provides details for the targeted keywords.
 */
public class TargetedKeywordRequest {
    /**
     * A field used to indicate whether additional information and insight data shall be provided for suggested keywords.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Valid Value:&lt;/strong&gt; &lt;code&gt;KEYWORD_INSIGHTS&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalInfo")
    public String[] additionalInfo;

    public TargetedKeywordRequest withAdditionalInfo(String[] additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }
    
    /**
     * A field used to indicate that the keywords already selected by sellers for the specified listing IDs should be filtered out of the response, and only new and unique keyword recommendations shall be returned.&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;Valid Value:&lt;/strong&gt; &lt;code&gt;ADOPTED_KEYWORDS&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exclusions")
    public String[] exclusions;

    public TargetedKeywordRequest withExclusions(String[] exclusions) {
        this.exclusions = exclusions;
        return this;
    }
    
    /**
     * A set of comma-separated listing IDs in the paginated collection. &lt;br /&gt;&lt;br /&gt;&lt;b&gt;Maximum number of listings requested: &lt;/b&gt;300
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingIds")
    public String[] listingIds;

    public TargetedKeywordRequest withListingIds(String[] listingIds) {
        this.listingIds = listingIds;
        return this;
    }
    
    /**
     * A field that defines the match type for the keyword.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;BROAD&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;EXACT&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;PHRASE&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt; For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:MatchTypeEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("matchType")
    public String matchType;

    public TargetedKeywordRequest withMatchType(String matchType) {
        this.matchType = matchType;
        return this;
    }
    
    public TargetedKeywordRequest(){}
}
