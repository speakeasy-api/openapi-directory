// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type ProductsAPIPatchProduct2RequestBodyType string

const (
	ProductsAPIPatchProduct2RequestBodyTypeProductCreateModify ProductsAPIPatchProduct2RequestBodyType = "ProductCreateModify"
)

type ProductsAPIPatchProduct2RequestBody struct {
	ProductCreateModify *shared.ProductCreateModify

	Type ProductsAPIPatchProduct2RequestBodyType
}

func CreateProductsAPIPatchProduct2RequestBodyProductCreateModify(productCreateModify shared.ProductCreateModify) ProductsAPIPatchProduct2RequestBody {
	typ := ProductsAPIPatchProduct2RequestBodyTypeProductCreateModify

	return ProductsAPIPatchProduct2RequestBody{
		ProductCreateModify: &productCreateModify,
		Type:                typ,
	}
}

func (u *ProductsAPIPatchProduct2RequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	productCreateModify := new(shared.ProductCreateModify)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&productCreateModify); err == nil {
		u.ProductCreateModify = productCreateModify
		u.Type = ProductsAPIPatchProduct2RequestBodyTypeProductCreateModify
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u ProductsAPIPatchProduct2RequestBody) MarshalJSON() ([]byte, error) {
	if u.ProductCreateModify != nil {
		return json.Marshal(u.ProductCreateModify)
	}

	return nil, nil
}

type ProductsAPIPatchProduct2Request struct {
	Request ProductsAPIPatchProduct2RequestBody `request:"mediaType=application/json"`
}

type ProductsAPIPatchProduct2Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
