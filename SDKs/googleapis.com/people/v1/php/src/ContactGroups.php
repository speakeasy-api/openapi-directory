<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class ContactGroups 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Get a list of contact groups owned by the authenticated user by specifying a list of contact group resource names.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetResponse
     */
	public function peopleContactGroupsBatchGet(
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/contactGroups:batchGet');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsBatchGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->batchGetContactGroupsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BatchGetContactGroupsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Create a new contact group owned by the authenticated user. Created contact group names must be unique to the users contact groups. Attempting to create a group with a duplicate name will return a HTTP 409 error. Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateResponse
     */
	public function peopleContactGroupsCreate(
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/contactGroups');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "createContactGroupRequestInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->contactGroup = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ContactGroup', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Delete an existing contact group owned by the authenticated user by specifying a contact group resource name. Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteResponse
     */
	public function peopleContactGroupsDelete(
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resourceName}', \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->empty = $serializer->deserialize((string)$httpResponse->getBody(), 'array<string, mixed>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all contact groups owned by the authenticated user. Members of the contact groups are not populated.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListResponse
     */
	public function peopleContactGroupsList(
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/contactGroups');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listContactGroupsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListContactGroupsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Modify the members of a contact group owned by the authenticated user. The only system contact groups that can have members added are `contactGroups/myContacts` and `contactGroups/starred`. Other system contact groups are deprecated and can only have contacts removed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifyRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifySecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifyResponse
     */
	public function peopleContactGroupsMembersModify(
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifyRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifySecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resourceName}/members:modify', \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifyRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "modifyContactGroupMembersRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifyRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsMembersModifyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->modifyContactGroupMembersResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ModifyContactGroupMembersResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update the name of an existing contact group owned by the authenticated user. Updated contact group names must be unique to the users contact groups. Attempting to create a group with a duplicate name will return a HTTP 409 error. Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateResponse
     */
	public function peopleContactGroupsUpdate(
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resourceName}', \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "updateContactGroupRequestInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PeopleContactGroupsUpdateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->contactGroup = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ContactGroup', 'json');
            }
        }

        return $response;
    }
}