/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { VideoProperties } from "./videoproperties";
import { Expose, Type } from "class-transformer";

/**
 * The video source.
 */
export enum VideoSourceEnum {
  SourceUnspecified = "SOURCE_UNSPECIFIED",
  Youtube = "YOUTUBE",
  Drive = "DRIVE",
}

/**
 * A PageElement kind representing a video.
 */
export class Video extends SpeakeasyBase {
  /**
   * The video source's unique identifier for this video.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The video source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: VideoSourceEnum;

  /**
   * An URL to a video. The URL is valid as long as the source video exists and sharing settings do not change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The properties of the Video.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoProperties" })
  @Type(() => VideoProperties)
  videoProperties?: VideoProperties;
}
