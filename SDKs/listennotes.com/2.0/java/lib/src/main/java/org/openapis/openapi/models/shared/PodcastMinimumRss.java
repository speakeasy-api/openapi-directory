/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PodcastMinimumRss - Triggered by your request to DELETE /podcasts/{id}, if the podcast is actually deleted.
 */
public class PodcastMinimumRss {
    /**
     * Podcast id, which can be used to further fetch detailed podcast metadata via `GET /podcasts/{id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public PodcastMinimumRss withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Image url for this podcast's artwork. If you are using PRO/ENTERPRISE plan, then it's
     * a high resolution image (1400x1400). If you are using FREE plan, then it's the same as **thumbnail**,
     * low resolution image (300x300).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public String image;

    public PodcastMinimumRss withImage(String image) {
        this.image = image;
        return this;
    }
    
    /**
     * The url of this podcast on [ListenNotes.com](https://www.ListenNotes.com).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listennotes_url")
    public String listennotesUrl;

    public PodcastMinimumRss withListennotesUrl(String listennotesUrl) {
        this.listennotesUrl = listennotesUrl;
        return this;
    }
    
    /**
     * Podcast publisher name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisher")
    public String publisher;

    public PodcastMinimumRss withPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }
    
    /**
     * RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rss")
    public String rss;

    public PodcastMinimumRss withRss(String rss) {
        this.rss = rss;
        return this;
    }
    
    /**
     * Thumbnail image url for this podcast's artwork (300x300).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnail")
    public String thumbnail;

    public PodcastMinimumRss withThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
        return this;
    }
    
    /**
     * Podcast name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public PodcastMinimumRss withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public PodcastMinimumRss(){}
}
