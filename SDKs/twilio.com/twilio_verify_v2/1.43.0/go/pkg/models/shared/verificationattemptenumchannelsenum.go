// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VerificationAttemptEnumChannelsEnum - Filter used to query Verification Attempts by communication channel. Valid values are `SMS` and `CALL`
type VerificationAttemptEnumChannelsEnum string

const (
	VerificationAttemptEnumChannelsEnumSms      VerificationAttemptEnumChannelsEnum = "sms"
	VerificationAttemptEnumChannelsEnumCall     VerificationAttemptEnumChannelsEnum = "call"
	VerificationAttemptEnumChannelsEnumEmail    VerificationAttemptEnumChannelsEnum = "email"
	VerificationAttemptEnumChannelsEnumWhatsapp VerificationAttemptEnumChannelsEnum = "whatsapp"
)

func (e VerificationAttemptEnumChannelsEnum) ToPointer() *VerificationAttemptEnumChannelsEnum {
	return &e
}

func (e *VerificationAttemptEnumChannelsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sms":
		fallthrough
	case "call":
		fallthrough
	case "email":
		fallthrough
	case "whatsapp":
		*e = VerificationAttemptEnumChannelsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationAttemptEnumChannelsEnum: %v", v)
	}
}
