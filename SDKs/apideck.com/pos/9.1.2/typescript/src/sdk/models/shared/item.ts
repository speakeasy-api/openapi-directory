/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CurrencyEnum } from "./currencyenum";
import { Expose, Transform, Type } from "class-transformer";

export class ItemCategoriesInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "image_ids" })
  imageIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class ItemOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attribute_id" })
  attributeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export enum ItemPricingTypeEnum {
  Fixed = "fixed",
  Variable = "variable",
  PerUnit = "per_unit",
  Other = "other",
}

export enum ItemProductTypeEnum {
  Regular = "regular",
  Other = "other",
}

export enum ItemVariationsPricingTypeEnum {
  Fixed = "fixed",
  Variable = "variable",
  Other = "other",
}

export class ItemVariationsInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "present_at_all_locations" })
  presentAtAllLocations?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "price_amount" })
  priceAmount?: number;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_currency" })
  priceCurrency?: CurrencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing_type" })
  pricingType?: ItemVariationsPricingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sequence" })
  sequence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stockable" })
  stockable?: boolean;
}

export class ItemInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "abbreviation" })
  abbreviation?: string;

  /**
   * A list of locations where the object is not present, even if present_at_all_locations is true. This can include locations that are deactivated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "absent_at_location_ids" })
  absentAtLocationIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "available" })
  available?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "available_for_pickup" })
  availableForPickup?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "available_online" })
  availableOnline?: boolean;

  @SpeakeasyMetadata({ elemType: ItemCategoriesInput })
  @Expose({ name: "categories" })
  @Type(() => ItemCategoriesInput)
  categories?: ItemCategoriesInput[];

  /**
   * Product code, e.g. UPC or EAN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * A value you specify that uniquely identifies this request among requests you have sent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idempotency_key" })
  idempotencyKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * List of options pertaining to this item's attribute variation
   */
  @SpeakeasyMetadata({ elemType: ItemOptions })
  @Expose({ name: "options" })
  @Type(() => ItemOptions)
  options?: ItemOptions[];

  @SpeakeasyMetadata()
  @Expose({ name: "present_at_all_locations" })
  presentAtAllLocations?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "price_amount" })
  priceAmount?: number;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_currency" })
  priceCurrency?: CurrencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing_type" })
  pricingType?: ItemPricingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "product_type" })
  productType?: ItemProductTypeEnum;

  /**
   * SKU of the item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * A list of Tax IDs for the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_ids" })
  taxIds?: string[];

  @SpeakeasyMetadata({ elemType: ItemVariationsInput })
  @Expose({ name: "variations" })
  @Type(() => ItemVariationsInput)
  variations?: ItemVariationsInput[];
}

export class ItemCategories extends SpeakeasyBase {
  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "image_ids" })
  imageIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class ItemModifierGroups extends SpeakeasyBase {
  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class ItemVariations extends SpeakeasyBase {
  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "item_id" })
  itemId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "present_at_all_locations" })
  presentAtAllLocations?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "price_amount" })
  priceAmount?: number;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_currency" })
  priceCurrency?: CurrencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing_type" })
  pricingType?: ItemVariationsPricingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sequence" })
  sequence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stockable" })
  stockable?: boolean;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

export class Item extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "abbreviation" })
  abbreviation?: string;

  /**
   * A list of locations where the object is not present, even if present_at_all_locations is true. This can include locations that are deactivated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "absent_at_location_ids" })
  absentAtLocationIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "available" })
  available?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "available_for_pickup" })
  availableForPickup?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "available_online" })
  availableOnline?: boolean;

  @SpeakeasyMetadata({ elemType: ItemCategories })
  @Expose({ name: "categories" })
  @Type(() => ItemCategories)
  categories?: ItemCategories[];

  /**
   * Product code, e.g. UPC or EAN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost?: number;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * A value you specify that uniquely identifies this request among requests you have sent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idempotency_key" })
  idempotencyKey?: string;

  @SpeakeasyMetadata({ elemType: ItemModifierGroups })
  @Expose({ name: "modifier_groups" })
  @Type(() => ItemModifierGroups)
  modifierGroups?: ItemModifierGroups[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * List of options pertaining to this item's attribute variation
   */
  @SpeakeasyMetadata({ elemType: ItemOptions })
  @Expose({ name: "options" })
  @Type(() => ItemOptions)
  options?: ItemOptions[];

  @SpeakeasyMetadata()
  @Expose({ name: "present_at_all_locations" })
  presentAtAllLocations?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "price_amount" })
  priceAmount?: number;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_currency" })
  priceCurrency?: CurrencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing_type" })
  pricingType?: ItemPricingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "product_type" })
  productType?: ItemProductTypeEnum;

  /**
   * SKU of the item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * A list of Tax IDs for the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_ids" })
  taxIds?: string[];

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;

  @SpeakeasyMetadata({ elemType: ItemVariations })
  @Expose({ name: "variations" })
  @Type(() => ItemVariations)
  variations?: ItemVariations[];

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}
