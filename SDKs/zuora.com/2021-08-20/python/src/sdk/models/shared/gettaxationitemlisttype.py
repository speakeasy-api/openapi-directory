"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gettaxationitemtypewithsuccess as shared_gettaxationitemtypewithsuccess
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETTaxationItemListType:
    
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""Returns `true` if the request was processed successfully."""  
    taxation_items: Optional[list[shared_gettaxationitemtypewithsuccess.GETTaxationItemTypewithSuccess]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxationItems'), 'exclude': lambda f: f is None }})
    r"""Container for taxation items."""  
    