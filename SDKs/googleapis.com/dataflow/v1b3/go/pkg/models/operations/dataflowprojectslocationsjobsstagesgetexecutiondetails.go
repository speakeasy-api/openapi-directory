// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption4 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurity struct {
	Option1 *DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption1 `security:"option"`
	Option2 *DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption2 `security:"option"`
	Option3 *DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption3 `security:"option"`
	Option4 *DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurityOption4 `security:"option"`
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsPathParams struct {
	// The job to get execution details for.
	JobID string `pathParam:"style=simple,explode=false,name=jobId"`
	// The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains the job specified by job_id.
	Location string `pathParam:"style=simple,explode=false,name=location"`
	// A project id.
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// The stage for which to fetch information.
	StageID string `pathParam:"style=simple,explode=false,name=stageId"`
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Upper time bound of work items to include, by start time.
	EndTime *string `queryParam:"style=form,explode=true,name=endTime"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// If specified, determines the maximum number of work items to return. If unspecified, the service may choose an appropriate default, or may return an arbitrarily large number of results.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// If supplied, this should be the value of next_page_token returned by an earlier call. This will cause the next page of results to be returned.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Lower time bound of work items to include, by start time.
	StartTime *string `queryParam:"style=form,explode=true,name=startTime"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsRequest struct {
	PathParams  DataflowProjectsLocationsJobsStagesGetExecutionDetailsPathParams
	QueryParams DataflowProjectsLocationsJobsStagesGetExecutionDetailsQueryParams
	Security    DataflowProjectsLocationsJobsStagesGetExecutionDetailsSecurity
}

type DataflowProjectsLocationsJobsStagesGetExecutionDetailsResponse struct {
	ContentType string
	// Successful response
	StageExecutionDetails *shared.StageExecutionDetails
	StatusCode            int
	RawResponse           *http.Response
}
