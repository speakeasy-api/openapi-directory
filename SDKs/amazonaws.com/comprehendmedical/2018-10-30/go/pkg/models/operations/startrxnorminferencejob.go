// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartRxNormInferenceJobXAmzTargetEnum
type StartRxNormInferenceJobXAmzTargetEnum string

const (
	StartRxNormInferenceJobXAmzTargetEnumComprehendMedical20181030StartRxNormInferenceJob StartRxNormInferenceJobXAmzTargetEnum = "ComprehendMedical_20181030.StartRxNormInferenceJob"
)

func (e StartRxNormInferenceJobXAmzTargetEnum) ToPointer() *StartRxNormInferenceJobXAmzTargetEnum {
	return &e
}

func (e *StartRxNormInferenceJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ComprehendMedical_20181030.StartRxNormInferenceJob":
		*e = StartRxNormInferenceJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartRxNormInferenceJobXAmzTargetEnum: %v", v)
	}
}

type StartRxNormInferenceJobRequest struct {
	StartRxNormInferenceJobRequest shared.StartRxNormInferenceJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     StartRxNormInferenceJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartRxNormInferenceJobResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartRxNormInferenceJobResponse *shared.StartRxNormInferenceJobResponse
	StatusCode                      int
	RawResponse                     *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
