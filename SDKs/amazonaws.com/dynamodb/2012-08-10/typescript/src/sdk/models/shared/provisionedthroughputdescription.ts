/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.
 */
export class ProvisionedThroughputDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "LastDecreaseDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastDecreaseDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastIncreaseDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastIncreaseDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfDecreasesToday" })
  numberOfDecreasesToday?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReadCapacityUnits" })
  readCapacityUnits?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "WriteCapacityUnits" })
  writeCapacityUnits?: number;
}
