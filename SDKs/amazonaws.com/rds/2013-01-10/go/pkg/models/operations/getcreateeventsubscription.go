// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateEventSubscriptionActionEnum
type GETCreateEventSubscriptionActionEnum string

const (
	GETCreateEventSubscriptionActionEnumCreateEventSubscription GETCreateEventSubscriptionActionEnum = "CreateEventSubscription"
)

func (e *GETCreateEventSubscriptionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateEventSubscription":
		*e = GETCreateEventSubscriptionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateEventSubscriptionActionEnum: %s", s)
	}
}

// GETCreateEventSubscriptionVersionEnum
type GETCreateEventSubscriptionVersionEnum string

const (
	GETCreateEventSubscriptionVersionEnumTwoThousandAndThirteen0110 GETCreateEventSubscriptionVersionEnum = "2013-01-10"
)

func (e *GETCreateEventSubscriptionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-10":
		*e = GETCreateEventSubscriptionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateEventSubscriptionVersionEnum: %s", s)
	}
}

type GETCreateEventSubscriptionRequest struct {
	Action            GETCreateEventSubscriptionActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Enabled           *bool                                 `queryParam:"style=form,explode=true,name=Enabled"`
	EventCategories   []string                              `queryParam:"style=form,explode=true,name=EventCategories"`
	SnsTopicArn       string                                `queryParam:"style=form,explode=true,name=SnsTopicArn"`
	SourceIds         []string                              `queryParam:"style=form,explode=true,name=SourceIds"`
	SourceType        *string                               `queryParam:"style=form,explode=true,name=SourceType"`
	SubscriptionName  string                                `queryParam:"style=form,explode=true,name=SubscriptionName"`
	Version           GETCreateEventSubscriptionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateEventSubscriptionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
