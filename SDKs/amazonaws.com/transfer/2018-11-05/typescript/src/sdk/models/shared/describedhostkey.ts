/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The details for a server host key.
 */
export class DescribedHostKey extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DateImported" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateImported?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HostKeyFingerprint" })
  hostKeyFingerprint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HostKeyId" })
  hostKeyId?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}
