"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComputeNodeInformation:
    r"""Information about the compute node on which a task ran."""
    
    affinity_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affinityId'), 'exclude': lambda f: f is None }})
    r"""Gets or sets an identifier for the compute node on which the task ran, which can be passed when adding a task to request that the task be scheduled close to this compute node."""  
    node_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeId'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the id of the node on which the task ran."""  
    node_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeUrl'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the URL of the node on which the task ran."""  
    pool_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('poolId'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the id of the pool on which the task ran."""  
    task_root_directory: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskRootDirectory'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the root directory of the task on the compute node."""  
    task_root_directory_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskRootDirectoryUrl'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the URL to the root directory of the task on the compute node."""  
    