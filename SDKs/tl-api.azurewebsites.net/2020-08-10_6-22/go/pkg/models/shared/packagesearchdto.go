// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// PackageSearchDTO - The PackageSearchDTO Class.
// Contains relevant fields of PackageSearch DTO by masking actual Package entity's fields in application.
type PackageSearchDTO struct {
	// Active Status
	ActiveStatus *bool `json:"activeStatus,omitempty"`
	// sum of addon fees.
	// incoming values for this filed will ignore.
	//
	AddonFee *float64 `json:"addonFee,omitempty"`
	// Boolean value to indicate wheather package is available in all the gyms.
	//
	ApplyForAllGyms *bool `json:"applyForAllGyms,omitempty"`
	// Range of period a member is bound to the contract if he/she choose this package.
	//
	BindingPeriod *int `json:"bindingPeriod,omitempty"`
	// Package created DateTime.
	//
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// Package created user.
	//
	CreatedUser *string `json:"createdUser,omitempty"`
	// Common descriptions about package.If there are more instructions can be stored as comma separated values.
	//
	Description *string `json:"description,omitempty"`
	// What are the facilities, features available for package.ex:- wifi, ACm etc.Can be stored as comma seperated values.
	//
	Features *string `json:"features,omitempty"`
	// No of months gym member can come without payments.
	//
	FreeMonths *int `json:"freeMonths,omitempty"`
	// Boolean value to indicate member can remove already added addons if he choose this package.
	//
	MemberCanRemoveAddOns *bool `json:"memberCanRemoveAddOns,omitempty"`
	// Package last modified DateTime.
	//
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	// Package last modified user.
	//
	ModifiedUser *string `json:"modifiedUser,omitempty"`
	// Monthly installment fee if package is not fixed visit.
	// addition of the servicefee and addon fees divided by binding period.
	//
	MonthlyFee *float64 `json:"monthlyFee,omitempty"`
	// No of visits for fixed package
	NumberOfVisits *int    `json:"numberOfVisits,omitempty"`
	PackageID      *int    `json:"packageId,omitempty"`
	PackageName    *string `json:"packageName,omitempty"`
	PackageNumber  *int    `json:"packageNumber,omitempty"`
	// Package type can be either fixed visit or unlimited.
	//
	PackageType *string `json:"packageType,omitempty"`
	// Registartion fee for the package at a gym.
	//
	RegistrationFee *float64 `json:"registrationFee,omitempty"`
	// total Service charge of the package for entire period.
	//
	ServiceFee *float64 `json:"serviceFee,omitempty"`
	// Comma separated string values in case of need of maintain some labels kind of stuff relevant to the package.
	//
	Tags *string `json:"tags,omitempty"`
	// total number of recode for particular search
	TotalCount *int `json:"totalCount,omitempty"`
	// total price for the package including Addon fees, service fee and registration fee.
	// incoming values for this field will ignore.
	//
	TotalPrice *float64 `json:"totalPrice,omitempty"`
}
