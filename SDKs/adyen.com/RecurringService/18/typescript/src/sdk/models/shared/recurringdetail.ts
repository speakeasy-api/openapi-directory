/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { BankAccount } from "./bankaccount";
import { Card } from "./card";
import { Elv } from "./elv";
import { Name } from "./name";
import { TokenDetails } from "./tokendetails";
import { Expose, Transform, Type } from "class-transformer";

export class RecurringDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "acquirer" })
  acquirer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "acquirerAccount" })
  acquirerAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "additionalData" })
  additionalData?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "aliasType" })
  aliasType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bank" })
  @Type(() => BankAccount)
  bank?: BankAccount;

  @SpeakeasyMetadata()
  @Expose({ name: "billingAddress" })
  @Type(() => Address)
  billingAddress?: Address;

  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => Card)
  card?: Card;

  @SpeakeasyMetadata()
  @Expose({ name: "contractTypes" })
  contractTypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "elv" })
  @Type(() => Elv)
  elv?: Elv;

  @SpeakeasyMetadata()
  @Expose({ name: "firstPspReference" })
  firstPspReference?: string;

  /**
   * An optional descriptive name for this recurring detail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentMethodVariant" })
  paymentMethodVariant?: string;

  /**
   * The reference that uniquely identifies the recurring detail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recurringDetailReference" })
  recurringDetailReference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shopperName" })
  @Type(() => Name)
  shopperName?: Name;

  @SpeakeasyMetadata()
  @Expose({ name: "socialSecurityNumber" })
  socialSecurityNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tokenDetails" })
  @Type(() => TokenDetails)
  tokenDetails?: TokenDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "variant" })
  variant?: string;
}
