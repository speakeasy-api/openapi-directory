"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import paymentmethod as shared_paymentmethod
from ..shared import restserviceerror as shared_restserviceerror
from ..shared import security as shared_security
from ..shared import updatepaymentmethodinfo as shared_updatepaymentmethodinfo
from typing import Optional


@dataclasses.dataclass
class PatchMerchantsMerchantIDPaymentMethodSettingsPaymentMethodIDSecurity:
    
    api_key_auth: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Key' }})  
    basic_auth: Optional[shared_security.SchemeBasicAuth] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    

@dataclasses.dataclass
class PatchMerchantsMerchantIDPaymentMethodSettingsPaymentMethodIDRequest:
    
    merchant_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'merchantId', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the merchant account."""  
    payment_method_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'paymentMethodId', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the payment method."""  
    update_payment_method_info: Optional[shared_updatepaymentmethodinfo.UpdatePaymentMethodInfo] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PatchMerchantsMerchantIDPaymentMethodSettingsPaymentMethodIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    payment_method: Optional[shared_paymentmethod.PaymentMethod] = dataclasses.field(default=None)
    r"""OK - the request has succeeded."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    rest_service_error: Optional[shared_restserviceerror.RestServiceError] = dataclasses.field(default=None)
    r"""Bad Request - a problem reading or understanding the request."""  
    