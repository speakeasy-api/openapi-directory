/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * BundleRegistrationEntity - List Bundle Registrations
 */
public class BundleRegistrationEntity {
    /**
     * Bundle URL code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bundle_code")
    public String bundleCode;
    public BundleRegistrationEntity withBundleCode(String bundleCode) {
        this.bundleCode = bundleCode;
        return this;
    }
    
    /**
     * Id of associated bundle
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bundle_id")
    public Integer bundleId;
    public BundleRegistrationEntity withBundleId(Integer bundleId) {
        this.bundleId = bundleId;
        return this;
    }
    
    /**
     * Id of associated bundle recipient
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bundle_recipient_id")
    public Integer bundleRecipientId;
    public BundleRegistrationEntity withBundleRecipientId(Integer bundleRecipientId) {
        this.bundleRecipientId = bundleRecipientId;
        return this;
    }
    
    /**
     * Clickwrap text that was shown to the registrant
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clickwrap_body")
    public String clickwrapBody;
    public BundleRegistrationEntity withClickwrapBody(String clickwrapBody) {
        this.clickwrapBody = clickwrapBody;
        return this;
    }
    
    /**
     * Registration cookie code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;
    public BundleRegistrationEntity withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * Registrant company name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company")
    public String company;
    public BundleRegistrationEntity withCompany(String company) {
        this.company = company;
        return this;
    }
    
    /**
     * Registration creation date/time
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public BundleRegistrationEntity withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Registrant email address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public BundleRegistrationEntity withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Data for form field set with form field ids as keys and user data as values
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_field_data")
    public java.util.Map<String, Object> formFieldData;
    public BundleRegistrationEntity withFormFieldData(java.util.Map<String, Object> formFieldData) {
        this.formFieldData = formFieldData;
        return this;
    }
    
    /**
     * Id of associated form field set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_field_set_id")
    public Integer formFieldSetId;
    public BundleRegistrationEntity withFormFieldSetId(Integer formFieldSetId) {
        this.formFieldSetId = formFieldSetId;
        return this;
    }
    
    /**
     * InboxRegistration cookie code, if there is an associated InboxRegistration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inbox_code")
    public String inboxCode;
    public BundleRegistrationEntity withInboxCode(String inboxCode) {
        this.inboxCode = inboxCode;
        return this;
    }
    
    /**
     * Registrant IP Address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;
    public BundleRegistrationEntity withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * Registrant name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public BundleRegistrationEntity withName(String name) {
        this.name = name;
        return this;
    }
    
}
