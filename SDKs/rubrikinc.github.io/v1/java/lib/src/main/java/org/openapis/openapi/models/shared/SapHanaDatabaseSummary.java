/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class SapHanaDatabaseSummary {
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainId")
    public String configuredSlaDomainId;

    public SapHanaDatabaseSummary withConfiguredSlaDomainId(String configuredSlaDomainId) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        return this;
    }
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainName")
    public String configuredSlaDomainName;

    public SapHanaDatabaseSummary withConfiguredSlaDomainName(String configuredSlaDomainName) {
        this.configuredSlaDomainName = configuredSlaDomainName;
        return this;
    }
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainType")
    public ConfiguredSlaTypeEnum configuredSlaDomainType;

    public SapHanaDatabaseSummary withConfiguredSlaDomainType(ConfiguredSlaTypeEnum configuredSlaDomainType) {
        this.configuredSlaDomainType = configuredSlaDomainType;
        return this;
    }
    
    /**
     * Data path of the SAP HANA BACKINT interface specifying the location where the BACKINT interface stores backups. Supported data path types are MANAGED_VOLUME, GCP, and LOCAL. MANAGED_VOLUME specifies a data path used by the BACKINT interface to store backups on an on-premises Rubrik CDM cluster. GCP specifies that backups are stored on Google Cloud Platform. LOCAL indicates the backup is stored locally.
     */
    @JsonProperty("dataPathType")
    public SapHanaDataPathTypeEnum dataPathType;

    public SapHanaDatabaseSummary withDataPathType(SapHanaDataPathTypeEnum dataPathType) {
        this.dataPathType = dataPathType;
        return this;
    }
    
    /**
     * Whether the database is in an ACTIVE,INACTIVE, or UNKNOWN state.
     */
    @JsonProperty("dbStatus")
    public SapHanaDatabaseSummaryDbStatusEnum dbStatus;

    public SapHanaDatabaseSummary withDbStatus(SapHanaDatabaseSummaryDbStatusEnum dbStatus) {
        this.dbStatus = dbStatus;
        return this;
    }
    
    /**
     * The type of SAP HANA database. Possible values are SYSTEM or TENANT. The SYSTEM database stores information about SAP HANA users and central system management. The TENANT database contains databases used by applications.
     */
    @JsonProperty("dbType")
    public SapHanaDatabaseSummaryDbTypeEnum dbType;

    public SapHanaDatabaseSummary withDbType(SapHanaDatabaseSummaryDbTypeEnum dbType) {
        this.dbType = dbType;
        return this;
    }
    
    /**
     * The ID of the SLA Domain that controls the protection of the Rubrik object.
     */
    @JsonProperty("effectiveSlaDomainId")
    public String effectiveSlaDomainId;

    public SapHanaDatabaseSummary withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * The name of the SLA Domain that controls the protection of the Rubrik object.
     */
    @JsonProperty("effectiveSlaDomainName")
    public String effectiveSlaDomainName;

    public SapHanaDatabaseSummary withEffectiveSlaDomainName(String effectiveSlaDomainName) {
        this.effectiveSlaDomainName = effectiveSlaDomainName;
        return this;
    }
    
    /**
     * Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaDomainPolarisManagedId")
    public String effectiveSlaDomainPolarisManagedId;

    public SapHanaDatabaseSummary withEffectiveSlaDomainPolarisManagedId(String effectiveSlaDomainPolarisManagedId) {
        this.effectiveSlaDomainPolarisManagedId = effectiveSlaDomainPolarisManagedId;
        return this;
    }
    
    /**
     * The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaSourceObjectId")
    public String effectiveSlaSourceObjectId;

    public SapHanaDatabaseSummary withEffectiveSlaSourceObjectId(String effectiveSlaSourceObjectId) {
        this.effectiveSlaSourceObjectId = effectiveSlaSourceObjectId;
        return this;
    }
    
    /**
     * The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaSourceObjectName")
    public String effectiveSlaSourceObjectName;

    public SapHanaDatabaseSummary withEffectiveSlaSourceObjectName(String effectiveSlaSourceObjectName) {
        this.effectiveSlaSourceObjectName = effectiveSlaSourceObjectName;
        return this;
    }
    
    /**
     * The ID of the Rubrik object.
     */
    @JsonProperty("id")
    public String id;

    public SapHanaDatabaseSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isConfiguredSlaDomainRetentionLocked")
    public Boolean isConfiguredSlaDomainRetentionLocked;

    public SapHanaDatabaseSummary withIsConfiguredSlaDomainRetentionLocked(Boolean isConfiguredSlaDomainRetentionLocked) {
        this.isConfiguredSlaDomainRetentionLocked = isConfiguredSlaDomainRetentionLocked;
        return this;
    }
    
    /**
     * Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEffectiveSlaDomainRetentionLocked")
    public Boolean isEffectiveSlaDomainRetentionLocked;

    public SapHanaDatabaseSummary withIsEffectiveSlaDomainRetentionLocked(Boolean isEffectiveSlaDomainRetentionLocked) {
        this.isEffectiveSlaDomainRetentionLocked = isEffectiveSlaDomainRetentionLocked;
        return this;
    }
    
    /**
     * Specifies whether the SAP HANA database is accessible on the CDM cluster.
     */
    @JsonProperty("isRelic")
    public Boolean isRelic;

    public SapHanaDatabaseSummary withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * The log backup interval in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logBackupIntervalInSecs")
    public Integer logBackupIntervalInSecs;

    public SapHanaDatabaseSummary withLogBackupIntervalInSecs(Integer logBackupIntervalInSecs) {
        this.logBackupIntervalInSecs = logBackupIntervalInSecs;
        return this;
    }
    
    /**
     * The name of the Rubrik object.
     */
    @JsonProperty("name")
    public String name;

    public SapHanaDatabaseSummary withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     */
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public SapHanaDatabaseSummary withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * The ID of the CDM cluster that protects the SAP HANA database.
     */
    @JsonProperty("primaryClusterUuid")
    public String primaryClusterUuid;

    public SapHanaDatabaseSummary withPrimaryClusterUuid(String primaryClusterUuid) {
        this.primaryClusterUuid = primaryClusterUuid;
        return this;
    }
    
    /**
     * The UTC timestamp for when the SAP HANA database was first protected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("protectionDate")
    public OffsetDateTime protectionDate;

    public SapHanaDatabaseSummary withProtectionDate(OffsetDateTime protectionDate) {
        this.protectionDate = protectionDate;
        return this;
    }
    
    /**
     * The ID of the SLA Domain whose retention policy is in use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retentionSlaDomainId")
    public String retentionSlaDomainId;

    public SapHanaDatabaseSummary withRetentionSlaDomainId(String retentionSlaDomainId) {
        this.retentionSlaDomainId = retentionSlaDomainId;
        return this;
    }
    
    /**
     * The ID of the SAP HANA system that owns the database.
     */
    @JsonProperty("sapHanaSystemId")
    public String sapHanaSystemId;

    public SapHanaDatabaseSummary withSapHanaSystemId(String sapHanaSystemId) {
        this.sapHanaSystemId = sapHanaSystemId;
        return this;
    }
    
    /**
     * Name of the SAP HANA system that owns the database.
     */
    @JsonProperty("sapHanaSystemName")
    public String sapHanaSystemName;

    public SapHanaDatabaseSummary withSapHanaSystemName(String sapHanaSystemName) {
        this.sapHanaSystemName = sapHanaSystemName;
        return this;
    }
    
    /**
     * The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
     */
    @JsonProperty("slaAssignment")
    public SapHanaDatabaseSummarySlaAssignmentEnum slaAssignment;

    public SapHanaDatabaseSummary withSlaAssignment(SapHanaDatabaseSummarySlaAssignmentEnum slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * The UTC time when the SLA Domain was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("slaLastUpdateTime")
    public OffsetDateTime slaLastUpdateTime;

    public SapHanaDatabaseSummary withSlaLastUpdateTime(OffsetDateTime slaLastUpdateTime) {
        this.slaLastUpdateTime = slaLastUpdateTime;
        return this;
    }
    
    public SapHanaDatabaseSummary(@JsonProperty("configuredSlaDomainId") String configuredSlaDomainId, @JsonProperty("configuredSlaDomainName") String configuredSlaDomainName, @JsonProperty("dataPathType") SapHanaDataPathTypeEnum dataPathType, @JsonProperty("dbStatus") SapHanaDatabaseSummaryDbStatusEnum dbStatus, @JsonProperty("dbType") SapHanaDatabaseSummaryDbTypeEnum dbType, @JsonProperty("effectiveSlaDomainId") String effectiveSlaDomainId, @JsonProperty("effectiveSlaDomainName") String effectiveSlaDomainName, @JsonProperty("id") String id, @JsonProperty("isRelic") Boolean isRelic, @JsonProperty("name") String name, @JsonProperty("primaryClusterId") String primaryClusterId, @JsonProperty("primaryClusterUuid") String primaryClusterUuid, @JsonProperty("sapHanaSystemId") String sapHanaSystemId, @JsonProperty("sapHanaSystemName") String sapHanaSystemName, @JsonProperty("slaAssignment") SapHanaDatabaseSummarySlaAssignmentEnum slaAssignment) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        this.configuredSlaDomainName = configuredSlaDomainName;
        this.dataPathType = dataPathType;
        this.dbStatus = dbStatus;
        this.dbType = dbType;
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        this.effectiveSlaDomainName = effectiveSlaDomainName;
        this.id = id;
        this.isRelic = isRelic;
        this.name = name;
        this.primaryClusterId = primaryClusterId;
        this.primaryClusterUuid = primaryClusterUuid;
        this.sapHanaSystemId = sapHanaSystemId;
        this.sapHanaSystemName = sapHanaSystemName;
        this.slaAssignment = slaAssignment;
  }
}
