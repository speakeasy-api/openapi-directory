// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// GetAccountHolderResponseLegalEntityEnum - The legal entity of the account holder.
type GetAccountHolderResponseLegalEntityEnum string

const (
	GetAccountHolderResponseLegalEntityEnumBusiness   GetAccountHolderResponseLegalEntityEnum = "Business"
	GetAccountHolderResponseLegalEntityEnumIndividual GetAccountHolderResponseLegalEntityEnum = "Individual"
	GetAccountHolderResponseLegalEntityEnumNonProfit  GetAccountHolderResponseLegalEntityEnum = "NonProfit"
)

func (e *GetAccountHolderResponseLegalEntityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Business":
		fallthrough
	case "Individual":
		fallthrough
	case "NonProfit":
		*e = GetAccountHolderResponseLegalEntityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountHolderResponseLegalEntityEnum: %s", s)
	}
}

// GetAccountHolderResponse - OK - the request has succeeded.
type GetAccountHolderResponse struct {
	// The code of the account holder.
	AccountHolderCode    *string               `json:"accountHolderCode,omitempty"`
	AccountHolderDetails *AccountHolderDetails `json:"accountHolderDetails,omitempty"`
	AccountHolderStatus  *AccountHolderStatus  `json:"accountHolderStatus,omitempty"`
	// A list of the accounts under the account holder.
	Accounts []Account `json:"accounts,omitempty"`
	// The description of the account holder.
	Description *string `json:"description,omitempty"`
	// Contains field validation errors that would prevent requests from being processed.
	InvalidFields []ErrorFieldType `json:"invalidFields,omitempty"`
	// The legal entity of the account holder.
	LegalEntity   *GetAccountHolderResponseLegalEntityEnum `json:"legalEntity,omitempty"`
	MigrationData *MigrationData                           `json:"migrationData,omitempty"`
	// The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.
	PrimaryCurrency *string `json:"primaryCurrency,omitempty"`
	// The reference of a request. Can be used to uniquely identify the request.
	PspReference *string `json:"pspReference,omitempty"`
	// The result code.
	ResultCode *string `json:"resultCode,omitempty"`
	// The time that shows how up to date is the information in the response.
	SystemUpToDateTime *time.Time             `json:"systemUpToDateTime,omitempty"`
	Verification       *KYCVerificationResult `json:"verification,omitempty"`
}
