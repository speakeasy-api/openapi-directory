"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class ImageAttributeBlockDeviceMappingsEbsVolumeTypeEnum(str, Enum):
    r"""The volume type. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\\">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>. If the volume type is <code>io1</code> or <code>io2</code>, you must specify the IOPS that the volume supports."""
    STANDARD = 'standard'
    IO1 = 'io1'
    IO2 = 'io2'
    GP2 = 'gp2'
    SC1 = 'sc1'
    ST1 = 'st1'
    GP3 = 'gp3'


@dataclasses.dataclass
class ImageAttributeBlockDeviceMappingsEbs:
    r"""Parameters used to automatically set up EBS volumes when the instance is launched."""
    
    delete_on_termination: Optional[bool] = dataclasses.field(default=None)  
    encrypted: Optional[bool] = dataclasses.field(default=None)  
    iops: Optional[int] = dataclasses.field(default=None)  
    kms_key_id: Optional[str] = dataclasses.field(default=None)  
    outpost_arn: Optional[str] = dataclasses.field(default=None)  
    snapshot_id: Optional[str] = dataclasses.field(default=None)  
    throughput: Optional[int] = dataclasses.field(default=None)  
    volume_size: Optional[int] = dataclasses.field(default=None)  
    volume_type: Optional[ImageAttributeBlockDeviceMappingsEbsVolumeTypeEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeBlockDeviceMappings:
    r"""Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch."""
    
    device_name: Optional[str] = dataclasses.field(default=None)  
    ebs: Optional[ImageAttributeBlockDeviceMappingsEbs] = dataclasses.field(default=None)  
    no_device: Optional[str] = dataclasses.field(default=None)  
    virtual_name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeBootMode:
    r"""The boot mode."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeDescription:
    r"""A description for the AMI."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeImdsSupport:
    r"""If <code>v2.0</code>, it indicates that IMDSv2 is specified in the AMI. Instances launched from this AMI will have <code>HttpTokens</code> automatically set to <code>required</code> so that, by default, the instance requires that IMDSv2 is used when requesting instance metadata. In addition, <code>HttpPutResponseHopLimit</code> is set to <code>2</code>. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration\\">Configure the AMI</a> in the <i>Amazon EC2 User Guide</i>."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeKernelID:
    r"""The kernel ID."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeLastLaunchedTime:
    r"""<p>The date and time, in <a href=\\"http://www.iso.org/iso/iso8601\\">ISO 8601 date-time format</a>, when the AMI was last used to launch an EC2 instance. When the AMI is used to launch an instance, there is a 24-hour delay before that usage is reported.</p> <note> <p> <code>lastLaunchedTime</code> data is available starting April 2017.</p> </note>"""
    
    value: Optional[str] = dataclasses.field(default=None)  
    
class ImageAttributeLaunchPermissionsGroupEnum(str, Enum):
    r"""The name of the group."""
    ALL = 'all'


@dataclasses.dataclass
class ImageAttributeLaunchPermissions:
    r"""Describes a launch permission."""
    
    group: Optional[ImageAttributeLaunchPermissionsGroupEnum] = dataclasses.field(default=None)  
    organizational_unit_arn: Optional[str] = dataclasses.field(default=None)  
    organization_arn: Optional[str] = dataclasses.field(default=None)  
    user_id: Optional[str] = dataclasses.field(default=None)  
    
class ImageAttributeProductCodesProductCodeTypeEnum(str, Enum):
    r"""The type of product code."""
    DEVPAY = 'devpay'
    MARKETPLACE = 'marketplace'


@dataclasses.dataclass
class ImageAttributeProductCodes:
    r"""Describes a product code."""
    
    product_code_id: Optional[str] = dataclasses.field(default=None)  
    product_code_type: Optional[ImageAttributeProductCodesProductCodeTypeEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeRamdiskID:
    r"""The RAM disk ID."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeSriovNetSupport:
    r"""Indicates whether enhanced networking with the Intel 82599 Virtual Function interface is enabled."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeTpmSupport:
    r"""If the image is configured for NitroTPM support, the value is <code>v2.0</code>."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttributeUefiData:
    r"""Base64 representation of the non-volatile UEFI variable store. To retrieve the UEFI data, use the <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetInstanceUefiData\\">GetInstanceUefiData</a> command. You can inspect and modify the UEFI data by using the <a href=\\"https://github.com/awslabs/python-uefivars\\">python-uefivars tool</a> on GitHub. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html\\">UEFI Secure Boot</a> in the <i>Amazon EC2 User Guide</i>."""
    
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ImageAttribute:
    r"""Describes an image attribute."""
    
    block_device_mappings: Optional[list[ImageAttributeBlockDeviceMappings]] = dataclasses.field(default=None)  
    boot_mode: Optional[ImageAttributeBootMode] = dataclasses.field(default=None)  
    description: Optional[ImageAttributeDescription] = dataclasses.field(default=None)  
    image_id: Optional[str] = dataclasses.field(default=None)  
    imds_support: Optional[ImageAttributeImdsSupport] = dataclasses.field(default=None)  
    kernel_id: Optional[ImageAttributeKernelID] = dataclasses.field(default=None)  
    last_launched_time: Optional[ImageAttributeLastLaunchedTime] = dataclasses.field(default=None)  
    launch_permissions: Optional[list[ImageAttributeLaunchPermissions]] = dataclasses.field(default=None)  
    product_codes: Optional[list[ImageAttributeProductCodes]] = dataclasses.field(default=None)  
    ramdisk_id: Optional[ImageAttributeRamdiskID] = dataclasses.field(default=None)  
    sriov_net_support: Optional[ImageAttributeSriovNetSupport] = dataclasses.field(default=None)  
    tpm_support: Optional[ImageAttributeTpmSupport] = dataclasses.field(default=None)  
    uefi_data: Optional[ImageAttributeUefiData] = dataclasses.field(default=None)  
    