"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tag as shared_tag
from typing import Optional


@dataclasses.dataclass
class GetTagsRequest:
    
    owned_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ownedBy', 'style': 'form', 'explode': True }})
    r"""Restrict results to those owned by this user."""  
    tag_set: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tagSet', 'style': 'form', 'explode': True }})
    r"""Restrict results to tags belonging to this tag set."""  
    url_words: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'urlWords', 'style': 'form', 'explode': True }})
    r"""Restrict results by urlWords. Should be used with ownedBy when searching for one of your own tags."""  
    

@dataclasses.dataclass
class GetTagsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None)
    r"""A list of tags"""  
    