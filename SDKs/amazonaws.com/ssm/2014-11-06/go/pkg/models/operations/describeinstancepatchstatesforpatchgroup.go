// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeInstancePatchStatesForPatchGroupQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeInstancePatchStatesForPatchGroupXAmzTargetEnum
type DescribeInstancePatchStatesForPatchGroupXAmzTargetEnum string

const (
	DescribeInstancePatchStatesForPatchGroupXAmzTargetEnumAmazonSsmDescribeInstancePatchStatesForPatchGroup DescribeInstancePatchStatesForPatchGroupXAmzTargetEnum = "AmazonSSM.DescribeInstancePatchStatesForPatchGroup"
)

func (e *DescribeInstancePatchStatesForPatchGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.DescribeInstancePatchStatesForPatchGroup":
		*e = DescribeInstancePatchStatesForPatchGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeInstancePatchStatesForPatchGroupXAmzTargetEnum: %s", s)
	}
}

type DescribeInstancePatchStatesForPatchGroupHeaders struct {
	XAmzAlgorithm     *string                                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeInstancePatchStatesForPatchGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeInstancePatchStatesForPatchGroupRequest struct {
	QueryParams DescribeInstancePatchStatesForPatchGroupQueryParams
	Headers     DescribeInstancePatchStatesForPatchGroupHeaders
	Request     shared.DescribeInstancePatchStatesForPatchGroupRequest `request:"mediaType=application/json"`
}

type DescribeInstancePatchStatesForPatchGroupResponse struct {
	ContentType string
	// Success
	DescribeInstancePatchStatesForPatchGroupResult *shared.DescribeInstancePatchStatesForPatchGroupResult
	// InternalServerError
	InternalServerError interface{}
	// InvalidFilter
	InvalidFilter interface{}
	// InvalidNextToken
	InvalidNextToken interface{}
	StatusCode       int
	RawResponse      *http.Response
}
