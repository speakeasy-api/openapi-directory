/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfiguredTableAnalysisRulePolicy } from "./configuredtableanalysisrulepolicy";
import { ConfiguredTableAnalysisRuleTypeEnum } from "./configuredtableanalysisruletypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A configured table analysis rule, which limits how data for this table can be used.
 */
export class ConfiguredTableAnalysisRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "configuredTableArn" })
  configuredTableArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "configuredTableId" })
  configuredTableId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "policy" })
  @Type(() => ConfiguredTableAnalysisRulePolicy)
  policy: ConfiguredTableAnalysisRulePolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ConfiguredTableAnalysisRuleTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
