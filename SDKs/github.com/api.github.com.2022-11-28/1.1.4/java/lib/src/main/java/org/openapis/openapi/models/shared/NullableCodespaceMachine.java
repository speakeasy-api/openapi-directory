/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NullableCodespaceMachine - A description of the machine powering a codespace.
 */
public class NullableCodespaceMachine {
    /**
     * How many cores are available to the codespace.
     */
    @JsonProperty("cpus")
    public Long cpus;
    public NullableCodespaceMachine withCpus(Long cpus) {
        this.cpus = cpus;
        return this;
    }
    
    /**
     * The display name of the machine includes cores, memory, and storage.
     */
    @JsonProperty("display_name")
    public String displayName;
    public NullableCodespaceMachine withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * How much memory is available to the codespace.
     */
    @JsonProperty("memory_in_bytes")
    public Long memoryInBytes;
    public NullableCodespaceMachine withMemoryInBytes(Long memoryInBytes) {
        this.memoryInBytes = memoryInBytes;
        return this;
    }
    
    /**
     * The name of the machine.
     */
    @JsonProperty("name")
    public String name;
    public NullableCodespaceMachine withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The operating system of the machine.
     */
    @JsonProperty("operating_system")
    public String operatingSystem;
    public NullableCodespaceMachine withOperatingSystem(String operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }
    
    /**
     * Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be "null" if prebuilds are not supported or prebuild availability could not be determined. Value will be "none" if no prebuild is available. Latest values "ready" and "in_progress" indicate the prebuild availability status.
     */
    @JsonProperty("prebuild_availability")
    public NullableCodespaceMachinePrebuildAvailabilityEnum prebuildAvailability;
    public NullableCodespaceMachine withPrebuildAvailability(NullableCodespaceMachinePrebuildAvailabilityEnum prebuildAvailability) {
        this.prebuildAvailability = prebuildAvailability;
        return this;
    }
    
    /**
     * How much storage is available to the codespace.
     */
    @JsonProperty("storage_in_bytes")
    public Long storageInBytes;
    public NullableCodespaceMachine withStorageInBytes(Long storageInBytes) {
        this.storageInBytes = storageInBytes;
        return this;
    }
    
}
