/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetNamespaceRepositoryImagesResponse - Paginated list of images in a repository.
 */
public class GetNamespaceRepositoryImagesResponse {
    /**
     * Total count of images in the repository.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;

    public GetNamespaceRepositoryImagesResponse withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * Link to the next page with the same query parameters if there are more images.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;

    public GetNamespaceRepositoryImagesResponse withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * Link to the previous page with the same query parameters if not on first page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previous")
    public String previous;

    public GetNamespaceRepositoryImagesResponse withPrevious(String previous) {
        this.previous = previous;
        return this;
    }
    
    /**
     * Image details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("results")
    public GetNamespaceRepositoryImagesResponseResults[] results;

    public GetNamespaceRepositoryImagesResponse withResults(GetNamespaceRepositoryImagesResponseResults[] results) {
        this.results = results;
        return this;
    }
    
    public GetNamespaceRepositoryImagesResponse(){}
}
