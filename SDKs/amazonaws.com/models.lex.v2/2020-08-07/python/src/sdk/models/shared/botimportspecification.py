"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dataprivacy as shared_dataprivacy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BotImportSpecification:
    r"""Provides the bot parameters required for importing a bot."""
    
    bot_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('botName') }})  
    data_privacy: shared_dataprivacy.DataPrivacy = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataPrivacy') }})
    r"""By default, data stored by Amazon Lex is encrypted. The <code>DataPrivacy</code> structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot."""  
    role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roleArn') }})  
    bot_tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('botTags'), 'exclude': lambda f: f is None }})  
    idle_session_ttl_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idleSessionTTLInSeconds'), 'exclude': lambda f: f is None }})  
    test_bot_alias_tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testBotAliasTags'), 'exclude': lambda f: f is None }})  
    