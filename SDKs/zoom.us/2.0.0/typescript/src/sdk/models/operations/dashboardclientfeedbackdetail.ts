/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class DashboardClientFeedbackDetailSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class DashboardClientFeedbackDetailRequest extends SpeakeasyBase {
  /**
   * Feedback Detail Id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=feedbackId",
  })
  feedbackId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from?: Date;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to?: Date;
}

export class DashboardClientFeedbackDetail200ApplicationXMLClientFeedbackDetails extends SpeakeasyBase {
  /**
   * Email address of the participant.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Meeting ID
   */
  @SpeakeasyMetadata()
  meetingId?: string;

  /**
   * Participant Name
   */
  @SpeakeasyMetadata()
  participantName?: string;

  /**
   * Time at which the feedback was submitted by the participant.
   */
  @SpeakeasyMetadata()
  time?: Date;
}

/**
 * Pagination object.
 */
export class DashboardClientFeedbackDetail200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DashboardClientFeedbackDetail200ApplicationXMLClientFeedbackDetails,
  })
  clientFeedbackDetails?: DashboardClientFeedbackDetail200ApplicationXMLClientFeedbackDetails[];

  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  from?: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The amount of records returns within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  to?: Date;
}

export class DashboardClientFeedbackDetail200ApplicationJSONClientFeedbackDetails extends SpeakeasyBase {
  /**
   * Email address of the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Meeting ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meeting_id" })
  meetingId?: string;

  /**
   * Participant Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participant_name" })
  participantName?: string;

  /**
   * Time at which the feedback was submitted by the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;
}

/**
 * Pagination object.
 */
export class DashboardClientFeedbackDetail200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DashboardClientFeedbackDetail200ApplicationJSONClientFeedbackDetails,
  })
  @Expose({ name: "client_feedback_details" })
  @Type(
    () => DashboardClientFeedbackDetail200ApplicationJSONClientFeedbackDetails
  )
  clientFeedbackDetails?: DashboardClientFeedbackDetail200ApplicationJSONClientFeedbackDetails[];

  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The amount of records returns within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;
}

export class DashboardClientFeedbackDetailResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Client Feedback details returned
   */
  @SpeakeasyMetadata()
  dashboardClientFeedbackDetail200ApplicationJSONObject?: DashboardClientFeedbackDetail200ApplicationJSON;
}
