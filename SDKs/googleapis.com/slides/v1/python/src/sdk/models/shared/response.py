"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import createimageresponse as shared_createimageresponse
from ..shared import createlineresponse as shared_createlineresponse
from ..shared import createshaperesponse as shared_createshaperesponse
from ..shared import createsheetschartresponse as shared_createsheetschartresponse
from ..shared import createslideresponse as shared_createslideresponse
from ..shared import createtableresponse as shared_createtableresponse
from ..shared import createvideoresponse as shared_createvideoresponse
from ..shared import duplicateobjectresponse as shared_duplicateobjectresponse
from ..shared import groupobjectsresponse as shared_groupobjectsresponse
from ..shared import replaceallshapeswithimageresponse as shared_replaceallshapeswithimageresponse
from ..shared import replaceallshapeswithsheetschartresponse as shared_replaceallshapeswithsheetschartresponse
from ..shared import replacealltextresponse as shared_replacealltextresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Response:
    r"""A single response from an update."""
    
    create_image: Optional[shared_createimageresponse.CreateImageResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createImage'), 'exclude': lambda f: f is None }})
    r"""The result of creating an image."""  
    create_line: Optional[shared_createlineresponse.CreateLineResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createLine'), 'exclude': lambda f: f is None }})
    r"""The result of creating a line."""  
    create_shape: Optional[shared_createshaperesponse.CreateShapeResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createShape'), 'exclude': lambda f: f is None }})
    r"""The result of creating a shape."""  
    create_sheets_chart: Optional[shared_createsheetschartresponse.CreateSheetsChartResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createSheetsChart'), 'exclude': lambda f: f is None }})
    r"""The result of creating an embedded Google Sheets chart."""  
    create_slide: Optional[shared_createslideresponse.CreateSlideResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createSlide'), 'exclude': lambda f: f is None }})
    r"""The result of creating a slide."""  
    create_table: Optional[shared_createtableresponse.CreateTableResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTable'), 'exclude': lambda f: f is None }})
    r"""The result of creating a table."""  
    create_video: Optional[shared_createvideoresponse.CreateVideoResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createVideo'), 'exclude': lambda f: f is None }})
    r"""The result of creating a video."""  
    duplicate_object: Optional[shared_duplicateobjectresponse.DuplicateObjectResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duplicateObject'), 'exclude': lambda f: f is None }})
    r"""The response of duplicating an object."""  
    group_objects: Optional[shared_groupobjectsresponse.GroupObjectsResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupObjects'), 'exclude': lambda f: f is None }})
    r"""The result of grouping objects."""  
    replace_all_shapes_with_image: Optional[shared_replaceallshapeswithimageresponse.ReplaceAllShapesWithImageResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replaceAllShapesWithImage'), 'exclude': lambda f: f is None }})
    r"""The result of replacing shapes with an image."""  
    replace_all_shapes_with_sheets_chart: Optional[shared_replaceallshapeswithsheetschartresponse.ReplaceAllShapesWithSheetsChartResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replaceAllShapesWithSheetsChart'), 'exclude': lambda f: f is None }})
    r"""The result of replacing shapes with a Google Sheets chart."""  
    replace_all_text: Optional[shared_replacealltextresponse.ReplaceAllTextResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replaceAllText'), 'exclude': lambda f: f is None }})
    r"""The result of replacing text."""  
    