/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class POSTPaymentRunDataElementRequest {
    /**
     * A valid account ID associated with the payment run.
     * 
     * If `consolidatedPayment` is set to `true`, this field is used in processing a single payment for invoices/debit memos due on an account.
     * 
     */
    @JsonProperty("accountId")
    public String accountId;
    public POSTPaymentRunDataElementRequest withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The amount to be collected for the specified invoice/debit memo. `amount` must be a positive numeric value no more than the balance of the specified invoice/debit memo.
     * 
     * This field is only available when `documentId` is specified. If `amount` is not specified, whole balance of the invoice/debit memo is collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public POSTPaymentRunDataElementRequest withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Additional comments.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public POSTPaymentRunDataElementRequest withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The ID of a billing document associated with the payment run. `documentId` must be valid and match with `documentType`.
     * 
     * You must either specify both `documentId` and `documentType`, or specify neither of them.
     * 
     * If neither of `documentType` and `documentId` is specified, all invoices/debit memos with open balance of the account are collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentId")
    public String documentId;
    public POSTPaymentRunDataElementRequest withDocumentId(String documentId) {
        this.documentId = documentId;
        return this;
    }
    
    /**
     * The type of a billing document associated with the payment run. The value can be `Invoice` or `DebitMemo`, but `DebitMemo` is only supported if the Invoice Settlement feature is enabled.
     * 
     * You must either specify both `documentType` and `documentId`, or specify neither of them.
     * 
     * If neither of `documentType` and `documentId` is specified, all invoices/debit memos with open balance of the account are collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentType")
    public POSTPaymentRunDataElementRequestDocumentTypeEnum documentType;
    public POSTPaymentRunDataElementRequest withDocumentType(POSTPaymentRunDataElementRequestDocumentTypeEnum documentType) {
        this.documentType = documentType;
        return this;
    }
    
    /**
     * The ID of the payment gateway for collecting invoices/debit memos. The specified payment gateway must be valid and active. If it is not specified, the default payment gateway of the account is used. If no payment gateway is configured for the account, the default payment gateway of the tenant is used.
     * 
     * If `consolidatedPayment` is set to `true`, this field is used in processing a single payment for invoices/debit memos due on an account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentGatewayId")
    public String paymentGatewayId;
    public POSTPaymentRunDataElementRequest withPaymentGatewayId(String paymentGatewayId) {
        this.paymentGatewayId = paymentGatewayId;
        return this;
    }
    
    /**
     * The ID of the payment method for collecting invoices/debit memos. The specified payment method must be a valid non-system payment method. If it is not specified, the default payment method of the account is used regardless of the `autoPay` value of the account.
     * 
     * If `processPaymentWithClosedPM` is set to `false`, the payment method cannot be closed.
     * 
     * If the payment retry rules are enabled, the payment method must meet the rules.
     * 
     * If `consolidatedPayment` is set to `true`, this field is used in processing a single payment for invoices/debit memos due on an account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethodId")
    public String paymentMethodId;
    public POSTPaymentRunDataElementRequest withPaymentMethodId(String paymentMethodId) {
        this.paymentMethodId = paymentMethodId;
        return this;
    }
    
}
