/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class TestUpdateArtifactRequest extends SpeakeasyBase {
  /**
   * The content of the artifact being tested. This is often, but not always, JSON data
   *
   * @remarks
   * representing one of the supported artifact types:
   *
   * * Avro (`AVRO`)
   * * Protobuf (`PROTOBUF`)
   * * JSON Schema (`JSON`)
   * * Kafka Connect (`KCONNECT`)
   * * OpenAPI (`OPENAPI`)
   * * AsyncAPI (`ASYNCAPI`)
   * * GraphQL (`GRAPHQL`)
   * * Web Services Description Language (`WSDL`)
   * * XML Schema (`XSD`)
   *
   */
  @SpeakeasyMetadata({ data: "request, media_type=*/*" })
  requestBody: Uint8Array;

  /**
   * The artifact ID.  Can be a string (client-provided) or UUID (server-generated), representing the unique artifact identifier.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=artifactId",
  })
  artifactId: string;

  /**
   * The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=groupId",
  })
  groupId: string;
}

export class TestUpdateArtifactResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Common response for all operations that can return a `404` error.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Common response used when an input conflicts with existing data.
   */
  @SpeakeasyMetadata()
  ruleViolationError?: shared.RuleViolationError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
