// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListSecurityConfigsXAmzTargetEnum
type ListSecurityConfigsXAmzTargetEnum string

const (
	ListSecurityConfigsXAmzTargetEnumOpenSearchServerlessListSecurityConfigs ListSecurityConfigsXAmzTargetEnum = "OpenSearchServerless.ListSecurityConfigs"
)

func (e ListSecurityConfigsXAmzTargetEnum) ToPointer() *ListSecurityConfigsXAmzTargetEnum {
	return &e
}

func (e *ListSecurityConfigsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OpenSearchServerless.ListSecurityConfigs":
		*e = ListSecurityConfigsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSecurityConfigsXAmzTargetEnum: %v", v)
	}
}

type ListSecurityConfigsRequest struct {
	ListSecurityConfigsRequest shared.ListSecurityConfigsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 ListSecurityConfigsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListSecurityConfigsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListSecurityConfigsResponse *shared.ListSecurityConfigsResponse
	StatusCode                  int
	RawResponse                 *http.Response
	// ValidationException
	ValidationException interface{}
}
