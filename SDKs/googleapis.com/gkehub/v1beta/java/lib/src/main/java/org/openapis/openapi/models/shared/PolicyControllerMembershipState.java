/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PolicyControllerMembershipState - **Policy Controller**: State for a single cluster.
 */
public class PolicyControllerMembershipState {
    /**
     * Currently these include (also serving as map keys): 1. "admission" 2. "audit" 3. "mutation"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("componentStates")
    public java.util.Map<String, PolicyControllerOnClusterState> componentStates;
    public PolicyControllerMembershipState withComponentStates(java.util.Map<String, PolicyControllerOnClusterState> componentStates) {
        this.componentStates = componentStates;
        return this;
    }
    
    /**
     * The state of the template library and any bundles included in the chosen version of the manifest TODO (b/271878194): Remove this
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentStates")
    public java.util.Map<String, PolicyControllerOnClusterState> contentStates;
    public PolicyControllerMembershipState withContentStates(java.util.Map<String, PolicyControllerOnClusterState> contentStates) {
        this.contentStates = contentStates;
        return this;
    }
    
    /**
     * The state of the policy controller policy content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyContentState")
    public PolicyControllerPolicyContentState policyContentState;
    public PolicyControllerMembershipState withPolicyContentState(PolicyControllerPolicyContentState policyContentState) {
        this.policyContentState = policyContentState;
        return this;
    }
    
    /**
     * The overall Policy Controller lifecycle state observed by the Hub Feature controller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public PolicyControllerMembershipStateStateEnum state;
    public PolicyControllerMembershipState withState(PolicyControllerMembershipStateStateEnum state) {
        this.state = state;
        return this;
    }
    
}
