// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VoiceTypeEnum string

const (
	VoiceTypeEnumVoice VoiceTypeEnum = "voice"
)

func (e *VoiceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "voice":
		*e = VoiceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VoiceTypeEnum: %s", s)
	}
}

// Voice - Creates a voice audio element from the provided text
type Voice struct {
	// Element's cache policy. When true, the cached version (if exists) is used. When false, the assets is downloaded.
	Cache *bool `json:"cache,omitempty"`
	// Used for adding your comments
	Comment *string `json:"comment,omitempty"`
	// Element's duration in seconds. A value of -1 auto calculates the duration based on the asset intrinsic length or the scene duration.
	Duration *float32 `json:"duration,omitempty"`
	// Element's time span added after the playback.
	ExtraTime *float32 `json:"extra-time,omitempty"`
	// Adds a fade in effect to the element. Value in seconds.
	FadeIn *float32 `json:"fade-in,omitempty"`
	// Adds a fade out effect to the element. Value in seconds.
	FadeOut *float32 `json:"fade-out,omitempty"`
	// Mutes the audio
	Muted *bool `json:"muted,omitempty"`
	// Element's starting time in seconds relative to the container scene or the movie if the element is in the Movie's elements array.
	Start *float32 `json:"start,omitempty"`
	// The sentence or sentences to be converted to voice audio
	Text string        `json:"text"`
	Type VoiceTypeEnum `json:"type"`
	// The voice name to be used. Check <a href="/docs/tutorial/voice-elements/">available voices</a>.
	Voice  *string  `json:"voice,omitempty"`
	Volume *float64 `json:"volume,omitempty"`
	// Element's z-index. Use this property to reorganize the layering of the elements like in HTML
	ZIndex *float64 `json:"z-index,omitempty"`
}
