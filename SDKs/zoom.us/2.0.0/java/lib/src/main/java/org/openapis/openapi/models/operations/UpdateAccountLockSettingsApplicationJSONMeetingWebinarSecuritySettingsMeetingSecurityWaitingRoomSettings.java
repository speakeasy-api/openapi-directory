/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateAccountLockSettingsApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings - Specify the settings to be applied if waiting room is enabled.
 */
public class UpdateAccountLockSettingsApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings {
    /**
     * 
     * Specify who should be admitted to the waiting room. The value of this field can be one of the following:&lt;br&gt;
     * `0`: All attendees&lt;br&gt; `1`: Users who are not in your account&lt;br&gt; `2`: Users who are not in your account and are not part of your whitelisted domains that are specified in 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("participants_to_place_in_waiting_room")
    public UpdateAccountLockSettingsApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum participantsToPlaceInWaitingRoom;
    public UpdateAccountLockSettingsApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings withParticipantsToPlaceInWaitingRoom(UpdateAccountLockSettingsApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettingsParticipantsToPlaceInWaitingRoomEnum participantsToPlaceInWaitingRoom) {
        this.participantsToPlaceInWaitingRoom = participantsToPlaceInWaitingRoom;
        return this;
    }
    
    /**
     * Specify who can admit participants from the waiting room. The value of this field can be one of the following:&lt;br&gt;
     * `0`: Host and co-hosts only&lt;br&gt; `1`: Host, co-hosts, and anyone who bypassed the waiting room (only if host and co-hosts are not present).
     * 
     * 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("users_who_can_admit_participants_from_waiting_room")
    public Long usersWhoCanAdmitParticipantsFromWaitingRoom;
    public UpdateAccountLockSettingsApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings withUsersWhoCanAdmitParticipantsFromWaitingRoom(Long usersWhoCanAdmitParticipantsFromWaitingRoom) {
        this.usersWhoCanAdmitParticipantsFromWaitingRoom = usersWhoCanAdmitParticipantsFromWaitingRoom;
        return this;
    }
    
    /**
     * If the value of the `participants_to_place_in_waiting_room` field is `2`, use this setting to specify the domains that can bypass the waiting room feature. Separate multiple domains with commas(example: "aaa.com,bbb.com").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("whitelisted_domains_for_waiting_room")
    public String whitelistedDomainsForWaitingRoom;
    public UpdateAccountLockSettingsApplicationJSONMeetingWebinarSecuritySettingsMeetingSecurityWaitingRoomSettings withWhitelistedDomainsForWaitingRoom(String whitelistedDomainsForWaitingRoom) {
        this.whitelistedDomainsForWaitingRoom = whitelistedDomainsForWaitingRoom;
        return this;
    }
    
}
