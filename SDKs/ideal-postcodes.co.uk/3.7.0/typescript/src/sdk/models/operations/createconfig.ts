/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateConfigRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  configNewParam: shared.ConfigNewParam;

  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=key" })
  key: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=user_token",
  })
  userToken?: string;
}

export class CreateConfigResponse extends SpeakeasyBase {
  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  badRequestResponse?: shared.BadRequestResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  configResponse?: shared.ConfigResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Unauthorized Request
   */
  @SpeakeasyMetadata()
  unauthorizedResponse?: shared.UnauthorizedResponse;
}
