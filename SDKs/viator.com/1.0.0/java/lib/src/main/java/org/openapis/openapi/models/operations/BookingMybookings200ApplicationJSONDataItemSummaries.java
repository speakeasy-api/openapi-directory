/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BookingMybookings200ApplicationJSONDataItemSummaries {
    /**
     * Indicates whether a voucher is required for each passenger; or, whether the requirement is one voucher per group booking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("barcodeOption")
    public String barcodeOption;
    public BookingMybookings200ApplicationJSONDataItemSummaries withBarcodeOption(String barcodeOption) {
        this.barcodeOption = barcodeOption;
        return this;
    }
    
    /**
     * **alphanumeric code** specifying the type of barcode
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("barcodeType")
    public String barcodeType;
    public BookingMybookings200ApplicationJSONDataItemSummaries withBarcodeType(String barcodeType) {
        this.barcodeType = barcodeType;
        return this;
    }
    
    /**
     * [booking type indicator](#section/Key-concepts/Booking-concepts) that indicates whether the booking will be `CONFIRMED` immediately or if it will remain `PENDING` even after the booking has been made
     * 
     * *one of* the following:
     * - `"UF"` (FreesaleBE and UnconditionalBE) \u2013 this booking will be confirmed immediately
     * - `"OR"` (DeferredCRMBE) \u2013 the booked product is an on-request product, will not be confirmed immediately and will have a `PENDING` status after it is booked, to be confirmed by the supplier within the time specified in the `hoursConfirmed` field available in the booking response and post-booking services
     * - `"FO"` (FreesaleOnRequestBE) \u2013 the booked product is freesale up until a certain number of days before the travel date, referred to as the *on-request period*.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookingEngineId")
    public org.openapis.openapi.models.shared.BookingEngineIdResponseEnum bookingEngineId;
    public BookingMybookings200ApplicationJSONDataItemSummaries withBookingEngineId(org.openapis.openapi.models.shared.BookingEngineIdResponseEnum bookingEngineId) {
        this.bookingEngineId = bookingEngineId;
        return this;
    }
    
    /**
     * **object** containing item booking status information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookingStatus")
    public org.openapis.openapi.models.shared.BookingStatusItem bookingStatus;
    public BookingMybookings200ApplicationJSONDataItemSummaries withBookingStatus(org.openapis.openapi.models.shared.BookingStatusItem bookingStatus) {
        this.bookingStatus = bookingStatus;
        return this;
    }
    
    /**
     * **currency code** for the currency in which pricing is displayed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;
    public BookingMybookings200ApplicationJSONDataItemSummaries withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * **natural-language description** of *this* item's departure location
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departsFrom")
    public String departsFrom;
    public BookingMybookings200ApplicationJSONDataItemSummaries withDepartsFrom(String departsFrom) {
        this.departsFrom = departsFrom;
        return this;
    }
    
    /**
     * **natural-language description** of the product's departure point
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departurePoint")
    public String departurePoint;
    public BookingMybookings200ApplicationJSONDataItemSummaries withDeparturePoint(String departurePoint) {
        this.departurePoint = departurePoint;
        return this;
    }
    
    /**
     * **natural-language address** of the departure point for the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departurePointAddress")
    public String departurePointAddress;
    public BookingMybookings200ApplicationJSONDataItemSummaries withDeparturePointAddress(String departurePointAddress) {
        this.departurePointAddress = departurePointAddress;
        return this;
    }
    
    /**
     * **natural-language description** of how to access the departure point for the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departurePointDirections")
    public String departurePointDirections;
    public BookingMybookings200ApplicationJSONDataItemSummaries withDeparturePointDirections(String departurePointDirections) {
        this.departurePointDirections = departurePointDirections;
        return this;
    }
    
    /**
     * **unique numeric identifier** of the destination in which the product operates
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destId")
    public Long destId;
    public BookingMybookings200ApplicationJSONDataItemSummaries withDestId(Long destId) {
        this.destId = destId;
        return this;
    }
    
    /**
     * **alphanumeric reference code** of the distributor item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distributorItemRef")
    public String distributorItemRef;
    public BookingMybookings200ApplicationJSONDataItemSummaries withDistributorItemRef(String distributorItemRef) {
        this.distributorItemRef = distributorItemRef;
        return this;
    }
    
    /**
     * The `hoursConfirmed` field also indicates if the product is freesale or on request. The `hoursConfirmed` value is the approximate window for confirmation in hours, which can be presented to the customer. A value of `0` means that the product is **freesale**, and a value greater than `0` means that the product is **on-request**.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hoursConfirmed")
    public Long hoursConfirmed;
    public BookingMybookings200ApplicationJSONDataItemSummaries withHoursConfirmed(Long hoursConfirmed) {
        this.hoursConfirmed = hoursConfirmed;
        return this;
    }
    
    /**
     * Booking-reference number generated by Viator
     * - **Note**: For more information, see: [Booking references](#section/Key-concepts/Booking-references)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemId")
    public String itemId;
    public BookingMybookings200ApplicationJSONDataItemSummaries withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itineraryId")
    public Long itineraryId;
    public BookingMybookings200ApplicationJSONDataItemSummaries withItineraryId(Long itineraryId) {
        this.itineraryId = itineraryId;
        return this;
    }
    
    /**
     * **language code** for the language that the product operates in
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageServicesLanguageCode")
    public String languageServicesLanguageCode;
    public BookingMybookings200ApplicationJSONDataItemSummaries withLanguageServicesLanguageCode(String languageServicesLanguageCode) {
        this.languageServicesLanguageCode = languageServicesLanguageCode;
        return this;
    }
    
    /**
     * **currency-formatted merchant net rate** of *this* item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastRetailPrice")
    public Double lastRetailPrice;
    public BookingMybookings200ApplicationJSONDataItemSummaries withLastRetailPrice(Double lastRetailPrice) {
        this.lastRetailPrice = lastRetailPrice;
        return this;
    }
    
    /**
     * **currency-formatted retail price** of *this* item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastRetailPriceFormatted")
    public String lastRetailPriceFormatted;
    public BookingMybookings200ApplicationJSONDataItemSummaries withLastRetailPriceFormatted(String lastRetailPriceFormatted) {
        this.lastRetailPriceFormatted = lastRetailPriceFormatted;
        return this;
    }
    
    /**
     * **first name** of the lead traveler
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leadTravellerFirstname")
    public String leadTravellerFirstname;
    public BookingMybookings200ApplicationJSONDataItemSummaries withLeadTravellerFirstname(String leadTravellerFirstname) {
        this.leadTravellerFirstname = leadTravellerFirstname;
        return this;
    }
    
    /**
     * **surname** of the lead traveler
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leadTravellerSurname")
    public String leadTravellerSurname;
    public BookingMybookings200ApplicationJSONDataItemSummaries withLeadTravellerSurname(String leadTravellerSurname) {
        this.leadTravellerSurname = leadTravellerSurname;
        return this;
    }
    
    /**
     * **title** of the lead traveler's name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leadTravellerTitle")
    public String leadTravellerTitle;
    public BookingMybookings200ApplicationJSONDataItemSummaries withLeadTravellerTitle(String leadTravellerTitle) {
        this.leadTravellerTitle = leadTravellerTitle;
        return this;
    }
    
    /**
     * ignore (Viator only)
     * 
     * For cancellation information regarding the booking, please refer to the `merchantTermsAndConditions` object
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantCancellable")
    public Boolean merchantCancellable;
    public BookingMybookings200ApplicationJSONDataItemSummaries withMerchantCancellable(Boolean merchantCancellable) {
        this.merchantCancellable = merchantCancellable;
        return this;
    }
    
    /**
     * **currency-formatted merchant net rate** of *this* item
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantNetPrice")
    public Double merchantNetPrice;
    public BookingMybookings200ApplicationJSONDataItemSummaries withMerchantNetPrice(Double merchantNetPrice) {
        this.merchantNetPrice = merchantNetPrice;
        return this;
    }
    
    /**
     * **currency-formatted merchant net rate** of *this* item
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantNetPriceFormatted")
    public String merchantNetPriceFormatted;
    public BookingMybookings200ApplicationJSONDataItemSummaries withMerchantNetPriceFormatted(String merchantNetPriceFormatted) {
        this.merchantNetPriceFormatted = merchantNetPriceFormatted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantTermsAndConditions")
    public BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditions merchantTermsAndConditions;
    public BookingMybookings200ApplicationJSONDataItemSummaries withMerchantTermsAndConditions(BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditions merchantTermsAndConditions) {
        this.merchantTermsAndConditions = merchantTermsAndConditions;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("obfsId")
    public String obfsId;
    public BookingMybookings200ApplicationJSONDataItemSummaries withObfsId(String obfsId) {
        this.obfsId = obfsId;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passbooks")
    public String passbooks;
    public BookingMybookings200ApplicationJSONDataItemSummaries withPassbooks(String passbooks) {
        this.passbooks = passbooks;
        return this;
    }
    
    /**
     * **numeric merchant total price** of the product that was booked
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;
    public BookingMybookings200ApplicationJSONDataItemSummaries withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * **currency-formatted merchant total price** for *this* booking
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceFormatted")
    public String priceFormatted;
    public BookingMybookings200ApplicationJSONDataItemSummaries withPriceFormatted(String priceFormatted) {
        this.priceFormatted = priceFormatted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceUSD")
    public Double priceUSD;
    public BookingMybookings200ApplicationJSONDataItemSummaries withPriceUSD(Double priceUSD) {
        this.priceUSD = priceUSD;
        return this;
    }
    
    /**
     * **unique alphanumeric identifier** of the product that was booked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productCode")
    public String productCode;
    public BookingMybookings200ApplicationJSONDataItemSummaries withProductCode(String productCode) {
        this.productCode = productCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productPulledDown")
    public Boolean productPulledDown;
    public BookingMybookings200ApplicationJSONDataItemSummaries withProductPulledDown(Boolean productPulledDown) {
        this.productPulledDown = productPulledDown;
        return this;
    }
    
    /**
     * **natural-language description** of the product that was booked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTitle")
    public String productTitle;
    public BookingMybookings200ApplicationJSONDataItemSummaries withProductTitle(String productTitle) {
        this.productTitle = productTitle;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productWidgetList")
    public String productWidgetList;
    public BookingMybookings200ApplicationJSONDataItemSummaries withProductWidgetList(String productWidgetList) {
        this.productWidgetList = productWidgetList;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rulesApplied")
    public String rulesApplied;
    public BookingMybookings200ApplicationJSONDataItemSummaries withRulesApplied(String rulesApplied) {
        this.rulesApplied = rulesApplied;
        return this;
    }
    
    /**
     * Ignore (Viator only)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("savingAmount")
    public String savingAmount;
    public BookingMybookings200ApplicationJSONDataItemSummaries withSavingAmount(String savingAmount) {
        this.savingAmount = savingAmount;
        return this;
    }
    
    /**
     * Ignore (Viator only)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("savingAmountFormated")
    public String savingAmountFormated;
    public BookingMybookings200ApplicationJSONDataItemSummaries withSavingAmountFormated(String savingAmountFormated) {
        this.savingAmountFormated = savingAmountFormated;
        return this;
    }
    
    /**
     * **sort order** of *this* item summary
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public Long sortOrder;
    public BookingMybookings200ApplicationJSONDataItemSummaries withSortOrder(Long sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("termsAndConditions")
    public String termsAndConditions;
    public BookingMybookings200ApplicationJSONDataItemSummaries withTermsAndConditions(String termsAndConditions) {
        this.termsAndConditions = termsAndConditions;
        return this;
    }
    
    /**
     * **alphanumeric identifier** of the tour grade of the product that was booked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tourGradeCode")
    public String tourGradeCode;
    public BookingMybookings200ApplicationJSONDataItemSummaries withTourGradeCode(String tourGradeCode) {
        this.tourGradeCode = tourGradeCode;
        return this;
    }
    
    /**
     * **natural-language description** of *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tourGradeDescription")
    public String tourGradeDescription;
    public BookingMybookings200ApplicationJSONDataItemSummaries withTourGradeDescription(String tourGradeDescription) {
        this.tourGradeDescription = tourGradeDescription;
        return this;
    }
    
    /**
     * **date** of travel for the product that was booked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("travelDate")
    public String travelDate;
    public BookingMybookings200ApplicationJSONDataItemSummaries withTravelDate(String travelDate) {
        this.travelDate = travelDate;
        return this;
    }
    
    /**
     * **array** of age band objects
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("travellerAgeBands")
    public BookingMybookings200ApplicationJSONDataItemSummariesTravellerAgeBands[] travellerAgeBands;
    public BookingMybookings200ApplicationJSONDataItemSummaries withTravellerAgeBands(BookingMybookings200ApplicationJSONDataItemSummariesTravellerAgeBands[] travellerAgeBands) {
        this.travellerAgeBands = travellerAgeBands;
        return this;
    }
    
    /**
     * Unique reference for the voucher for this booking that can be used as a request parameter to search for existing bookings using the [/booking/mybookings](#operation/bookingMybookings) and [/booking/pastbooking](#operation/bookingPastbooking) endpoints
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voucherKey")
    public String voucherKey;
    public BookingMybookings200ApplicationJSONDataItemSummaries withVoucherKey(String voucherKey) {
        this.voucherKey = voucherKey;
        return this;
    }
    
    /**
     * **specifier** of the rules pertaining to the use of the voucher
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voucherOption")
    public String voucherOption;
    public BookingMybookings200ApplicationJSONDataItemSummaries withVoucherOption(String voucherOption) {
        this.voucherOption = voucherOption;
        return this;
    }
    
    /**
     * **natural-language description** of the requirements for using the voucher
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voucherRequirements")
    public String voucherRequirements;
    public BookingMybookings200ApplicationJSONDataItemSummaries withVoucherRequirements(String voucherRequirements) {
        this.voucherRequirements = voucherRequirements;
        return this;
    }
    
    /**
     * **URL of the voucher** for *this* product (if available). The customer can access this URL to retrieve their voucher.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voucherURL")
    public String voucherURL;
    public BookingMybookings200ApplicationJSONDataItemSummaries withVoucherURL(String voucherURL) {
        this.voucherURL = voucherURL;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vouchers")
    public String vouchers;
    public BookingMybookings200ApplicationJSONDataItemSummaries withVouchers(String vouchers) {
        this.vouchers = vouchers;
        return this;
    }
    
}
