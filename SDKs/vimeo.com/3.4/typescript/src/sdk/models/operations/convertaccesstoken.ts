/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The grant type. Must be set to `vimeo_oauth1`.
 */
export enum ConvertAccessTokenRequestBodyGrantTypeEnum {
  VimeoOauth1 = "vimeo_oauth1",
}

export class ConvertAccessTokenRequestBody extends SpeakeasyBase {
  /**
   * The grant type. Must be set to `vimeo_oauth1`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grant_type" })
  grantType: ConvertAccessTokenRequestBodyGrantTypeEnum;

  /**
   * The OAuth 1 token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token: string;

  /**
   * The OAuth 1 token secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token_secret" })
  tokenSecret: string;
}

export class ConvertAccessTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The tokens were converted.
   */
  @SpeakeasyMetadata()
  auth?: shared.Auth;

  /**
   * * The token is invalid.
   *
   * @remarks
   * * The token has unauthorized scopes.
   */
  @SpeakeasyMetadata()
  authError?: shared.AuthError;
}
