/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PartOfSpeechTag } from "./partofspeechtag";
import { Expose, Type } from "class-transformer";

/**
 * Represents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.
 */
export class SyntaxToken extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BeginOffset" })
  beginOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EndOffset" })
  endOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PartOfSpeech" })
  @Type(() => PartOfSpeechTag)
  partOfSpeech?: PartOfSpeechTag;

  @SpeakeasyMetadata()
  @Expose({ name: "Text" })
  text?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TokenId" })
  tokenId?: number;
}
