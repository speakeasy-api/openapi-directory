"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudcontactcenterinsightsv1analysisresult as shared_googlecloudcontactcenterinsightsv1analysisresult
from ..shared import googlecloudcontactcenterinsightsv1annotatorselector as shared_googlecloudcontactcenterinsightsv1annotatorselector
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1Analysis:
    r"""The analysis resource."""
    
    analysis_result: Optional[shared_googlecloudcontactcenterinsightsv1analysisresult.GoogleCloudContactcenterinsightsV1AnalysisResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analysisResult'), 'exclude': lambda f: f is None }})
    r"""The result of an analysis."""  
    annotator_selector: Optional[shared_googlecloudcontactcenterinsightsv1annotatorselector.GoogleCloudContactcenterinsightsV1AnnotatorSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotatorSelector'), 'exclude': lambda f: f is None }})
    r"""Selector of all available annotators and phrase matchers to run."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time at which the analysis was created, which occurs when the long-running operation completes."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"""  
    request_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time at which the analysis was requested."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1AnalysisInput:
    r"""The analysis resource."""
    
    analysis_result: Optional[shared_googlecloudcontactcenterinsightsv1analysisresult.GoogleCloudContactcenterinsightsV1AnalysisResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analysisResult'), 'exclude': lambda f: f is None }})
    r"""The result of an analysis."""  
    annotator_selector: Optional[shared_googlecloudcontactcenterinsightsv1annotatorselector.GoogleCloudContactcenterinsightsV1AnnotatorSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotatorSelector'), 'exclude': lambda f: f is None }})
    r"""Selector of all available annotators and phrase matchers to run."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Immutable. The resource name of the analysis. Format: projects/{project}/locations/{location}/conversations/{conversation}/analyses/{analysis}"""  
    