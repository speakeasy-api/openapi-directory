/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * ImChatMessages200ApplicationJSON - Pagination object.
 */
public class ImChatMessages200ApplicationJSON {
    /**
     * Start date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("from")
    public LocalDate from;
    public ImChatMessages200ApplicationJSON withFrom(LocalDate from) {
        this.from = from;
        return this;
    }
    
    /**
     * Array of session objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messages")
    public ImChatMessages200ApplicationJSONMessages[] messages;
    public ImChatMessages200ApplicationJSON withMessages(ImChatMessages200ApplicationJSONMessages[] messages) {
        this.messages = messages;
        return this;
    }
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_token")
    public String nextPageToken;
    public ImChatMessages200ApplicationJSON withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The amount of records returns within a single API call. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;
    public ImChatMessages200ApplicationJSON withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * IM chat session ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("session_id")
    public String sessionId;
    public ImChatMessages200ApplicationJSON withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }
    
    /**
     * End date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("to")
    public LocalDate to;
    public ImChatMessages200ApplicationJSON withTo(LocalDate to) {
        this.to = to;
        return this;
    }
    
}
