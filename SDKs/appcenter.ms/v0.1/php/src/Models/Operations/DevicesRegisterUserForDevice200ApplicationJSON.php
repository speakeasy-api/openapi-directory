<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * DevicesRegisterUserForDevice200ApplicationJSON - The information for a single iOS device
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class DevicesRegisterUserForDevice200ApplicationJSON
{
    /**
     * The device description, in the format "iPhone 7 Plus (A1784)"
     * 
     * @var string $deviceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('device_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deviceName;
    
    /**
     * A combination of the device model name and the owner name.
     * 
     * @var ?string $fullDeviceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('full_device_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fullDeviceName = null;
    
    /**
     * The device's International Mobile Equipment Identity number. Always empty or undefined at present.
     * 
     * @var ?string $imei
     */
	#[\JMS\Serializer\Annotation\SerializedName('imei')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $imei = null;
    
    /**
     * The model identifier of the device, in the format iDeviceM,N
     * 
     * @var string $model
     */
	#[\JMS\Serializer\Annotation\SerializedName('model')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $model;
    
    /**
     * The last known OS version running on the device
     * 
     * @var string $osBuild
     */
	#[\JMS\Serializer\Annotation\SerializedName('os_build')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $osBuild;
    
    /**
     * The last known OS version running on the device
     * 
     * @var string $osVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('os_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $osVersion;
    
    /**
     * The user ID of the device owner.
     * 
     * @var ?string $ownerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('owner_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownerId = null;
    
    /**
     * Timestamp of when the device was registered in ISO format.
     * 
     * @var ?string $registeredAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('registered_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $registeredAt = null;
    
    /**
     * The device's serial number. Always empty or undefined at present.
     * 
     * @var ?string $serial
     */
	#[\JMS\Serializer\Annotation\SerializedName('serial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serial = null;
    
    /**
     * The provisioning status of the device.
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
    /**
     * The Unique Device IDentifier of the device
     * 
     * @var string $udid
     */
	#[\JMS\Serializer\Annotation\SerializedName('udid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $udid;
    
	public function __construct()
	{
		$this->deviceName = "";
		$this->fullDeviceName = null;
		$this->imei = null;
		$this->model = "";
		$this->osBuild = "";
		$this->osVersion = "";
		$this->ownerId = null;
		$this->registeredAt = null;
		$this->serial = null;
		$this->status = "";
		$this->udid = "";
	}
}
