// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NfsExportOptionsAccessModeEnum - Either READ_ONLY, for allowing only read requests on the exported directory, or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.
type NfsExportOptionsAccessModeEnum string

const (
	NfsExportOptionsAccessModeEnumAccessModeUnspecified NfsExportOptionsAccessModeEnum = "ACCESS_MODE_UNSPECIFIED"
	NfsExportOptionsAccessModeEnumReadOnly              NfsExportOptionsAccessModeEnum = "READ_ONLY"
	NfsExportOptionsAccessModeEnumReadWrite             NfsExportOptionsAccessModeEnum = "READ_WRITE"
)

func (e *NfsExportOptionsAccessModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCESS_MODE_UNSPECIFIED":
		fallthrough
	case "READ_ONLY":
		fallthrough
	case "READ_WRITE":
		*e = NfsExportOptionsAccessModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NfsExportOptionsAccessModeEnum: %s", s)
	}
}

// NfsExportOptionsSquashModeEnum - Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH, for not allowing root access. The default is NO_ROOT_SQUASH.
type NfsExportOptionsSquashModeEnum string

const (
	NfsExportOptionsSquashModeEnumSquashModeUnspecified NfsExportOptionsSquashModeEnum = "SQUASH_MODE_UNSPECIFIED"
	NfsExportOptionsSquashModeEnumNoRootSquash          NfsExportOptionsSquashModeEnum = "NO_ROOT_SQUASH"
	NfsExportOptionsSquashModeEnumRootSquash            NfsExportOptionsSquashModeEnum = "ROOT_SQUASH"
)

func (e *NfsExportOptionsSquashModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SQUASH_MODE_UNSPECIFIED":
		fallthrough
	case "NO_ROOT_SQUASH":
		fallthrough
	case "ROOT_SQUASH":
		*e = NfsExportOptionsSquashModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NfsExportOptionsSquashModeEnum: %s", s)
	}
}

// NfsExportOptions - NFS export options specifications.
type NfsExportOptions struct {
	// Either READ_ONLY, for allowing only read requests on the exported directory, or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.
	AccessMode *NfsExportOptionsAccessModeEnum `json:"accessMode,omitempty"`
	// An integer representing the anonymous group id with a default value of 65534. Anon_gid may only be set with squash_mode of ROOT_SQUASH. An error will be returned if this field is specified for other squash_mode settings.
	AnonGid *string `json:"anonGid,omitempty"`
	// An integer representing the anonymous user id with a default value of 65534. Anon_uid may only be set with squash_mode of ROOT_SQUASH. An error will be returned if this field is specified for other squash_mode settings.
	AnonUID *string `json:"anonUid,omitempty"`
	// List of either an IPv4 addresses in the format `{octet1}.{octet2}.{octet3}.{octet4}` or CIDR ranges in the format `{octet1}.{octet2}.{octet3}.{octet4}/{mask size}` which may mount the file share. Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned. The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.
	IPRanges []string `json:"ipRanges,omitempty"`
	// Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH, for not allowing root access. The default is NO_ROOT_SQUASH.
	SquashMode *NfsExportOptionsSquashModeEnum `json:"squashMode,omitempty"`
}
