/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateSlackChannelConfigurationRequestBody {
    /**
     * The channel ID in Slack. This ID identifies a channel within a Slack workspace.
     */
    @JsonProperty("channelId")
    public String channelId;
    public CreateSlackChannelConfigurationRequestBody withChannelId(String channelId) {
        this.channelId = channelId;
        return this;
    }
    
    /**
     * The name of the Slack channel that you configure for the Amazon Web Services Support App.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channelName")
    public String channelName;
    public CreateSlackChannelConfigurationRequestBody withChannelName(String channelName) {
        this.channelName = channelName;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of an IAM role that you want to use to perform operations on Amazon Web Services. For more information, see &lt;a href="https://docs.aws.amazon.com/awssupport/latest/user/support-app-permissions.html"&gt;Managing access to the Amazon Web Services Support App&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Support User Guide&lt;/i&gt;.
     */
    @JsonProperty("channelRoleArn")
    public String channelRoleArn;
    public CreateSlackChannelConfigurationRequestBody withChannelRoleArn(String channelRoleArn) {
        this.channelRoleArn = channelRoleArn;
        return this;
    }
    
    /**
     * Whether you want to get notified when a support case has a new correspondence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifyOnAddCorrespondenceToCase")
    public Boolean notifyOnAddCorrespondenceToCase;
    public CreateSlackChannelConfigurationRequestBody withNotifyOnAddCorrespondenceToCase(Boolean notifyOnAddCorrespondenceToCase) {
        this.notifyOnAddCorrespondenceToCase = notifyOnAddCorrespondenceToCase;
        return this;
    }
    
    /**
     * &lt;p&gt;The case severity for a support case that you want to receive notifications.&lt;/p&gt; &lt;p&gt;If you specify &lt;code&gt;high&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt;, you must specify &lt;code&gt;true&lt;/code&gt; for at least one of the following parameters:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;notifyOnAddCorrespondenceToCase&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;notifyOnCreateOrReopenCase&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;notifyOnResolveCase&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you specify &lt;code&gt;none&lt;/code&gt;, the following parameters must be null or &lt;code&gt;false&lt;/code&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;notifyOnAddCorrespondenceToCase&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;notifyOnCreateOrReopenCase&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;notifyOnResolveCase&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;If you don't specify these parameters in your request, they default to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonProperty("notifyOnCaseSeverity")
    public CreateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum notifyOnCaseSeverity;
    public CreateSlackChannelConfigurationRequestBody withNotifyOnCaseSeverity(CreateSlackChannelConfigurationRequestBodyNotifyOnCaseSeverityEnum notifyOnCaseSeverity) {
        this.notifyOnCaseSeverity = notifyOnCaseSeverity;
        return this;
    }
    
    /**
     * Whether you want to get notified when a support case is created or reopened.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifyOnCreateOrReopenCase")
    public Boolean notifyOnCreateOrReopenCase;
    public CreateSlackChannelConfigurationRequestBody withNotifyOnCreateOrReopenCase(Boolean notifyOnCreateOrReopenCase) {
        this.notifyOnCreateOrReopenCase = notifyOnCreateOrReopenCase;
        return this;
    }
    
    /**
     * Whether you want to get notified when a support case is resolved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifyOnResolveCase")
    public Boolean notifyOnResolveCase;
    public CreateSlackChannelConfigurationRequestBody withNotifyOnResolveCase(Boolean notifyOnResolveCase) {
        this.notifyOnResolveCase = notifyOnResolveCase;
        return this;
    }
    
    /**
     * The team ID in Slack. This ID uniquely identifies a Slack workspace, such as &lt;code&gt;T012ABCDEFG&lt;/code&gt;.
     */
    @JsonProperty("teamId")
    public String teamId;
    public CreateSlackChannelConfigurationRequestBody withTeamId(String teamId) {
        this.teamId = teamId;
        return this;
    }
    
}
