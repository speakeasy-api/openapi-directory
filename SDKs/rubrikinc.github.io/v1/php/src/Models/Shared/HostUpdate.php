<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HostUpdate - Properties of host to update.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HostUpdate
{
    /**
     * A user-specified string that returns this host in searches.
     * 
     * @var ?string $alias
     */
	#[\JMS\Serializer\Annotation\SerializedName('alias')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $alias = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('compressionEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $compressionEnabled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hdfsConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HdfsBaseConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HdfsBaseConfig $hdfsConfig = null;
    
    /**
     * When VFD is disabled on the specified Windows host, set this property to false to instruct the Rubrik cluster to remove the VFD driver from a specified Windows host. Before using this property, disable VFD on the specified Windows host by setting the value of HostVfdEnabled to Disabled.
     * 
     * @var ?bool $hostVfdDriverInstalled
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostVfdDriverInstalled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hostVfdDriverInstalled = null;
    
    /**
     * VFD host support status.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HostVfdInstallConfigEnum $hostVfdEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostVfdEnabled')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\HostVfdInstallConfigEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HostVfdInstallConfigEnum $hostVfdEnabled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostname = null;
    
    /**
     * A Boolean that specifies whether to discover Oracle information during host refresh. A value of 'true' discovers Oracle information during host refresh.
     * 
     * 
     * 
     * @var ?bool $isOracleHost
     */
	#[\JMS\Serializer\Annotation\SerializedName('isOracleHost')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isOracleHost = null;
    
    /**
     * When CBT is disabled on the specified Windows host, set this property to false to instruct the Rubrik cluster to remove the CBT driver from a specified Windows host. Before using this property, disable CBT on the specified Windows host by setting the value of mssqlCbtEnabled to Disabled.
     * 
     * @var ?bool $mssqlCbtDriverInstalled
     */
	#[\JMS\Serializer\Annotation\SerializedName('mssqlCbtDriverInstalled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $mssqlCbtDriverInstalled = null;
    
    /**
     * CBT host support status.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MssqlCbtStatusTypeEnum $mssqlCbtEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('mssqlCbtEnabled')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MssqlCbtStatusTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MssqlCbtStatusTypeEnum $mssqlCbtEnabled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('nasConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NasConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NasConfig $nasConfig = null;
    
    /**
     * Specifies the Oracle username for an account with query privileges. The account must have query privileges for a specified Oracle installation to enable Oracle discovery queries for that installation.
     * 
     * 
     * 
     * @var ?string $oracleQueryUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('oracleQueryUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $oracleQueryUser = null;
    
    /**
     * Specifies the Oracle username for an account with sysdba privileges. The account must have sysdba privileges for a specified Oracle installation to enable Oracle discovery queries for that installation. This field overrides the configured global sysdba user for the specified Oracle installation.
     * 
     * 
     * 
     * @var ?string $oracleSysDbaUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('oracleSysDbaUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $oracleSysDbaUser = null;
    
	public function __construct()
	{
		$this->alias = null;
		$this->compressionEnabled = null;
		$this->hdfsConfig = null;
		$this->hostVfdDriverInstalled = null;
		$this->hostVfdEnabled = null;
		$this->hostname = null;
		$this->isOracleHost = null;
		$this->mssqlCbtDriverInstalled = null;
		$this->mssqlCbtEnabled = null;
		$this->nasConfig = null;
		$this->oracleQueryUser = null;
		$this->oracleSysDbaUser = null;
	}
}
