/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Severity - &lt;p&gt;The severity of the finding.&lt;/p&gt; &lt;p&gt;The finding provider can provide the initial severity. The finding provider can only update the severity if it hasn't been updated using &lt;code&gt;BatchUpdateFindings&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The finding must have either &lt;code&gt;Label&lt;/code&gt; or &lt;code&gt;Normalized&lt;/code&gt; populated. If only one of these attributes is populated, then Security Hub automatically populates the other one. If neither attribute is populated, then the finding is invalid. &lt;code&gt;Label&lt;/code&gt; is the preferred attribute.&lt;/p&gt;
 */
public class Severity {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Label")
    public SeverityLabelEnum label;
    public Severity withLabel(SeverityLabelEnum label) {
        this.label = label;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Normalized")
    public Long normalized;
    public Severity withNormalized(Long normalized) {
        this.normalized = normalized;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Original")
    public String original;
    public Severity withOriginal(String original) {
        this.original = original;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Product")
    public Double product;
    public Severity withProduct(Double product) {
        this.product = product;
        return this;
    }
    
}
