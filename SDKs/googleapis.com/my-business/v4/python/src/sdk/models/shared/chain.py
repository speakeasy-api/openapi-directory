"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import chainname as shared_chainname
from ..shared import chainurl as shared_chainurl
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Chain:
    r"""A chain is a brand that your business's locations can be affiliated with."""
    
    chain_names: Optional[list[shared_chainname.ChainName]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chainNames'), 'exclude': lambda f: f is None }})
    r"""Names of the chain."""  
    location_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationCount'), 'exclude': lambda f: f is None }})
    r"""Number of locations that are part of this chain."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The chain's resource name, in the format `chains/{chain_place_id}`."""  
    websites: Optional[list[shared_chainurl.ChainURL]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('websites'), 'exclude': lambda f: f is None }})
    r"""Websites of the chain."""  
    