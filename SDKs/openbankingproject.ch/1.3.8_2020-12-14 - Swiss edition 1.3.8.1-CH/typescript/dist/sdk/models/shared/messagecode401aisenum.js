"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageCode401AISEnum = void 0;
/**
 * Message codes defined for AIS for HTTP Error code 401 (UNAUTHORIZED).
 */
var MessageCode401AISEnum;
(function (MessageCode401AISEnum) {
    MessageCode401AISEnum["CertificateInvalid"] = "CERTIFICATE_INVALID";
    MessageCode401AISEnum["RoleInvalid"] = "ROLE_INVALID";
    MessageCode401AISEnum["CertificateExpired"] = "CERTIFICATE_EXPIRED";
    MessageCode401AISEnum["CertificateBlocked"] = "CERTIFICATE_BLOCKED";
    MessageCode401AISEnum["CertificateRevoke"] = "CERTIFICATE_REVOKE";
    MessageCode401AISEnum["CertificateMissing"] = "CERTIFICATE_MISSING";
    MessageCode401AISEnum["SignatureInvalid"] = "SIGNATURE_INVALID";
    MessageCode401AISEnum["SignatureMissing"] = "SIGNATURE_MISSING";
    MessageCode401AISEnum["CorporateIdInvalid"] = "CORPORATE_ID_INVALID";
    MessageCode401AISEnum["PsuCredentialsInvalid"] = "PSU_CREDENTIALS_INVALID";
    MessageCode401AISEnum["ConsentInvalid"] = "CONSENT_INVALID";
    MessageCode401AISEnum["ConsentExpired"] = "CONSENT_EXPIRED";
    MessageCode401AISEnum["TokenUnknown"] = "TOKEN_UNKNOWN";
    MessageCode401AISEnum["TokenInvalid"] = "TOKEN_INVALID";
    MessageCode401AISEnum["TokenExpired"] = "TOKEN_EXPIRED";
})(MessageCode401AISEnum = exports.MessageCode401AISEnum || (exports.MessageCode401AISEnum = {}));
