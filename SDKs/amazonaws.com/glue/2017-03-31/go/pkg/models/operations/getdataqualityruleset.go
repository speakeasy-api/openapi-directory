// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetDataQualityRulesetXAmzTargetEnum
type GetDataQualityRulesetXAmzTargetEnum string

const (
	GetDataQualityRulesetXAmzTargetEnumAwsGlueGetDataQualityRuleset GetDataQualityRulesetXAmzTargetEnum = "AWSGlue.GetDataQualityRuleset"
)

func (e *GetDataQualityRulesetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.GetDataQualityRuleset":
		*e = GetDataQualityRulesetXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDataQualityRulesetXAmzTargetEnum: %s", s)
	}
}

type GetDataQualityRulesetRequest struct {
	GetDataQualityRulesetRequest shared.GetDataQualityRulesetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   GetDataQualityRulesetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetDataQualityRulesetResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// Success
	GetDataQualityRulesetResponse *shared.GetDataQualityRulesetResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
