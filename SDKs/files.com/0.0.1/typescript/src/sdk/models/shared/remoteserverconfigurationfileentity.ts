/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Download configuration file (required for some Remote Server integrations, such as the Files.com Agent)
 */
export class RemoteServerConfigurationFileEntity extends SpeakeasyBase {
  /**
   * Files Agent API Token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_token" })
  apiToken?: string;

  /**
   * agent config version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "config_version" })
  configVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hostname" })
  hostname?: string;

  /**
   * Agent ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "permission_set" })
  permissionSet?: string;

  /**
   * Incoming port for files agent connections
   */
  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;

  /**
   * private key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "private_key" })
  privateKey?: string;

  /**
   * public key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_key" })
  publicKey?: string;

  /**
   * Agent local root path
   */
  @SpeakeasyMetadata()
  @Expose({ name: "root" })
  root?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "server_host_key" })
  serverHostKey?: string;

  /**
   * either running or shutdown
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subdomain" })
  subdomain?: string;
}
