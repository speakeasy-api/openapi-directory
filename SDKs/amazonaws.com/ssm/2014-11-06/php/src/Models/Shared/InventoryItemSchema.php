<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InventoryItemSchema - The inventory item schema definition. Users can use this to compose inventory query filters.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InventoryItemSchema
{
    /**
     * $attributes
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\InventoryItemAttribute> $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('Attributes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InventoryItemAttribute>')]
    public array $attributes;
    
	#[\JMS\Serializer\Annotation\SerializedName('DisplayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $typeName;
    
	#[\JMS\Serializer\Annotation\SerializedName('Version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $version = null;
    
	public function __construct()
	{
		$this->attributes = [];
		$this->displayName = null;
		$this->typeName = "";
		$this->version = null;
	}
}
