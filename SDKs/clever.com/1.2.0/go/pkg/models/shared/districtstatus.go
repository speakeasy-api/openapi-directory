// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DistrictStatusStateEnum string

const (
	DistrictStatusStateEnumRunning DistrictStatusStateEnum = "running"
	DistrictStatusStateEnumPending DistrictStatusStateEnum = "pending"
	DistrictStatusStateEnumError   DistrictStatusStateEnum = "error"
	DistrictStatusStateEnumPaused  DistrictStatusStateEnum = "paused"
)

func (e *DistrictStatusStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "running":
		fallthrough
	case "pending":
		fallthrough
	case "error":
		fallthrough
	case "paused":
		*e = DistrictStatusStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistrictStatusStateEnum: %s", s)
	}
}

type DistrictStatus struct {
	Error        *string                  `json:"error,omitempty"`
	ID           *string                  `json:"id,omitempty"`
	InstantLogin *bool                    `json:"instant_login,omitempty"`
	LastSync     *string                  `json:"last_sync,omitempty"`
	LaunchDate   *string                  `json:"launch_date,omitempty"`
	PauseEnd     *string                  `json:"pause_end,omitempty"`
	PauseStart   *string                  `json:"pause_start,omitempty"`
	SisType      *string                  `json:"sis_type,omitempty"`
	State        *DistrictStatusStateEnum `json:"state,omitempty"`
}
