"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import oauth_v1_token as shared_oauth_v1_token
from typing import Optional

CREATE_TOKEN_SERVERS = [
	"https://oauth.twilio.com",
]


@dataclasses.dataclass
class CreateTokenSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateTokenCreateTokenRequest:
    
    client_sid: str = dataclasses.field(metadata={'form': { 'field_name': 'ClientSid' }})
    r"""A 34 character string that uniquely identifies this OAuth App."""  
    grant_type: str = dataclasses.field(metadata={'form': { 'field_name': 'GrantType' }})
    r"""Grant type is a credential representing resource owner's authorization which can be used by client to obtain access token."""  
    client_secret: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'ClientSecret' }})
    r"""The credential for confidential OAuth App."""  
    code: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Code' }})
    r"""JWT token related to the authorization code grant type."""  
    code_verifier: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CodeVerifier' }})
    r"""A code which is generation cryptographically."""  
    device_code: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DeviceCode' }})
    r"""JWT token related to the device code grant type."""  
    device_id: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DeviceId' }})
    r"""The Id of the device associated with the token (refresh token)."""  
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'RefreshToken' }})
    r"""JWT token related to the refresh token grant type."""  
    

@dataclasses.dataclass
class CreateTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    oauth_v1_token: Optional[shared_oauth_v1_token.OauthV1Token] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    