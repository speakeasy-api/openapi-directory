"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Query = exports.QueryQuery = exports.QueryQueryVariable = exports.QueryQueryVariableVariable = exports.QueryQueryGroup = exports.QueryQueryGroupGroup = exports.QueryQueryGroupGroupOutput = exports.QueryQueryGroupGroupOutputAtOutputEnum = exports.QueryQueryGroupGroupOrder = exports.QueryQueryGroupGroupFilter = exports.QueryQueryGroupGroupCondition = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var QueryQueryGroupGroupCondition = /** @class */ (function (_super) {
    __extends(QueryQueryGroupGroupCondition, _super);
    function QueryQueryGroupGroupCondition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@ValueA" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroupCondition.prototype, "atValueA", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@ValueB" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroupCondition.prototype, "atValueB", void 0);
    return QueryQueryGroupGroupCondition;
}(utils_1.SpeakeasyBase));
exports.QueryQueryGroupGroupCondition = QueryQueryGroupGroupCondition;
var QueryQueryGroupGroupFilter = /** @class */ (function (_super) {
    __extends(QueryQueryGroupGroupFilter, _super);
    function QueryQueryGroupGroupFilter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@IsOr" }),
        __metadata("design:type", Boolean)
    ], QueryQueryGroupGroupFilter.prototype, "atIsOr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Property" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroupFilter.prototype, "atProperty", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Value" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroupFilter.prototype, "atValue", void 0);
    return QueryQueryGroupGroupFilter;
}(utils_1.SpeakeasyBase));
exports.QueryQueryGroupGroupFilter = QueryQueryGroupGroupFilter;
var QueryQueryGroupGroupOrder = /** @class */ (function (_super) {
    __extends(QueryQueryGroupGroupOrder, _super);
    function QueryQueryGroupGroupOrder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Property" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroupOrder.prototype, "atProperty", void 0);
    return QueryQueryGroupGroupOrder;
}(utils_1.SpeakeasyBase));
exports.QueryQueryGroupGroupOrder = QueryQueryGroupGroupOrder;
/**
 * The output bases' output
 */
var QueryQueryGroupGroupOutputAtOutputEnum;
(function (QueryQueryGroupGroupOutputAtOutputEnum) {
    QueryQueryGroupGroupOutputAtOutputEnum["Element"] = "Element";
    QueryQueryGroupGroupOutputAtOutputEnum["Attribute"] = "Attribute";
    QueryQueryGroupGroupOutputAtOutputEnum["Variable"] = "Variable";
    QueryQueryGroupGroupOutputAtOutputEnum["VariableSum"] = "VariableSum";
    QueryQueryGroupGroupOutputAtOutputEnum["VariableAppend"] = "VariableAppend";
    QueryQueryGroupGroupOutputAtOutputEnum["VariablePrepend"] = "VariablePrepend";
    QueryQueryGroupGroupOutputAtOutputEnum["ElementDatePart"] = "ElementDatePart";
    QueryQueryGroupGroupOutputAtOutputEnum["InnerText"] = "InnerText";
})(QueryQueryGroupGroupOutputAtOutputEnum = exports.QueryQueryGroupGroupOutputAtOutputEnum || (exports.QueryQueryGroupGroupOutputAtOutputEnum = {}));
var QueryQueryGroupGroupOutput = /** @class */ (function (_super) {
    __extends(QueryQueryGroupGroupOutput, _super);
    function QueryQueryGroupGroupOutput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@MaxLength" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroupOutput.prototype, "atMaxLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Output" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroupOutput.prototype, "atOutput", void 0);
    return QueryQueryGroupGroupOutput;
}(utils_1.SpeakeasyBase));
exports.QueryQueryGroupGroupOutput = QueryQueryGroupGroupOutput;
var QueryQueryGroupGroup = /** @class */ (function (_super) {
    __extends(QueryQueryGroupGroup, _super);
    function QueryQueryGroupGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@GroupName" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroup.prototype, "atGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@ItemName" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroup.prototype, "atItemName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@LoopExpression" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroup.prototype, "atLoopExpression", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Predicate" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroup.prototype, "atPredicate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Selector" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroup.prototype, "atSelector", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@UniqueKeyVariable" }),
        __metadata("design:type", String)
    ], QueryQueryGroupGroup.prototype, "atUniqueKeyVariable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: QueryQueryGroupGroupCondition }),
        (0, class_transformer_1.Expose)({ name: "Condition" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryGroupGroupCondition; }),
        __metadata("design:type", Array)
    ], QueryQueryGroupGroup.prototype, "condition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: QueryQueryGroupGroupFilter }),
        (0, class_transformer_1.Expose)({ name: "Filter" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryGroupGroupFilter; }),
        __metadata("design:type", Array)
    ], QueryQueryGroupGroup.prototype, "filter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: QueryQueryGroupGroupOrder }),
        (0, class_transformer_1.Expose)({ name: "Order" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryGroupGroupOrder; }),
        __metadata("design:type", Array)
    ], QueryQueryGroupGroup.prototype, "order", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: QueryQueryGroupGroupOutput }),
        (0, class_transformer_1.Expose)({ name: "Output" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryGroupGroupOutput; }),
        __metadata("design:type", Array)
    ], QueryQueryGroupGroup.prototype, "output", void 0);
    return QueryQueryGroupGroup;
}(utils_1.SpeakeasyBase));
exports.QueryQueryGroupGroup = QueryQueryGroupGroup;
/**
 * The querys' groups
 */
var QueryQueryGroup = /** @class */ (function (_super) {
    __extends(QueryQueryGroup, _super);
    function QueryQueryGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: QueryQueryGroupGroup }),
        (0, class_transformer_1.Expose)({ name: "Group" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryGroupGroup; }),
        __metadata("design:type", Array)
    ], QueryQueryGroup.prototype, "group", void 0);
    return QueryQueryGroup;
}(utils_1.SpeakeasyBase));
exports.QueryQueryGroup = QueryQueryGroup;
var QueryQueryVariableVariable = /** @class */ (function (_super) {
    __extends(QueryQueryVariableVariable, _super);
    function QueryQueryVariableVariable() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Name" }),
        __metadata("design:type", String)
    ], QueryQueryVariableVariable.prototype, "atName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "@Value" }),
        __metadata("design:type", String)
    ], QueryQueryVariableVariable.prototype, "atValue", void 0);
    return QueryQueryVariableVariable;
}(utils_1.SpeakeasyBase));
exports.QueryQueryVariableVariable = QueryQueryVariableVariable;
/**
 * The querys' variables
 */
var QueryQueryVariable = /** @class */ (function (_super) {
    __extends(QueryQueryVariable, _super);
    function QueryQueryVariable() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: QueryQueryVariableVariable }),
        (0, class_transformer_1.Expose)({ name: "Variable" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryVariableVariable; }),
        __metadata("design:type", Array)
    ], QueryQueryVariable.prototype, "variable", void 0);
    return QueryQueryVariable;
}(utils_1.SpeakeasyBase));
exports.QueryQueryVariable = QueryQueryVariable;
var QueryQuery = /** @class */ (function (_super) {
    __extends(QueryQuery, _super);
    function QueryQuery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Encoding" }),
        __metadata("design:type", String)
    ], QueryQuery.prototype, "encoding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ExcludeNullOrEmptyElements" }),
        __metadata("design:type", Boolean)
    ], QueryQuery.prototype, "excludeNullOrEmptyElements", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Groups" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryGroup; }),
        __metadata("design:type", QueryQueryGroup)
    ], QueryQuery.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RootNodeName" }),
        __metadata("design:type", String)
    ], QueryQuery.prototype, "rootNodeName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SuppressMetricAttributes" }),
        __metadata("design:type", Boolean)
    ], QueryQuery.prototype, "suppressMetricAttributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Variables" }),
        (0, class_transformer_1.Type)(function () { return QueryQueryVariable; }),
        __metadata("design:type", QueryQueryVariable)
    ], QueryQuery.prototype, "variables", void 0);
    return QueryQuery;
}(utils_1.SpeakeasyBase));
exports.QueryQuery = QueryQuery;
/**
 * The query object to be executed against the application data.
 */
var Query = /** @class */ (function (_super) {
    __extends(Query, _super);
    function Query() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Query" }),
        (0, class_transformer_1.Type)(function () { return QueryQuery; }),
        __metadata("design:type", QueryQuery)
    ], Query.prototype, "query", void 0);
    return Query;
}(utils_1.SpeakeasyBase));
exports.Query = Query;
