/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NumericBucketingResult - Output only. Custom numeric bucketing result.
 */
public class NumericBucketingResult {
    /**
     * Count within each bucket. Its size is the length of NumericBucketingOption.bucket_bounds plus 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("counts")
    public BucketizedCount[] counts;
    public NumericBucketingResult withCounts(BucketizedCount[] counts) {
        this.counts = counts;
        return this;
    }
    
    /**
     * Stores the maximum value of the numeric field. Is populated only if [NumericBucketingOption.requires_min_max] is set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxValue")
    public Double maxValue;
    public NumericBucketingResult withMaxValue(Double maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * Stores the minimum value of the numeric field. Will be populated only if [NumericBucketingOption.requires_min_max] is set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minValue")
    public Double minValue;
    public NumericBucketingResult withMinValue(Double minValue) {
        this.minValue = minValue;
        return this;
    }
    
}
