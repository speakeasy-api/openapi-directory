/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RegisterJobDefinitionRequestBody {
    /**
     * Container properties are used for Amazon ECS based job definitions. These properties to describe the container that's launched as part of a job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerProperties")
    public RegisterJobDefinitionRequestBodyContainerProperties containerProperties;

    public RegisterJobDefinitionRequestBody withContainerProperties(RegisterJobDefinitionRequestBodyContainerProperties containerProperties) {
        this.containerProperties = containerProperties;
        return this;
    }
    
    /**
     * An object that contains the properties for the Kubernetes resources of a job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eksProperties")
    public RegisterJobDefinitionRequestBodyEksProperties eksProperties;

    public RegisterJobDefinitionRequestBody withEksProperties(RegisterJobDefinitionRequestBodyEksProperties eksProperties) {
        this.eksProperties = eksProperties;
        return this;
    }
    
    /**
     * The name of the job definition to register. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
     */
    @JsonProperty("jobDefinitionName")
    public String jobDefinitionName;

    public RegisterJobDefinitionRequestBody withJobDefinitionName(String jobDefinitionName) {
        this.jobDefinitionName = jobDefinitionName;
        return this;
    }
    
    /**
     * &lt;p&gt;An object that represents the node properties of a multi-node parallel job.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Node properties can't be specified for Amazon EKS based job definitions.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeProperties")
    public RegisterJobDefinitionRequestBodyNodeProperties nodeProperties;

    public RegisterJobDefinitionRequestBody withNodeProperties(RegisterJobDefinitionRequestBodyNodeProperties nodeProperties) {
        this.nodeProperties = nodeProperties;
        return this;
    }
    
    /**
     * Default parameter substitution placeholders to set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a &lt;code&gt;SubmitJob&lt;/code&gt; request override any corresponding parameter defaults from the job definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public java.util.Map<String, String> parameters;

    public RegisterJobDefinitionRequestBody withParameters(java.util.Map<String, String> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * &lt;p&gt;The platform capabilities required by the job definition. If no value is specified, it defaults to &lt;code&gt;EC2&lt;/code&gt;. To run the job on Fargate resources, specify &lt;code&gt;FARGATE&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If the job runs on Amazon EKS resources, then you must not specify &lt;code&gt;platformCapabilities&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformCapabilities")
    public org.openapis.openapi.models.shared.PlatformCapabilityEnum[] platformCapabilities;

    public RegisterJobDefinitionRequestBody withPlatformCapabilities(org.openapis.openapi.models.shared.PlatformCapabilityEnum[] platformCapabilities) {
        this.platformCapabilities = platformCapabilities;
        return this;
    }
    
    /**
     * &lt;p&gt;Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags are not propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the &lt;code&gt;FAILED&lt;/code&gt; state.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If the job runs on Amazon EKS resources, then you must not specify &lt;code&gt;propagateTags&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("propagateTags")
    public Boolean propagateTags;

    public RegisterJobDefinitionRequestBody withPropagateTags(Boolean propagateTags) {
        this.propagateTags = propagateTags;
        return this;
    }
    
    /**
     * The retry strategy that's associated with a job. For more information, see &lt;a href="https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html"&gt;Automated job retries&lt;/a&gt; in the &lt;i&gt;Batch User Guide&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retryStrategy")
    public RegisterJobDefinitionRequestBodyRetryStrategy retryStrategy;

    public RegisterJobDefinitionRequestBody withRetryStrategy(RegisterJobDefinitionRequestBodyRetryStrategy retryStrategy) {
        this.retryStrategy = retryStrategy;
        return this;
    }
    
    /**
     * &lt;p&gt;The scheduling priority for jobs that are submitted with this job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority.&lt;/p&gt; &lt;p&gt;The minimum supported value is 0 and the maximum supported value is 9999.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedulingPriority")
    public Long schedulingPriority;

    public RegisterJobDefinitionRequestBody withSchedulingPriority(Long schedulingPriority) {
        this.schedulingPriority = schedulingPriority;
        return this;
    }
    
    /**
     * The tags that you apply to the job definition to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see &lt;a href="https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html"&gt;Tagging Amazon Web Services Resources&lt;/a&gt; in &lt;i&gt;Batch User Guide&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public RegisterJobDefinitionRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * An object that represents a job timeout configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public RegisterJobDefinitionRequestBodyTimeout timeout;

    public RegisterJobDefinitionRequestBody withTimeout(RegisterJobDefinitionRequestBodyTimeout timeout) {
        this.timeout = timeout;
        return this;
    }
    
    /**
     * &lt;p&gt;The type of job definition. For more information about multi-node parallel jobs, see &lt;a href="https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html"&gt;Creating a multi-node parallel job definition&lt;/a&gt; in the &lt;i&gt;Batch User Guide&lt;/i&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If the job is run on Fargate resources, then &lt;code&gt;multinode&lt;/code&gt; isn't supported.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonProperty("type")
    public RegisterJobDefinitionRequestBodyTypeEnum type;

    public RegisterJobDefinitionRequestBody withType(RegisterJobDefinitionRequestBodyTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public RegisterJobDefinitionRequestBody(@JsonProperty("jobDefinitionName") String jobDefinitionName, @JsonProperty("type") RegisterJobDefinitionRequestBodyTypeEnum type) {
        this.jobDefinitionName = jobDefinitionName;
        this.type = type;
  }
}
