// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// NotifyApplicationStateXAmzTargetEnum
type NotifyApplicationStateXAmzTargetEnum string

const (
	NotifyApplicationStateXAmzTargetEnumAwsMigrationHubNotifyApplicationState NotifyApplicationStateXAmzTargetEnum = "AWSMigrationHub.NotifyApplicationState"
)

func (e NotifyApplicationStateXAmzTargetEnum) ToPointer() *NotifyApplicationStateXAmzTargetEnum {
	return &e
}

func (e *NotifyApplicationStateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSMigrationHub.NotifyApplicationState":
		*e = NotifyApplicationStateXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotifyApplicationStateXAmzTargetEnum: %v", v)
	}
}

type NotifyApplicationStateRequest struct {
	NotifyApplicationStateRequest shared.NotifyApplicationStateRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    NotifyApplicationStateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type NotifyApplicationStateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// DryRunOperation
	DryRunOperation interface{}
	// HomeRegionNotSetException
	HomeRegionNotSetException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	NotifyApplicationStateResult map[string]interface{}
	// PolicyErrorException
	PolicyErrorException interface{}
	StatusCode           int
	RawResponse          *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedOperation
	UnauthorizedOperation interface{}
}
