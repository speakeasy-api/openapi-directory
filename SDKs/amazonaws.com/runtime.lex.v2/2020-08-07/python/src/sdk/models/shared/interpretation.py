"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import confidencescore as shared_confidencescore
from ..shared import intent as shared_intent
from ..shared import sentimentresponse as shared_sentimentresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Interpretation:
    r"""An intent that Amazon Lex V2 determined might satisfy the user's utterance. The intents are ordered by the confidence score."""
    
    intent: Optional[shared_intent.Intent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intent'), 'exclude': lambda f: f is None }})  
    nlu_confidence: Optional[shared_confidencescore.ConfidenceScore] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nluConfidence'), 'exclude': lambda f: f is None }})  
    sentiment_response: Optional[shared_sentimentresponse.SentimentResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sentimentResponse'), 'exclude': lambda f: f is None }})  
    