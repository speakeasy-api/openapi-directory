/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Information about the accepter transit gateway.
 */
export class RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  coreNetworkId?: string;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  region?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;
}

/**
 * Describes whether dynamic routing is enabled or disabled for the transit gateway peering attachment.
 */
export enum RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * Details about the transit gateway peering attachment.
 */
export class RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  dynamicRouting?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum;
}

/**
 * Information about the requester transit gateway.
 */
export class RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  coreNetworkId?: string;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  region?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;
}

/**
 * The state of the transit gateway peering attachment. Note that the <code>initiating</code> state has been deprecated.
 */
export enum RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum {
  Initiating = "initiating",
  InitiatingRequest = "initiatingRequest",
  PendingAcceptance = "pendingAcceptance",
  RollingBack = "rollingBack",
  Pending = "pending",
  Available = "available",
  Modifying = "modifying",
  Deleting = "deleting",
  Deleted = "deleted",
  Failed = "failed",
  Rejected = "rejected",
  Rejecting = "rejecting",
  Failing = "failing",
}

/**
 * The status of the transit gateway peering attachment.
 */
export class RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: string;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * Describes a tag.
 */
export class RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The transit gateway peering attachment.
 */
export class RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  accepterTgwInfo?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo;

  @SpeakeasyMetadata()
  accepterTransitGatewayAttachmentId?: string;

  @SpeakeasyMetadata()
  creationTime?: Date;

  @SpeakeasyMetadata()
  options?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions;

  @SpeakeasyMetadata()
  requesterTgwInfo?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo;

  @SpeakeasyMetadata()
  state?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum;

  @SpeakeasyMetadata()
  status?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus;

  @SpeakeasyMetadata({
    elemType:
      RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags,
  })
  tags?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags[];

  @SpeakeasyMetadata()
  transitGatewayAttachmentId?: string;
}

/**
 * Success
 */
export class RejectTransitGatewayPeeringAttachmentResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  transitGatewayPeeringAttachment?: RejectTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment;
}
