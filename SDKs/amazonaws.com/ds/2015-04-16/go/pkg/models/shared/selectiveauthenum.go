// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SelectiveAuthEnum string

const (
	SelectiveAuthEnumEnabled  SelectiveAuthEnum = "Enabled"
	SelectiveAuthEnumDisabled SelectiveAuthEnum = "Disabled"
)

func (e SelectiveAuthEnum) ToPointer() *SelectiveAuthEnum {
	return &e
}

func (e *SelectiveAuthEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Enabled":
		fallthrough
	case "Disabled":
		*e = SelectiveAuthEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SelectiveAuthEnum: %v", v)
	}
}
