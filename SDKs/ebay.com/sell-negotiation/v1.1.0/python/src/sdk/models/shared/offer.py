"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import offereditem as shared_offereditem
from ..shared import timeduration as shared_timeduration
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Offer:
    r"""A complex type that defines an offer that a seller makes to eligible buyers."""
    
    allow_counter_offer: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowCounterOffer'), 'exclude': lambda f: f is None }})
    r"""If set to true, the buyer is allowed to make a counter-offer to the seller's offer."""  
    buyer: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buyer'), 'exclude': lambda f: f is None }})
    r"""This complex type identifies an eBay user."""  
    creation_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDate'), 'exclude': lambda f: f is None }})
    r"""The date and time when the seller's offer was created. The returned timestamp is formatted as an ISO 8601 string, which is based on the 24-hour Coordinated Universal Time (UTC) clock. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2018-08-20T07:09:00.000Z"""  
    initiated_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initiatedBy'), 'exclude': lambda f: f is None }})
    r"""The eBay UserName of the user (seller) who initiated the offer."""  
    last_modified_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastModifiedDate'), 'exclude': lambda f: f is None }})
    r"""The date and time when the offer was last modified. The returned timestamp is formatted as an ISO 8601 string."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""A seller-defined message related to the offer being made. This message is sent to the list of &quot;interested&quot; buyers along with the offer message from eBay."""  
    offer_duration: Optional[shared_timeduration.TimeDuration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerDuration'), 'exclude': lambda f: f is None }})
    r"""A complex type that specifies a period of time using a specified time-measurement unit."""  
    offered_items: Optional[list[shared_offereditem.OfferedItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offeredItems'), 'exclude': lambda f: f is None }})
    r"""The list of items associated with the offer. Currently, the offer list is restricted to a single offer."""  
    offer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerId'), 'exclude': lambda f: f is None }})
    r"""A unique eBay-assigned identifier for the offer."""  
    offer_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerStatus'), 'exclude': lambda f: f is None }})
    r"""The current state, or status, of an offer. Status states include PENDING, COUNTERED, ACCEPTED, and DECLINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferStatusEnum'>eBay API documentation</a>"""  
    offer_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerType'), 'exclude': lambda f: f is None }})
    r"""The type of offer being made. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/negotiation/types/api:OfferTypeEnum'>eBay API documentation</a>"""  
    revision: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revision'), 'exclude': lambda f: f is None }})
    r"""A unique, eBay-assigned ID for the revision of the offer."""  
    