// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RokuPlanListItemIntervalEnum - The type of billing period used.
type RokuPlanListItemIntervalEnum string

const (
	RokuPlanListItemIntervalEnumDay   RokuPlanListItemIntervalEnum = "day"
	RokuPlanListItemIntervalEnumWeek  RokuPlanListItemIntervalEnum = "week"
	RokuPlanListItemIntervalEnumMonth RokuPlanListItemIntervalEnum = "month"
	RokuPlanListItemIntervalEnumYear  RokuPlanListItemIntervalEnum = "year"
	RokuPlanListItemIntervalEnumNone  RokuPlanListItemIntervalEnum = "none"
)

func (e RokuPlanListItemIntervalEnum) ToPointer() *RokuPlanListItemIntervalEnum {
	return &e
}

func (e *RokuPlanListItemIntervalEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "day":
		fallthrough
	case "week":
		fallthrough
	case "month":
		fallthrough
	case "year":
		fallthrough
	case "none":
		*e = RokuPlanListItemIntervalEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RokuPlanListItemIntervalEnum: %v", v)
	}
}

type RokuPlanListItem struct {
	// The price of a plan. If a free plan then undefined.
	Amount float32 `json:"amount"`
	// The currency a plan is offered in.
	Currency string `json:"currency"`
	// The textual description.
	Description string `json:"description"`
	// The type of billing period used.
	Interval RokuPlanListItemIntervalEnum `json:"interval"`
	// Given the `interval` this is how frequently it will run. e.g. every 2 weeks.
	IntervalCount int `json:"intervalCount"`
	// The title of a plan.
	Nickname string `json:"nickname"`
	// The product of a plan.
	Product string `json:"product"`
	// The identifier of a plan.
	ProductCode string `json:"productCode"`
	// NA.
	SavingLabel string `json:"savingLabel"`
	// How many days a trial period runs for a plan. Only valid if `hasTrialPeriod` is true.
	TrialPeriodDays int `json:"trialPeriodDays"`
}
