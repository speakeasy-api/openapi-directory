/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExploitabilityDetails } from "./exploitabilitydetails";
import { ExploitAvailableEnum } from "./exploitavailableenum";
import { FindingStatusEnum } from "./findingstatusenum";
import { FindingTypeEnum } from "./findingtypeenum";
import { FixAvailableEnum } from "./fixavailableenum";
import { InspectorScoreDetails } from "./inspectorscoredetails";
import { NetworkReachabilityDetails } from "./networkreachabilitydetails";
import { PackageVulnerabilityDetails } from "./packagevulnerabilitydetails";
import { Remediation } from "./remediation";
import { Resource } from "./resource";
import { SeverityEnum } from "./severityenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Details about an Amazon Inspector finding.
 */
export class Finding extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "awsAccountId" })
  awsAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exploitAvailable" })
  exploitAvailable?: ExploitAvailableEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "exploitabilityDetails" })
  @Type(() => ExploitabilityDetails)
  exploitabilityDetails?: ExploitabilityDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "findingArn" })
  findingArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstObservedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstObservedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "fixAvailable" })
  fixAvailable?: FixAvailableEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "inspectorScore" })
  inspectorScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "inspectorScoreDetails" })
  @Type(() => InspectorScoreDetails)
  inspectorScoreDetails?: InspectorScoreDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "lastObservedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastObservedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "networkReachabilityDetails" })
  @Type(() => NetworkReachabilityDetails)
  networkReachabilityDetails?: NetworkReachabilityDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "packageVulnerabilityDetails" })
  @Type(() => PackageVulnerabilityDetails)
  packageVulnerabilityDetails?: PackageVulnerabilityDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "remediation" })
  @Type(() => Remediation)
  remediation: Remediation;

  @SpeakeasyMetadata({ elemType: Resource })
  @Expose({ name: "resources" })
  @Type(() => Resource)
  resources: Resource[];

  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity: SeverityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: FindingStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: FindingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
