// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QueryExecutionStateEnum string

const (
	QueryExecutionStateEnumQueued    QueryExecutionStateEnum = "QUEUED"
	QueryExecutionStateEnumRunning   QueryExecutionStateEnum = "RUNNING"
	QueryExecutionStateEnumSucceeded QueryExecutionStateEnum = "SUCCEEDED"
	QueryExecutionStateEnumFailed    QueryExecutionStateEnum = "FAILED"
	QueryExecutionStateEnumCancelled QueryExecutionStateEnum = "CANCELLED"
)

func (e *QueryExecutionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUEUED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		*e = QueryExecutionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryExecutionStateEnum: %s", s)
	}
}
