/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Cron - Cron represents a Cron task
 */
public class Cron {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exec_times")
    public Long execTimes;
    public Cron withExecTimes(Long execTimes) {
        this.execTimes = execTimes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Cron withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("next")
    public OffsetDateTime next;
    public Cron withNext(OffsetDateTime next) {
        this.next = next;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("prev")
    public OffsetDateTime prev;
    public Cron withPrev(OffsetDateTime prev) {
        this.prev = prev;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public String schedule;
    public Cron withSchedule(String schedule) {
        this.schedule = schedule;
        return this;
    }
    
}
