// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum - The state that the membership should be in. Only `"active"` will be accepted.
type OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum string

const (
	OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnumActive OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum = "active"
)

func (e OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum) ToPointer() *OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum {
	return &e
}

func (e *OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		*e = OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum: %v", v)
	}
}

type OrgsUpdateMembershipForAuthenticatedUserRequestBody struct {
	// The state that the membership should be in. Only `"active"` will be accepted.
	State OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum `json:"state"`
}

type OrgsUpdateMembershipForAuthenticatedUserRequest struct {
	RequestBody OrgsUpdateMembershipForAuthenticatedUserRequestBody `request:"mediaType=application/json"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
}

type OrgsUpdateMembershipForAuthenticatedUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Forbidden
	BasicError *shared.BasicError
	// Response
	OrgMembership *shared.OrgMembership
	// Validation failed
	ValidationError *shared.ValidationError
}
