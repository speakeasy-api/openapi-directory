"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import countpendingdecisiontasksinput as shared_countpendingdecisiontasksinput
from ..shared import pendingtaskcount as shared_pendingtaskcount
from enum import Enum
from typing import Any, Optional

class CountPendingDecisionTasksXAmzTargetEnum(str, Enum):
    SIMPLE_WORKFLOW_SERVICE_COUNT_PENDING_DECISION_TASKS = 'SimpleWorkflowService.CountPendingDecisionTasks'


@dataclasses.dataclass
class CountPendingDecisionTasksRequest:
    
    count_pending_decision_tasks_input: shared_countpendingdecisiontasksinput.CountPendingDecisionTasksInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: CountPendingDecisionTasksXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class CountPendingDecisionTasksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    operation_not_permitted_fault: Optional[Any] = dataclasses.field(default=None)
    r"""OperationNotPermittedFault"""  
    pending_task_count: Optional[shared_pendingtaskcount.PendingTaskCount] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    unknown_resource_fault: Optional[Any] = dataclasses.field(default=None)
    r"""UnknownResourceFault"""  
    