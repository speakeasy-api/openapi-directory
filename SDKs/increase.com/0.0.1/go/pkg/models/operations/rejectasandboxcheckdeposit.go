// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RejectASandboxCheckDepositRequest struct {
	CheckDepositID string `pathParam:"style=simple,explode=false,name=check_deposit_id"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum = 429
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnumRateLimitedError RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON13 struct {
	Detail     string                                                       `json:"detail"`
	RetryAfter *int64                                                       `json:"retry_after,omitempty"`
	Status     RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                       `json:"title"`
	Type       RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnumFourHundredAndThree RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum = 403
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnumPrivateFeatureError RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON12 struct {
	Detail string                                                       `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnumFourHundredAndFour RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum = 404
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnumObjectNotFoundError RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON11 struct {
	Detail string                                                       `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnumFourHundred RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum = 400
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnumMalformedRequestError RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON10 struct {
	Detail string                                                       `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnumFourHundred RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum = 400
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnumInvalidParametersError RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                    `json:"errors"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnumFourHundredAndNine RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum = 409
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnumInvalidOperationError RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON8 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnumFourHundredAndOne RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum = 401
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON7 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnumFiveHundred RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum = 500
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnumInternalServerError RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON6 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnumFourHundredAndThree RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum = 403
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON5 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum = 422
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON4 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnumFourHundredAndNine RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum = 409
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnumIdempotencyConflictError RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON3 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnumFourHundredAndThree RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum = 403
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON2 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum int64

const (
	RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnumFourHundredAndFour RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum = 404
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum) ToPointer() *RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON1 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Deposit
	CheckDeposit *shared.CheckDeposit
	// Error
	Error interface{}
}
