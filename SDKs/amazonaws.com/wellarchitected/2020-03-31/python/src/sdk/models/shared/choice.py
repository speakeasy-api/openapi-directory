"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import additionalresources as shared_additionalresources
from ..shared import choicecontent as shared_choicecontent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Choice:
    r"""A choice available to answer question."""
    
    additional_resources: Optional[list[shared_additionalresources.AdditionalResources]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalResources'), 'exclude': lambda f: f is None }})  
    choice_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChoiceId'), 'exclude': lambda f: f is None }})
    r"""The ID of a choice."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""The description of a choice."""  
    helpful_resource: Optional[shared_choicecontent.ChoiceContent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HelpfulResource'), 'exclude': lambda f: f is None }})  
    improvement_plan: Optional[shared_choicecontent.ChoiceContent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImprovementPlan'), 'exclude': lambda f: f is None }})  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title'), 'exclude': lambda f: f is None }})
    r"""The title of a choice."""  
    