/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GETUserContentByDateJsonSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=api-key",
  })
  apiKey: string;
}

export class GETUserContentByDateJsonRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=date" })
  date?: string;
}

export class GETUserContentByDateJson200ApplicationJSONDebug extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}

export class GETUserContentByDateJson200ApplicationJSONResultsComments extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "approveDate" })
  approveDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assetID" })
  assetID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "assetURL" })
  assetURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentBody" })
  commentBody?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentID" })
  commentID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "commentSequence" })
  commentSequence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "commentTitle" })
  commentTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentType" })
  commentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createDate" })
  createDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "editorsSelection" })
  editorsSelection?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lft" })
  lft?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "parentID" })
  parentID?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendationCount" })
  recommendationCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "replies" })
  replies?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "replyCount" })
  replyCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "rgt" })
  rgt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "statusID" })
  statusID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updateDate" })
  updateDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userDisplayName" })
  userDisplayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userID" })
  userID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "userLocation" })
  userLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userTitle" })
  userTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userURL" })
  userURL?: number;
}

export class GETUserContentByDateJson200ApplicationJSONResults extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "api_timestamp" })
  apiTimestamp?: string;

  @SpeakeasyMetadata({
    elemType: GETUserContentByDateJson200ApplicationJSONResultsComments,
  })
  @Expose({ name: "comments" })
  @Type(() => GETUserContentByDateJson200ApplicationJSONResultsComments)
  comments?: GETUserContentByDateJson200ApplicationJSONResultsComments[];

  @SpeakeasyMetadata()
  @Expose({ name: "totalCommentsFound" })
  totalCommentsFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalCommentsReturned" })
  totalCommentsReturned?: number;
}

export class GETUserContentByDateJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "debug" })
  @Type(() => GETUserContentByDateJson200ApplicationJSONDebug)
  debug?: GETUserContentByDateJson200ApplicationJSONDebug;

  @SpeakeasyMetadata()
  @Expose({ name: "results" })
  @Type(() => GETUserContentByDateJson200ApplicationJSONResults)
  results?: GETUserContentByDateJson200ApplicationJSONResults;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GETUserContentByDateJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  getUserContentByDateJSON200ApplicationJSONObject?: GETUserContentByDateJson200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
