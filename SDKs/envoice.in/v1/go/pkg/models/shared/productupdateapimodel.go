// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProductUpdateAPIModelStatusEnum - Product availability status
type ProductUpdateAPIModelStatusEnum string

const (
	ProductUpdateAPIModelStatusEnumActive       ProductUpdateAPIModelStatusEnum = "Active"
	ProductUpdateAPIModelStatusEnumNotAvailable ProductUpdateAPIModelStatusEnum = "NotAvailable"
	ProductUpdateAPIModelStatusEnumInactive     ProductUpdateAPIModelStatusEnum = "Inactive"
)

func (e *ProductUpdateAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "NotAvailable":
		fallthrough
	case "Inactive":
		*e = ProductUpdateAPIModelStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductUpdateAPIModelStatusEnum: %s", s)
	}
}

type ProductUpdateAPIModel struct {
	// After payment description
	AfterPaymentDescription *string `json:"AfterPaymentDescription,omitempty" form:"name=AfterPaymentDescription"`
	// List of product attachments
	Attachments []ProductAttachmentAPIModel `json:"Attachments,omitempty" form:"name=Attachments,json"`
	// Default button call to action
	// Ex: Buy now, subscribe, ...
	ButtonCallToAction *string `json:"ButtonCallToAction,omitempty" form:"name=ButtonCallToAction"`
	// List of product coupons
	Coupons []ProductCouponAPIModel `json:"Coupons,omitempty" form:"name=Coupons,json"`
	// Foreign key Currency
	CurrencyID *int `json:"CurrencyId,omitempty" form:"name=CurrencyId"`
	// Product description
	Description *string `json:"Description,omitempty" form:"name=Description"`
	// List of product discounts
	Discounts []ProductDiscountAPIModel `json:"Discounts,omitempty" form:"name=Discounts,json"`
	// Product id
	ID *int `json:"Id,omitempty" form:"name=Id"`
	// Indicate that the product is set as featured
	IsFeatured *bool `json:"IsFeatured,omitempty" form:"name=IsFeatured"`
	// List of product items
	Items []ProductItemAPIModel `json:"Items,omitempty" form:"name=Items,json"`
	// Product alias
	Name *string `json:"Name,omitempty" form:"name=Name"`
	// List of enabled payment gateways for this product
	PaymentGateways []ProductGatewayAPIModel `json:"PaymentGateways,omitempty" form:"name=PaymentGateways,json"`
	// Cost for shipping the product
	ShippingAmount *float64 `json:"ShippingAmount,omitempty" form:"name=ShippingAmount"`
	// Client instructions for shipping
	ShippingDescription *string `json:"ShippingDescription,omitempty" form:"name=ShippingDescription"`
	// Product availability status
	Status *ProductUpdateAPIModelStatusEnum `json:"Status,omitempty" form:"name=Status"`
	// What happens next description
	WhatHappensNextDescription *string `json:"WhatHappensNextDescription,omitempty" form:"name=WhatHappensNextDescription"`
}
