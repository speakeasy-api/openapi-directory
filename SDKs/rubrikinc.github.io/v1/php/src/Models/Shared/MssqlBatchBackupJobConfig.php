<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MssqlBatchBackupJobConfig - Configuration for the on-demand backups.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MssqlBatchBackupJobConfig
{
    /**
     * IDs of the Microsoft SQL availability groups. All databases with a `rootId` belonging to this list are considered for taking an on demand snapshot.
     * 
     * @var ?array<string> $availabilityGroupIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('availabilityGroupIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $availabilityGroupIds = null;
    
    /**
     * IDs of the Microsoft SQL databases. All databases in this list are considered for taking an on demand snapshot.
     * 
     * @var ?array<string> $databaseIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('databaseIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $databaseIds = null;
    
    /**
     * Determines whether to force a full or incremental snapshot.
     * 
     * @var ?bool $forceFullSnapshot
     */
	#[\JMS\Serializer\Annotation\SerializedName('forceFullSnapshot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $forceFullSnapshot = null;
    
    /**
     * IDs of the hosts. All databases with a `rootId` belonging to this list are considered for taking an on demand snapshot.
     * 
     * @var ?array<string> $hostIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $hostIds = null;
    
    /**
     * IDs of the Microsoft SQL instances. All non-availability databases on these instances are considered for taking an on demand snapshot.
     * 
     * @var ?array<string> $instanceIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $instanceIds = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('slaId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $slaId = null;
    
    /**
     * IDs of the Windows clusters. All databases with a `rootId` belonging to this list are considered for taking an on demand snapshot.
     * 
     * @var ?array<string> $windowsClusterIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('windowsClusterIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $windowsClusterIds = null;
    
	public function __construct()
	{
		$this->availabilityGroupIds = null;
		$this->databaseIds = null;
		$this->forceFullSnapshot = null;
		$this->hostIds = null;
		$this->instanceIds = null;
		$this->slaId = null;
		$this->windowsClusterIds = null;
	}
}
