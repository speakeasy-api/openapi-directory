// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuditLogEventContextAPIAuthenticationMethodEnum - The authentication method used in the context of an API request.
// Only present if the `context_type` is `api`. Can be one of `cookie`, `oauth`, `personal_access_token`, or `service_account`.
type AuditLogEventContextAPIAuthenticationMethodEnum string

const (
	AuditLogEventContextAPIAuthenticationMethodEnumCookie              AuditLogEventContextAPIAuthenticationMethodEnum = "cookie"
	AuditLogEventContextAPIAuthenticationMethodEnumOauth               AuditLogEventContextAPIAuthenticationMethodEnum = "oauth"
	AuditLogEventContextAPIAuthenticationMethodEnumPersonalAccessToken AuditLogEventContextAPIAuthenticationMethodEnum = "personal_access_token"
	AuditLogEventContextAPIAuthenticationMethodEnumServiceAccount      AuditLogEventContextAPIAuthenticationMethodEnum = "service_account"
)

func (e *AuditLogEventContextAPIAuthenticationMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cookie":
		fallthrough
	case "oauth":
		fallthrough
	case "personal_access_token":
		fallthrough
	case "service_account":
		*e = AuditLogEventContextAPIAuthenticationMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditLogEventContextAPIAuthenticationMethodEnum: %s", s)
	}
}

// AuditLogEventContextContextTypeEnum - The type of context.
// Can be one of `web`, `desktop`, `mobile`, `asana_support`, `asana`, `email`, or `api`.
type AuditLogEventContextContextTypeEnum string

const (
	AuditLogEventContextContextTypeEnumWeb          AuditLogEventContextContextTypeEnum = "web"
	AuditLogEventContextContextTypeEnumDesktop      AuditLogEventContextContextTypeEnum = "desktop"
	AuditLogEventContextContextTypeEnumMobile       AuditLogEventContextContextTypeEnum = "mobile"
	AuditLogEventContextContextTypeEnumAsanaSupport AuditLogEventContextContextTypeEnum = "asana_support"
	AuditLogEventContextContextTypeEnumAsana        AuditLogEventContextContextTypeEnum = "asana"
	AuditLogEventContextContextTypeEnumEmail        AuditLogEventContextContextTypeEnum = "email"
	AuditLogEventContextContextTypeEnumAPI          AuditLogEventContextContextTypeEnum = "api"
)

func (e *AuditLogEventContextContextTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "web":
		fallthrough
	case "desktop":
		fallthrough
	case "mobile":
		fallthrough
	case "asana_support":
		fallthrough
	case "asana":
		fallthrough
	case "email":
		fallthrough
	case "api":
		*e = AuditLogEventContextContextTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditLogEventContextContextTypeEnum: %s", s)
	}
}

// AuditLogEventContext - The context from which this event originated.
type AuditLogEventContext struct {
	// The authentication method used in the context of an API request.
	// Only present if the `context_type` is `api`. Can be one of `cookie`, `oauth`, `personal_access_token`, or `service_account`.
	APIAuthenticationMethod *AuditLogEventContextAPIAuthenticationMethodEnum `json:"api_authentication_method,omitempty"`
	// The IP address of the client that initiated the event, if applicable.
	ClientIPAddress *string `json:"client_ip_address,omitempty"`
	// The type of context.
	// Can be one of `web`, `desktop`, `mobile`, `asana_support`, `asana`, `email`, or `api`.
	ContextType *AuditLogEventContextContextTypeEnum `json:"context_type,omitempty"`
	// The name of the OAuth App that initiated the event.
	// Only present if the `api_authentication_method` is `oauth`.
	OauthAppName *string `json:"oauth_app_name,omitempty"`
	// The user agent of the client that initiated the event, if applicable.
	UserAgent *string `json:"user_agent,omitempty"`
}
