"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1280x720' or '1920x1080'."""
    ONE_THOUSAND_TWO_HUNDRED_AND_EIGHTYX720 = '1280x720'
    ONE_THOUSAND_NINE_HUNDRED_AND_TWENTYX1080 = '1920x1080'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72:
    r"""Quality and resolution for MV12/MV22/MV72 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1280x720' or '1920x1080'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1280x720' or '1920x1080'."""
    ONE_THOUSAND_TWO_HUNDRED_AND_EIGHTYX720 = '1280x720'
    ONE_THOUSAND_NINE_HUNDRED_AND_TWENTYX1080 = '1920x1080'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WE:
    r"""Quality and resolution for MV12WE camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEQualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WEResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1280x720' or '1920x1080'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1080x1080' or '2688x1512'."""
    ONE_THOUSAND_AND_EIGHTYX1080 = '1080x1080'
    TWO_THOUSAND_SIX_HUNDRED_AND_EIGHTY_EIGHTX1512 = '2688x1512'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13:
    r"""Quality and resolution for MV13 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1080x1080' or '2688x1512'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1280x720'."""
    ONE_THOUSAND_TWO_HUNDRED_AND_EIGHTYX720 = '1280x720'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71:
    r"""Quality and resolution for MV21/MV71 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1280x720'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'."""
    ONE_THOUSAND_TWO_HUNDRED_AND_EIGHTYX720 = '1280x720'
    ONE_THOUSAND_NINE_HUNDRED_AND_TWENTYX1080 = '1920x1080'
    TWO_THOUSAND_SIX_HUNDRED_AND_EIGHTY_EIGHTX1512 = '2688x1512'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72X:
    r"""Quality and resolution for MV22X/MV72X camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XQualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72XResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1280x720', '1920x1080' or '2688x1512'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1080x1080' or '2058x2058'."""
    ONE_THOUSAND_AND_EIGHTYX1080 = '1080x1080'
    TWO_THOUSAND_AND_FIFTY_EIGHTX2058 = '2058x2058'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32:
    r"""Quality and resolution for MV32 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1080x1080' or '2058x2058'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1080x1080' or '2112x2112'."""
    ONE_THOUSAND_AND_EIGHTYX1080 = '1080x1080'
    TWO_THOUSAND_ONE_HUNDRED_AND_TWELVEX2112 = '2112x2112'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33:
    r"""Quality and resolution for MV33 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1080x1080' or '2112x2112'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1280x720', '1920x1080', '2688x1512' or '3840x2160'."""
    ONE_THOUSAND_TWO_HUNDRED_AND_EIGHTYX720 = '1280x720'
    ONE_THOUSAND_NINE_HUNDRED_AND_TWENTYX1080 = '1920x1080'
    TWO_THOUSAND_SIX_HUNDRED_AND_EIGHTY_EIGHTX1512 = '2688x1512'
    THREE_THOUSAND_EIGHT_HUNDRED_AND_FORTYX2160 = '3840x2160'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52:
    r"""Quality and resolution for MV52 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1280x720', '1920x1080', '2688x1512' or '3840x2160'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1920x1080' or '2688x1512'."""
    ONE_THOUSAND_NINE_HUNDRED_AND_TWENTYX1080 = '1920x1080'
    TWO_THOUSAND_SIX_HUNDRED_AND_EIGHTY_EIGHTX1512 = '2688x1512'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63:
    r"""Quality and resolution for MV63 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1920x1080' or '2688x1512'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1920x1080', '2688x1512' or '3840x2160'."""
    ONE_THOUSAND_NINE_HUNDRED_AND_TWENTYX1080 = '1920x1080'
    TWO_THOUSAND_SIX_HUNDRED_AND_EIGHTY_EIGHTX1512 = '2688x1512'
    THREE_THOUSAND_EIGHT_HUNDRED_AND_FORTYX2160 = '3840x2160'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63X:
    r"""Quality and resolution for MV63X camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XQualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63XResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1920x1080', '2688x1512' or '3840x2160'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1080x1080' or '2112x2112'."""
    ONE_THOUSAND_AND_EIGHTYX1080 = '1080x1080'
    TWO_THOUSAND_ONE_HUNDRED_AND_TWELVEX2112 = '2112x2112'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93:
    r"""Quality and resolution for MV93 camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93QualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93ResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1080x1080' or '2112x2112'."""  
    
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1080x1080', '2112x2112' or '2880x2880'."""
    ONE_THOUSAND_AND_EIGHTYX1080 = '1080x1080'
    TWO_THOUSAND_ONE_HUNDRED_AND_TWELVEX2112 = '2112x2112'
    TWO_THOUSAND_EIGHT_HUNDRED_AND_EIGHTYX2880 = '2880x2880'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93X:
    r"""Quality and resolution for MV93X camera models."""
    
    quality: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XQualityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality') }})
    r"""Quality of the camera. Can be one of 'Standard', 'Enhanced' or 'High'."""  
    resolution: UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93XResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""Resolution of the camera. Can be one of '1080x1080', '2112x2112' or '2880x2880'."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettings:
    r"""Video quality and resolution settings for all the camera models."""
    
    mv12_mv22_mv72: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12Mv22Mv72] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV12/MV22/MV72'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV12/MV22/MV72 camera models."""  
    mv12_we: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv12WE] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV12WE'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV12WE camera models."""  
    mv13: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv13] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV13'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV13 camera models."""  
    mv21_mv71: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv21Mv71] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV21/MV71'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV21/MV71 camera models."""  
    mv22_x_mv72_x: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv22XMv72X] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV22X/MV72X'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV22X/MV72X camera models."""  
    mv32: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv32] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV32'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV32 camera models."""  
    mv33: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv33] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV33'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV33 camera models."""  
    mv52: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv52] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV52'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV52 camera models."""  
    mv63: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV63'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV63 camera models."""  
    mv63_x: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv63X] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV63X'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV63X camera models."""  
    mv93: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV93'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV93 camera models."""  
    mv93_x: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettingsMv93X] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MV93X'), 'exclude': lambda f: f is None }})
    r"""Quality and resolution for MV93X camera models."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequestBody:
    
    audio_recording_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audioRecordingEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether or not to record audio. Can be either true or false. Defaults to false."""  
    cloud_archive_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudArchiveEnabled'), 'exclude': lambda f: f is None }})
    r"""Create redundant video backup using Cloud Archive. Can be either true or false. Defaults to false."""  
    max_retention_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxRetentionDays'), 'exclude': lambda f: f is None }})
    r"""The maximum number of days for which the data will be stored, or 'null' to keep data until storage space runs out. If the former, it can be one of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 30, 60, 90] days."""  
    motion_based_retention_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('motionBasedRetentionEnabled'), 'exclude': lambda f: f is None }})
    r"""Deletes footage older than 3 days in which no motion was detected. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras."""  
    motion_detector_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('motionDetectorVersion'), 'exclude': lambda f: f is None }})
    r"""The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the new profile. Must be unique."""  
    restricted_bandwidth_mode_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restrictedBandwidthModeEnabled'), 'exclude': lambda f: f is None }})
    r"""Disable features that require additional bandwidth such as Motion Recap. Can be either true or false. Defaults to false. This setting does not apply to MV2 cameras."""  
    schedule_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduleId'), 'exclude': lambda f: f is None }})
    r"""Schedule for which this camera will record video, or 'null' to always record."""  
    video_settings: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBodyVideoSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoSettings'), 'exclude': lambda f: f is None }})
    r"""Video quality and resolution settings for all the camera models."""  
    

@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    quality_retention_profile_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'qualityRetentionProfileId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkCameraQualityRetentionProfileRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkCameraQualityRetentionProfileResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_camera_quality_retention_profile_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    