/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETRevenueItemType } from "./getrevenueitemtype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
 *
 * @remarks
 *
 * Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
 *
 */
export enum GETRevenueEventDetailTypeEventTypeEnum {
  InvoicePosted = "Invoice Posted",
  InvoiceItemAdjustmentCreated = "Invoice Item Adjustment Created",
  InvoiceCanceled = "Invoice Canceled",
  InvoiceItemAdjustmentCanceled = "Invoice Item Adjustment Canceled",
  RevenueDistributed = "Revenue Distributed",
  CreditMemoPosted = "Credit Memo Posted",
  DebitMemoPosted = "Debit Memo Posted",
}

/**
 * Container for custom fields of a Revenue Event object.
 *
 * @remarks
 *
 */
export class GETRevenueEventDetailType extends SpeakeasyBase {
  /**
   * An account ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The date when the record was created in YYYY-MM-DD HH:MM:SS format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn?: Date;

  /**
   * The type of currency used.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
   *
   * @remarks
   *
   * Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType?: GETRevenueEventDetailTypeEventTypeEnum;

  /**
   * Additional information about this record.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * The revenue event number created when a revenue event occurs.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * The end date of a recognition period in YYYY-MM-DD format.
   *
   * @remarks
   *
   * The maximum difference of the recognitionStart and recognitionEnd date fields is equal to 250 multiplied by the length of an accounting period.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recognitionEnd" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  recognitionEnd?: Date;

  /**
   * The start date of a recognition period in YYYY-MM-DD format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recognitionStart" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  recognitionStart?: Date;

  /**
   * Revenue items are listed in ascending order by the accounting period start date.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETRevenueItemType })
  @Expose({ name: "revenueItems" })
  @Type(() => GETRevenueItemType)
  revenueItems?: GETRevenueItemType[];

  /**
   * The original subscription charge ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionChargeId" })
  subscriptionChargeId?: string;

  /**
   * The original subscription ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionId" })
  subscriptionId?: string;

  /**
   * Returns `true` if the request was processed successfully.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}
