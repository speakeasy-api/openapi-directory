/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Translation } from "./translation";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class TranslateTextResponse extends SpeakeasyBase {
  /**
   * Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.
   */
  @SpeakeasyMetadata({ elemType: Translation })
  @Expose({ name: "glossaryTranslations" })
  @Type(() => Translation)
  glossaryTranslations?: Translation[];

  /**
   * Text translation responses with no glossary applied. This field has the same length as `contents`.
   */
  @SpeakeasyMetadata({ elemType: Translation })
  @Expose({ name: "translations" })
  @Type(() => Translation)
  translations?: Translation[];
}
