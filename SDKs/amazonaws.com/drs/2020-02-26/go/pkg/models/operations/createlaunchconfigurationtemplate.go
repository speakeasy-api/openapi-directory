// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum - Launch disposition.
type CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum string

const (
	CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnumStopped CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum = "STOPPED"
	CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnumStarted CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum = "STARTED"
)

func (e CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum) ToPointer() *CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum {
	return &e
}

func (e *CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STOPPED":
		fallthrough
	case "STARTED":
		*e = CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum: %v", v)
	}
}

// CreateLaunchConfigurationTemplateRequestBodyLicensing - Configuration of a machine's license.
type CreateLaunchConfigurationTemplateRequestBodyLicensing struct {
	OsByol *bool `json:"osByol,omitempty"`
}

// CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum - Target instance type right-sizing method.
type CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum string

const (
	CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnumNone  CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum = "NONE"
	CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnumBasic CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum = "BASIC"
)

func (e CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum) ToPointer() *CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum {
	return &e
}

func (e *CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "BASIC":
		*e = CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum: %v", v)
	}
}

type CreateLaunchConfigurationTemplateRequestBody struct {
	// Copy private IP.
	CopyPrivateIP *bool `json:"copyPrivateIp,omitempty"`
	// Copy tags.
	CopyTags *bool `json:"copyTags,omitempty"`
	// Launch disposition.
	LaunchDisposition *CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum `json:"launchDisposition,omitempty"`
	// Configuration of a machine's license.
	Licensing *CreateLaunchConfigurationTemplateRequestBodyLicensing `json:"licensing,omitempty"`
	// Request to associate tags during creation of a Launch Configuration Template.
	Tags map[string]string `json:"tags,omitempty"`
	// Target instance type right-sizing method.
	TargetInstanceTypeRightSizingMethod *CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum `json:"targetInstanceTypeRightSizingMethod,omitempty"`
}

type CreateLaunchConfigurationTemplateRequest struct {
	RequestBody       CreateLaunchConfigurationTemplateRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateLaunchConfigurationTemplateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateLaunchConfigurationTemplateResponse *shared.CreateLaunchConfigurationTemplateResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
