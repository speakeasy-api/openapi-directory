// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PkixPublicKeySignatureAlgorithmEnum - The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in `public_key_pem` (i.e. this algorithm must match that of the public key).
type PkixPublicKeySignatureAlgorithmEnum string

const (
	PkixPublicKeySignatureAlgorithmEnumSignatureAlgorithmUnspecified PkixPublicKeySignatureAlgorithmEnum = "SIGNATURE_ALGORITHM_UNSPECIFIED"
	PkixPublicKeySignatureAlgorithmEnumRsaPss2048Sha256              PkixPublicKeySignatureAlgorithmEnum = "RSA_PSS_2048_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPss2048Sha256          PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PSS_2048_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaPss3072Sha256              PkixPublicKeySignatureAlgorithmEnum = "RSA_PSS_3072_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPss3072Sha256          PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PSS_3072_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaPss4096Sha256              PkixPublicKeySignatureAlgorithmEnum = "RSA_PSS_4096_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPss4096Sha256          PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PSS_4096_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaPss4096Sha512              PkixPublicKeySignatureAlgorithmEnum = "RSA_PSS_4096_SHA512"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPss4096Sha512          PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PSS_4096_SHA512"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPkcs12048Sha256        PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PKCS1_2048_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPkcs13072Sha256        PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PKCS1_3072_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPkcs14096Sha256        PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PKCS1_4096_SHA256"
	PkixPublicKeySignatureAlgorithmEnumRsaSignPkcs14096Sha512        PkixPublicKeySignatureAlgorithmEnum = "RSA_SIGN_PKCS1_4096_SHA512"
	PkixPublicKeySignatureAlgorithmEnumEcdsaP256Sha256               PkixPublicKeySignatureAlgorithmEnum = "ECDSA_P256_SHA256"
	PkixPublicKeySignatureAlgorithmEnumEcSignP256Sha256              PkixPublicKeySignatureAlgorithmEnum = "EC_SIGN_P256_SHA256"
	PkixPublicKeySignatureAlgorithmEnumEcdsaP384Sha384               PkixPublicKeySignatureAlgorithmEnum = "ECDSA_P384_SHA384"
	PkixPublicKeySignatureAlgorithmEnumEcSignP384Sha384              PkixPublicKeySignatureAlgorithmEnum = "EC_SIGN_P384_SHA384"
	PkixPublicKeySignatureAlgorithmEnumEcdsaP521Sha512               PkixPublicKeySignatureAlgorithmEnum = "ECDSA_P521_SHA512"
	PkixPublicKeySignatureAlgorithmEnumEcSignP521Sha512              PkixPublicKeySignatureAlgorithmEnum = "EC_SIGN_P521_SHA512"
)

func (e *PkixPublicKeySignatureAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SIGNATURE_ALGORITHM_UNSPECIFIED":
		fallthrough
	case "RSA_PSS_2048_SHA256":
		fallthrough
	case "RSA_SIGN_PSS_2048_SHA256":
		fallthrough
	case "RSA_PSS_3072_SHA256":
		fallthrough
	case "RSA_SIGN_PSS_3072_SHA256":
		fallthrough
	case "RSA_PSS_4096_SHA256":
		fallthrough
	case "RSA_SIGN_PSS_4096_SHA256":
		fallthrough
	case "RSA_PSS_4096_SHA512":
		fallthrough
	case "RSA_SIGN_PSS_4096_SHA512":
		fallthrough
	case "RSA_SIGN_PKCS1_2048_SHA256":
		fallthrough
	case "RSA_SIGN_PKCS1_3072_SHA256":
		fallthrough
	case "RSA_SIGN_PKCS1_4096_SHA256":
		fallthrough
	case "RSA_SIGN_PKCS1_4096_SHA512":
		fallthrough
	case "ECDSA_P256_SHA256":
		fallthrough
	case "EC_SIGN_P256_SHA256":
		fallthrough
	case "ECDSA_P384_SHA384":
		fallthrough
	case "EC_SIGN_P384_SHA384":
		fallthrough
	case "ECDSA_P521_SHA512":
		fallthrough
	case "EC_SIGN_P521_SHA512":
		*e = PkixPublicKeySignatureAlgorithmEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PkixPublicKeySignatureAlgorithmEnum: %s", s)
	}
}

// PkixPublicKey - A public key in the PkixPublicKey format (see https://tools.ietf.org/html/rfc5280#section-4.1.2.7 for details). Public keys of this type are typically textually encoded using the PEM format.
type PkixPublicKey struct {
	// A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13
	PublicKeyPem *string `json:"publicKeyPem,omitempty"`
	// The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in `public_key_pem` (i.e. this algorithm must match that of the public key).
	SignatureAlgorithm *PkixPublicKeySignatureAlgorithmEnum `json:"signatureAlgorithm,omitempty"`
}
