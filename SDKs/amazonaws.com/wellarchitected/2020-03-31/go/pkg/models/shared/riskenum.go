// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RiskEnum - The risk for a given workload, lens review, pillar, or question.
type RiskEnum string

const (
	RiskEnumUnanswered    RiskEnum = "UNANSWERED"
	RiskEnumHigh          RiskEnum = "HIGH"
	RiskEnumMedium        RiskEnum = "MEDIUM"
	RiskEnumNone          RiskEnum = "NONE"
	RiskEnumNotApplicable RiskEnum = "NOT_APPLICABLE"
)

func (e RiskEnum) ToPointer() *RiskEnum {
	return &e
}

func (e *RiskEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNANSWERED":
		fallthrough
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "NONE":
		fallthrough
	case "NOT_APPLICABLE":
		*e = RiskEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RiskEnum: %v", v)
	}
}
