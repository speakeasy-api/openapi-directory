/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Filter } from "./filter";
import { FilterExpressionList } from "./filterexpressionlist";
import { Expose, Type } from "class-transformer";

/**
 * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
 */
export class FilterExpression extends SpeakeasyBase {
  /**
   * A list of filter expressions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "andGroup" })
  @Type(() => FilterExpressionList)
  andGroup?: FilterExpressionList;

  /**
   * An expression to filter dimension or metric values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  @Type(() => Filter)
  filter?: Filter;

  /**
   * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notExpression" })
  @Type(() => FilterExpression)
  notExpression?: FilterExpression;

  /**
   * A list of filter expressions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orGroup" })
  @Type(() => FilterExpressionList)
  orGroup?: FilterExpressionList;
}
