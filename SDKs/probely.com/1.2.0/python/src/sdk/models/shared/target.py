"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import asset as shared_asset
from ..shared import changedby as shared_changedby
from ..shared import environment_enum as shared_environment_enum
from ..shared import reporttype_enum as shared_reporttype_enum
from ..shared import scanprofile_enum as shared_scanprofile_enum
from ..shared import site as shared_site
from ..shared import targettype_enum as shared_targettype_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetInput:
    
    connected_target: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connected_target'), 'exclude': lambda f: f is None }})
    r"""Id of the connected target in a multi-environment targets."""  
    environment: Optional[shared_environment_enum.EnvironmentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""Multi-environment targets can identify environments using this property."""  
    labels: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""User labels for the scope. (This feature is currently only available for certain accounts,
    please contact our support if you are interested in using it)
    """  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Custom name for the resource"""  
    report_type: Optional[shared_reporttype_enum.ReportTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('report_type'), 'exclude': lambda f: f is None }})
    r"""* default - default report, no extra information added
    * owasp - adds table on OWASP Top 10 most critical web application risks
    * pci - adds table on PCI requirements
    """  
    scan_profile: Optional[shared_scanprofile_enum.ScanProfileEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scan_profile'), 'exclude': lambda f: f is None }})
    r"""* lightning - fast simple scan
    * normal - default profile
    * full - does everything the default profile does and adds boolean based
    SQL injection tests
    * safe - doesn't use any content changing methods (no POST, DELETE, etc)
    and tries fewer payloads for SQL injection tests
    """  
    site: Optional[shared_site.SiteInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site'), 'exclude': lambda f: f is None }})
    r"""Main resource associated with a target"""  
    type: Optional[shared_targettype_enum.TargetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of a target determines what the limitations imposed on a
    target.
    * free - Every account is allowed to have 5 free targets, these targets
    do not need to be verified but can only perform lightning
    scans.
    * single - Single environment targets need to be verified but are
    allowed to run any type of scan allowed by the plan.
    * multi - Multi environment targets are used when you want
    to scan the same application in different environments.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetAllowedScanProfiles:
    
    id: Optional[shared_scanprofile_enum.ScanProfileEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""* lightning - fast simple scan
    * normal - default profile
    * full - does everything the default profile does and adds boolean based
    SQL injection tests
    * safe - doesn't use any content changing methods (no POST, DELETE, etc)
    and tries fewer payloads for SQL injection tests
    """  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the scan profile."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Target:
    r"""Event object."""
    
    allowed_scan_profiles: Optional[list[TargetAllowedScanProfiles]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed_scan_profiles'), 'exclude': lambda f: f is None }})
    r"""Valid scan profiles for the target."""  
    assets: Optional[list[shared_asset.Asset]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assets'), 'exclude': lambda f: f is None }})
    r"""Secondary domains that should be scanned"""  
    changed: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changed'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date time of the last change"""  
    changed_by: Optional[shared_changedby.ChangedBy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changed_by'), 'exclude': lambda f: f is None }})
    r"""User that last modified the object"""  
    connected_target: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connected_target'), 'exclude': lambda f: f is None }})
    r"""Id of the connected target in a multi-environment targets."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Certain operations (e.g. changing a target's `type`) may require going through billing. Until the change is reverted or the billing is settled."""  
    environment: Optional[shared_environment_enum.EnvironmentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""Multi-environment targets can identify environments using this property."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Object id."""  
    labels: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""User labels for the scope. (This feature is currently only available for certain accounts,
    please contact our support if you are interested in using it)
    """  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Custom name for the resource"""  
    report_type: Optional[shared_reporttype_enum.ReportTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('report_type'), 'exclude': lambda f: f is None }})
    r"""* default - default report, no extra information added
    * owasp - adds table on OWASP Top 10 most critical web application risks
    * pci - adds table on PCI requirements
    """  
    scan_profile: Optional[shared_scanprofile_enum.ScanProfileEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scan_profile'), 'exclude': lambda f: f is None }})
    r"""* lightning - fast simple scan
    * normal - default profile
    * full - does everything the default profile does and adds boolean based
    SQL injection tests
    * safe - doesn't use any content changing methods (no POST, DELETE, etc)
    and tries fewer payloads for SQL injection tests
    """  
    site: Optional[shared_site.Site] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site'), 'exclude': lambda f: f is None }})
    r"""Main resource associated with a target"""  
    type: Optional[shared_targettype_enum.TargetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of a target determines what the limitations imposed on a
    target.
    * free - Every account is allowed to have 5 free targets, these targets
    do not need to be verified but can only perform lightning
    scans.
    * single - Single environment targets need to be verified but are
    allowed to run any type of scan allowed by the plan.
    * multi - Multi environment targets are used when you want
    to scan the same application in different environments.
    """  
    