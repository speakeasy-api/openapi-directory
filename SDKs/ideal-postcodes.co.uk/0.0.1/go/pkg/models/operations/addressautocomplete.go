// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AddressAutocompleteSecurity struct {
	APIKey    shared.SchemeAPIKey    `security:"scheme,type=apiKey,subtype=query"`
	UserToken shared.SchemeUserToken `security:"scheme,type=apiKey,subtype=query"`
}

type AddressAutocompleteQueryParams struct {
	// Only required if you are using a sublicensed key. This parameter will associate the request with your licensee
	Licensee *string `queryParam:"style=form,explode=true,name=licensee"`
	// Specifies the maximum number of suggestions to retrieve. Range must be 1-100. By default the limit is 10, unless a postcode is queried (then all addresses at that postcode will be returned). Limit can be shortened to `l=`
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Comma separated list of outward codes with which to restrict result set. E.g. `postcode_outward=sw1a`, `postcode_outward=tr8,le18`
	PostcodeOutward *string `queryParam:"style=form,explode=true,name=postcode_outward"`
	// Specifies the address you wish to query. Query can be shortened to `q=`
	Query string `queryParam:"style=form,explode=true,name=query"`
}

type AddressAutocompleteRequest struct {
	QueryParams AddressAutocompleteQueryParams
	Security    AddressAutocompleteSecurity
}

type AddressAutocompleteResponse struct {
	// Success
	AddressAutocompleteResponseSchema *shared.AddressAutocompleteResponseSchema
	// Bad request
	AddressLookupResponseSchema *shared.AddressLookupResponseSchema
	ContentType                 string
	StatusCode                  int
	RawResponse                 *http.Response
}
