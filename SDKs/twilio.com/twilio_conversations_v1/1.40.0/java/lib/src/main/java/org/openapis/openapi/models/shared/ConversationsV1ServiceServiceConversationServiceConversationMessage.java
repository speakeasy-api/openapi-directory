/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ConversationsV1ServiceServiceConversationServiceConversationMessage - Created
 */
public class ConversationsV1ServiceServiceConversationServiceConversationMessage {
    /**
     * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set "{}" will be returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public String attributes;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withAttributes(String attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * The channel specific identifier of the message's author. Defaults to `system`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public String author;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withAuthor(String author) {
        this.author = author;
        return this;
    }
    
    /**
     * The content of the message, can be up to 1,600 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public String body;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withBody(String body) {
        this.body = body;
        return this;
    }
    
    /**
     * The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chat_service_sid")
    public String chatServiceSid;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withChatServiceSid(String chatServiceSid) {
        this.chatServiceSid = chatServiceSid;
        return this;
    }
    
    /**
     * The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content_sid")
    public String contentSid;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withContentSid(String contentSid) {
        this.contentSid = contentSid;
        return this;
    }
    
    /**
     * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversation_sid")
    public String conversationSid;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withConversationSid(String conversationSid) {
        this.conversationSid = conversationSid;
        return this;
    }
    
    /**
     * The date that this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date that this resource was last updated. `null` if the message has not been edited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * An object that contains the summary of delivery statuses for the message to non-chat participants.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery")
    public Object delivery;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withDelivery(Object delivery) {
        this.delivery = delivery;
        return this;
    }
    
    /**
     * The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("index")
    public Long index;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withIndex(Long index) {
        this.index = index;
        return this;
    }
    
    /**
     * Contains an absolute API resource URL to access the delivery &amp; read receipts of this message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media")
    public Object[] media;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withMedia(Object[] media) {
        this.media = media;
        return this;
    }
    
    /**
     * The unique ID of messages's author participant. Null in case of `system` sent message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("participant_sid")
    public String participantSid;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withParticipantSid(String participantSid) {
        this.participantSid = participantSid;
        return this;
    }
    
    /**
     * A 34 character string that uniquely identifies this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * An absolute API resource URL for this message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public ConversationsV1ServiceServiceConversationServiceConversationMessage withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
