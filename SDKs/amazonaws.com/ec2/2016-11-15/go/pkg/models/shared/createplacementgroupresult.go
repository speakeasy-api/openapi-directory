// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreatePlacementGroupResultPlacementGroupSpreadLevelEnum - The spread level for the placement group. <i>Only</i> Outpost placement groups can be spread across hosts.
type CreatePlacementGroupResultPlacementGroupSpreadLevelEnum string

const (
	CreatePlacementGroupResultPlacementGroupSpreadLevelEnumHost CreatePlacementGroupResultPlacementGroupSpreadLevelEnum = "host"
	CreatePlacementGroupResultPlacementGroupSpreadLevelEnumRack CreatePlacementGroupResultPlacementGroupSpreadLevelEnum = "rack"
)

func (e *CreatePlacementGroupResultPlacementGroupSpreadLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "host":
		fallthrough
	case "rack":
		*e = CreatePlacementGroupResultPlacementGroupSpreadLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePlacementGroupResultPlacementGroupSpreadLevelEnum: %s", s)
	}
}

// CreatePlacementGroupResultPlacementGroupStateEnum - The state of the placement group.
type CreatePlacementGroupResultPlacementGroupStateEnum string

const (
	CreatePlacementGroupResultPlacementGroupStateEnumPending   CreatePlacementGroupResultPlacementGroupStateEnum = "pending"
	CreatePlacementGroupResultPlacementGroupStateEnumAvailable CreatePlacementGroupResultPlacementGroupStateEnum = "available"
	CreatePlacementGroupResultPlacementGroupStateEnumDeleting  CreatePlacementGroupResultPlacementGroupStateEnum = "deleting"
	CreatePlacementGroupResultPlacementGroupStateEnumDeleted   CreatePlacementGroupResultPlacementGroupStateEnum = "deleted"
)

func (e *CreatePlacementGroupResultPlacementGroupStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = CreatePlacementGroupResultPlacementGroupStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePlacementGroupResultPlacementGroupStateEnum: %s", s)
	}
}

// CreatePlacementGroupResultPlacementGroupStrategyEnum - The placement strategy.
type CreatePlacementGroupResultPlacementGroupStrategyEnum string

const (
	CreatePlacementGroupResultPlacementGroupStrategyEnumCluster   CreatePlacementGroupResultPlacementGroupStrategyEnum = "cluster"
	CreatePlacementGroupResultPlacementGroupStrategyEnumSpread    CreatePlacementGroupResultPlacementGroupStrategyEnum = "spread"
	CreatePlacementGroupResultPlacementGroupStrategyEnumPartition CreatePlacementGroupResultPlacementGroupStrategyEnum = "partition"
)

func (e *CreatePlacementGroupResultPlacementGroupStrategyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cluster":
		fallthrough
	case "spread":
		fallthrough
	case "partition":
		*e = CreatePlacementGroupResultPlacementGroupStrategyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePlacementGroupResultPlacementGroupStrategyEnum: %s", s)
	}
}

// CreatePlacementGroupResultPlacementGroupTags - Describes a tag.
type CreatePlacementGroupResultPlacementGroupTags struct {
	Key   *string
	Value *string
}

// CreatePlacementGroupResultPlacementGroup - Information about the placement group.
type CreatePlacementGroupResultPlacementGroup struct {
	GroupArn       *string
	GroupID        *string
	GroupName      *string
	PartitionCount *int64
	SpreadLevel    *CreatePlacementGroupResultPlacementGroupSpreadLevelEnum
	State          *CreatePlacementGroupResultPlacementGroupStateEnum
	Strategy       *CreatePlacementGroupResultPlacementGroupStrategyEnum
	Tags           []CreatePlacementGroupResultPlacementGroupTags
}

// CreatePlacementGroupResult - Success
type CreatePlacementGroupResult struct {
	PlacementGroup *CreatePlacementGroupResultPlacementGroup
}
