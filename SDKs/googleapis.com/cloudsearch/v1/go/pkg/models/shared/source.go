// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourcePredefinedSourceEnum - Predefined content source for Google Apps.
type SourcePredefinedSourceEnum string

const (
	SourcePredefinedSourceEnumNone           SourcePredefinedSourceEnum = "NONE"
	SourcePredefinedSourceEnumQueryHistory   SourcePredefinedSourceEnum = "QUERY_HISTORY"
	SourcePredefinedSourceEnumPerson         SourcePredefinedSourceEnum = "PERSON"
	SourcePredefinedSourceEnumGoogleDrive    SourcePredefinedSourceEnum = "GOOGLE_DRIVE"
	SourcePredefinedSourceEnumGoogleGmail    SourcePredefinedSourceEnum = "GOOGLE_GMAIL"
	SourcePredefinedSourceEnumGoogleSites    SourcePredefinedSourceEnum = "GOOGLE_SITES"
	SourcePredefinedSourceEnumGoogleGroups   SourcePredefinedSourceEnum = "GOOGLE_GROUPS"
	SourcePredefinedSourceEnumGoogleCalendar SourcePredefinedSourceEnum = "GOOGLE_CALENDAR"
	SourcePredefinedSourceEnumGoogleKeep     SourcePredefinedSourceEnum = "GOOGLE_KEEP"
)

func (e SourcePredefinedSourceEnum) ToPointer() *SourcePredefinedSourceEnum {
	return &e
}

func (e *SourcePredefinedSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "QUERY_HISTORY":
		fallthrough
	case "PERSON":
		fallthrough
	case "GOOGLE_DRIVE":
		fallthrough
	case "GOOGLE_GMAIL":
		fallthrough
	case "GOOGLE_SITES":
		fallthrough
	case "GOOGLE_GROUPS":
		fallthrough
	case "GOOGLE_CALENDAR":
		fallthrough
	case "GOOGLE_KEEP":
		*e = SourcePredefinedSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourcePredefinedSourceEnum: %v", v)
	}
}

// Source - Defines sources for the suggest/search APIs.
type Source struct {
	// Source name for content indexed by the Indexing API.
	Name *string `json:"name,omitempty"`
	// Predefined content source for Google Apps.
	PredefinedSource *SourcePredefinedSourceEnum `json:"predefinedSource,omitempty"`
}
