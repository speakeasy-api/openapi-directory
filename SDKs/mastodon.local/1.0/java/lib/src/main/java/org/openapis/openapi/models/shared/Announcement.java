/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Announcement - Represents an announcement set by an administrator.
 * https://docs.joinmastodon.org/entities/announcement/
 */
public class Announcement {
    /**
     * Whether the announcement has a start/end time.
     */
    @JsonProperty("all_day")
    public Boolean allDay;
    public Announcement withAllDay(Boolean allDay) {
        this.allDay = allDay;
        return this;
    }
    
    /**
     * When the announcement was created.
     */
    @JsonProperty("created_at")
    public String createdAt;
    public Announcement withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * When the future announcement will end. ISO 8601 Datetime.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ends_at")
    public String endsAt;
    public Announcement withEndsAt(String endsAt) {
        this.endsAt = endsAt;
        return this;
    }
    
    /**
     * The announcement id. Cast from an integer, but not guaranteed to be a number.
     */
    @JsonProperty("id")
    public String id;
    public Announcement withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether the announcement is currently active.
     */
    @JsonProperty("published")
    public Boolean published;
    public Announcement withPublished(Boolean published) {
        this.published = published;
        return this;
    }
    
    /**
     * Whether the announcement has been read by the user.
     */
    @JsonProperty("read")
    public Boolean read;
    public Announcement withRead(Boolean read) {
        this.read = read;
        return this;
    }
    
    /**
     * When the future announcement was scheduled. ISO 8601 Datetime.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduled_at")
    public String scheduledAt;
    public Announcement withScheduledAt(String scheduledAt) {
        this.scheduledAt = scheduledAt;
        return this;
    }
    
    /**
     * When the future announcement will start. ISO 8601 Datetime.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("starts_at")
    public String startsAt;
    public Announcement withStartsAt(String startsAt) {
        this.startsAt = startsAt;
        return this;
    }
    
    /**
     * The content of the announcement.
     */
    @JsonProperty("text")
    public String text;
    public Announcement withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * When the announcement was last updated. ISO 8601 Datetime.
     */
    @JsonProperty("updated_at")
    public String updatedAt;
    public Announcement withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
