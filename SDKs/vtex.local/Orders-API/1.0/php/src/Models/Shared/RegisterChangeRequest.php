<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class RegisterChangeRequest
{
    /**
     * This field can be used to apply a discount to the total value of the order. Value in cents.
     * 
     * @var int $discountValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('discountValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $discountValue;
    
    /**
     * This field can be used to increment the total value of the order. Value in cents.
     * 
     * @var int $incrementValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('incrementValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $incrementValue;
    
    /**
     * List of items that should be added to the order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RegisterChangeRequestItemsAdded> $itemsAdded
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemsAdded')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RegisterChangeRequestItemsAdded>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $itemsAdded = null;
    
    /**
     * List of items that should be removed from the order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RegisterChangeRequestItemsRemoved> $itemsRemoved
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemsRemoved')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RegisterChangeRequestItemsRemoved>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $itemsRemoved = null;
    
    /**
     * Reason for order change. This may be shown to the shopper in the UI or transactional emails.
     * 
     * @var string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reason;
    
    /**
     * Request identification of the change. Only the first change made with each `requestId` will be effective on a given order. Use different IDs for different changes to the same order.
     * 
     * @var string $requestId
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $requestId;
    
	public function __construct()
	{
		$this->discountValue = 0;
		$this->incrementValue = 0;
		$this->itemsAdded = null;
		$this->itemsRemoved = null;
		$this->reason = "";
		$this->requestId = "";
	}
}
