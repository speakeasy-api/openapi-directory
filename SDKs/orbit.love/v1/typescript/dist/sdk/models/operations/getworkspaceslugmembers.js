"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetWorkspaceSlugMembersResponse = exports.GetWorkspaceSlugMembersRequest = exports.GetWorkspaceSlugMembersSortEnum = exports.GetWorkspaceSlugMembersItemsEnum = exports.GetWorkspaceSlugMembersIdentityEnum = exports.GetWorkspaceSlugMembersDirectionEnum = exports.GetWorkspaceSlugMembersAffiliationEnum = exports.GetWorkspaceSlugMembersActivityTypeEnum = exports.GetWorkspaceSlugMembersSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var GetWorkspaceSlugMembersSecurity = /** @class */ (function (_super) {
    __extends(GetWorkspaceSlugMembersSecurity, _super);
    function GetWorkspaceSlugMembersSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersSecurity.prototype, "bearer", void 0);
    return GetWorkspaceSlugMembersSecurity;
}(utils_1.SpeakeasyBase));
exports.GetWorkspaceSlugMembersSecurity = GetWorkspaceSlugMembersSecurity;
/**
 * Comma separated list of activity types
 */
var GetWorkspaceSlugMembersActivityTypeEnum;
(function (GetWorkspaceSlugMembersActivityTypeEnum) {
    GetWorkspaceSlugMembersActivityTypeEnum["DiscourseTopicCreated"] = "discourse:topic:created";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscoursePostLiked"] = "discourse:post:liked";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscourseUserCreated"] = "discourse:user:created";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscoursePostCreated"] = "discourse:post:created";
    GetWorkspaceSlugMembersActivityTypeEnum["SlackMessageSent"] = "slack:message:sent";
    GetWorkspaceSlugMembersActivityTypeEnum["SlackThreadReplied"] = "slack:thread:replied";
    GetWorkspaceSlugMembersActivityTypeEnum["SlackChannelJoined"] = "slack:channel:joined";
    GetWorkspaceSlugMembersActivityTypeEnum["NoteCreated"] = "note:created";
    GetWorkspaceSlugMembersActivityTypeEnum["PostCreated"] = "post:created";
    GetWorkspaceSlugMembersActivityTypeEnum["IssuesOpened"] = "issues:opened";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscordMessageSent"] = "discord:message:sent";
    GetWorkspaceSlugMembersActivityTypeEnum["IssueCommentCreated"] = "issue_comment:created";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscordThreadReplied"] = "discord:thread:replied";
    GetWorkspaceSlugMembersActivityTypeEnum["CustomHappened"] = "custom:happened";
    GetWorkspaceSlugMembersActivityTypeEnum["DevComment"] = "dev:comment";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscordMessageReplied"] = "discord:message:replied";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscordServerJoined"] = "discord:server:joined";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedConversationStarted"] = "insided:conversation:started";
    GetWorkspaceSlugMembersActivityTypeEnum["ForkCreated"] = "fork:created";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedIdeaReplied"] = "insided:idea:replied";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedArticleCreated"] = "insided:article:created";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscussionsDiscussionCreated"] = "discussions:discussion_created";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedQuestionReplied"] = "insided:question:replied";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscussionsComment"] = "discussions:comment";
    GetWorkspaceSlugMembersActivityTypeEnum["DiscussionsReply"] = "discussions:reply";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedArticleReplied"] = "insided:article:replied";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedQuestionAsked"] = "insided:question:asked";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedConversationReplied"] = "insided:conversation:replied";
    GetWorkspaceSlugMembersActivityTypeEnum["InsidedIdeaSubmitted"] = "insided:idea:submitted";
    GetWorkspaceSlugMembersActivityTypeEnum["RedditComment"] = "reddit:comment";
    GetWorkspaceSlugMembersActivityTypeEnum["RedditPost"] = "reddit:post";
    GetWorkspaceSlugMembersActivityTypeEnum["StackoverflowAnswer"] = "stackoverflow:answer";
    GetWorkspaceSlugMembersActivityTypeEnum["LinkedinComment"] = "linkedin:comment";
    GetWorkspaceSlugMembersActivityTypeEnum["PullRequestsOpened"] = "pull_requests:opened";
    GetWorkspaceSlugMembersActivityTypeEnum["PullRequestsMerged"] = "pull_requests:merged";
    GetWorkspaceSlugMembersActivityTypeEnum["StarCreated"] = "star:created";
    GetWorkspaceSlugMembersActivityTypeEnum["StackoverflowQuestion"] = "stackoverflow:question";
    GetWorkspaceSlugMembersActivityTypeEnum["TweetSent"] = "tweet:sent";
    GetWorkspaceSlugMembersActivityTypeEnum["TwitterFollowed"] = "twitter:followed";
    GetWorkspaceSlugMembersActivityTypeEnum["YoutubeComment"] = "youtube:comment";
})(GetWorkspaceSlugMembersActivityTypeEnum = exports.GetWorkspaceSlugMembersActivityTypeEnum || (exports.GetWorkspaceSlugMembersActivityTypeEnum = {}));
var GetWorkspaceSlugMembersAffiliationEnum;
(function (GetWorkspaceSlugMembersAffiliationEnum) {
    GetWorkspaceSlugMembersAffiliationEnum["Member"] = "member";
    GetWorkspaceSlugMembersAffiliationEnum["Teammate"] = "teammate";
})(GetWorkspaceSlugMembersAffiliationEnum = exports.GetWorkspaceSlugMembersAffiliationEnum || (exports.GetWorkspaceSlugMembersAffiliationEnum = {}));
var GetWorkspaceSlugMembersDirectionEnum;
(function (GetWorkspaceSlugMembersDirectionEnum) {
    GetWorkspaceSlugMembersDirectionEnum["Asc"] = "ASC";
    GetWorkspaceSlugMembersDirectionEnum["Desc"] = "DESC";
})(GetWorkspaceSlugMembersDirectionEnum = exports.GetWorkspaceSlugMembersDirectionEnum || (exports.GetWorkspaceSlugMembersDirectionEnum = {}));
var GetWorkspaceSlugMembersIdentityEnum;
(function (GetWorkspaceSlugMembersIdentityEnum) {
    GetWorkspaceSlugMembersIdentityEnum["Github"] = "github";
    GetWorkspaceSlugMembersIdentityEnum["Twitter"] = "twitter";
    GetWorkspaceSlugMembersIdentityEnum["Email"] = "email";
    GetWorkspaceSlugMembersIdentityEnum["Discourse"] = "discourse";
    GetWorkspaceSlugMembersIdentityEnum["Linkedin"] = "linkedin";
    GetWorkspaceSlugMembersIdentityEnum["Devto"] = "devto";
    GetWorkspaceSlugMembersIdentityEnum["Slack"] = "slack";
    GetWorkspaceSlugMembersIdentityEnum["Discord"] = "discord";
})(GetWorkspaceSlugMembersIdentityEnum = exports.GetWorkspaceSlugMembersIdentityEnum || (exports.GetWorkspaceSlugMembersIdentityEnum = {}));
var GetWorkspaceSlugMembersItemsEnum;
(function (GetWorkspaceSlugMembersItemsEnum) {
    GetWorkspaceSlugMembersItemsEnum["Ten"] = "10";
    GetWorkspaceSlugMembersItemsEnum["Fifty"] = "50";
    GetWorkspaceSlugMembersItemsEnum["OneHundred"] = "100";
})(GetWorkspaceSlugMembersItemsEnum = exports.GetWorkspaceSlugMembersItemsEnum || (exports.GetWorkspaceSlugMembersItemsEnum = {}));
var GetWorkspaceSlugMembersSortEnum;
(function (GetWorkspaceSlugMembersSortEnum) {
    GetWorkspaceSlugMembersSortEnum["ActivitiesCount"] = "activities_count";
    GetWorkspaceSlugMembersSortEnum["Company"] = "company";
    GetWorkspaceSlugMembersSortEnum["CreatedAt"] = "created_at";
    GetWorkspaceSlugMembersSortEnum["FirstActivity"] = "first_activity";
    GetWorkspaceSlugMembersSortEnum["GithubFollowers"] = "github_followers";
    GetWorkspaceSlugMembersSortEnum["Id"] = "id";
    GetWorkspaceSlugMembersSortEnum["LastActivity"] = "last_activity";
    GetWorkspaceSlugMembersSortEnum["Location"] = "location";
    GetWorkspaceSlugMembersSortEnum["Love"] = "love";
    GetWorkspaceSlugMembersSortEnum["Name"] = "name";
    GetWorkspaceSlugMembersSortEnum["Orbit"] = "orbit";
    GetWorkspaceSlugMembersSortEnum["Reach"] = "reach";
    GetWorkspaceSlugMembersSortEnum["Title"] = "title";
    GetWorkspaceSlugMembersSortEnum["TwitterFollowers"] = "twitter_followers";
    GetWorkspaceSlugMembersSortEnum["UpdatedAt"] = "updated_at";
})(GetWorkspaceSlugMembersSortEnum = exports.GetWorkspaceSlugMembersSortEnum || (exports.GetWorkspaceSlugMembersSortEnum = {}));
var GetWorkspaceSlugMembersRequest = /** @class */ (function (_super) {
    __extends(GetWorkspaceSlugMembersRequest, _super);
    function GetWorkspaceSlugMembersRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=activities_count_max",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "activitiesCountMax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=activities_count_min",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "activitiesCountMin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=activity_type",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "activityType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=affiliation",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "affiliation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=cities[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "cities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=company[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "company", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=countries[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "countries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=direction",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "direction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=end_date",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "endDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=identity",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "identity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=items" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "items", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=member_tags",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "memberTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=orbit" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "orbit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=page" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "page", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=query" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "query", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=regions[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "regions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=relative",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "relative", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=sort" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "sort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=start_date",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "startDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=title[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=type" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=workspace_slug",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersRequest.prototype, "workspaceSlug", void 0);
    return GetWorkspaceSlugMembersRequest;
}(utils_1.SpeakeasyBase));
exports.GetWorkspaceSlugMembersRequest = GetWorkspaceSlugMembersRequest;
var GetWorkspaceSlugMembersResponse = /** @class */ (function (_super) {
    __extends(GetWorkspaceSlugMembersResponse, _super);
    function GetWorkspaceSlugMembersResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetWorkspaceSlugMembersResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetWorkspaceSlugMembersResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetWorkspaceSlugMembersResponse.prototype, "rawResponse", void 0);
    return GetWorkspaceSlugMembersResponse;
}(utils_1.SpeakeasyBase));
exports.GetWorkspaceSlugMembersResponse = GetWorkspaceSlugMembersResponse;
