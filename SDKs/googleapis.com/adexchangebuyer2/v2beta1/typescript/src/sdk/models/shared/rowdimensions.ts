/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TimeInterval } from "./timeinterval";
import { Expose, Type } from "class-transformer";

/**
 * A response may include multiple rows, breaking down along various dimensions. Encapsulates the values of all dimensions for a given row.
 */
export class RowDimensions extends SpeakeasyBase {
  /**
   * The publisher identifier for this row, if a breakdown by [BreakdownDimension.PUBLISHER_IDENTIFIER](https://developers.google.com/authorized-buyers/apis/reference/rest/v2beta1/bidders.accounts.filterSets#FilterSet.BreakdownDimension) was requested.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisherIdentifier" })
  publisherIdentifier?: string;

  /**
   * An interval of time, with an absolute start and end.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeInterval" })
  @Type(() => TimeInterval)
  timeInterval?: TimeInterval;
}
