// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostSpacesSpaceIDLegalEntitiesIDBanksSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnumConfidential PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum = "confidential"
	PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnumRegular      PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum = "regular"
	PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnumPublic       PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum = "public"
)

func (e PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum) ToPointer() *PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum {
	return &e
}

func (e *PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum: %v", v)
	}
}

// PostSpacesSpaceIDLegalEntitiesIDBanksRequestBody - Bank to add (except name, class and archivaldate)
type PostSpacesSpaceIDLegalEntitiesIDBanksRequestBody struct {
	About             *string                                                    `json:"About,omitempty"`
	Comment           *string                                                    `json:"Comment,omitempty"`
	ContractReference *string                                                    `json:"ContractReference,omitempty"`
	Designation       *string                                                    `json:"Designation,omitempty"`
	End               *string                                                    `json:"End,omitempty"`
	Home              *bool                                                      `json:"Home,omitempty"`
	Keywords          []string                                                   `json:"Keywords,omitempty"`
	Level             *PostSpacesSpaceIDLegalEntitiesIDBanksRequestBodyLevelEnum `json:"Level,omitempty"`
	Start             *string                                                    `json:"Start,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDBanksRequest struct {
	// Bank to add (except name, class and archivaldate)
	RequestBody PostSpacesSpaceIDLegalEntitiesIDBanksRequestBody `request:"mediaType=application/json"`
	// Id of the bank or memberId
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// PostSpacesSpaceIDLegalEntitiesIDBanks201ApplicationJSON - Id of folder created
type PostSpacesSpaceIDLegalEntitiesIDBanks201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDBanksResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of folder created
	PostSpacesSpaceIDLegalEntitiesIDBanks201ApplicationJSONObject *PostSpacesSpaceIDLegalEntitiesIDBanks201ApplicationJSON
}
