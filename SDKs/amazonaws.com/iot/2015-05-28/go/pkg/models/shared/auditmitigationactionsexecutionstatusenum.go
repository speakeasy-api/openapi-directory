// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuditMitigationActionsExecutionStatusEnum string

const (
	AuditMitigationActionsExecutionStatusEnumInProgress AuditMitigationActionsExecutionStatusEnum = "IN_PROGRESS"
	AuditMitigationActionsExecutionStatusEnumCompleted  AuditMitigationActionsExecutionStatusEnum = "COMPLETED"
	AuditMitigationActionsExecutionStatusEnumFailed     AuditMitigationActionsExecutionStatusEnum = "FAILED"
	AuditMitigationActionsExecutionStatusEnumCanceled   AuditMitigationActionsExecutionStatusEnum = "CANCELED"
	AuditMitigationActionsExecutionStatusEnumSkipped    AuditMitigationActionsExecutionStatusEnum = "SKIPPED"
	AuditMitigationActionsExecutionStatusEnumPending    AuditMitigationActionsExecutionStatusEnum = "PENDING"
)

func (e AuditMitigationActionsExecutionStatusEnum) ToPointer() *AuditMitigationActionsExecutionStatusEnum {
	return &e
}

func (e *AuditMitigationActionsExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELED":
		fallthrough
	case "SKIPPED":
		fallthrough
	case "PENDING":
		*e = AuditMitigationActionsExecutionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditMitigationActionsExecutionStatusEnum: %v", v)
	}
}
