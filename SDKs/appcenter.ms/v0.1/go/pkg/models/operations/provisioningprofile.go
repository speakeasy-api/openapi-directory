// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ProvisioningProfileSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ProvisioningProfileRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The release_id
	ReleaseID int64 `pathParam:"style=simple,explode=false,name=release_id"`
}

type ProvisioningProfile400ApplicationJSONCodeEnum string

const (
	ProvisioningProfile400ApplicationJSONCodeEnumBadRequest          ProvisioningProfile400ApplicationJSONCodeEnum = "BadRequest"
	ProvisioningProfile400ApplicationJSONCodeEnumConflict            ProvisioningProfile400ApplicationJSONCodeEnum = "Conflict"
	ProvisioningProfile400ApplicationJSONCodeEnumNotAcceptable       ProvisioningProfile400ApplicationJSONCodeEnum = "NotAcceptable"
	ProvisioningProfile400ApplicationJSONCodeEnumNotFound            ProvisioningProfile400ApplicationJSONCodeEnum = "NotFound"
	ProvisioningProfile400ApplicationJSONCodeEnumInternalServerError ProvisioningProfile400ApplicationJSONCodeEnum = "InternalServerError"
	ProvisioningProfile400ApplicationJSONCodeEnumUnauthorized        ProvisioningProfile400ApplicationJSONCodeEnum = "Unauthorized"
	ProvisioningProfile400ApplicationJSONCodeEnumTooManyRequests     ProvisioningProfile400ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *ProvisioningProfile400ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ProvisioningProfile400ApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProvisioningProfile400ApplicationJSONCodeEnum: %s", s)
	}
}

// ProvisioningProfile400ApplicationJSON - The app's OS is not iOS.
type ProvisioningProfile400ApplicationJSON struct {
	Code    ProvisioningProfile400ApplicationJSONCodeEnum `json:"code"`
	Message string                                        `json:"message"`
}

type ProvisioningProfileResponse struct {
	ContentType string
	// Success
	ProvisioningProfileResponse *shared.ProvisioningProfileResponse
	StatusCode                  int
	RawResponse                 *http.Response
	// The app's OS is not iOS.
	ProvisioningProfile400ApplicationJSONObject *ProvisioningProfile400ApplicationJSON
}
