// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetProfileIDFileQueryParams struct {
	// to get a contract (if not signed error 404 + html contract)
	Contract *string `queryParam:"style=form,explode=true,name=Contract"`
}

type GetProfileIDFileRequest struct {
	QueryParams GetProfileIDFileQueryParams
}

type GetProfileIDFile200MultipartFormDataBirth struct {
	City    *string
	Country *string
	Date    *string
	ZipCode *string
}

type GetProfileIDFile200MultipartFormDataSexEnum string

const (
	GetProfileIDFile200MultipartFormDataSexEnumMale   GetProfileIDFile200MultipartFormDataSexEnum = "male"
	GetProfileIDFile200MultipartFormDataSexEnumFemale GetProfileIDFile200MultipartFormDataSexEnum = "female"
)

func (e *GetProfileIDFile200MultipartFormDataSexEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "male":
		fallthrough
	case "female":
		*e = GetProfileIDFile200MultipartFormDataSexEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProfileIDFile200MultipartFormDataSexEnum: %s", s)
	}
}

type GetProfileIDFile200MultipartFormDataStatusEnum string

const (
	GetProfileIDFile200MultipartFormDataStatusEnumValidated    GetProfileIDFile200MultipartFormDataStatusEnum = "validated"
	GetProfileIDFile200MultipartFormDataStatusEnumNotValidated GetProfileIDFile200MultipartFormDataStatusEnum = "not validated"
)

func (e *GetProfileIDFile200MultipartFormDataStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "validated":
		fallthrough
	case "not validated":
		*e = GetProfileIDFile200MultipartFormDataStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProfileIDFile200MultipartFormDataStatusEnum: %s", s)
	}
}

// GetProfileIDFile200MultipartFormData - the status of the member
type GetProfileIDFile200MultipartFormData struct {
	Birth          *GetProfileIDFile200MultipartFormDataBirth
	BirthName      *string
	FirstName      *string
	IDFile         []byte
	Name           *string
	PrivateSpaceID *string
	Sex            *GetProfileIDFile200MultipartFormDataSexEnum
	Status         *GetProfileIDFile200MultipartFormDataStatusEnum
}

type GetProfileIDFile200ApplicationJSONBirth struct {
	City    *string `json:"City,omitempty"`
	Country *string `json:"Country,omitempty"`
	Date    *string `json:"Date,omitempty"`
	ZipCode *string `json:"ZipCode,omitempty"`
}

type GetProfileIDFile200ApplicationJSONIDFile struct {
	Content64Encoded *string `json:"Content64Encoded,omitempty"`
}

type GetProfileIDFile200ApplicationJSONSexEnum string

const (
	GetProfileIDFile200ApplicationJSONSexEnumMale   GetProfileIDFile200ApplicationJSONSexEnum = "male"
	GetProfileIDFile200ApplicationJSONSexEnumFemale GetProfileIDFile200ApplicationJSONSexEnum = "female"
)

func (e *GetProfileIDFile200ApplicationJSONSexEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "male":
		fallthrough
	case "female":
		*e = GetProfileIDFile200ApplicationJSONSexEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProfileIDFile200ApplicationJSONSexEnum: %s", s)
	}
}

type GetProfileIDFile200ApplicationJSONStatusEnum string

const (
	GetProfileIDFile200ApplicationJSONStatusEnumValidated    GetProfileIDFile200ApplicationJSONStatusEnum = "validated"
	GetProfileIDFile200ApplicationJSONStatusEnumNotValidated GetProfileIDFile200ApplicationJSONStatusEnum = "not validated"
)

func (e *GetProfileIDFile200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "validated":
		fallthrough
	case "not validated":
		*e = GetProfileIDFile200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProfileIDFile200ApplicationJSONStatusEnum: %s", s)
	}
}

// GetProfileIDFile200ApplicationJSON - the status of the member
type GetProfileIDFile200ApplicationJSON struct {
	Birth          *GetProfileIDFile200ApplicationJSONBirth      `json:"Birth,omitempty"`
	BirthName      *string                                       `json:"BirthName,omitempty"`
	FirstName      *string                                       `json:"FirstName,omitempty"`
	IDFile         *GetProfileIDFile200ApplicationJSONIDFile     `json:"IDFile,omitempty"`
	Name           *string                                       `json:"Name,omitempty"`
	PrivateSpaceID *string                                       `json:"PrivateSpaceId,omitempty"`
	Sex            *GetProfileIDFile200ApplicationJSONSexEnum    `json:"Sex,omitempty"`
	Status         *GetProfileIDFile200ApplicationJSONStatusEnum `json:"Status,omitempty"`
}

type GetProfileIDFileResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// the status of the member
	GetProfileIDFile200ApplicationJSONObject *GetProfileIDFile200ApplicationJSON
}
