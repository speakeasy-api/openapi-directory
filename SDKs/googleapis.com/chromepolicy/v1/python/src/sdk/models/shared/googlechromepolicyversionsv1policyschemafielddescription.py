"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlechromepolicyversionsv1fieldconstraints as shared_googlechromepolicyversionsv1fieldconstraints
from ..shared import googlechromepolicyversionsv1policyschemafielddependencies as shared_googlechromepolicyversionsv1policyschemafielddependencies
from ..shared import googlechromepolicyversionsv1policyschemafieldknownvaluedescription as shared_googlechromepolicyversionsv1policyschemafieldknownvaluedescription
from ..shared import googlechromepolicyversionsv1policyschemarequireditems as shared_googlechromepolicyversionsv1policyschemarequireditems
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromePolicyVersionsV1PolicySchemaFieldDescription:
    r"""Provides detailed information for a particular field that is part of a PolicySchema."""
    
    default_value: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultValue'), 'exclude': lambda f: f is None }})
    r"""Output only. Client default if the policy is unset."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Deprecated. Use name and field_description instead. The description for the field."""  
    field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field'), 'exclude': lambda f: f is None }})
    r"""Output only. The name of the field for associated with this description."""  
    field_constraints: Optional[shared_googlechromepolicyversionsv1fieldconstraints.GoogleChromePolicyVersionsV1FieldConstraints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldConstraints'), 'exclude': lambda f: f is None }})
    r"""Information about any range constraints."""  
    field_dependencies: Optional[list[shared_googlechromepolicyversionsv1policyschemafielddependencies.GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldDependencies'), 'exclude': lambda f: f is None }})
    r"""Output only. Provides a list of fields and values. At least one of the fields must have the corresponding value in order for this field to be allowed to be set."""  
    field_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldDescription'), 'exclude': lambda f: f is None }})
    r"""Output only. The description of the field."""  
    input_constraint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputConstraint'), 'exclude': lambda f: f is None }})
    r"""Output only. Any input constraints associated on the values for the field."""  
    known_value_descriptions: Optional[list[shared_googlechromepolicyversionsv1policyschemafieldknownvaluedescription.GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('knownValueDescriptions'), 'exclude': lambda f: f is None }})
    r"""Output only. If the field has a set of known values, this field will provide a description for these values."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The name of the field."""  
    nested_field_descriptions: Optional[list[GoogleChromePolicyVersionsV1PolicySchemaFieldDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nestedFieldDescriptions'), 'exclude': lambda f: f is None }})
    r"""Output only. Provides the description of the fields nested in this field, if the field is a message type that defines multiple fields."""  
    required_items: Optional[list[shared_googlechromepolicyversionsv1policyschemarequireditems.GoogleChromePolicyVersionsV1PolicySchemaRequiredItems]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requiredItems'), 'exclude': lambda f: f is None }})
    r"""Output only. Provides a list of fields that are required to be set if this field has a certain value."""  
    