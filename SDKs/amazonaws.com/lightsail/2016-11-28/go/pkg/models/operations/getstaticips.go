// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetStaticIpsXAmzTargetEnum
type GetStaticIpsXAmzTargetEnum string

const (
	GetStaticIpsXAmzTargetEnumLightsail20161128GetStaticIps GetStaticIpsXAmzTargetEnum = "Lightsail_20161128.GetStaticIps"
)

func (e GetStaticIpsXAmzTargetEnum) ToPointer() *GetStaticIpsXAmzTargetEnum {
	return &e
}

func (e *GetStaticIpsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Lightsail_20161128.GetStaticIps":
		*e = GetStaticIpsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetStaticIpsXAmzTargetEnum: %v", v)
	}
}

type GetStaticIpsRequest struct {
	GetStaticIpsRequest shared.GetStaticIpsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          GetStaticIpsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetStaticIpsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountSetupInProgressException
	AccountSetupInProgressException interface{}
	ContentType                     string
	// Success
	GetStaticIpsResult *shared.GetStaticIpsResult
	// InvalidInputException
	InvalidInputException interface{}
	// NotFoundException
	NotFoundException interface{}
	// OperationFailureException
	OperationFailureException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// UnauthenticatedException
	UnauthenticatedException interface{}
}
