// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryVcdVappsV1SLAAssignmentEnum - Filter by SLA assignment type.
type QueryVcdVappsV1SLAAssignmentEnum string

const (
	QueryVcdVappsV1SLAAssignmentEnumDerived    QueryVcdVappsV1SLAAssignmentEnum = "Derived"
	QueryVcdVappsV1SLAAssignmentEnumDirect     QueryVcdVappsV1SLAAssignmentEnum = "Direct"
	QueryVcdVappsV1SLAAssignmentEnumUnassigned QueryVcdVappsV1SLAAssignmentEnum = "Unassigned"
)

func (e QueryVcdVappsV1SLAAssignmentEnum) ToPointer() *QueryVcdVappsV1SLAAssignmentEnum {
	return &e
}

func (e *QueryVcdVappsV1SLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = QueryVcdVappsV1SLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVcdVappsV1SLAAssignmentEnum: %v", v)
	}
}

// QueryVcdVappsV1SortByEnum - Attribute to sort the vCD vApp list on.
type QueryVcdVappsV1SortByEnum string

const (
	QueryVcdVappsV1SortByEnumName                   QueryVcdVappsV1SortByEnum = "Name"
	QueryVcdVappsV1SortByEnumEffectiveSLADomainName QueryVcdVappsV1SortByEnum = "EffectiveSlaDomainName"
	QueryVcdVappsV1SortByEnumSLAAssignment          QueryVcdVappsV1SortByEnum = "SlaAssignment"
)

func (e QueryVcdVappsV1SortByEnum) ToPointer() *QueryVcdVappsV1SortByEnum {
	return &e
}

func (e *QueryVcdVappsV1SortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Name":
		fallthrough
	case "EffectiveSlaDomainName":
		fallthrough
	case "SlaAssignment":
		*e = QueryVcdVappsV1SortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVcdVappsV1SortByEnum: %v", v)
	}
}

// QueryVcdVappsV1SortOrderEnum - Order for sorting the results, either ascending or descending.
type QueryVcdVappsV1SortOrderEnum string

const (
	QueryVcdVappsV1SortOrderEnumAsc  QueryVcdVappsV1SortOrderEnum = "asc"
	QueryVcdVappsV1SortOrderEnumDesc QueryVcdVappsV1SortOrderEnum = "desc"
)

func (e QueryVcdVappsV1SortOrderEnum) ToPointer() *QueryVcdVappsV1SortOrderEnum {
	return &e
}

func (e *QueryVcdVappsV1SortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryVcdVappsV1SortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVcdVappsV1SortOrderEnum: %v", v)
	}
}

type QueryVcdVappsV1Request struct {
	// Filter by ID of the effective SLA domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Include backup task information in response.
	IncludeBackupTaskInfo *bool `queryParam:"style=form,explode=true,name=include_backup_task_info"`
	// Filter by isRelic field of vCD vApp object. Return both relic and non-relic vApps when this value is not specified.
	IsRelic *bool `queryParam:"style=form,explode=true,name=is_relic"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Search for a vCD vApp object by name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Number of matches to ignore from the beginning of the results.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter by primary cluster ID, or **local**.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Filter by SLA assignment type.
	SLAAssignment *QueryVcdVappsV1SLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Attribute to sort the vCD vApp list on.
	SortBy *QueryVcdVappsV1SortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Order for sorting the results, either ascending or descending.
	SortOrder *QueryVcdVappsV1SortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryVcdVappsV1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Summary information for vCD vApps.
	VcdVappSummaryListResponse *shared.VcdVappSummaryListResponse
}
