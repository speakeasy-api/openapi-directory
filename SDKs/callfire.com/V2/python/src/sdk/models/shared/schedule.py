"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import localdate as shared_localdate
from ..shared import localtime as shared_localtime
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Schedule:
    r"""A campaign schedule"""
    
    campaign_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('campaignId'), 'exclude': lambda f: f is None }})
    r"""~"""  
    days_of_week: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('daysOfWeek'), 'exclude': lambda f: f is None }})
    r"""~"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""~"""  
    start_date: Optional[shared_localdate.LocalDate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDate'), 'exclude': lambda f: f is None }})
    r"""Represents a date object (without time part)"""  
    start_time_of_day: Optional[shared_localtime.LocalTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTimeOfDay'), 'exclude': lambda f: f is None }})
    r"""Represents a time part of a given date"""  
    stop_date: Optional[shared_localdate.LocalDate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stopDate'), 'exclude': lambda f: f is None }})
    r"""Represents a date object (without time part)"""  
    stop_time_of_day: Optional[shared_localtime.LocalTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stopTimeOfDay'), 'exclude': lambda f: f is None }})
    r"""Represents a time part of a given date"""  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""~"""  
    