/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The rti job instructions' employer
 */
export class RtiJobInstructionRtiJobInstructionEmployer extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

/**
 * The rti job instructions' late reason
 */
export enum RtiJobInstructionRtiJobInstructionLateReasonEnum {
  A = "A",
  B = "B",
  C = "C",
  D = "D",
  F = "F",
  G = "G",
  H = "H",
}

/**
 * The rti job instructions' pay schedule
 */
export class RtiJobInstructionRtiJobInstructionPaySchedule extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

/**
 * The rti job instructions' rti transaction
 */
export class RtiJobInstructionRtiJobInstructionRtiTransaction extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

export class RtiJobInstructionRtiJobInstruction extends SpeakeasyBase {
  /**
   * The rti job instructions' earlier tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EarlierTaxYear" })
  earlierTaxYear?: number;

  /**
   * The rti job instructions' employer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Employer" })
  @Type(() => RtiJobInstructionRtiJobInstructionEmployer)
  employer?: RtiJobInstructionRtiJobInstructionEmployer;

  /**
   * The rti job instructions' final submission for year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FinalSubmissionForYear" })
  finalSubmissionForYear?: boolean;

  /**
   * The rti job instructions' generate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Generate" })
  generate?: boolean;

  /**
   * The rti job instructions' holding date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HoldingDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  holdingDate?: Date;

  /**
   * The rti job instructions' late reason
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LateReason" })
  lateReason?: RtiJobInstructionRtiJobInstructionLateReasonEnum;

  /**
   * The rti job instructions' no payment for period from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NoPaymentForPeriodFrom" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  noPaymentForPeriodFrom?: Date;

  /**
   * The rti job instructions' no payment for period to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NoPaymentForPeriodTo" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  noPaymentForPeriodTo?: Date;

  /**
   * The rti job instructions' pay schedule
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaySchedule" })
  @Type(() => RtiJobInstructionRtiJobInstructionPaySchedule)
  paySchedule?: RtiJobInstructionRtiJobInstructionPaySchedule;

  /**
   * The rti job instructions' payment date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  paymentDate?: Date;

  /**
   * The rti job instructions' period of inactivity from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PeriodOfInactivityFrom" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  periodOfInactivityFrom?: Date;

  /**
   * The rti job instructions' period of inactivity to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PeriodOfInactivityTo" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  periodOfInactivityTo?: Date;

  /**
   * The rti job instructions' rti transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RtiTransaction" })
  @Type(() => RtiJobInstructionRtiJobInstructionRtiTransaction)
  rtiTransaction?: RtiJobInstructionRtiJobInstructionRtiTransaction;

  /**
   * The rti job instructions' rti type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RtiType" })
  rtiType?: string;

  /**
   * The rti job instructions' scheme ceased
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SchemeCeased" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  schemeCeased?: Date;

  /**
   * The rti job instructions' tax month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxMonth" })
  taxMonth?: number;

  /**
   * The rti job instructions' tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxYear" })
  taxYear?: number;

  /**
   * The rti job instructions' timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;

  /**
   * The rti job instructions' transmit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Transmit" })
  transmit?: boolean;
}

/**
 * The the RTI job instruction object.
 */
export class RtiJobInstruction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "RtiJobInstruction" })
  @Type(() => RtiJobInstructionRtiJobInstruction)
  rtiJobInstruction?: RtiJobInstructionRtiJobInstruction;
}
