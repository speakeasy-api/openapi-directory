"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobPlacementInput:
    r"""Dataproc job config."""
    
    cluster_labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterLabels'), 'exclude': lambda f: f is None }})
    r"""Optional. Cluster labels to identify a cluster where the job will be submitted."""  
    cluster_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterName'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the cluster where the job will be submitted."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobPlacement:
    r"""Dataproc job config."""
    
    cluster_labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterLabels'), 'exclude': lambda f: f is None }})
    r"""Optional. Cluster labels to identify a cluster where the job will be submitted."""  
    cluster_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterName'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the cluster where the job will be submitted."""  
    cluster_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterUuid'), 'exclude': lambda f: f is None }})
    r"""Output only. A cluster UUID generated by the Dataproc service when the job is submitted."""  
    