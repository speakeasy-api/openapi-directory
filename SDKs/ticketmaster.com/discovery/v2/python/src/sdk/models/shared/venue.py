"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import address as shared_address
from ..shared import city as shared_city
from ..shared import country as shared_country
from ..shared import dma as shared_dma
from ..shared import externallink as shared_externallink
from ..shared import image as shared_image
from ..shared import location as shared_location
from ..shared import market as shared_market
from ..shared import social as shared_social
from ..shared import state as shared_state
from ..shared import venueboxofficeinfo as shared_venueboxofficeinfo
from ..shared import venuegeneralinfo as shared_venuegeneralinfo
from enum import Enum
from typing import Optional

class VenueTypeEnum(str, Enum):
    r"""Type of the entity"""
    EVENT = 'event'
    VENUE = 'venue'
    ATTRACTION = 'attraction'


@dataclasses.dataclass
class Venue:
    r"""Venue"""
    
    id: str = dataclasses.field()
    r"""Unique id of the entity in the discovery API"""  
    type: VenueTypeEnum = dataclasses.field()
    r"""Type of the entity"""  
    accessible_seating_detail: Optional[str] = dataclasses.field(default=None)
    r"""Venue accessible seating detail"""  
    additional_info: Optional[str] = dataclasses.field(default=None)
    r"""Additional information of the entity"""  
    address: Optional[shared_address.Address] = dataclasses.field(default=None)
    r"""Address"""  
    box_office_info: Optional[shared_venueboxofficeinfo.VenueBoxOfficeInfo] = dataclasses.field(default=None)
    r"""Venue box office information"""  
    city: Optional[shared_city.City] = dataclasses.field(default=None)
    r"""City"""  
    country: Optional[shared_country.Country] = dataclasses.field(default=None)
    r"""Country"""  
    currency: Optional[str] = dataclasses.field(default=None)
    r"""Default currency of ticket prices for events in this venue"""  
    description: Optional[str] = dataclasses.field(default=None)
    r"""Description's of the entity"""  
    distance: Optional[float] = dataclasses.field(default=None)  
    dma: Optional[list[shared_dma.Dma]] = dataclasses.field(default=None)
    r"""The list of associated DMAs (Designated Market Areas) of the venue"""  
    external_links: Optional[dict[str, list[shared_externallink.ExternalLink]]] = dataclasses.field(default=None)
    r"""List of external links"""  
    general_info: Optional[shared_venuegeneralinfo.VenueGeneralInfo] = dataclasses.field(default=None)
    r"""Venue general information"""  
    images: Optional[list[shared_image.Image]] = dataclasses.field(default=None)
    r"""Images of the entity"""  
    locale: Optional[str] = dataclasses.field(default=None)
    r"""Locale in which the content is returned"""  
    location: Optional[shared_location.Location] = dataclasses.field(default=None)
    r"""Location"""  
    markets: Optional[list[shared_market.Market]] = dataclasses.field(default=None)
    r"""Markets of the venue"""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the entity"""  
    parking_detail: Optional[str] = dataclasses.field(default=None)
    r"""Venue parking info"""  
    postal_code: Optional[str] = dataclasses.field(default=None)
    r"""Postal code / zipcode of the venue"""  
    social: Optional[shared_social.Social] = dataclasses.field(default=None)
    r"""Social networks data"""  
    state: Optional[shared_state.State] = dataclasses.field(default=None)
    r"""State"""  
    test: Optional[bool] = dataclasses.field(default=None)
    r"""Indicate if this is a test entity, by default test entities won't appear in discovery API"""  
    timezone: Optional[str] = dataclasses.field(default=None)
    r"""Timezone of the venue"""  
    units: Optional[str] = dataclasses.field(default=None)  
    upcoming_events: Optional[dict[str, int]] = dataclasses.field(default=None)
    r"""number of upcoming events"""  
    url: Optional[str] = dataclasses.field(default=None)
    r"""URL of a web site detail page of the entity"""  
    