<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * TestGetTestRunTestRun - Summary single test run on Xamarin Test Cloud
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class TestGetTestRunTestRun
{
    /**
     * The compiled version of the app binary
     * 
     * @var ?string $appVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('appVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $appVersion = null;
    
    /**
     * The date and time the test was uploaded
     * 
     * @var ?string $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $date = null;
    
    /**
     * Human readable explanation of the current test status
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The unique id of the test upload
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The device platform targeted by the test. Possible values are 'ios' or 'android'
     * 
     * @var ?string $platform
     */
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $platform = null;
    
    /**
     * The passed/failed state
     * 
     * @var ?string $resultStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('resultStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resultStatus = null;
    
    /**
     * The current status of the test run, in relation to the various phases
     * 
     * @var ?string $runStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('runStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $runStatus = null;
    
    /**
     * Deprecated. Use runStatus instead.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * Summary single test run on Xamarin Test Cloud
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\TestGetTestRunTestRunTestRunStatistics $stats
     */
	#[\JMS\Serializer\Annotation\SerializedName('stats')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\TestGetTestRunTestRunTestRunStatistics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TestGetTestRunTestRunTestRunStatistics $stats = null;
    
    /**
     * Deprecated. Use resultStatus instead.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * The name of the test series with which this test upload is associated
     * 
     * @var ?string $testSeries
     */
	#[\JMS\Serializer\Annotation\SerializedName('testSeries')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $testSeries = null;
    
    /**
     * The name of the test framework used to run this test
     * 
     * @var ?string $testType
     */
	#[\JMS\Serializer\Annotation\SerializedName('testType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $testType = null;
    
	public function __construct()
	{
		$this->appVersion = null;
		$this->date = null;
		$this->description = null;
		$this->id = null;
		$this->platform = null;
		$this->resultStatus = null;
		$this->runStatus = null;
		$this->state = null;
		$this->stats = null;
		$this->status = null;
		$this->testSeries = null;
		$this->testType = null;
	}
}
