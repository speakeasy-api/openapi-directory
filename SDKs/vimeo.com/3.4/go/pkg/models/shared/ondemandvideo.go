// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OnDemandVideoBuy - Information about purchasing this video.
type OnDemandVideoBuy struct {
	// Whether this On Demand video can be purchased.
	Active bool `json:"active"`
	// A map of currency type to price.
	Price map[string]interface{} `json:"price"`
	// Whether this On Demand video has been purchased.
	Purchased *bool `json:"purchased,omitempty"`
}

// OnDemandVideoInteractionsPage - Information about how the authenticated user can interact with the connection to the video's On Demand page.
type OnDemandVideoInteractionsPage struct {
	// Whether this On Demand page was added.
	Added bool `json:"added"`
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The URI to access the On Demand page.
	URI string `json:"uri"`
}

// OnDemandVideoInteractions - An object containing information about how the authenticated user can interact with this On Demand page.
type OnDemandVideoInteractions struct {
	// Information about how the authenticated user can interact with the connection to the video's On Demand page.
	Page OnDemandVideoInteractionsPage `json:"page"`
}

// OnDemandVideoMetadataConnectionsSeason - Information about this season.
type OnDemandVideoMetadataConnectionsSeason struct {
	// The name of the season on this connection.
	Name string `json:"name"`
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The API URI that resolves to the connection data.
	URI string `json:"uri"`
}

type OnDemandVideoMetadataConnections struct {
	// Information about this season.
	Season OnDemandVideoMetadataConnectionsSeason `json:"season"`
}

// OnDemandVideoMetadataInteractionsLikes - Information about the user's Like interactions with this video.
type OnDemandVideoMetadataInteractionsLikes struct {
	// Whether the user has liked this video.
	Added bool `json:"added"`
	// The time in ISO 8601 format when the user liked this video.
	AddedTime string `json:"added_time"`
	// The URI for the user to like this video.
	URI string `json:"uri"`
}

// OnDemandVideoMetadataInteractionsWatchlater - Information about the user's Watch Later interactions with this video.
type OnDemandVideoMetadataInteractionsWatchlater struct {
	// Whether the user has added this video to their Watch Later queue.
	Added bool `json:"added"`
	// The time in ISO 8601 format when the user added this video to their Watch Later queue.
	AddedTime string `json:"added_time"`
	// The URI for the user to add this video to their Watch Later queue.
	URI string `json:"uri"`
}

type OnDemandVideoMetadataInteractions struct {
	// Information about the user's Like interactions with this video.
	Likes OnDemandVideoMetadataInteractionsLikes `json:"likes"`
	// Information about the user's Watch Later interactions with this video.
	Watchlater OnDemandVideoMetadataInteractionsWatchlater `json:"watchlater"`
}

// OnDemandVideoMetadata - Metadata information about this video.
type OnDemandVideoMetadata struct {
	Connections  OnDemandVideoMetadataConnections  `json:"connections"`
	Interactions OnDemandVideoMetadataInteractions `json:"interactions"`
}

// OnDemandVideoRent - Information about renting this video.
type OnDemandVideoRent struct {
	// Whether this On Demand video can be rented.
	Active bool `json:"active"`
	// A map of currency type to price.
	Price map[string]interface{} `json:"price"`
	// Whether this On Demand video has been rented.
	Purchased *bool `json:"purchased,omitempty"`
}

// OnDemandVideoTypeEnum - The type of the On Demand video:
//
// Option descriptions:
//   - `extra` - The On Demand video is an extra feature.
//   - `main` - The On Demand video is a main feature.
//   - `trailer` - The On Demand video is a trailer.
type OnDemandVideoTypeEnum string

const (
	OnDemandVideoTypeEnumExtra   OnDemandVideoTypeEnum = "extra"
	OnDemandVideoTypeEnumMain    OnDemandVideoTypeEnum = "main"
	OnDemandVideoTypeEnumTrailer OnDemandVideoTypeEnum = "trailer"
)

func (e *OnDemandVideoTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "extra":
		fallthrough
	case "main":
		fallthrough
	case "trailer":
		*e = OnDemandVideoTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OnDemandVideoTypeEnum: %s", s)
	}
}

// OnDemandVideo - The video was added.
type OnDemandVideo struct {
	// Information about purchasing this video.
	Buy OnDemandVideoBuy `json:"buy"`
	// Description of the On Demand video.
	Description *string `json:"description,omitempty"`
	// The duration of the On Demand video.
	Duration *string `json:"duration,omitempty"`
	// The episode number of the On Demand video.
	Episode *float64 `json:"episode,omitempty"`
	// An object containing information about how the authenticated user can interact with this On Demand page.
	Interactions OnDemandVideoInteractions `json:"interactions"`
	// The link to this video on Vimeo.
	Link string `json:"link"`
	// Metadata information about this video.
	Metadata OnDemandVideoMetadata `json:"metadata"`
	// The title of the On Demand video.
	Name *string `json:"name,omitempty"`
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options,omitempty"`
	// The active picture for this video.
	Pictures *Picture `json:"pictures,omitempty"`
	// The user's most recent play position in seconds for this video.
	PlayProgress float64 `json:"play_progress"`
	// Describes the manual position of this video relative to the other videos owned by this On Demand page.
	Position *float64 `json:"position,omitempty"`
	// The time in ISO 8601 format when the On Demand video was created or published.
	ReleaseDate *string `json:"release_date,omitempty"`
	// The year that this On Demand video was released.
	ReleaseYear float64 `json:"release_year"`
	// Information about renting this video.
	Rent OnDemandVideoRent `json:"rent"`
	// The type of the On Demand video:
	//
	// Option descriptions:
	//  * `extra` - The On Demand video is an extra feature.
	//  * `main` - The On Demand video is a main feature.
	//  * `trailer` - The On Demand video is a trailer.
	//
	Type OnDemandVideoTypeEnum `json:"type"`
	// The video container's relative URI.
	URI string `json:"uri"`
	// The owner of the video.
	User *User `json:"user,omitempty"`
}
