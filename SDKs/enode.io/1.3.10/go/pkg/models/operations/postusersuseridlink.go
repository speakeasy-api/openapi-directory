// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostUsersUseridLinkSecurity struct {
	ClientAccessToken string `security:"scheme,type=oauth2,name=Authorization"`
}

// PostUsersUseridLinkRequestBodyVendorEnum - Automatically skip to the credential input screen for this vendor, skipping the Vendor selection menu.
type PostUsersUseridLinkRequestBodyVendorEnum string

const (
	PostUsersUseridLinkRequestBodyVendorEnumTesla      PostUsersUseridLinkRequestBodyVendorEnum = "TESLA"
	PostUsersUseridLinkRequestBodyVendorEnumBmw        PostUsersUseridLinkRequestBodyVendorEnum = "BMW"
	PostUsersUseridLinkRequestBodyVendorEnumAudi       PostUsersUseridLinkRequestBodyVendorEnum = "AUDI"
	PostUsersUseridLinkRequestBodyVendorEnumVolkswagen PostUsersUseridLinkRequestBodyVendorEnum = "VOLKSWAGEN"
	PostUsersUseridLinkRequestBodyVendorEnumHyundai    PostUsersUseridLinkRequestBodyVendorEnum = "HYUNDAI"
	PostUsersUseridLinkRequestBodyVendorEnumPeugeot    PostUsersUseridLinkRequestBodyVendorEnum = "PEUGEOT"
	PostUsersUseridLinkRequestBodyVendorEnumNissan     PostUsersUseridLinkRequestBodyVendorEnum = "NISSAN"
)

func (e PostUsersUseridLinkRequestBodyVendorEnum) ToPointer() *PostUsersUseridLinkRequestBodyVendorEnum {
	return &e
}

func (e *PostUsersUseridLinkRequestBodyVendorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TESLA":
		fallthrough
	case "BMW":
		fallthrough
	case "AUDI":
		fallthrough
	case "VOLKSWAGEN":
		fallthrough
	case "HYUNDAI":
		fallthrough
	case "PEUGEOT":
		fallthrough
	case "NISSAN":
		*e = PostUsersUseridLinkRequestBodyVendorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostUsersUseridLinkRequestBodyVendorEnum: %v", v)
	}
}

type PostUsersUseridLinkRequestBody struct {
	// BCP47 language code - Force the Link UI to prefer the specified language. If omitted, the UI will default to the user's browser default language.
	ForceLanguage *string `json:"forceLanguage,omitempty"`
	// Allow multiple car vendors to be linked during a single Link session. Automatically disabled if `vendor` is set.
	LinkMultiple *bool `json:"linkMultiple,omitempty"`
	// Full URL to an image that the user would recognize as being their own. This URL is only stored for the duration of the Link session, and is displayed to the user to reduce the effectiveness of phishing attacks.
	UserImage *string `json:"userImage,omitempty"`
	// The User's first name, full name, or other identifier that the user would recognize as being their own. This name is only stored for the duration of the Link session, and is displayed to the user to reduce the effectiveness of phishing attacks.
	UserName *string `json:"userName,omitempty"`
	// Automatically skip to the credential input screen for this vendor, skipping the Vendor selection menu.
	Vendor *PostUsersUseridLinkRequestBodyVendorEnum `json:"vendor,omitempty"`
}

type PostUsersUseridLinkRequest struct {
	RequestBody *PostUsersUseridLinkRequestBody `request:"mediaType=application/json"`
	// ID of the User
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

// PostUsersUseridLink200ApplicationJSON - Successful
type PostUsersUseridLink200ApplicationJSON struct {
	LinkState *string `json:"linkState,omitempty"`
}

type PostUsersUseridLinkResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful
	PostUsersUseridLink200ApplicationJSONObject *PostUsersUseridLink200ApplicationJSON
}
