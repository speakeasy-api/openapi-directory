/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateLaunchConfigurationTemplateRequestBody {
    /**
     * Copy private IP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("copyPrivateIp")
    public Boolean copyPrivateIp;

    public CreateLaunchConfigurationTemplateRequestBody withCopyPrivateIp(Boolean copyPrivateIp) {
        this.copyPrivateIp = copyPrivateIp;
        return this;
    }
    
    /**
     * Copy tags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("copyTags")
    public Boolean copyTags;

    public CreateLaunchConfigurationTemplateRequestBody withCopyTags(Boolean copyTags) {
        this.copyTags = copyTags;
        return this;
    }
    
    /**
     * Launch disposition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchDisposition")
    public CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum launchDisposition;

    public CreateLaunchConfigurationTemplateRequestBody withLaunchDisposition(CreateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum launchDisposition) {
        this.launchDisposition = launchDisposition;
        return this;
    }
    
    /**
     * Configuration of a machine's license.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licensing")
    public CreateLaunchConfigurationTemplateRequestBodyLicensing licensing;

    public CreateLaunchConfigurationTemplateRequestBody withLicensing(CreateLaunchConfigurationTemplateRequestBodyLicensing licensing) {
        this.licensing = licensing;
        return this;
    }
    
    /**
     * Request to associate tags during creation of a Launch Configuration Template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateLaunchConfigurationTemplateRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Target instance type right-sizing method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetInstanceTypeRightSizingMethod")
    public CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum targetInstanceTypeRightSizingMethod;

    public CreateLaunchConfigurationTemplateRequestBody withTargetInstanceTypeRightSizingMethod(CreateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum targetInstanceTypeRightSizingMethod) {
        this.targetInstanceTypeRightSizingMethod = targetInstanceTypeRightSizingMethod;
        return this;
    }
    
    public CreateLaunchConfigurationTemplateRequestBody(){}
}
