/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NearEarthObject - OK
 */
public class NearEarthObject {
    /**
     * Is a measure of an asteroids brightness
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("absolute_magnitude_h")
    public Double absoluteMagnitudeH;

    public NearEarthObject withAbsoluteMagnitudeH(Double absoluteMagnitudeH) {
        this.absoluteMagnitudeH = absoluteMagnitudeH;
        return this;
    }
    
    /**
     * Close approach information of the Asteroid
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("close_approach_data")
    public CloseApproachData[] closeApproachData;

    public NearEarthObject withCloseApproachData(CloseApproachData[] closeApproachData) {
        this.closeApproachData = closeApproachData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("designation")
    public String designation;

    public NearEarthObject withDesignation(String designation) {
        this.designation = designation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimated_diameter")
    public EstimatedDiameterContainer estimatedDiameter;

    public NearEarthObject withEstimatedDiameter(EstimatedDiameterContainer estimatedDiameter) {
        this.estimatedDiameter = estimatedDiameter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_potentially_hazardous_asteroid")
    public Boolean isPotentiallyHazardousAsteroid;

    public NearEarthObject withIsPotentiallyHazardousAsteroid(Boolean isPotentiallyHazardousAsteroid) {
        this.isPotentiallyHazardousAsteroid = isPotentiallyHazardousAsteroid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_sentry_object")
    public Boolean isSentryObject;

    public NearEarthObject withIsSentryObject(Boolean isSentryObject) {
        this.isSentryObject = isSentryObject;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NearEarthObject withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name_limited")
    public String nameLimited;

    public NearEarthObject withNameLimited(String nameLimited) {
        this.nameLimited = nameLimited;
        return this;
    }
    
    /**
     * A Link to the NASA JPL Small-Body Database website
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nasa_jpl_url")
    public String nasaJplUrl;

    public NearEarthObject withNasaJplUrl(String nasaJplUrl) {
        this.nasaJplUrl = nasaJplUrl;
        return this;
    }
    
    /**
     * The reference ID of the Asteroid - This correlates to the SPK ID for the JPL NEO data
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("neo_reference_id")
    public String neoReferenceId;

    public NearEarthObject withNeoReferenceId(String neoReferenceId) {
        this.neoReferenceId = neoReferenceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orbital_data")
    public OrbitalData orbitalData;

    public NearEarthObject withOrbitalData(OrbitalData orbitalData) {
        this.orbitalData = orbitalData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sentry_data")
    public String sentryData;

    public NearEarthObject withSentryData(String sentryData) {
        this.sentryData = sentryData;
        return this;
    }
    
    public NearEarthObject(){}
}
