<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class FormField
{
    /**
     * Only applicable to select fields. Allow the user to add a custom value though the option select if the desired value is not in the option select list.
     * 
     * @var ?bool $allowCustomValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('allow_custom_values')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowCustomValues = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('custom_field')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $customField = null;
    
    /**
     * The description of the form field
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Indicates if the form field is displayed in a “read-only” mode.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * Indicates if the form field is not displayed but the value that is being stored on the connection.
     * 
     * @var ?bool $hidden
     */
	#[\JMS\Serializer\Annotation\SerializedName('hidden')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hidden = null;
    
    /**
     * The unique identifier of the form field.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The label of the field
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * $options
     * 
     * @var ?array<mixed> $options
     */
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $options = null;
    
    /**
     * The placeholder for the form field
     * 
     * @var ?string $placeholder
     */
	#[\JMS\Serializer\Annotation\SerializedName('placeholder')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $placeholder = null;
    
    /**
     * Indicates if the form field is required, which means it must be filled in before the form can be submitted
     * 
     * @var ?bool $required
     */
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $required = null;
    
    /**
     * Indicates if the form field contains sensitive data, which will display the value as a masked input.
     * 
     * @var ?bool $sensitive
     */
	#[\JMS\Serializer\Annotation\SerializedName('sensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sensitive = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FormFieldTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FormFieldTypeEnum $type = null;
    
	public function __construct()
	{
		$this->allowCustomValues = null;
		$this->customField = null;
		$this->description = null;
		$this->disabled = null;
		$this->hidden = null;
		$this->id = null;
		$this->label = null;
		$this->options = null;
		$this->placeholder = null;
		$this->required = null;
		$this->sensitive = null;
		$this->type = null;
	}
}
