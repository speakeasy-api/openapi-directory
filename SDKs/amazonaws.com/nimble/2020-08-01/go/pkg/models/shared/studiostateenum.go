// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StudioStateEnum string

const (
	StudioStateEnumCreateInProgress StudioStateEnum = "CREATE_IN_PROGRESS"
	StudioStateEnumReady            StudioStateEnum = "READY"
	StudioStateEnumUpdateInProgress StudioStateEnum = "UPDATE_IN_PROGRESS"
	StudioStateEnumDeleteInProgress StudioStateEnum = "DELETE_IN_PROGRESS"
	StudioStateEnumDeleted          StudioStateEnum = "DELETED"
	StudioStateEnumDeleteFailed     StudioStateEnum = "DELETE_FAILED"
	StudioStateEnumCreateFailed     StudioStateEnum = "CREATE_FAILED"
	StudioStateEnumUpdateFailed     StudioStateEnum = "UPDATE_FAILED"
)

func (e StudioStateEnum) ToPointer() *StudioStateEnum {
	return &e
}

func (e *StudioStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "READY":
		fallthrough
	case "UPDATE_IN_PROGRESS":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "DELETED":
		fallthrough
	case "DELETE_FAILED":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "UPDATE_FAILED":
		*e = StudioStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StudioStateEnum: %v", v)
	}
}
