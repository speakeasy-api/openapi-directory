// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DistributionGroupsCreateForOrgSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type DistributionGroupsCreateForOrgPathParams struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

// DistributionGroupsCreateForOrgRequestBody - The attributes to update for the distribution group
type DistributionGroupsCreateForOrgRequestBody struct {
	// The display name of the distribution group. If not specified, the name will be used.
	DisplayName *string `json:"display_name,omitempty"`
	// The name of the distribution group
	Name string `json:"name"`
}

type DistributionGroupsCreateForOrgRequest struct {
	PathParams DistributionGroupsCreateForOrgPathParams
	// The attributes to update for the distribution group
	Request  DistributionGroupsCreateForOrgRequestBody `request:"mediaType=application/json"`
	Security DistributionGroupsCreateForOrgSecurity
}

type DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum string

const (
	DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnumBadRequest          DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnumConflict            DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnumNotAcceptable       DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnumNotFound            DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnumInternalServerError DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnumUnauthorized        DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnumTooManyRequests     DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DistributionGroupsCreateForOrgDefaultApplicationJSONError struct {
	Code    DistributionGroupsCreateForOrgDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                            `json:"message"`
}

// DistributionGroupsCreateForOrgDefaultApplicationJSON - Error
type DistributionGroupsCreateForOrgDefaultApplicationJSON struct {
	Error DistributionGroupsCreateForOrgDefaultApplicationJSONError `json:"error"`
}

// DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum - The creation origin of this distribution group
type DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum string

const (
	DistributionGroupsCreateForOrg201ApplicationJSONOriginEnumAppcenter DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum = "appcenter"
	DistributionGroupsCreateForOrg201ApplicationJSONOriginEnumHockeyapp DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum = "hockeyapp"
)

func (e *DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		*e = DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum: %s", s)
	}
}

// DistributionGroupsCreateForOrg201ApplicationJSON - Success
type DistributionGroupsCreateForOrg201ApplicationJSON struct {
	// The name of the distribution group
	DisplayName *string `json:"display_name,omitempty"`
	// The unique ID of the distribution group
	ID string `json:"id"`
	// Whether the distribution group is public
	IsPublic bool `json:"is_public"`
	// The name of the distribution group used in URLs
	Name string `json:"name"`
	// The creation origin of this distribution group
	Origin DistributionGroupsCreateForOrg201ApplicationJSONOriginEnum `json:"origin"`
}

type DistributionGroupsCreateForOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	DistributionGroupsCreateForOrg201ApplicationJSONObject *DistributionGroupsCreateForOrg201ApplicationJSON
	// Error
	DistributionGroupsCreateForOrgDefaultApplicationJSONObject *DistributionGroupsCreateForOrgDefaultApplicationJSON
}
