// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutSchemaVersionMetadataXAmzTargetEnum
type PutSchemaVersionMetadataXAmzTargetEnum string

const (
	PutSchemaVersionMetadataXAmzTargetEnumAwsGluePutSchemaVersionMetadata PutSchemaVersionMetadataXAmzTargetEnum = "AWSGlue.PutSchemaVersionMetadata"
)

func (e PutSchemaVersionMetadataXAmzTargetEnum) ToPointer() *PutSchemaVersionMetadataXAmzTargetEnum {
	return &e
}

func (e *PutSchemaVersionMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.PutSchemaVersionMetadata":
		*e = PutSchemaVersionMetadataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutSchemaVersionMetadataXAmzTargetEnum: %v", v)
	}
}

type PutSchemaVersionMetadataRequest struct {
	PutSchemaVersionMetadataInput shared.PutSchemaVersionMetadataInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    PutSchemaVersionMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutSchemaVersionMetadataResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AlreadyExistsException
	AlreadyExistsException interface{}
	ContentType            string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	PutSchemaVersionMetadataResponse *shared.PutSchemaVersionMetadataResponse
	// ResourceNumberLimitExceededException
	ResourceNumberLimitExceededException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
}
