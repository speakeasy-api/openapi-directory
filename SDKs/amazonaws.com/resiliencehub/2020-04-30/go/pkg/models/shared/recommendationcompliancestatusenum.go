// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecommendationComplianceStatusEnum string

const (
	RecommendationComplianceStatusEnumBreachedUnattainable RecommendationComplianceStatusEnum = "BreachedUnattainable"
	RecommendationComplianceStatusEnumBreachedCanMeet      RecommendationComplianceStatusEnum = "BreachedCanMeet"
	RecommendationComplianceStatusEnumMetCanImprove        RecommendationComplianceStatusEnum = "MetCanImprove"
)

func (e RecommendationComplianceStatusEnum) ToPointer() *RecommendationComplianceStatusEnum {
	return &e
}

func (e *RecommendationComplianceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BreachedUnattainable":
		fallthrough
	case "BreachedCanMeet":
		fallthrough
	case "MetCanImprove":
		*e = RecommendationComplianceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecommendationComplianceStatusEnum: %v", v)
	}
}
