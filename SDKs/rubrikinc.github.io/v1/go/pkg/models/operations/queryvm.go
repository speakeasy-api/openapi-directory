// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryVMSLAAssignmentEnum - Filter by SLA Domain assignment type.
type QueryVMSLAAssignmentEnum string

const (
	QueryVMSLAAssignmentEnumDerived    QueryVMSLAAssignmentEnum = "Derived"
	QueryVMSLAAssignmentEnumDirect     QueryVMSLAAssignmentEnum = "Direct"
	QueryVMSLAAssignmentEnumUnassigned QueryVMSLAAssignmentEnum = "Unassigned"
)

func (e QueryVMSLAAssignmentEnum) ToPointer() *QueryVMSLAAssignmentEnum {
	return &e
}

func (e *QueryVMSLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = QueryVMSLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVMSLAAssignmentEnum: %v", v)
	}
}

// QueryVMSortByEnum - Sort results based on the specified attribute.
type QueryVMSortByEnum string

const (
	QueryVMSortByEnumEffectiveSLADomainName QueryVMSortByEnum = "effectiveSlaDomainName"
	QueryVMSortByEnumName                   QueryVMSortByEnum = "name"
	QueryVMSortByEnumMoid                   QueryVMSortByEnum = "moid"
	QueryVMSortByEnumFolderPath             QueryVMSortByEnum = "folderPath"
	QueryVMSortByEnumInfraPath              QueryVMSortByEnum = "infraPath"
)

func (e QueryVMSortByEnum) ToPointer() *QueryVMSortByEnum {
	return &e
}

func (e *QueryVMSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "effectiveSlaDomainName":
		fallthrough
	case "name":
		fallthrough
	case "moid":
		fallthrough
	case "folderPath":
		fallthrough
	case "infraPath":
		*e = QueryVMSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVMSortByEnum: %v", v)
	}
}

// QueryVMSortOrderEnum - Sort order, either ascending or descending.
type QueryVMSortOrderEnum string

const (
	QueryVMSortOrderEnumAsc  QueryVMSortOrderEnum = "asc"
	QueryVMSortOrderEnumDesc QueryVMSortOrderEnum = "desc"
)

func (e QueryVMSortOrderEnum) ToPointer() *QueryVMSortOrderEnum {
	return &e
}

func (e *QueryVMSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryVMSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVMSortOrderEnum: %v", v)
	}
}

type QueryVMRequest struct {
	// Filter by ID of effective SLA Domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Filters by the name of operating system using infix search.
	GuestOsName *string `queryParam:"style=form,explode=true,name=guest_os_name"`
	// Filter by the isRelic field of the virtual machine. When this parameter is not set, return both relic and non-relic virtual machines.
	IsRelic *bool `queryParam:"style=form,explode=true,name=is_relic"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Search by using a virtual machine managed object ID.
	Moid *string `queryParam:"style=form,explode=true,name=moid"`
	// Search by using a virtual machine name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Ignore these many matches in the beginning.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter by primary cluster ID, or **local**.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Filter by SLA Domain assignment type.
	SLAAssignment *QueryVMSLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Sort results based on the specified attribute.
	SortBy *QueryVMSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryVMSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryVMResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Virtual machine summary.
	VirtualMachineSummaryListResponse *shared.VirtualMachineSummaryListResponse
}
