<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class CashDrawers 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * ListCashDrawerShiftEvents
     * 
     * Provides a paginated list of events for a single cash drawer shift.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsResponse
     */
	public function listCashDrawerShiftEvents(
        \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/cash-drawers/shifts/{shift_id}/events', \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftEventsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listCashDrawerShiftEventsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListCashDrawerShiftEventsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * ListCashDrawerShifts
     * 
     * Provides the details for all of the cash drawer shifts for a location
     * in a date range.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsResponse
     */
	public function listCashDrawerShifts(
        \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/cash-drawers/shifts');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ListCashDrawerShiftsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listCashDrawerShiftsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListCashDrawerShiftsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * RetrieveCashDrawerShift
     * 
     * Provides the summary details for a single cash drawer shift. See
     * [ListCashDrawerShiftEvents](https://developer.squareup.com/reference/square_2021-08-18/cash-drawers-api/list-cash-drawer-shift-events) for a list of cash drawer shift events.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftResponse
     */
	public function retrieveCashDrawerShift(
        \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/cash-drawers/shifts/{shift_id}', \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\RetrieveCashDrawerShiftResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->retrieveCashDrawerShiftResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\RetrieveCashDrawerShiftResponse', 'json');
            }
        }

        return $response;
    }
}