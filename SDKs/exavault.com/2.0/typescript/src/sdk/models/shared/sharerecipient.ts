/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file.
 */
export enum ShareRecipientReceivedEnum {
  True = "true",
  False = "false",
}

/**
 * Set to true if invite email was sent; false otherwise.
 */
export enum ShareRecipientSentEnum {
  True = "true",
  False = "false",
}

/**
 * Type of the recipient.
 */
export enum ShareRecipientTypeEnum {
  Owner = "owner",
  Direct = "direct",
}

export class ShareRecipient extends SpeakeasyBase {
  /**
   * Timestamp of adding recipient to the share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Recipient email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Share hash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hash" })
  hash?: string;

  /**
   * ID of the recipient.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "received" })
  received?: ShareRecipientReceivedEnum;

  /**
   * Set to true if invite email was sent; false otherwise.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sent" })
  sent?: ShareRecipientSentEnum;

  /**
   * ID of the share that the recipoient belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shareId" })
  shareId?: string;

  /**
   * Type of the recipient.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ShareRecipientTypeEnum;
}
