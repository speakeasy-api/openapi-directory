"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import classicpeopledto as shared_classicpeopledto
from ..shared import commonlanguagecombinationdto as shared_commonlanguagecombinationdto
from ..shared import customfielddto as shared_customfielddto
from ..shared import instructionsdto as shared_instructionsdto
from ..shared import projectdatesdto as shared_projectdatesdto
from ..shared import taskfinancedto as shared_taskfinancedto
from ..shared import taskjobsdto as shared_taskjobsdto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskDTO:
    r"""Success"""
    
    client_task_po_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientTaskPONumber'), 'exclude': lambda f: f is None }})
    r"""client task PO number"""  
    custom_fields: Optional[list[shared_customfielddto.CustomFieldDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFields'), 'exclude': lambda f: f is None }})  
    dates: Optional[shared_projectdatesdto.ProjectDatesDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dates'), 'exclude': lambda f: f is None }})  
    finance: Optional[shared_taskfinancedto.TaskFinanceDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finance'), 'exclude': lambda f: f is None }})
    r"""finance"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""internal identifier"""  
    id_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idNumber'), 'exclude': lambda f: f is None }})
    r"""identifier"""  
    instructions: Optional[shared_instructionsdto.InstructionsDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instructions'), 'exclude': lambda f: f is None }})  
    jobs: Optional[shared_taskjobsdto.TaskJobsDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobs'), 'exclude': lambda f: f is None }})  
    language_combination: Optional[shared_commonlanguagecombinationdto.CommonLanguageCombinationDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCombination'), 'exclude': lambda f: f is None }})
    r"""language combination (ie. PL -> EN)"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""name"""  
    people: Optional[shared_classicpeopledto.ClassicPeopleDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('people'), 'exclude': lambda f: f is None }})
    r"""people"""  
    project_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectId'), 'exclude': lambda f: f is None }})
    r"""project's internal identifier"""  
    quote_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quoteId'), 'exclude': lambda f: f is None }})
    r"""quote's internal identifier"""  
    