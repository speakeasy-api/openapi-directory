/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Additional information for your request
 */
export class CostMatrixDataInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyrights" })
  copyrights?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "took" })
  took?: number;
}

/**
 * JSON data of matrix response
 */
export class CostMatrixData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "distances" })
  distances?: number[][];

  /**
   * Additional information for your request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "info" })
  @Type(() => CostMatrixDataInfo)
  info?: CostMatrixDataInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "times" })
  times?: number[][];
}

/**
 * type of cost matrix, currently default or google are supported
 */
export enum CostMatrixTypeEnum {
  Default = "default",
  Google = "google",
}

export class CostMatrix extends SpeakeasyBase {
  /**
   * JSON data of matrix response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => CostMatrixData)
  data?: CostMatrixData;

  @SpeakeasyMetadata()
  @Expose({ name: "location_ids" })
  locationIds?: string[];

  /**
   * vehicle profile or empty if catch all fallback
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profile" })
  profile?: string;

  /**
   * type of cost matrix, currently default or google are supported
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CostMatrixTypeEnum;
}
