/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAppsDriveLabelsV2LifecycleDisabledPolicy } from "./googleappsdrivelabelsv2lifecycledisabledpolicy";
import { GoogleAppsDriveLabelsV2WriteControl } from "./googleappsdrivelabelsv2writecontrol";
import { Expose, Type } from "class-transformer";

/**
 * Request to deprecate a published Label.
 */
export class GoogleAppsDriveLabelsV2DisableLabelRequest extends SpeakeasyBase {
  /**
   * The policy that governs how to treat a disabled label, field, or selection choice in different contexts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabledPolicy" })
  @Type(() => GoogleAppsDriveLabelsV2LifecycleDisabledPolicy)
  disabledPolicy?: GoogleAppsDriveLabelsV2LifecycleDisabledPolicy;

  /**
   * The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language will be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCode" })
  languageCode?: string;

  /**
   * The fields that should be updated. At least one field must be specified. The root `disabled_policy` is implied and should not be specified. A single `*` can be used as short-hand for updating every field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateMask" })
  updateMask?: string;

  /**
   * Set to `true` in order to use the user's admin credentials. The server will verify the user is an admin for the Label before allowing access.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useAdminAccess" })
  useAdminAccess?: boolean;

  /**
   * Provides control over how write requests are executed. When not specified, the last write wins.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "writeControl" })
  @Type(() => GoogleAppsDriveLabelsV2WriteControl)
  writeControl?: GoogleAppsDriveLabelsV2WriteControl;
}
