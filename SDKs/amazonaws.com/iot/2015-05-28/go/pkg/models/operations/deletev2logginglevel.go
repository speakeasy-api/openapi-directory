// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// DeleteV2LoggingLevelTargetTypeEnum - The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.
type DeleteV2LoggingLevelTargetTypeEnum string

const (
	DeleteV2LoggingLevelTargetTypeEnumDefault     DeleteV2LoggingLevelTargetTypeEnum = "DEFAULT"
	DeleteV2LoggingLevelTargetTypeEnumThingGroup  DeleteV2LoggingLevelTargetTypeEnum = "THING_GROUP"
	DeleteV2LoggingLevelTargetTypeEnumClientID    DeleteV2LoggingLevelTargetTypeEnum = "CLIENT_ID"
	DeleteV2LoggingLevelTargetTypeEnumSourceIP    DeleteV2LoggingLevelTargetTypeEnum = "SOURCE_IP"
	DeleteV2LoggingLevelTargetTypeEnumPrincipalID DeleteV2LoggingLevelTargetTypeEnum = "PRINCIPAL_ID"
)

func (e *DeleteV2LoggingLevelTargetTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEFAULT":
		fallthrough
	case "THING_GROUP":
		fallthrough
	case "CLIENT_ID":
		fallthrough
	case "SOURCE_IP":
		fallthrough
	case "PRINCIPAL_ID":
		*e = DeleteV2LoggingLevelTargetTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteV2LoggingLevelTargetTypeEnum: %s", s)
	}
}

type DeleteV2LoggingLevelQueryParams struct {
	// The name of the resource for which you are configuring logging.
	TargetName string `queryParam:"style=form,explode=true,name=targetName"`
	// The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.
	TargetType DeleteV2LoggingLevelTargetTypeEnum `queryParam:"style=form,explode=true,name=targetType"`
}

type DeleteV2LoggingLevelHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type DeleteV2LoggingLevelRequest struct {
	QueryParams DeleteV2LoggingLevelQueryParams
	Headers     DeleteV2LoggingLevelHeaders
}

type DeleteV2LoggingLevelResponse struct {
	ContentType string
	// InternalException
	InternalException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
}
