<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecording - Account Settings: Recording.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecording
{
    /**
     * Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.
     * 
     * @var ?bool $accountUserAccessRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_user_access_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $accountUserAccessRecording = null;
    
    /**
     * Allow recovery of deleted cloud recordings from trash. 
     * 
     * If the value of this field is set to `true`, deleted cloud recordings will be kept in trash for 30 days after deletion and can be recovered within that period. 
     * 
     * @var ?bool $allowRecoveryDeletedCloudRecordings
     */
	#[\JMS\Serializer\Annotation\SerializedName('allow_recovery_deleted_cloud_recordings')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowRecoveryDeletedCloudRecordings = null;
    
    /**
     * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted with archiving solution access by the Zoom support team.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingArchive $archive
     */
	#[\JMS\Serializer\Annotation\SerializedName('archive')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingArchive')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingArchive $archive = null;
    
    /**
     * Allow Zoom to permanantly delete recordings automatically after a specified number of days.
     * 
     * @var ?bool $autoDeleteCmr
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_delete_cmr')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoDeleteCmr = null;
    
    /**
     * When `auto_delete_cmr` function is 'true' this value will set the number of days before the auto deletion of cloud recordings.
     * 
     * @var ?int $autoDeleteCmrDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_delete_cmr_days')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $autoDeleteCmrDays = null;
    
    /**
     * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingAutoRecordingEnum $autoRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_recording')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingAutoRecordingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingAutoRecordingEnum $autoRecording = null;
    
    /**
     * Allow hosts to record and save the meeting in the cloud.
     * 
     * @var ?bool $cloudRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloud_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cloudRecording = null;
    
    /**
     * Cloud recording downloads.
     * 
     * @var ?bool $cloudRecordingDownload
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloud_recording_download')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cloudRecordingDownload = null;
    
    /**
     * Only the host can download cloud recordings.
     * 
     * @var ?bool $cloudRecordingDownloadHost
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloud_recording_download_host')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cloudRecordingDownloadHost = null;
    
    /**
     * If the value of this field is set to `true`, hosts will be able to delete the recordings. If this option is set to `false`, the recordings cannot be deleted by the host and only admin can delete them.
     * 
     * 
     * 
     * @var ?bool $hostDeleteCloudRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('host_delete_cloud_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hostDeleteCloudRecording = null;
    
    /**
     * Setting to allow cloud recording access only from specific IP address ranges.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingIpAddressAccessControl $ipAddressAccessControl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip_address_access_control')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingIpAddressAccessControl')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingIpAddressAccessControl $ipAddressAccessControl = null;
    
    /**
     * Allow hosts and participants to record the meeting using a local file.
     * 
     * @var ?bool $localRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('local_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $localRecording = null;
    
    /**
     * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
     * 
     * 
     * 
     * @var ?bool $preventHostAccessRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('prevent_host_access_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $preventHostAccessRecording = null;
    
    /**
     * Record an audio only file.
     * 
     * @var ?bool $recordAudioFile
     */
	#[\JMS\Serializer\Annotation\SerializedName('record_audio_file')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordAudioFile = null;
    
    /**
     * Record the gallery view with a shared screen.
     * 
     * @var ?bool $recordGalleryView
     */
	#[\JMS\Serializer\Annotation\SerializedName('record_gallery_view')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordGalleryView = null;
    
    /**
     * Record the active speaker with a shared screen.
     * 
     * @var ?bool $recordSpeakerView
     */
	#[\JMS\Serializer\Annotation\SerializedName('record_speaker_view')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordSpeakerView = null;
    
    /**
     * Automatically transcribe the audio of the meeting or webinar to the cloud.
     * 
     * @var ?bool $recordingAudioTranscript
     */
	#[\JMS\Serializer\Annotation\SerializedName('recording_audio_transcript')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordingAudioTranscript = null;
    
    /**
     * Show a disclaimer to participants before a recording starts
     * 
     * 
     * 
     * @var ?bool $recordingDisclaimer
     */
	#[\JMS\Serializer\Annotation\SerializedName('recording_disclaimer')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordingDisclaimer = null;
    
    /**
     * This object represents the minimum password requirements set for recordings via Account Recording Settings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingRecordingPasswordRequirement $recordingPasswordRequirement
     */
	#[\JMS\Serializer\Annotation\SerializedName('recording_password_requirement')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingRecordingPasswordRequirement')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountSettingsUpdateApplicationJSONUpdateAccountSettingsRecordingRecordingPasswordRequirement $recordingPasswordRequirement = null;
    
    /**
     * Require a passcode to access existing cloud recordings.
     * 
     * @var ?bool $requiredPasswordForExistingCloudRecordings
     */
	#[\JMS\Serializer\Annotation\SerializedName('required_password_for_existing_cloud_recordings')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requiredPasswordForExistingCloudRecordings = null;
    
    /**
     * Save the chat text from the meeting.
     * 
     * @var ?bool $saveChatText
     */
	#[\JMS\Serializer\Annotation\SerializedName('save_chat_text')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $saveChatText = null;
    
    /**
     * Add a timestamp to the recording.
     * 
     * @var ?bool $showTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('show_timestamp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $showTimestamp = null;
    
	public function __construct()
	{
		$this->accountUserAccessRecording = null;
		$this->allowRecoveryDeletedCloudRecordings = null;
		$this->archive = null;
		$this->autoDeleteCmr = null;
		$this->autoDeleteCmrDays = null;
		$this->autoRecording = null;
		$this->cloudRecording = null;
		$this->cloudRecordingDownload = null;
		$this->cloudRecordingDownloadHost = null;
		$this->hostDeleteCloudRecording = null;
		$this->ipAddressAccessControl = null;
		$this->localRecording = null;
		$this->preventHostAccessRecording = null;
		$this->recordAudioFile = null;
		$this->recordGalleryView = null;
		$this->recordSpeakerView = null;
		$this->recordingAudioTranscript = null;
		$this->recordingDisclaimer = null;
		$this->recordingPasswordRequirement = null;
		$this->requiredPasswordForExistingCloudRecordings = null;
		$this->saveChatText = null;
		$this->showTimestamp = null;
	}
}
