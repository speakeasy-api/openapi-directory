/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Session - Information about a Session Manager connection to a managed node.
 */
public class Session {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Details")
    public String details;
    public Session withDetails(String details) {
        this.details = details;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentName")
    public String documentName;
    public Session withDocumentName(String documentName) {
        this.documentName = documentName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndDate")
    public OffsetDateTime endDate;
    public Session withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxSessionDuration")
    public String maxSessionDuration;
    public Session withMaxSessionDuration(String maxSessionDuration) {
        this.maxSessionDuration = maxSessionDuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputUrl")
    public SessionManagerOutputUrl outputUrl;
    public Session withOutputUrl(SessionManagerOutputUrl outputUrl) {
        this.outputUrl = outputUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Owner")
    public String owner;
    public Session withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Reason")
    public String reason;
    public Session withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SessionId")
    public String sessionId;
    public Session withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartDate")
    public OffsetDateTime startDate;
    public Session withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public SessionStatusEnum status;
    public Session withStatus(SessionStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Target")
    public String target;
    public Session withTarget(String target) {
        this.target = target;
        return this;
    }
    
}
