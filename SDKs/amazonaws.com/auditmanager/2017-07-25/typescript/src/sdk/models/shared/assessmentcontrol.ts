/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ControlComment } from "./controlcomment";
import { ControlResponseEnum } from "./controlresponseenum";
import { ControlStatusEnum } from "./controlstatusenum";
import { Expose, Type } from "class-transformer";

/**
 *  The control entity that represents a standard control or a custom control in an Audit Manager assessment.
 */
export class AssessmentControl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assessmentReportEvidenceCount" })
  assessmentReportEvidenceCount?: number;

  @SpeakeasyMetadata({ elemType: ControlComment })
  @Expose({ name: "comments" })
  @Type(() => ControlComment)
  comments?: ControlComment[];

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "evidenceCount" })
  evidenceCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "evidenceSources" })
  evidenceSources?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: ControlResponseEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ControlStatusEnum;
}
