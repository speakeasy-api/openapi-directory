"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import bundlenotificationentity as shared_bundlenotificationentity
from typing import Optional


@dataclasses.dataclass
class PostBundleNotificationsRequestBody:
    
    bundle_id: int = dataclasses.field(metadata={'multipart_form': { 'field_name': 'bundle_id' }})
    r"""Bundle ID to notify on"""  
    notify_on_registration: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_on_registration' }})
    r"""Triggers bundle notification when a registration action occurs for it."""  
    notify_on_upload: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notify_on_upload' }})
    r"""Triggers bundle notification when a upload action occurs for it."""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'user_id' }})
    r"""The id of the user to notify."""  
    

@dataclasses.dataclass
class PostBundleNotificationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    bundle_notification_entity: Optional[shared_bundlenotificationentity.BundleNotificationEntity] = dataclasses.field(default=None)
    r"""The BundleNotifications object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    