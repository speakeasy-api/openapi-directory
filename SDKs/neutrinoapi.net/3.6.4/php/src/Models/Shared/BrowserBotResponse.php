<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class BrowserBotResponse
{
    /**
     * The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML
     * 
     * @var string $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $content;
    
    /**
     * Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes
     * 
     * @var array<string> $elements
     */
	#[\JMS\Serializer\Annotation\SerializedName('elements')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $elements;
    
    /**
     * Contains the error message if an error has occurred ('is-error' will be true)
     * 
     * @var string $errorMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('error-message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $errorMessage;
    
    /**
     * If you executed any JavaScript this array holds the results as objects
     * 
     * @var array<string> $execResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('exec-results')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $execResults;
    
    /**
     * The redirected URL if the URL responded with an HTTP redirect
     * 
     * @var string $httpRedirectUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('http-redirect-url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $httpRedirectUrl;
    
    /**
     * The HTTP status code the URL returned
     * 
     * @var int $httpStatusCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('http-status-code')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $httpStatusCode;
    
    /**
     * The HTTP status message the URL returned
     * 
     * @var string $httpStatusMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('http-status-message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $httpStatusMessage;
    
    /**
     * True if an error has occurred loading the page. Check the 'error-message' field for details
     * 
     * @var bool $isError
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-error')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isError;
    
    /**
     * True if the HTTP status is OK (200)
     * 
     * @var bool $isHttpOk
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-http-ok')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isHttpOk;
    
    /**
     * True if the URL responded with an HTTP redirect
     * 
     * @var bool $isHttpRedirect
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-http-redirect')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isHttpRedirect;
    
    /**
     * True if the page is secured using TLS/SSL
     * 
     * @var bool $isSecure
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-secure')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isSecure;
    
    /**
     * True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'
     * 
     * @var bool $isTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-timeout')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isTimeout;
    
    /**
     * The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers
     * 
     * @var string $languageCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('language-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $languageCode;
    
    /**
     * The number of seconds taken to load the page (from initial request until DOM ready)
     * 
     * @var float $loadTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('load-time')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $loadTime;
    
    /**
     * The document MIME type
     * 
     * @var string $mimeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('mime-type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $mimeType;
    
    /**
     * Map containing all the HTTP response headers the URL responded with
     * 
     * @var array<string, string> $responseHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('response-headers')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $responseHeaders;
    
    /**
     * Map containing details of the TLS/SSL setup
     * 
     * @var array<string, string> $securityDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('security-details')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $securityDetails;
    
    /**
     * The HTTP servers IP address
     * 
     * @var string $serverIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverIp;
    
    /**
     * The document title
     * 
     * @var string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
    /**
     * The page URL
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->content = "";
		$this->elements = [];
		$this->errorMessage = "";
		$this->execResults = [];
		$this->httpRedirectUrl = "";
		$this->httpStatusCode = 0;
		$this->httpStatusMessage = "";
		$this->isError = false;
		$this->isHttpOk = false;
		$this->isHttpRedirect = false;
		$this->isSecure = false;
		$this->isTimeout = false;
		$this->languageCode = "";
		$this->loadTime = 0;
		$this->mimeType = "";
		$this->responseHeaders = [];
		$this->securityDetails = [];
		$this->serverIp = "";
		$this->title = "";
		$this->url = "";
	}
}
