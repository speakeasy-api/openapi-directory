<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetIceServerConfigRequestBody
{
    /**
     * The ARN of the signaling channel to be used for the peer-to-peer connection between configured peers. 
     * 
     * @var string $channelARN
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChannelARN')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $channelARN;
    
    /**
     * Unique identifier for the viewer. Must be unique within the signaling channel.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ClientId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Specifies the desired service. Currently, <code>TURN</code> is the only valid value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetIceServerConfigRequestBodyServiceEnum $service
     */
	#[\JMS\Serializer\Annotation\SerializedName('Service')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetIceServerConfigRequestBodyServiceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetIceServerConfigRequestBodyServiceEnum $service = null;
    
    /**
     * An optional user ID to be associated with the credentials.
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('Username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->channelARN = "";
		$this->clientId = null;
		$this->service = null;
		$this->username = null;
	}
}
