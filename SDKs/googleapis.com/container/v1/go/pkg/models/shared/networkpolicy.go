// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NetworkPolicyProviderEnum - The selected network policy provider.
type NetworkPolicyProviderEnum string

const (
	NetworkPolicyProviderEnumProviderUnspecified NetworkPolicyProviderEnum = "PROVIDER_UNSPECIFIED"
	NetworkPolicyProviderEnumCalico              NetworkPolicyProviderEnum = "CALICO"
)

func (e NetworkPolicyProviderEnum) ToPointer() *NetworkPolicyProviderEnum {
	return &e
}

func (e *NetworkPolicyProviderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROVIDER_UNSPECIFIED":
		fallthrough
	case "CALICO":
		*e = NetworkPolicyProviderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkPolicyProviderEnum: %v", v)
	}
}

// NetworkPolicy - Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
type NetworkPolicy struct {
	// Whether network policy is enabled on the cluster.
	Enabled *bool `json:"enabled,omitempty"`
	// The selected network policy provider.
	Provider *NetworkPolicyProviderEnum `json:"provider,omitempty"`
}
