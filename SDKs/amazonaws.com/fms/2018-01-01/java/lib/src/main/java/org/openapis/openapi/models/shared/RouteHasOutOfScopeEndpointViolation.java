/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RouteHasOutOfScopeEndpointViolation - Contains details about the route endpoint that violates the policy scope.
 */
public class RouteHasOutOfScopeEndpointViolation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrentFirewallSubnetRouteTable")
    public String currentFirewallSubnetRouteTable;

    public RouteHasOutOfScopeEndpointViolation withCurrentFirewallSubnetRouteTable(String currentFirewallSubnetRouteTable) {
        this.currentFirewallSubnetRouteTable = currentFirewallSubnetRouteTable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrentInternetGatewayRouteTable")
    public String currentInternetGatewayRouteTable;

    public RouteHasOutOfScopeEndpointViolation withCurrentInternetGatewayRouteTable(String currentInternetGatewayRouteTable) {
        this.currentInternetGatewayRouteTable = currentInternetGatewayRouteTable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FirewallSubnetId")
    public String firewallSubnetId;

    public RouteHasOutOfScopeEndpointViolation withFirewallSubnetId(String firewallSubnetId) {
        this.firewallSubnetId = firewallSubnetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FirewallSubnetRoutes")
    public Route[] firewallSubnetRoutes;

    public RouteHasOutOfScopeEndpointViolation withFirewallSubnetRoutes(Route[] firewallSubnetRoutes) {
        this.firewallSubnetRoutes = firewallSubnetRoutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InternetGatewayId")
    public String internetGatewayId;

    public RouteHasOutOfScopeEndpointViolation withInternetGatewayId(String internetGatewayId) {
        this.internetGatewayId = internetGatewayId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InternetGatewayRoutes")
    public Route[] internetGatewayRoutes;

    public RouteHasOutOfScopeEndpointViolation withInternetGatewayRoutes(Route[] internetGatewayRoutes) {
        this.internetGatewayRoutes = internetGatewayRoutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RouteTableId")
    public String routeTableId;

    public RouteHasOutOfScopeEndpointViolation withRouteTableId(String routeTableId) {
        this.routeTableId = routeTableId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubnetAvailabilityZone")
    public String subnetAvailabilityZone;

    public RouteHasOutOfScopeEndpointViolation withSubnetAvailabilityZone(String subnetAvailabilityZone) {
        this.subnetAvailabilityZone = subnetAvailabilityZone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubnetAvailabilityZoneId")
    public String subnetAvailabilityZoneId;

    public RouteHasOutOfScopeEndpointViolation withSubnetAvailabilityZoneId(String subnetAvailabilityZoneId) {
        this.subnetAvailabilityZoneId = subnetAvailabilityZoneId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubnetId")
    public String subnetId;

    public RouteHasOutOfScopeEndpointViolation withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ViolatingRoutes")
    public Route[] violatingRoutes;

    public RouteHasOutOfScopeEndpointViolation withViolatingRoutes(Route[] violatingRoutes) {
        this.violatingRoutes = violatingRoutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcId")
    public String vpcId;

    public RouteHasOutOfScopeEndpointViolation withVpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }
    
    public RouteHasOutOfScopeEndpointViolation(){}
}
