// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListComponentsXAmzTargetEnum
type ListComponentsXAmzTargetEnum string

const (
	ListComponentsXAmzTargetEnumEc2WindowsBarleyServiceListComponents ListComponentsXAmzTargetEnum = "EC2WindowsBarleyService.ListComponents"
)

func (e ListComponentsXAmzTargetEnum) ToPointer() *ListComponentsXAmzTargetEnum {
	return &e
}

func (e *ListComponentsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EC2WindowsBarleyService.ListComponents":
		*e = ListComponentsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListComponentsXAmzTargetEnum: %v", v)
	}
}

type ListComponentsRequest struct {
	ListComponentsRequest shared.ListComponentsRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                      `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListComponentsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListComponentsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListComponentsResponse *shared.ListComponentsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
