/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class SaveSupplyLotSaveSupplyLot extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dateOfSupplyUtc" })
  dateOfSupplyUtc: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keepSellingAfterExpiration" })
  keepSellingAfterExpiration: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity: number;
}

export class SaveSupplyLotRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: SaveSupplyLotSaveSupplyLot;

  /**
   * ID of the SKU whose availability is being scheduled.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=skuId",
  })
  skuId: string;

  /**
   * ID of the Supply Lot in which the SKU's scheduling should be considered.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=supplyLotId",
  })
  supplyLotId: string;

  /**
   * ID of the warehouse where the SKU will arrive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=warehouseId",
  })
  warehouseId: string;
}

export class SaveSupplyLotResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
