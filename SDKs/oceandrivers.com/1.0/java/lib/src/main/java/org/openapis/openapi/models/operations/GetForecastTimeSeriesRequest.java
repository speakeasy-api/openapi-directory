/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetForecastTimeSeriesRequest {
    /**
     * optional number of days in string. Will be added to init forecast date
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=days")
    public Integer days;
    public GetForecastTimeSeriesRequest withDays(Integer days) {
        this.days = days;
        return this;
    }
    
    /**
     * end date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endtime")
    public String endtime;
    public GetForecastTimeSeriesRequest withEndtime(String endtime) {
        this.endtime = endtime;
        return this;
    }
    
    /**
     * Direct file I want to extract
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=entryid")
    public String entryid;
    public GetForecastTimeSeriesRequest withEntryid(String entryid) {
        this.entryid = entryid;
        return this;
    }
    
    /**
     * optional number of hours in string. Will be added to init forecast date
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=hours")
    public Integer hours;
    public GetForecastTimeSeriesRequest withHours(Integer hours) {
        this.hours = hours;
        return this;
    }
    
    /**
     * initial date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=inittime")
    public String inittime;
    public GetForecastTimeSeriesRequest withInittime(String inittime) {
        this.inittime = inittime;
        return this;
    }
    
    /**
     * latitude for the forecast
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=latitude")
    public Float latitude;
    public GetForecastTimeSeriesRequest withLatitude(Float latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * longitude for the forecast
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=longitude")
    public Float longitude;
    public GetForecastTimeSeriesRequest withLongitude(Float longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     *  Comma separated values for the wave parameteres height,direction,period
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=wave")
    public String wave;
    public GetForecastTimeSeriesRequest withWave(String wave) {
        this.wave = wave;
        return this;
    }
    
    /**
     *  Comma separated values for the weather parameteres temperature,rain,wind_u,wind_v,gust,pressure,cloud,humidity&amp;wave=height,direction,period
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=weather")
    public String weather;
    public GetForecastTimeSeriesRequest withWeather(String weather) {
        this.weather = weather;
        return this;
    }
    
}
