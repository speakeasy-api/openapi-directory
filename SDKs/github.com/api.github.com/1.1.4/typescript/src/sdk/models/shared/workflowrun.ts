/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MinimalRepository } from "./minimalrepository";
import { NullableSimpleCommit } from "./nullablesimplecommit";
import { PullRequestMinimal } from "./pullrequestminimal";
import { ReferencedWorkflow } from "./referencedworkflow";
import { SimpleUser } from "./simpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An invocation of a workflow
 */
export class WorkflowRun extends SpeakeasyBase {
  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor" })
  @Type(() => SimpleUser)
  actor?: SimpleUser;

  /**
   * The URL to the artifacts for the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "artifacts_url" })
  artifactsUrl: string;

  /**
   * The URL to cancel the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancel_url" })
  cancelUrl: string;

  /**
   * The ID of the associated check suite.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "check_suite_id" })
  checkSuiteId?: number;

  /**
   * The node ID of the associated check suite.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "check_suite_node_id" })
  checkSuiteNodeId?: string;

  /**
   * The URL to the associated check suite.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "check_suite_url" })
  checkSuiteUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conclusion" })
  conclusion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The event-specific title associated with the run or the run-name if set, or the value of `run-name` if it is set in the workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_title" })
  displayTitle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event: string;

  @SpeakeasyMetadata()
  @Expose({ name: "head_branch" })
  headBranch: string;

  /**
   * A commit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "head_commit" })
  @Type(() => NullableSimpleCommit)
  headCommit: NullableSimpleCommit;

  /**
   * Minimal Repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "head_repository" })
  @Type(() => MinimalRepository)
  headRepository: MinimalRepository;

  @SpeakeasyMetadata()
  @Expose({ name: "head_repository_id" })
  headRepositoryId?: number;

  /**
   * The SHA of the head commit that points to the version of the workflow being run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "head_sha" })
  headSha: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * The ID of the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The URL to the jobs for the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobs_url" })
  jobsUrl: string;

  /**
   * The URL to download the logs for the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logs_url" })
  logsUrl: string;

  /**
   * The name of the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  /**
   * The full path of the workflow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * The URL to the previous attempted run of this workflow, if one exists.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_attempt_url" })
  previousAttemptUrl?: string;

  @SpeakeasyMetadata({ elemType: PullRequestMinimal })
  @Expose({ name: "pull_requests" })
  @Type(() => PullRequestMinimal)
  pullRequests: PullRequestMinimal[];

  @SpeakeasyMetadata({ elemType: ReferencedWorkflow })
  @Expose({ name: "referenced_workflows" })
  @Type(() => ReferencedWorkflow)
  referencedWorkflows?: ReferencedWorkflow[];

  /**
   * Minimal Repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  @Type(() => MinimalRepository)
  repository: MinimalRepository;

  /**
   * The URL to rerun the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rerun_url" })
  rerunUrl: string;

  /**
   * Attempt number of the run, 1 for first attempt and higher if the workflow was re-run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "run_attempt" })
  runAttempt?: number;

  /**
   * The auto incrementing run number for the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "run_number" })
  runNumber: number;

  /**
   * The start time of the latest run. Resets on re-run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "run_started_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  runStartedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggering_actor" })
  @Type(() => SimpleUser)
  triggeringActor?: SimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * The URL to the workflow run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * The ID of the parent workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflow_id" })
  workflowId: number;

  /**
   * The URL to the workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflow_url" })
  workflowUrl: string;
}
