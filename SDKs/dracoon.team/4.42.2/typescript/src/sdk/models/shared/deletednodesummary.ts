/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Node type
 */
export enum DeletedNodeSummaryTypeEnum {
  Folder = "folder",
  File = "file",
}

/**
 * Deleted node information (Deleted node can be a folder or file)
 */
export class DeletedNodeSummary extends SpeakeasyBase {
  /**
   * Number of deleted versions of this file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cntVersions" })
  cntVersions: number;

  /**
   * First deleted version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstDeletedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstDeletedAt: Date;

  /**
   * Last deleted version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastDeletedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastDeletedAt: Date;

  /**
   * Node ID of last deleted version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastDeletedNodeId" })
  lastDeletedNodeId: number;

  /**
   * Node name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Parent node ID (room or folder)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentId" })
  parentId: number;

  /**
   * Parent node path
   *
   * @remarks
   *
   * `/` if node is a root node (room)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentPath" })
  parentPath: string;

  /**
   * &#128640; Since v4.37.0
   *
   * @remarks
   *
   * Reference ID. Identical across all versions of a file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referenceId" })
  referenceId?: number;

  /**
   * &#128640; Since v4.22.0
   *
   * @remarks
   *
   * Time the node was created on external file system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampCreation" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestampCreation?: Date;

  /**
   * &#128640; Since v4.22.0
   *
   * @remarks
   *
   * Time the content of a node was last modified on external file system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampModification" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestampModification?: Date;

  /**
   * Node type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: DeletedNodeSummaryTypeEnum;
}
