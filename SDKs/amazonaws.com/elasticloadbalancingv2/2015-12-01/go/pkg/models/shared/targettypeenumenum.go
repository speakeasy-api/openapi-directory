// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetTypeEnumEnum string

const (
	TargetTypeEnumEnumInstance TargetTypeEnumEnum = "instance"
	TargetTypeEnumEnumIP       TargetTypeEnumEnum = "ip"
	TargetTypeEnumEnumLambda   TargetTypeEnumEnum = "lambda"
	TargetTypeEnumEnumAlb      TargetTypeEnumEnum = "alb"
)

func (e TargetTypeEnumEnum) ToPointer() *TargetTypeEnumEnum {
	return &e
}

func (e *TargetTypeEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "instance":
		fallthrough
	case "ip":
		fallthrough
	case "lambda":
		fallthrough
	case "alb":
		*e = TargetTypeEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetTypeEnumEnum: %v", v)
	}
}
