/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateUsageChargeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

export class CreateUsageChargeRequestBodyUsageCharge extends SpeakeasyBase {
  /**
   * 従量課金の発生理由。使用可能文字は ASCII, JIS X 0208, JIS X 0201, JIS X 0212に限ります。（[デベロッパー](https://developer.shop-pro.jp) ページに掲載される各アプリの「従量課金」一覧で登録内容を確認できます。カラーミーショップ側がこのパラメータを参照して課金の内容を確認することがあります。）
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * ポイント数（税抜）。100 円以上 100 万円以下が指定可能。このポイントに消費税を加算してショップオーナーに請求します。
   */
  @SpeakeasyMetadata()
  @Expose({ name: "point" })
  point: number;
}

/**
 * 従量課金データ
 */
export class CreateUsageChargeRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "usage_charge" })
  @Type(() => CreateUsageChargeRequestBodyUsageCharge)
  usageCharge?: CreateUsageChargeRequestBodyUsageCharge;
}

export class CreateUsageChargeRequest extends SpeakeasyBase {
  /**
   * 従量課金データ
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateUsageChargeRequestBody;

  /**
   * アンインストール後の従量課金の精算をする際に、 `Authorization` ヘッダへアクセストークンを指定する代わりにこのヘッダを指定することで、このAPIを実行することができます。
   *
   * @remarks
   * インストール中は指定不要で、アンインストール後のみ必須となります。
   * アンインストールフックで通知される `usage_charge.api_token` の値を指定してください。
   * このヘッダは、アンインストールフックで通知される `usage_charge.closing_on` まで有効です。この期間を過ぎると従量課金を精算できなくなりますのでご注意ください。詳しくは [アプリのアンインストール](#section/API/アプリのアンインストール) をご確認ください。
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Appstore-Usage-Charge-Token",
  })
  xAppstoreUsageChargeToken?: string;

  /**
   * 課金契約ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=recurringApplicationChargeId",
  })
  recurringApplicationChargeId: string;
}

export class CreateUsageCharge201ApplicationJSONUsageCharge extends SpeakeasyBase {
  /**
   * 従量課金発生理由
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * 従量課金ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * 作成日時
   */
  @SpeakeasyMetadata()
  @Expose({ name: "make_date" })
  makeDate?: number;

  /**
   * ポイント請求額(税抜)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "point" })
  point?: number;

  /**
   * 更新日時
   */
  @SpeakeasyMetadata()
  @Expose({ name: "update_date" })
  updateDate?: number;
}

export class CreateUsageCharge201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "usage_charge" })
  @Type(() => CreateUsageCharge201ApplicationJSONUsageCharge)
  usageCharge?: CreateUsageCharge201ApplicationJSONUsageCharge;
}

export class CreateUsageChargeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  createUsageCharge201ApplicationJSONObject?: CreateUsageCharge201ApplicationJSON;
}
