"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import jobcommunicationdto as shared_jobcommunicationdto
from ..shared import jobdatesdto as shared_jobdatesdto
from ..shared import jobdocumentsdto as shared_jobdocumentsdto
from ..shared import jobfilesdto as shared_jobfilesdto
from ..shared import joblanguagecombinationdto as shared_joblanguagecombinationdto
from ..shared import steptypedto as shared_steptypedto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobDto:
    r"""Success"""
    
    communication: Optional[shared_jobcommunicationdto.JobCommunicationDto] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('communication'), 'exclude': lambda f: f is None }})  
    dates: Optional[shared_jobdatesdto.JobDatesDto] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dates'), 'exclude': lambda f: f is None }})  
    documents: Optional[shared_jobdocumentsdto.JobDocumentsDto] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documents'), 'exclude': lambda f: f is None }})  
    files: Optional[shared_jobfilesdto.JobFilesDto] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('files'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    id_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idNumber'), 'exclude': lambda f: f is None }})  
    languages: Optional[list[shared_joblanguagecombinationdto.JobLanguageCombinationDto]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languages'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    step_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stepNumber'), 'exclude': lambda f: f is None }})  
    step_type: Optional[shared_steptypedto.StepTypeDto] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stepType'), 'exclude': lambda f: f is None }})  
    vendor_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorId'), 'exclude': lambda f: f is None }})  
    vendor_price_profile_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorPriceProfileId'), 'exclude': lambda f: f is None }})  
    