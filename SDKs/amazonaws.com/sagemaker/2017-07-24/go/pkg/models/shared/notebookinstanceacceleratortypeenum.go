// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NotebookInstanceAcceleratorTypeEnum string

const (
	NotebookInstanceAcceleratorTypeEnumMlEia1Medium NotebookInstanceAcceleratorTypeEnum = "ml.eia1.medium"
	NotebookInstanceAcceleratorTypeEnumMlEia1Large  NotebookInstanceAcceleratorTypeEnum = "ml.eia1.large"
	NotebookInstanceAcceleratorTypeEnumMlEia1Xlarge NotebookInstanceAcceleratorTypeEnum = "ml.eia1.xlarge"
	NotebookInstanceAcceleratorTypeEnumMlEia2Medium NotebookInstanceAcceleratorTypeEnum = "ml.eia2.medium"
	NotebookInstanceAcceleratorTypeEnumMlEia2Large  NotebookInstanceAcceleratorTypeEnum = "ml.eia2.large"
	NotebookInstanceAcceleratorTypeEnumMlEia2Xlarge NotebookInstanceAcceleratorTypeEnum = "ml.eia2.xlarge"
)

func (e NotebookInstanceAcceleratorTypeEnum) ToPointer() *NotebookInstanceAcceleratorTypeEnum {
	return &e
}

func (e *NotebookInstanceAcceleratorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ml.eia1.medium":
		fallthrough
	case "ml.eia1.large":
		fallthrough
	case "ml.eia1.xlarge":
		fallthrough
	case "ml.eia2.medium":
		fallthrough
	case "ml.eia2.large":
		fallthrough
	case "ml.eia2.xlarge":
		*e = NotebookInstanceAcceleratorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotebookInstanceAcceleratorTypeEnum: %v", v)
	}
}
