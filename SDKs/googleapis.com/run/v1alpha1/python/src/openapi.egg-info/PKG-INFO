Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/googleapis.com/run/v1alpha1/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.RunNamespacesJobsCreateRequest(
    dollar_xgafv="2",
    job=shared.Job(
        api_version="provident",
        kind="distinctio",
        metadata=shared.ObjectMeta(
            annotations={
                "unde": "nulla",
                "corrupti": "illum",
                "vel": "error",
                "deserunt": "suscipit",
            },
            cluster_name="iure",
            creation_timestamp="magnam",
            deletion_grace_period_seconds=891773,
            deletion_timestamp="ipsa",
            finalizers=[
                "tempora",
                "suscipit",
                "molestiae",
                "minus",
            ],
            generate_name="placeat",
            generation=528895,
            labels={
                "excepturi": "nisi",
                "recusandae": "temporibus",
            },
            name="ab",
            namespace="quis",
            owner_references=[
                shared.OwnerReference(
                    api_version="deserunt",
                    block_owner_deletion=False,
                    controller=False,
                    kind="perferendis",
                    name="ipsam",
                    uid="repellendus",
                ),
            ],
            resource_version="sapiente",
            self_link="quo",
            uid="odit",
        ),
        spec=shared.JobSpec(
            active_deadline_seconds="at",
            backoff_limit=870088,
            completions=978619,
            parallelism=473608,
            template=shared.InstanceTemplateSpec(
                spec=shared.InstanceSpec(
                    active_deadline_seconds="quod",
                    containers=[
                        shared.Container(
                            args=[
                                "totam",
                                "porro",
                            ],
                            command=[
                                "dicta",
                                "nam",
                                "officia",
                            ],
                            env=[
                                shared.EnvVar(
                                    name="fugit",
                                    value="deleniti",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="hic",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="optio",
                                            ),
                                            name="totam",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="beatae",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="commodi",
                                            ),
                                            name="molestiae",
                                            optional=False,
                                        ),
                                    ),
                                ),
                                shared.EnvVar(
                                    name="modi",
                                    value="qui",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="impedit",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="cum",
                                            ),
                                            name="esse",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="ipsum",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="excepturi",
                                            ),
                                            name="aspernatur",
                                            optional=False,
                                        ),
                                    ),
                                ),
                                shared.EnvVar(
                                    name="perferendis",
                                    value="ad",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="natus",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="sed",
                                            ),
                                            name="iste",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="dolor",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="natus",
                                            ),
                                            name="laboriosam",
                                            optional=False,
                                        ),
                                    ),
                                ),
                            ],
                            env_from=[
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="saepe",
                                        ),
                                        name="fuga",
                                        optional=False,
                                    ),
                                    prefix="in",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="corporis",
                                        ),
                                        name="iste",
                                        optional=False,
                                    ),
                                ),
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="iure",
                                        ),
                                        name="saepe",
                                        optional=False,
                                    ),
                                    prefix="quidem",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="architecto",
                                        ),
                                        name="ipsa",
                                        optional=False,
                                    ),
                                ),
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="reiciendis",
                                        ),
                                        name="est",
                                        optional=False,
                                    ),
                                    prefix="mollitia",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="laborum",
                                        ),
                                        name="dolores",
                                        optional=False,
                                    ),
                                ),
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="dolorem",
                                        ),
                                        name="corporis",
                                        optional=False,
                                    ),
                                    prefix="explicabo",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="nobis",
                                        ),
                                        name="enim",
                                        optional=False,
                                    ),
                                ),
                            ],
                            image="omnis",
                            image_pull_policy="nemo",
                            liveness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "excepturi",
                                        "accusantium",
                                    ],
                                ),
                                failure_threshold=438601,
                                grpc=shared.GRPCAction(
                                    port=634274,
                                    service="doloribus",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="sapiente",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="mollitia",
                                            value="dolorem",
                                        ),
                                    ],
                                    path="culpa",
                                    scheme="consequuntur",
                                ),
                                initial_delay_seconds=995300,
                                period_seconds=653108,
                                success_threshold=581850,
                                tcp_socket=shared.TCPSocketAction(
                                    host="numquam",
                                    port=414369,
                                ),
                                timeout_seconds=466311,
                            ),
                            name="molestiae",
                            ports=[
                                shared.ContainerPort(
                                    container_port=623510,
                                    name="quia",
                                    protocol="quis",
                                ),
                            ],
                            readiness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "laborum",
                                    ],
                                ),
                                failure_threshold=656330,
                                grpc=shared.GRPCAction(
                                    port=317202,
                                    service="odit",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="quo",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="tenetur",
                                            value="ipsam",
                                        ),
                                    ],
                                    path="id",
                                    scheme="possimus",
                                ),
                                initial_delay_seconds=13571,
                                period_seconds=97101,
                                success_threshold=622846,
                                tcp_socket=shared.TCPSocketAction(
                                    host="temporibus",
                                    port=673660,
                                ),
                                timeout_seconds=96098,
                            ),
                            resources=shared.ResourceRequirements(
                                limits={
                                    "voluptatibus": "vero",
                                    "nihil": "praesentium",
                                    "voluptatibus": "ipsa",
                                    "omnis": "voluptate",
                                },
                                requests={
                                    "perferendis": "doloremque",
                                    "reprehenderit": "ut",
                                    "maiores": "dicta",
                                },
                            ),
                            security_context=shared.SecurityContext(
                                run_as_user=359444,
                            ),
                            startup_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "iusto",
                                        "dicta",
                                    ],
                                ),
                                failure_threshold=688661,
                                grpc=shared.GRPCAction(
                                    port=317983,
                                    service="accusamus",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="commodi",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="quae",
                                            value="ipsum",
                                        ),
                                        shared.HTTPHeader(
                                            name="quidem",
                                            value="molestias",
                                        ),
                                        shared.HTTPHeader(
                                            name="excepturi",
                                            value="pariatur",
                                        ),
                                        shared.HTTPHeader(
                                            name="modi",
                                            value="praesentium",
                                        ),
                                    ],
                                    path="rem",
                                    scheme="voluptates",
                                ),
                                initial_delay_seconds=93940,
                                period_seconds=921158,
                                success_threshold=575947,
                                tcp_socket=shared.TCPSocketAction(
                                    host="veritatis",
                                    port=929297,
                                ),
                                timeout_seconds=277718,
                            ),
                            termination_message_path="enim",
                            termination_message_policy="consequatur",
                            volume_mounts=[
                                shared.VolumeMount(
                                    mount_path="quibusdam",
                                    name="explicabo",
                                    read_only=False,
                                    sub_path="deserunt",
                                ),
                                shared.VolumeMount(
                                    mount_path="distinctio",
                                    name="quibusdam",
                                    read_only=False,
                                    sub_path="labore",
                                ),
                                shared.VolumeMount(
                                    mount_path="modi",
                                    name="qui",
                                    read_only=False,
                                    sub_path="aliquid",
                                ),
                            ],
                            working_dir="cupiditate",
                        ),
                        shared.Container(
                            args=[
                                "perferendis",
                                "magni",
                                "assumenda",
                            ],
                            command=[
                                "alias",
                                "fugit",
                            ],
                            env=[
                                shared.EnvVar(
                                    name="excepturi",
                                    value="tempora",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="facilis",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="tempore",
                                            ),
                                            name="labore",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="delectus",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="eum",
                                            ),
                                            name="non",
                                            optional=False,
                                        ),
                                    ),
                                ),
                                shared.EnvVar(
                                    name="eligendi",
                                    value="sint",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="aliquid",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="provident",
                                            ),
                                            name="necessitatibus",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="sint",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="officia",
                                            ),
                                            name="dolor",
                                            optional=False,
                                        ),
                                    ),
                                ),
                                shared.EnvVar(
                                    name="debitis",
                                    value="a",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="dolorum",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="in",
                                            ),
                                            name="in",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="illum",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="maiores",
                                            ),
                                            name="rerum",
                                            optional=False,
                                        ),
                                    ),
                                ),
                            ],
                            env_from=[
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="magnam",
                                        ),
                                        name="cumque",
                                        optional=False,
                                    ),
                                    prefix="facere",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="ea",
                                        ),
                                        name="aliquid",
                                        optional=False,
                                    ),
                                ),
                            ],
                            image="laborum",
                            image_pull_policy="accusamus",
                            liveness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "occaecati",
                                    ],
                                ),
                                failure_threshold=313218,
                                grpc=shared.GRPCAction(
                                    port=881736,
                                    service="delectus",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="quidem",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="nam",
                                            value="id",
                                        ),
                                        shared.HTTPHeader(
                                            name="blanditiis",
                                            value="deleniti",
                                        ),
                                        shared.HTTPHeader(
                                            name="sapiente",
                                            value="amet",
                                        ),
                                    ],
                                    path="deserunt",
                                    scheme="nisi",
                                ),
                                initial_delay_seconds=423855,
                                period_seconds=618809,
                                success_threshold=606393,
                                tcp_socket=shared.TCPSocketAction(
                                    host="molestiae",
                                    port=19193,
                                ),
                                timeout_seconds=470132,
                            ),
                            name="magnam",
                            ports=[
                                shared.ContainerPort(
                                    container_port=660174,
                                    name="labore",
                                    protocol="labore",
                                ),
                                shared.ContainerPort(
                                    container_port=383462,
                                    name="natus",
                                    protocol="nobis",
                                ),
                                shared.ContainerPort(
                                    container_port=428769,
                                    name="vero",
                                    protocol="aspernatur",
                                ),
                            ],
                            readiness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "magnam",
                                    ],
                                ),
                                failure_threshold=92373,
                                grpc=shared.GRPCAction(
                                    port=569965,
                                    service="ullam",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="provident",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="sint",
                                            value="accusantium",
                                        ),
                                        shared.HTTPHeader(
                                            name="mollitia",
                                            value="reiciendis",
                                        ),
                                        shared.HTTPHeader(
                                            name="mollitia",
                                            value="ad",
                                        ),
                                    ],
                                    path="eum",
                                    scheme="dolor",
                                ),
                                initial_delay_seconds=896547,
                                period_seconds=141264,
                                success_threshold=367562,
                                tcp_socket=shared.TCPSocketAction(
                                    host="quasi",
                                    port=435865,
                                ),
                                timeout_seconds=984043,
                            ),
                            resources=shared.ResourceRequirements(
                                limits={
                                    "eius": "maxime",
                                    "deleniti": "facilis",
                                    "in": "architecto",
                                    "architecto": "repudiandae",
                                },
                                requests={
                                    "expedita": "nihil",
                                    "repellat": "quibusdam",
                                },
                            ),
                            security_context=shared.SecurityContext(
                                run_as_user=149448,
                            ),
                            startup_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "pariatur",
                                        "accusantium",
                                        "consequuntur",
                                        "praesentium",
                                    ],
                                ),
                                failure_threshold=615560,
                                grpc=shared.GRPCAction(
                                    port=166847,
                                    service="sunt",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="quo",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="pariatur",
                                            value="maxime",
                                        ),
                                        shared.HTTPHeader(
                                            name="ea",
                                            value="excepturi",
                                        ),
                                        shared.HTTPHeader(
                                            name="odit",
                                            value="ea",
                                        ),
                                        shared.HTTPHeader(
                                            name="accusantium",
                                            value="ab",
                                        ),
                                    ],
                                    path="maiores",
                                    scheme="quidem",
                                ),
                                initial_delay_seconds=373291,
                                period_seconds=453543,
                                success_threshold=420075,
                                tcp_socket=shared.TCPSocketAction(
                                    host="nam",
                                    port=50588,
                                ),
                                timeout_seconds=866383,
                            ),
                            termination_message_path="nemo",
                            termination_message_policy="voluptatibus",
                            volume_mounts=[
                                shared.VolumeMount(
                                    mount_path="fugiat",
                                    name="amet",
                                    read_only=False,
                                    sub_path="aut",
                                ),
                            ],
                            working_dir="cumque",
                        ),
                        shared.Container(
                            args=[
                                "hic",
                                "libero",
                            ],
                            command=[
                                "dolores",
                                "quis",
                                "totam",
                            ],
                            env=[
                                shared.EnvVar(
                                    name="eaque",
                                    value="quis",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="nesciunt",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="eos",
                                            ),
                                            name="perferendis",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="dolores",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="minus",
                                            ),
                                            name="quam",
                                            optional=False,
                                        ),
                                    ),
                                ),
                                shared.EnvVar(
                                    name="dolor",
                                    value="vero",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="nostrum",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="hic",
                                            ),
                                            name="recusandae",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="omnis",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="facilis",
                                            ),
                                            name="perspiciatis",
                                            optional=False,
                                        ),
                                    ),
                                ),
                            ],
                            env_from=[
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="porro",
                                        ),
                                        name="consequuntur",
                                        optional=False,
                                    ),
                                    prefix="blanditiis",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="error",
                                        ),
                                        name="eaque",
                                        optional=False,
                                    ),
                                ),
                            ],
                            image="occaecati",
                            image_pull_policy="rerum",
                            liveness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "asperiores",
                                    ],
                                ),
                                failure_threshold=934214,
                                grpc=shared.GRPCAction(
                                    port=267262,
                                    service="iste",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="dolorum",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="pariatur",
                                            value="provident",
                                        ),
                                        shared.HTTPHeader(
                                            name="nobis",
                                            value="libero",
                                        ),
                                        shared.HTTPHeader(
                                            name="delectus",
                                            value="quaerat",
                                        ),
                                    ],
                                    path="quos",
                                    scheme="aliquid",
                                ),
                                initial_delay_seconds=212390,
                                period_seconds=209843,
                                success_threshold=222443,
                                tcp_socket=shared.TCPSocketAction(
                                    host="qui",
                                    port=218749,
                                ),
                                timeout_seconds=944373,
                            ),
                            name="excepturi",
                            ports=[
                                shared.ContainerPort(
                                    container_port=452109,
                                    name="dignissimos",
                                    protocol="reiciendis",
                                ),
                                shared.ContainerPort(
                                    container_port=227414,
                                    name="dolorum",
                                    protocol="numquam",
                                ),
                                shared.ContainerPort(
                                    container_port=85295,
                                    name="ipsa",
                                    protocol="ipsa",
                                ),
                            ],
                            readiness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "odio",
                                        "quaerat",
                                    ],
                                ),
                                failure_threshold=881005,
                                grpc=shared.GRPCAction(
                                    port=696344,
                                    service="voluptatibus",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="voluptas",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="eos",
                                            value="atque",
                                        ),
                                        shared.HTTPHeader(
                                            name="sit",
                                            value="fugiat",
                                        ),
                                        shared.HTTPHeader(
                                            name="ab",
                                            value="soluta",
                                        ),
                                    ],
                                    path="dolorum",
                                    scheme="iusto",
                                ),
                                initial_delay_seconds=453697,
                                period_seconds=677082,
                                success_threshold=536579,
                                tcp_socket=shared.TCPSocketAction(
                                    host="omnis",
                                    port=896672,
                                ),
                                timeout_seconds=714697,
                            ),
                            resources=shared.ResourceRequirements(
                                limits={
                                    "nihil": "ipsum",
                                    "voluptate": "id",
                                    "saepe": "eius",
                                    "aspernatur": "perferendis",
                                },
                                requests={
                                    "optio": "accusamus",
                                },
                            ),
                            security_context=shared.SecurityContext(
                                run_as_user=320017,
                            ),
                            startup_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "suscipit",
                                        "deserunt",
                                        "provident",
                                        "minima",
                                    ],
                                ),
                                failure_threshold=831049,
                                grpc=shared.GRPCAction(
                                    port=519711,
                                    service="similique",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="alias",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="quaerat",
                                            value="tempora",
                                        ),
                                        shared.HTTPHeader(
                                            name="vel",
                                            value="quod",
                                        ),
                                        shared.HTTPHeader(
                                            name="officiis",
                                            value="qui",
                                        ),
                                        shared.HTTPHeader(
                                            name="dolorum",
                                            value="a",
                                        ),
                                    ],
                                    path="esse",
                                    scheme="harum",
                                ),
                                initial_delay_seconds=483409,
                                period_seconds=215507,
                                success_threshold=788740,
                                tcp_socket=shared.TCPSocketAction(
                                    host="tenetur",
                                    port=229442,
                                ),
                                timeout_seconds=730856,
                            ),
                            termination_message_path="accusamus",
                            termination_message_policy="numquam",
                            volume_mounts=[
                                shared.VolumeMount(
                                    mount_path="dolorem",
                                    name="sapiente",
                                    read_only=False,
                                    sub_path="totam",
                                ),
                                shared.VolumeMount(
                                    mount_path="nihil",
                                    name="sit",
                                    read_only=False,
                                    sub_path="expedita",
                                ),
                            ],
                            working_dir="neque",
                        ),
                        shared.Container(
                            args=[
                                "vel",
                            ],
                            command=[
                                "voluptas",
                                "deserunt",
                                "quam",
                            ],
                            env=[
                                shared.EnvVar(
                                    name="incidunt",
                                    value="qui",
                                    value_from=shared.EnvVarSource(
                                        config_map_key_ref=shared.ConfigMapKeySelector(
                                            key="cupiditate",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="maxime",
                                            ),
                                            name="pariatur",
                                            optional=False,
                                        ),
                                        secret_key_ref=shared.SecretKeySelector(
                                            key="soluta",
                                            local_object_reference=shared.LocalObjectReference(
                                                name="dicta",
                                            ),
                                            name="laborum",
                                            optional=False,
                                        ),
                                    ),
                                ),
                            ],
                            env_from=[
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="incidunt",
                                        ),
                                        name="aspernatur",
                                        optional=False,
                                    ),
                                    prefix="dolores",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="distinctio",
                                        ),
                                        name="facilis",
                                        optional=False,
                                    ),
                                ),
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="aliquid",
                                        ),
                                        name="quam",
                                        optional=False,
                                    ),
                                    prefix="molestias",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="temporibus",
                                        ),
                                        name="qui",
                                        optional=False,
                                    ),
                                ),
                                shared.EnvFromSource(
                                    config_map_ref=shared.ConfigMapEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="neque",
                                        ),
                                        name="fugit",
                                        optional=False,
                                    ),
                                    prefix="magni",
                                    secret_ref=shared.SecretEnvSource(
                                        local_object_reference=shared.LocalObjectReference(
                                            name="odio",
                                        ),
                                        name="sunt",
                                        optional=False,
                                    ),
                                ),
                            ],
                            image="ullam",
                            image_pull_policy="nam",
                            liveness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "voluptatem",
                                        "cumque",
                                        "soluta",
                                        "nobis",
                                    ],
                                ),
                                failure_threshold=92596,
                                grpc=shared.GRPCAction(
                                    port=903720,
                                    service="ipsum",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="veritatis",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="quos",
                                            value="tempore",
                                        ),
                                        shared.HTTPHeader(
                                            name="cupiditate",
                                            value="aperiam",
                                        ),
                                        shared.HTTPHeader(
                                            name="delectus",
                                            value="dolorem",
                                        ),
                                    ],
                                    path="dolore",
                                    scheme="labore",
                                ),
                                initial_delay_seconds=240829,
                                period_seconds=677263,
                                success_threshold=100294,
                                tcp_socket=shared.TCPSocketAction(
                                    host="quae",
                                    port=16429,
                                ),
                                timeout_seconds=555649,
                            ),
                            name="itaque",
                            ports=[
                                shared.ContainerPort(
                                    container_port=669917,
                                    name="repellendus",
                                    protocol="porro",
                                ),
                            ],
                            readiness_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "ut",
                                        "facilis",
                                        "cupiditate",
                                        "qui",
                                    ],
                                ),
                                failure_threshold=63955,
                                grpc=shared.GRPCAction(
                                    port=512393,
                                    service="odio",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="occaecati",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="quisquam",
                                            value="vero",
                                        ),
                                        shared.HTTPHeader(
                                            name="omnis",
                                            value="quis",
                                        ),
                                        shared.HTTPHeader(
                                            name="ipsum",
                                            value="delectus",
                                        ),
                                        shared.HTTPHeader(
                                            name="voluptate",
                                            value="consectetur",
                                        ),
                                    ],
                                    path="vero",
                                    scheme="tenetur",
                                ),
                                initial_delay_seconds=492268,
                                period_seconds=941378,
                                success_threshold=715561,
                                tcp_socket=shared.TCPSocketAction(
                                    host="quod",
                                    port=486160,
                                ),
                                timeout_seconds=630448,
                            ),
                            resources=shared.ResourceRequirements(
                                limits={
                                    "vero": "ducimus",
                                    "dolore": "quibusdam",
                                    "illum": "sequi",
                                },
                                requests={
                                    "impedit": "aut",
                                    "voluptatibus": "exercitationem",
                                    "nulla": "fugit",
                                },
                            ),
                            security_context=shared.SecurityContext(
                                run_as_user=780427,
                            ),
                            startup_probe=shared.Probe(
                                exec=shared.ExecAction(
                                    command=[
                                        "doloribus",
                                        "iusto",
                                        "eligendi",
                                        "ducimus",
                                    ],
                                ),
                                failure_threshold=4048,
                                grpc=shared.GRPCAction(
                                    port=639473,
                                    service="tempora",
                                ),
                                http_get=shared.HTTPGetAction(
                                    host="ipsam",
                                    http_headers=[
                                        shared.HTTPHeader(
                                            name="aspernatur",
                                            value="vel",
                                        ),
                                        shared.HTTPHeader(
                                            name="possimus",
                                            value="magnam",
                                        ),
                                    ],
                                    path="ratione",
                                    scheme="ex",
                                ),
                                initial_delay_seconds=511319,
                                period_seconds=120657,
                                success_threshold=224317,
                                tcp_socket=shared.TCPSocketAction(
                                    host="maiores",
                                    port=97844,
                                ),
                                timeout_seconds=406120,
                            ),
                            termination_message_path="nulla",
                            termination_message_policy="excepturi",
                            volume_mounts=[
                                shared.VolumeMount(
                                    mount_path="nostrum",
                                    name="sapiente",
                                    read_only=False,
                                    sub_path="quisquam",
                                ),
                                shared.VolumeMount(
                                    mount_path="saepe",
                                    name="ea",
                                    read_only=False,
                                    sub_path="impedit",
                                ),
                                shared.VolumeMount(
                                    mount_path="corporis",
                                    name="veniam",
                                    read_only=False,
                                    sub_path="aliquid",
                                ),
                                shared.VolumeMount(
                                    mount_path="inventore",
                                    name="magnam",
                                    read_only=False,
                                    sub_path="ea",
                                ),
                            ],
                            working_dir="quo",
                        ),
                    ],
                    restart_policy="consectetur",
                    service_account_name="recusandae",
                    termination_grace_period_seconds="aspernatur",
                    volumes=[
                        shared.Volume(
                            config_map=shared.ConfigMapVolumeSource(
                                default_mode=53427,
                                items=[
                                    shared.KeyToPath(
                                        key="libero",
                                        mode=13948,
                                        path="aut",
                                    ),
                                    shared.KeyToPath(
                                        key="deleniti",
                                        mode=770581,
                                        path="aliquam",
                                    ),
                                    shared.KeyToPath(
                                        key="fugit",
                                        mode=882860,
                                        path="inventore",
                                    ),
                                    shared.KeyToPath(
                                        key="non",
                                        mode=89603,
                                        path="dolorum",
                                    ),
                                ],
                                name="laborum",
                                optional=False,
                            ),
                            name="placeat",
                            secret=shared.SecretVolumeSource(
                                default_mode=245367,
                                items=[
                                    shared.KeyToPath(
                                        key="autem",
                                        mode=752135,
                                        path="quas",
                                    ),
                                    shared.KeyToPath(
                                        key="assumenda",
                                        mode=860552,
                                        path="voluptas",
                                    ),
                                ],
                                optional=False,
                                secret_name="libero",
                            ),
                        ),
                        shared.Volume(
                            config_map=shared.ConfigMapVolumeSource(
                                default_mode=96549,
                                items=[
                                    shared.KeyToPath(
                                        key="numquam",
                                        mode=131482,
                                        path="provident",
                                    ),
                                    shared.KeyToPath(
                                        key="ipsa",
                                        mode=476477,
                                        path="magnam",
                                    ),
                                ],
                                name="odio",
                                optional=False,
                            ),
                            name="eius",
                            secret=shared.SecretVolumeSource(
                                default_mode=458515,
                                items=[
                                    shared.KeyToPath(
                                        key="rem",
                                        mode=683282,
                                        path="reprehenderit",
                                    ),
                                    shared.KeyToPath(
                                        key="quidem",
                                        mode=852635,
                                        path="ut",
                                    ),
                                ],
                                optional=False,
                                secret_name="eum",
                            ),
                        ),
                    ],
                ),
            ),
            ttl_seconds_after_finished=379927,
        ),
        status=shared.JobStatus(
            active=826871,
            completion_time="eos",
            conditions=[
                shared.JobCondition(
                    last_transition_time="quisquam",
                    message="veritatis",
                    reason="ipsa",
                    severity="id",
                    status="quidem",
                    type="neque",
                ),
                shared.JobCondition(
                    last_transition_time="quo",
                    message="illum",
                    reason="quo",
                    severity="fuga",
                    status="eius",
                    type="eos",
                ),
                shared.JobCondition(
                    last_transition_time="voluptas",
                    message="ab",
                    reason="cupiditate",
                    severity="consequatur",
                    status="tempora",
                    type="debitis",
                ),
            ],
            failed=370853,
            image_digest="aspernatur",
            instances=[
                shared.InstanceStatus(
                    completion_time="quo",
                    failed=459856,
                    index=925164,
                    last_attempt_result=shared.InstanceAttemptResult(
                        exit_code=44612,
                        status=shared.GoogleRPCStatus(
                            code=715179,
                            details=[
                                {
                                    "inventore": "nihil",
                                    "totam": "accusamus",
                                },
                                {
                                    "odio": "occaecati",
                                    "commodi": "sapiente",
                                },
                                {
                                    "deserunt": "molestiae",
                                },
                                {
                                    "porro": "eum",
                                },
                            ],
                            message="quas",
                        ),
                    ),
                    last_exit_code=510017,
                    restarted=159867,
                    start_time="deleniti",
                    succeeded=143829,
                ),
            ],
            observed_generation=681393,
            start_time="mollitia",
            succeeded=277596,
        ),
    ),
    access_token="atque",
    alt="json",
    callback="minima",
    fields_="nisi",
    key="fugit",
    oauth_token="sapiente",
    parent="consequuntur",
    pretty_print=False,
    quota_user="ratione",
    upload_type="explicabo",
    upload_protocol="saepe",
)
    
res = s.namespaces.run_namespaces_jobs_create(req, operations.RunNamespacesJobsCreateSecurity(
    oauth2="Bearer YOUR_ACCESS_TOKEN_HERE",
    oauth2c="Bearer YOUR_ACCESS_TOKEN_HERE",
))

if res.job is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### namespaces

* `run_namespaces_jobs_create` - Create a job.
* `run_namespaces_jobs_delete` - Delete a job.
* `run_namespaces_jobs_get` - Get information about a job.
* `run_namespaces_jobs_list` - List jobs.
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
