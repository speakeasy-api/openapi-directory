<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IndexEntity - Index is not used as an independent entity, it is retrieved as part of a Table entity.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IndexEntity
{
    /**
     * Custom engine specific features.
     * 
     * @var ?array<string, mixed> $customFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('customFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFeatures = null;
    
    /**
     * The name of the index.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Table columns used as part of the Index, for example B-TREE index should list the columns which constitutes the index.
     * 
     * @var ?array<string> $tableColumns
     */
	#[\JMS\Serializer\Annotation\SerializedName('tableColumns')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tableColumns = null;
    
    /**
     * Type of index, for example B-TREE.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Boolean value indicating whether the index is unique.
     * 
     * @var ?bool $unique
     */
	#[\JMS\Serializer\Annotation\SerializedName('unique')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $unique = null;
    
	public function __construct()
	{
		$this->customFeatures = null;
		$this->name = null;
		$this->tableColumns = null;
		$this->type = null;
		$this->unique = null;
	}
}
