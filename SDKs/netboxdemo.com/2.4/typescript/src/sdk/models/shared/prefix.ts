/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedRole } from "./nestedrole";
import { NestedSite } from "./nestedsite";
import { NestedTenant } from "./nestedtenant";
import { NestedVLAN } from "./nestedvlan";
import { NestedVRF } from "./nestedvrf";
import { Expose, Transform, Type } from "class-transformer";

export class PrefixStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class Prefix extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "family" })
  family?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * All IP addresses within this prefix are considered usable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_pool" })
  isPool?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  /**
   * IPv4 or IPv6 network with mask
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix: string;

  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  @Type(() => NestedRole)
  role?: NestedRole;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => NestedSite)
  site?: NestedSite;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => PrefixStatus)
  status?: PrefixStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "vlan" })
  @Type(() => NestedVLAN)
  vlan?: NestedVLAN;

  @SpeakeasyMetadata()
  @Expose({ name: "vrf" })
  @Type(() => NestedVRF)
  vrf?: NestedVRF;
}
