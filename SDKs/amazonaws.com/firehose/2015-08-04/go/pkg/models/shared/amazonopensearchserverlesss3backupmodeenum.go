// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AmazonOpenSearchServerlessS3BackupModeEnum string

const (
	AmazonOpenSearchServerlessS3BackupModeEnumFailedDocumentsOnly AmazonOpenSearchServerlessS3BackupModeEnum = "FailedDocumentsOnly"
	AmazonOpenSearchServerlessS3BackupModeEnumAllDocuments        AmazonOpenSearchServerlessS3BackupModeEnum = "AllDocuments"
)

func (e AmazonOpenSearchServerlessS3BackupModeEnum) ToPointer() *AmazonOpenSearchServerlessS3BackupModeEnum {
	return &e
}

func (e *AmazonOpenSearchServerlessS3BackupModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FailedDocumentsOnly":
		fallthrough
	case "AllDocuments":
		*e = AmazonOpenSearchServerlessS3BackupModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AmazonOpenSearchServerlessS3BackupModeEnum: %v", v)
	}
}
