/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InferenceExecutionStatusEnum } from "./inferenceexecutionstatusenum";
import { Expose, Transform } from "class-transformer";

export class ListInferenceExecutionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataEndTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dataEndTimeBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DataStartTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dataStartTimeAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSchedulerName" })
  inferenceSchedulerName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: InferenceExecutionStatusEnum;
}
