"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import piientitytype_enum as shared_piientitytype_enum
from ..shared import redactionoutput_enum as shared_redactionoutput_enum
from ..shared import redactiontype_enum as shared_redactiontype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContentRedaction:
    r"""Makes it possible to redact or flag specified personally identifiable information (PII) in your transcript. If you use <code>ContentRedaction</code>, you must also include the sub-parameters: <code>PiiEntityTypes</code>, <code>RedactionOutput</code>, and <code>RedactionType</code>."""
    
    redaction_output: shared_redactionoutput_enum.RedactionOutputEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RedactionOutput') }})  
    redaction_type: shared_redactiontype_enum.RedactionTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RedactionType') }})  
    pii_entity_types: Optional[list[shared_piientitytype_enum.PiiEntityTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PiiEntityTypes'), 'exclude': lambda f: f is None }})  
    