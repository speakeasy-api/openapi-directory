// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CallForDocumentClientManagementEnum string

const (
	CallForDocumentClientManagementEnumNo      CallForDocumentClientManagementEnum = "no"
	CallForDocumentClientManagementEnumManager CallForDocumentClientManagementEnum = "manager"
	CallForDocumentClientManagementEnumAdn     CallForDocumentClientManagementEnum = "adn"
)

func (e *CallForDocumentClientManagementEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "no":
		fallthrough
	case "manager":
		fallthrough
	case "adn":
		*e = CallForDocumentClientManagementEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CallForDocumentClientManagementEnum: %s", s)
	}
}

type CallForDocumentPlayerEnum string

const (
	CallForDocumentPlayerEnumGuest        CallForDocumentPlayerEnum = "guest"
	CallForDocumentPlayerEnumOwner        CallForDocumentPlayerEnum = "owner"
	CallForDocumentPlayerEnumManager      CallForDocumentPlayerEnum = "manager"
	CallForDocumentPlayerEnumAssistant    CallForDocumentPlayerEnum = "assistant"
	CallForDocumentPlayerEnumCollaborator CallForDocumentPlayerEnum = "collaborator"
)

func (e *CallForDocumentPlayerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "guest":
		fallthrough
	case "owner":
		fallthrough
	case "manager":
		fallthrough
	case "assistant":
		fallthrough
	case "collaborator":
		*e = CallForDocumentPlayerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CallForDocumentPlayerEnum: %s", s)
	}
}

// CallForDocument - Infos to invite
type CallForDocument struct {
	Categories       []string                             `json:"Categories,omitempty"`
	ClientManagement *CallForDocumentClientManagementEnum `json:"ClientManagement,omitempty"`
	Comment          *string                              `json:"Comment,omitempty"`
	Contact          *string                              `json:"Contact,omitempty"`
	IsAdmin          *bool                                `json:"IsAdmin,omitempty"`
	Message          *string                              `json:"Message,omitempty"`
	Player           *CallForDocumentPlayerEnum           `json:"Player,omitempty"`
	PlayerEnd        *string                              `json:"PlayerEnd,omitempty"`
	Signature        *string                              `json:"Signature,omitempty"`
	Subject          *string                              `json:"Subject,omitempty"`
}
