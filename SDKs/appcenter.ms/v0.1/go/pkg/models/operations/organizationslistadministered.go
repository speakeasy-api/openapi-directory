// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type OrganizationsListAdministeredSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum string

const (
	OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnumBadRequest          OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnumConflict            OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum = "Conflict"
	OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnumNotAcceptable       OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnumNotFound            OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum = "NotFound"
	OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnumInternalServerError OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnumUnauthorized        OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnumTooManyRequests     OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum) ToPointer() *OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type OrganizationsListAdministeredDefaultApplicationJSONError struct {
	Code    OrganizationsListAdministeredDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                           `json:"message"`
}

// OrganizationsListAdministeredDefaultApplicationJSON - Error
type OrganizationsListAdministeredDefaultApplicationJSON struct {
	Error OrganizationsListAdministeredDefaultApplicationJSONError `json:"error"`
}

// OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum - The creation origin of this organization
type OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum string

const (
	OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnumAppcenter OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum = "appcenter"
	OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnumHockeyapp OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum = "hockeyapp"
)

func (e OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum) ToPointer() *OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum {
	return &e
}

func (e *OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		*e = OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum: %v", v)
	}
}

type OrganizationsListAdministered200ApplicationJSONOrganizations struct {
	// The URL to a user-uploaded Avatar image
	AvatarURL *string `json:"avatar_url,omitempty"`
	// The creation date of this organization
	CreatedAt string `json:"created_at"`
	// The display name of the organization
	DisplayName string `json:"display_name"`
	// The internal unique id (UUID) of the organization.
	ID string `json:"id"`
	// The slug name of the organization
	Name string `json:"name"`
	// The creation origin of this organization
	Origin OrganizationsListAdministered200ApplicationJSONOrganizationsOriginEnum `json:"origin"`
	// The date the organization was last updated at
	UpdatedAt string `json:"updated_at"`
}

// OrganizationsListAdministered200ApplicationJSON - Success
type OrganizationsListAdministered200ApplicationJSON struct {
	Organizations OrganizationsListAdministered200ApplicationJSONOrganizations `json:"organizations"`
}

type OrganizationsListAdministeredResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	OrganizationsListAdministered200ApplicationJSONObject *OrganizationsListAdministered200ApplicationJSON
	// Error
	OrganizationsListAdministeredDefaultApplicationJSONObject *OrganizationsListAdministeredDefaultApplicationJSON
}
