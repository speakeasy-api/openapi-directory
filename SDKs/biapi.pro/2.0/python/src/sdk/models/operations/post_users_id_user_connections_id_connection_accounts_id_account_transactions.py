"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import transaction as shared_transaction
from datetime import date, datetime
from typing import Optional


@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsRequestBody:
    
    date_: date = dataclasses.field(metadata={'multipart_form': { 'field_name': 'date' }})
    r"""date of the transaction"""  
    original_wording: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'original_wording' }})
    r"""label of the transaction"""  
    value: int = dataclasses.field(metadata={'multipart_form': { 'field_name': 'value' }})
    r"""vallue of the transaction"""  
    active: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'active' }})
    r"""1 if the transaction should be taken into account by pfm services (default: 1)"""  
    coming: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'coming' }})
    r"""1 if the transaction has already been debited (default: 0)"""  
    date_scraped: Optional[datetime] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'date_scraped' }})
    r"""date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"""  
    id_account: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'id_account' }})
    r"""account of the transaction. If not supplied, it has to be given in the route"""  
    rdate: Optional[date] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'rdate' }})
    r"""realisation date of the transaction (default: value of date)"""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'state' }})
    r"""nature of the transaction (default: new)"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'type' }})
    r"""type of the transaction (default: unknown)"""  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsRequest:
    
    id_account: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_account', 'style': 'simple', 'explode': False }})  
    id_connection: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_connection', 'style': 'simple', 'explode': False }})  
    id_user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id_user', 'style': 'simple', 'explode': False }})
    r"""Hint: you can use 'me' or 'all'"""  
    request_body: PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    transaction: Optional[shared_transaction.Transaction] = dataclasses.field(default=None)
    r"""Successful POST on Transaction resource"""  
    