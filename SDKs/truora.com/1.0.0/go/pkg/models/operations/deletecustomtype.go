// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteCustomTypeSecurity struct {
	APIKey shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
}

// DeleteCustomTypeCountryEnum - Country where the custom type is valid
type DeleteCustomTypeCountryEnum string

const (
	DeleteCustomTypeCountryEnumBr  DeleteCustomTypeCountryEnum = "BR"
	DeleteCustomTypeCountryEnumCl  DeleteCustomTypeCountryEnum = "CL"
	DeleteCustomTypeCountryEnumCo  DeleteCustomTypeCountryEnum = "CO"
	DeleteCustomTypeCountryEnumCr  DeleteCustomTypeCountryEnum = "CR"
	DeleteCustomTypeCountryEnumEc  DeleteCustomTypeCountryEnum = "EC"
	DeleteCustomTypeCountryEnumMx  DeleteCustomTypeCountryEnum = "MX"
	DeleteCustomTypeCountryEnumPe  DeleteCustomTypeCountryEnum = "PE"
	DeleteCustomTypeCountryEnumAll DeleteCustomTypeCountryEnum = "ALL"
)

func (e *DeleteCustomTypeCountryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BR":
		fallthrough
	case "CL":
		fallthrough
	case "CO":
		fallthrough
	case "CR":
		fallthrough
	case "EC":
		fallthrough
	case "MX":
		fallthrough
	case "PE":
		fallthrough
	case "ALL":
		*e = DeleteCustomTypeCountryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteCustomTypeCountryEnum: %s", s)
	}
}

type DeleteCustomTypeQueryParams struct {
	// Country where the custom type is valid
	Country *DeleteCustomTypeCountryEnum `queryParam:"style=form,explode=true,name=country"`
	// Name of the custom type to be deleted
	Type string `queryParam:"style=form,explode=true,name=type"`
}

type DeleteCustomTypeRequest struct {
	QueryParams DeleteCustomTypeQueryParams
	Security    DeleteCustomTypeSecurity
}

type DeleteCustomTypeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
