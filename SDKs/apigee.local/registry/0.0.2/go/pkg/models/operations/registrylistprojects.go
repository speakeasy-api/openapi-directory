// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type RegistryListProjectsQueryParams struct {
	// An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// The maximum number of projects to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
	PageSize *string `queryParam:"style=form,explode=true,name=page_size"`
	// A page token, received from a previous `ListProjects` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListProjects` must match the call that provided the page token.
	PageToken *string `queryParam:"style=form,explode=true,name=page_token"`
}

type RegistryListProjectsRequest struct {
	QueryParams RegistryListProjectsQueryParams
}

type RegistryListProjectsResponse struct {
	ContentType string
	// OK
	ListProjectsResponse *shared.ListProjectsResponse
	StatusCode           int
	RawResponse          *http.Response
}
