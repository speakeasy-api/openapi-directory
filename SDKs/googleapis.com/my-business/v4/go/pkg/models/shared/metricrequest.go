// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MetricRequestMetricEnum - The requested metric.
type MetricRequestMetricEnum string

const (
	MetricRequestMetricEnumMetricUnspecified            MetricRequestMetricEnum = "METRIC_UNSPECIFIED"
	MetricRequestMetricEnumAll                          MetricRequestMetricEnum = "ALL"
	MetricRequestMetricEnumQueriesDirect                MetricRequestMetricEnum = "QUERIES_DIRECT"
	MetricRequestMetricEnumQueriesIndirect              MetricRequestMetricEnum = "QUERIES_INDIRECT"
	MetricRequestMetricEnumQueriesChain                 MetricRequestMetricEnum = "QUERIES_CHAIN"
	MetricRequestMetricEnumViewsMaps                    MetricRequestMetricEnum = "VIEWS_MAPS"
	MetricRequestMetricEnumViewsSearch                  MetricRequestMetricEnum = "VIEWS_SEARCH"
	MetricRequestMetricEnumActionsWebsite               MetricRequestMetricEnum = "ACTIONS_WEBSITE"
	MetricRequestMetricEnumActionsPhone                 MetricRequestMetricEnum = "ACTIONS_PHONE"
	MetricRequestMetricEnumActionsDrivingDirections     MetricRequestMetricEnum = "ACTIONS_DRIVING_DIRECTIONS"
	MetricRequestMetricEnumPhotosViewsMerchant          MetricRequestMetricEnum = "PHOTOS_VIEWS_MERCHANT"
	MetricRequestMetricEnumPhotosViewsCustomers         MetricRequestMetricEnum = "PHOTOS_VIEWS_CUSTOMERS"
	MetricRequestMetricEnumPhotosCountMerchant          MetricRequestMetricEnum = "PHOTOS_COUNT_MERCHANT"
	MetricRequestMetricEnumPhotosCountCustomers         MetricRequestMetricEnum = "PHOTOS_COUNT_CUSTOMERS"
	MetricRequestMetricEnumLocalPostViewsSearch         MetricRequestMetricEnum = "LOCAL_POST_VIEWS_SEARCH"
	MetricRequestMetricEnumLocalPostActionsCallToAction MetricRequestMetricEnum = "LOCAL_POST_ACTIONS_CALL_TO_ACTION"
)

func (e MetricRequestMetricEnum) ToPointer() *MetricRequestMetricEnum {
	return &e
}

func (e *MetricRequestMetricEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "METRIC_UNSPECIFIED":
		fallthrough
	case "ALL":
		fallthrough
	case "QUERIES_DIRECT":
		fallthrough
	case "QUERIES_INDIRECT":
		fallthrough
	case "QUERIES_CHAIN":
		fallthrough
	case "VIEWS_MAPS":
		fallthrough
	case "VIEWS_SEARCH":
		fallthrough
	case "ACTIONS_WEBSITE":
		fallthrough
	case "ACTIONS_PHONE":
		fallthrough
	case "ACTIONS_DRIVING_DIRECTIONS":
		fallthrough
	case "PHOTOS_VIEWS_MERCHANT":
		fallthrough
	case "PHOTOS_VIEWS_CUSTOMERS":
		fallthrough
	case "PHOTOS_COUNT_MERCHANT":
		fallthrough
	case "PHOTOS_COUNT_CUSTOMERS":
		fallthrough
	case "LOCAL_POST_VIEWS_SEARCH":
		fallthrough
	case "LOCAL_POST_ACTIONS_CALL_TO_ACTION":
		*e = MetricRequestMetricEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricRequestMetricEnum: %v", v)
	}
}

type MetricRequestOptionsEnum string

const (
	MetricRequestOptionsEnumMetricOptionUnspecified MetricRequestOptionsEnum = "METRIC_OPTION_UNSPECIFIED"
	MetricRequestOptionsEnumAggregatedTotal         MetricRequestOptionsEnum = "AGGREGATED_TOTAL"
	MetricRequestOptionsEnumAggregatedDaily         MetricRequestOptionsEnum = "AGGREGATED_DAILY"
	MetricRequestOptionsEnumBreakdownDayOfWeek      MetricRequestOptionsEnum = "BREAKDOWN_DAY_OF_WEEK"
	MetricRequestOptionsEnumBreakdownHourOfDay      MetricRequestOptionsEnum = "BREAKDOWN_HOUR_OF_DAY"
)

func (e MetricRequestOptionsEnum) ToPointer() *MetricRequestOptionsEnum {
	return &e
}

func (e *MetricRequestOptionsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "METRIC_OPTION_UNSPECIFIED":
		fallthrough
	case "AGGREGATED_TOTAL":
		fallthrough
	case "AGGREGATED_DAILY":
		fallthrough
	case "BREAKDOWN_DAY_OF_WEEK":
		fallthrough
	case "BREAKDOWN_HOUR_OF_DAY":
		*e = MetricRequestOptionsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricRequestOptionsEnum: %v", v)
	}
}

// MetricRequest - A request to return values for one metric and the options for how those values should be returned.
type MetricRequest struct {
	// The requested metric.
	Metric *MetricRequestMetricEnum `json:"metric,omitempty"`
	// How the values should appear when returned.
	Options []MetricRequestOptionsEnum `json:"options,omitempty"`
}
