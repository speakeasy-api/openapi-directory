/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The service the credentials are for.
 */
export enum CredentialTypeEnum {
  MiradoreApiKeyV1 = "miradore_api_key_v1",
  AwsAccessSecret = "aws_access_secret",
  CrowdstrikeApiKey = "crowdstrike_api_key",
  AzureClientSecret = "azure_client_secret",
  AzureUsernamePassword = "azure_username_password",
  CensysSearchApiKey = "censys_search_api_key",
  Snmpv2Community = "snmpv2_community",
  Snmpv3Credential = "snmpv3_credential",
  VmwareUsernamePassword = "vmware_username_password",
}

/**
 * credential details
 */
export class Credential extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "acl" })
  acl?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "cidrs" })
  cidrs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by_email" })
  createdByEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by_id" })
  createdById?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "global" })
  global?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_used_at" })
  lastUsedAt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_used_by_id" })
  lastUsedById?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The service the credentials are for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CredentialTypeEnum;
}
