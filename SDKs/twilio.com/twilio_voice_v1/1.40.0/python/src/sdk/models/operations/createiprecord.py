"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import voice_v1_ip_record as shared_voice_v1_ip_record
from typing import Optional

CREATE_IP_RECORD_SERVERS = [
	"https://voice.twilio.com",
]


@dataclasses.dataclass
class CreateIPRecordSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateIPRecordCreateIPRecordRequest:
    
    ip_address: str = dataclasses.field(metadata={'form': { 'field_name': 'IpAddress' }})
    r"""An IP address in dotted decimal notation, IPv4 only."""  
    cidr_prefix_length: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CidrPrefixLength' }})
    r"""An integer representing the length of the [CIDR](https://tools.ietf.org/html/rfc4632) prefix to use with this IP address. By default the entire IP address is used, which for IPv4 is value 32."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long."""  
    

@dataclasses.dataclass
class CreateIPRecordResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    voice_v1_ip_record: Optional[shared_voice_v1_ip_record.VoiceV1IPRecord] = dataclasses.field(default=None)
    r"""Created"""  
    