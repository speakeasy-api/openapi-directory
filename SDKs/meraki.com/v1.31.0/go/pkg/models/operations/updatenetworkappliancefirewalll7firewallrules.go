// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateNetworkApplianceFirewallL7FirewallRulesPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

// UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnum - 'Deny' traffic specified by this rule
type UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnum string

const (
	UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnumDeny UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnum = "deny"
)

func (e *UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deny":
		*e = UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnum: %s", s)
	}
}

// UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum - Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
type UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum string

const (
	UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnumApplication         UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "application"
	UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnumApplicationCategory UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "applicationCategory"
	UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnumHost                UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "host"
	UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnumIPRange             UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "ipRange"
	UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnumPort                UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "port"
)

func (e *UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "application":
		fallthrough
	case "applicationCategory":
		fallthrough
	case "host":
		fallthrough
	case "ipRange":
		fallthrough
	case "port":
		*e = UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum: %s", s)
	}
}

type UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRules struct {
	// 'Deny' traffic specified by this rule
	Policy *UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesPolicyEnum `json:"policy,omitempty"`
	// Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
	Type *UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRulesTypeEnum `json:"type,omitempty"`
	// The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.
	Value *string `json:"value,omitempty"`
}

type UpdateNetworkApplianceFirewallL7FirewallRulesRequestBody struct {
	// An ordered array of the MX L7 firewall rules
	Rules []UpdateNetworkApplianceFirewallL7FirewallRulesRequestBodyRules `json:"rules,omitempty"`
}

type UpdateNetworkApplianceFirewallL7FirewallRulesRequest struct {
	PathParams UpdateNetworkApplianceFirewallL7FirewallRulesPathParams
	Request    *UpdateNetworkApplianceFirewallL7FirewallRulesRequestBody `request:"mediaType=application/json"`
}

type UpdateNetworkApplianceFirewallL7FirewallRulesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkApplianceFirewallL7FirewallRules200ApplicationJSONObject map[string]interface{}
}
