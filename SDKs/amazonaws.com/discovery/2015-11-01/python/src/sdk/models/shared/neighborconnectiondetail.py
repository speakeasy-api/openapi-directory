"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NeighborConnectionDetail:
    r"""Details about neighboring servers."""
    
    connections_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectionsCount') }})  
    destination_server_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationServerId') }})  
    source_server_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceServerId') }})  
    destination_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationPort'), 'exclude': lambda f: f is None }})  
    transport_protocol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transportProtocol'), 'exclude': lambda f: f is None }})  
    