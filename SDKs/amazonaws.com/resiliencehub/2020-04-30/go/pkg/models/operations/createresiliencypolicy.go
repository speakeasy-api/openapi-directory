// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum - Specifies a high-level geographical location constraint for where your resilience policy data can be stored.
type CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum string

const (
	CreateResiliencyPolicyRequestBodyDataLocationConstraintEnumAnyLocation   CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum = "AnyLocation"
	CreateResiliencyPolicyRequestBodyDataLocationConstraintEnumSameContinent CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum = "SameContinent"
	CreateResiliencyPolicyRequestBodyDataLocationConstraintEnumSameCountry   CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum = "SameCountry"
)

func (e CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum) ToPointer() *CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum {
	return &e
}

func (e *CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AnyLocation":
		fallthrough
	case "SameContinent":
		fallthrough
	case "SameCountry":
		*e = CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum: %v", v)
	}
}

// CreateResiliencyPolicyRequestBodyTierEnum - The tier for this resiliency policy, ranging from the highest severity (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).
type CreateResiliencyPolicyRequestBodyTierEnum string

const (
	CreateResiliencyPolicyRequestBodyTierEnumMissionCritical CreateResiliencyPolicyRequestBodyTierEnum = "MissionCritical"
	CreateResiliencyPolicyRequestBodyTierEnumCritical        CreateResiliencyPolicyRequestBodyTierEnum = "Critical"
	CreateResiliencyPolicyRequestBodyTierEnumImportant       CreateResiliencyPolicyRequestBodyTierEnum = "Important"
	CreateResiliencyPolicyRequestBodyTierEnumCoreServices    CreateResiliencyPolicyRequestBodyTierEnum = "CoreServices"
	CreateResiliencyPolicyRequestBodyTierEnumNonCritical     CreateResiliencyPolicyRequestBodyTierEnum = "NonCritical"
)

func (e CreateResiliencyPolicyRequestBodyTierEnum) ToPointer() *CreateResiliencyPolicyRequestBodyTierEnum {
	return &e
}

func (e *CreateResiliencyPolicyRequestBodyTierEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MissionCritical":
		fallthrough
	case "Critical":
		fallthrough
	case "Important":
		fallthrough
	case "CoreServices":
		fallthrough
	case "NonCritical":
		*e = CreateResiliencyPolicyRequestBodyTierEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateResiliencyPolicyRequestBodyTierEnum: %v", v)
	}
}

type CreateResiliencyPolicyRequestBody struct {
	// Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.
	ClientToken *string `json:"clientToken,omitempty"`
	// Specifies a high-level geographical location constraint for where your resilience policy data can be stored.
	DataLocationConstraint *CreateResiliencyPolicyRequestBodyDataLocationConstraintEnum `json:"dataLocationConstraint,omitempty"`
	// The type of resiliency policy to be created, including the recovery time objective (RTO) and recovery point objective (RPO) in seconds.
	Policy map[string]shared.FailurePolicy `json:"policy"`
	// The description for the policy.
	PolicyDescription *string `json:"policyDescription,omitempty"`
	// The name of the policy
	PolicyName string `json:"policyName"`
	// The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key/value pair.
	Tags map[string]string `json:"tags,omitempty"`
	// The tier for this resiliency policy, ranging from the highest severity (<code>MissionCritical</code>) to lowest (<code>NonCritical</code>).
	Tier CreateResiliencyPolicyRequestBodyTierEnum `json:"tier"`
}

type CreateResiliencyPolicyRequest struct {
	RequestBody       CreateResiliencyPolicyRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateResiliencyPolicyResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateResiliencyPolicyResponse *shared.CreateResiliencyPolicyResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
