// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SimulationJobErrorCodeEnum string

const (
	SimulationJobErrorCodeEnumInternalServiceError                       SimulationJobErrorCodeEnum = "InternalServiceError"
	SimulationJobErrorCodeEnumRobotApplicationCrash                      SimulationJobErrorCodeEnum = "RobotApplicationCrash"
	SimulationJobErrorCodeEnumSimulationApplicationCrash                 SimulationJobErrorCodeEnum = "SimulationApplicationCrash"
	SimulationJobErrorCodeEnumRobotApplicationHealthCheckFailure         SimulationJobErrorCodeEnum = "RobotApplicationHealthCheckFailure"
	SimulationJobErrorCodeEnumSimulationApplicationHealthCheckFailure    SimulationJobErrorCodeEnum = "SimulationApplicationHealthCheckFailure"
	SimulationJobErrorCodeEnumBadPermissionsRobotApplication             SimulationJobErrorCodeEnum = "BadPermissionsRobotApplication"
	SimulationJobErrorCodeEnumBadPermissionsSimulationApplication        SimulationJobErrorCodeEnum = "BadPermissionsSimulationApplication"
	SimulationJobErrorCodeEnumBadPermissionsS3Object                     SimulationJobErrorCodeEnum = "BadPermissionsS3Object"
	SimulationJobErrorCodeEnumBadPermissionsS3Output                     SimulationJobErrorCodeEnum = "BadPermissionsS3Output"
	SimulationJobErrorCodeEnumBadPermissionsCloudwatchLogs               SimulationJobErrorCodeEnum = "BadPermissionsCloudwatchLogs"
	SimulationJobErrorCodeEnumSubnetIPLimitExceeded                      SimulationJobErrorCodeEnum = "SubnetIpLimitExceeded"
	SimulationJobErrorCodeEnumEniLimitExceeded                           SimulationJobErrorCodeEnum = "ENILimitExceeded"
	SimulationJobErrorCodeEnumBadPermissionsUserCredentials              SimulationJobErrorCodeEnum = "BadPermissionsUserCredentials"
	SimulationJobErrorCodeEnumInvalidBundleRobotApplication              SimulationJobErrorCodeEnum = "InvalidBundleRobotApplication"
	SimulationJobErrorCodeEnumInvalidBundleSimulationApplication         SimulationJobErrorCodeEnum = "InvalidBundleSimulationApplication"
	SimulationJobErrorCodeEnumInvalidS3Resource                          SimulationJobErrorCodeEnum = "InvalidS3Resource"
	SimulationJobErrorCodeEnumThrottlingError                            SimulationJobErrorCodeEnum = "ThrottlingError"
	SimulationJobErrorCodeEnumLimitExceeded                              SimulationJobErrorCodeEnum = "LimitExceeded"
	SimulationJobErrorCodeEnumMismatchedEtag                             SimulationJobErrorCodeEnum = "MismatchedEtag"
	SimulationJobErrorCodeEnumRobotApplicationVersionMismatchedEtag      SimulationJobErrorCodeEnum = "RobotApplicationVersionMismatchedEtag"
	SimulationJobErrorCodeEnumSimulationApplicationVersionMismatchedEtag SimulationJobErrorCodeEnum = "SimulationApplicationVersionMismatchedEtag"
	SimulationJobErrorCodeEnumResourceNotFound                           SimulationJobErrorCodeEnum = "ResourceNotFound"
	SimulationJobErrorCodeEnumRequestThrottled                           SimulationJobErrorCodeEnum = "RequestThrottled"
	SimulationJobErrorCodeEnumBatchTimedOut                              SimulationJobErrorCodeEnum = "BatchTimedOut"
	SimulationJobErrorCodeEnumBatchCanceled                              SimulationJobErrorCodeEnum = "BatchCanceled"
	SimulationJobErrorCodeEnumInvalidInput                               SimulationJobErrorCodeEnum = "InvalidInput"
	SimulationJobErrorCodeEnumWrongRegionS3Bucket                        SimulationJobErrorCodeEnum = "WrongRegionS3Bucket"
	SimulationJobErrorCodeEnumWrongRegionS3Output                        SimulationJobErrorCodeEnum = "WrongRegionS3Output"
	SimulationJobErrorCodeEnumWrongRegionRobotApplication                SimulationJobErrorCodeEnum = "WrongRegionRobotApplication"
	SimulationJobErrorCodeEnumWrongRegionSimulationApplication           SimulationJobErrorCodeEnum = "WrongRegionSimulationApplication"
	SimulationJobErrorCodeEnumUploadContentMismatchError                 SimulationJobErrorCodeEnum = "UploadContentMismatchError"
)

func (e SimulationJobErrorCodeEnum) ToPointer() *SimulationJobErrorCodeEnum {
	return &e
}

func (e *SimulationJobErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InternalServiceError":
		fallthrough
	case "RobotApplicationCrash":
		fallthrough
	case "SimulationApplicationCrash":
		fallthrough
	case "RobotApplicationHealthCheckFailure":
		fallthrough
	case "SimulationApplicationHealthCheckFailure":
		fallthrough
	case "BadPermissionsRobotApplication":
		fallthrough
	case "BadPermissionsSimulationApplication":
		fallthrough
	case "BadPermissionsS3Object":
		fallthrough
	case "BadPermissionsS3Output":
		fallthrough
	case "BadPermissionsCloudwatchLogs":
		fallthrough
	case "SubnetIpLimitExceeded":
		fallthrough
	case "ENILimitExceeded":
		fallthrough
	case "BadPermissionsUserCredentials":
		fallthrough
	case "InvalidBundleRobotApplication":
		fallthrough
	case "InvalidBundleSimulationApplication":
		fallthrough
	case "InvalidS3Resource":
		fallthrough
	case "ThrottlingError":
		fallthrough
	case "LimitExceeded":
		fallthrough
	case "MismatchedEtag":
		fallthrough
	case "RobotApplicationVersionMismatchedEtag":
		fallthrough
	case "SimulationApplicationVersionMismatchedEtag":
		fallthrough
	case "ResourceNotFound":
		fallthrough
	case "RequestThrottled":
		fallthrough
	case "BatchTimedOut":
		fallthrough
	case "BatchCanceled":
		fallthrough
	case "InvalidInput":
		fallthrough
	case "WrongRegionS3Bucket":
		fallthrough
	case "WrongRegionS3Output":
		fallthrough
	case "WrongRegionRobotApplication":
		fallthrough
	case "WrongRegionSimulationApplication":
		fallthrough
	case "UploadContentMismatchError":
		*e = SimulationJobErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulationJobErrorCodeEnum: %v", v)
	}
}
