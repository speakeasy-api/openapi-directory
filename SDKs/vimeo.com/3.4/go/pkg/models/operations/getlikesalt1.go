// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLikesAlt1FilterEnum - The attribute by which to filter the results.
type GetLikesAlt1FilterEnum string

const (
	GetLikesAlt1FilterEnumEmbeddable GetLikesAlt1FilterEnum = "embeddable"
)

func (e *GetLikesAlt1FilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "embeddable":
		*e = GetLikesAlt1FilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLikesAlt1FilterEnum: %s", s)
	}
}

// GetLikesAlt1SortEnum - The way to sort the results.
type GetLikesAlt1SortEnum string

const (
	GetLikesAlt1SortEnumAlphabetical GetLikesAlt1SortEnum = "alphabetical"
	GetLikesAlt1SortEnumComments     GetLikesAlt1SortEnum = "comments"
	GetLikesAlt1SortEnumDate         GetLikesAlt1SortEnum = "date"
	GetLikesAlt1SortEnumDuration     GetLikesAlt1SortEnum = "duration"
	GetLikesAlt1SortEnumLikes        GetLikesAlt1SortEnum = "likes"
	GetLikesAlt1SortEnumPlays        GetLikesAlt1SortEnum = "plays"
)

func (e *GetLikesAlt1SortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "comments":
		fallthrough
	case "date":
		fallthrough
	case "duration":
		fallthrough
	case "likes":
		fallthrough
	case "plays":
		*e = GetLikesAlt1SortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLikesAlt1SortEnum: %s", s)
	}
}

type GetLikesAlt1QueryParams struct {
	// The attribute by which to filter the results.
	Filter *GetLikesAlt1FilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
	FilterEmbeddable *bool `queryParam:"style=form,explode=true,name=filter_embeddable"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetLikesAlt1SortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetLikesAlt1Request struct {
	QueryParams GetLikesAlt1QueryParams
}

type GetLikesAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The videos were returned.
	Videos []shared.Video
}
