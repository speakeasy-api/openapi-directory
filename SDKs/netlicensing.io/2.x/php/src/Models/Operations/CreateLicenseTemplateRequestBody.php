<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateLicenseTemplateRequestBody
{
    /**
     * If set to 'false', the License Template is disabled. Licensee can not obtain any new Licenses off this License Template.
     * 
     * @var bool $active
     */
	#[SpeakeasyMetadata('form:name=active')]
    public bool $active;
    
    /**
     * If set to 'true', every new Licensee automatically gets one License out of this License Template on creation. Automatic Licenses must have their price set to 0.
     * 
     * @var ?bool $automatic
     */
	#[SpeakeasyMetadata('form:name=automatic')]
    public ?bool $automatic = null;
    
    /**
     * Specifies currency for the License price. Check data types to discover which currencies are supported.
     * 
     * @var ?string $currency
     */
	#[SpeakeasyMetadata('form:name=currency')]
    public ?string $currency = null;
    
    /**
     * If set to 'true', this License Template is not shown in NetLicensing Shop as offered for purchase.
     * 
     * @var ?bool $hidden
     */
	#[SpeakeasyMetadata('form:name=hidden')]
    public ?bool $hidden = null;
    
    /**
     * If set to 'true', Licenses from this License Template are not visible to the end customer, but participate in validation.
     * 
     * @var ?bool $hideLicenses
     */
	#[SpeakeasyMetadata('form:name=hideLicenses')]
    public ?bool $hideLicenses = null;
    
    /**
     * Type of Licenses created from this License Template. Supported types: FEATURE, TIMEVOLUME, FLOATING, QUANTITY
     * 
     * @var string $licenseType
     */
	#[SpeakeasyMetadata('form:name=licenseType')]
    public string $licenseType;
    
    /**
     * Mandatory for 'FLOATING' License Type.
     * 
     * @var ?string $maxSessions
     */
	#[SpeakeasyMetadata('form:name=maxSessions')]
    public ?string $maxSessions = null;
    
    /**
     * License Template name to create License Template object
     * 
     * @var string $name
     */
	#[SpeakeasyMetadata('form:name=name')]
    public string $name;
    
    /**
     * Unique number (across all Products of a Vendor) that identifies the License Template. Vendor can assign this number when creating a License Template or let NetLicensing generate one. Read-only after creation of the first License from this License Template.
     * 
     * @var ?string $number
     */
	#[SpeakeasyMetadata('form:name=number')]
    public ?string $number = null;
    
    /**
     * Price for the License. If >0, it must always be accompanied by the currency specification.
     * 
     * @var ?float $price
     */
	#[SpeakeasyMetadata('form:name=price')]
    public ?float $price = null;
    
    /**
     * Number of Product Module to create License Template object
     * 
     * @var string $productModuleNumber
     */
	#[SpeakeasyMetadata('form:name=productModuleNumber')]
    public string $productModuleNumber;
    
    /**
     * Mandatory for 'Pay-per-Use' and 'Node-Locked' License Model.
     * 
     * @var ?string $quantity
     */
	#[SpeakeasyMetadata('form:name=quantity')]
    public ?string $quantity = null;
    
    /**
     * Mandatory for 'Quota' License Model.
     * 
     * @var ?string $quota
     */
	#[SpeakeasyMetadata('form:name=quota')]
    public ?string $quota = null;
    
    /**
     * Mandatory for 'TIMEVOLUME' License Type.
     * 
     * @var ?string $timeVolume
     */
	#[SpeakeasyMetadata('form:name=timeVolume')]
    public ?string $timeVolume = null;
    
    /**
     * For 'TIMEVOLUME' License Type.
     * 
     * @var ?string $timeVolumePeriod
     */
	#[SpeakeasyMetadata('form:name=timeVolumePeriod')]
    public ?string $timeVolumePeriod = null;
    
	public function __construct()
	{
		$this->active = false;
		$this->automatic = null;
		$this->currency = null;
		$this->hidden = null;
		$this->hideLicenses = null;
		$this->licenseType = "";
		$this->maxSessions = null;
		$this->name = "";
		$this->number = null;
		$this->price = null;
		$this->productModuleNumber = "";
		$this->quantity = null;
		$this->quota = null;
		$this->timeVolume = null;
		$this->timeVolumePeriod = null;
	}
}
