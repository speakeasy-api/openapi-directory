/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StreamModeDetails } from "./streammodedetails";
import { StreamStatusEnum } from "./streamstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The summary of a stream.
 */
export class StreamSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "StreamARN" })
  streamARN: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamCreationTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  streamCreationTimestamp?: Date;

  /**
   *  Specifies the capacity mode to which you want to set your data stream. Currently, in Kinesis Data Streams, you can choose between an <b>on-demand</b> capacity mode and a <b>provisioned</b> capacity mode for your data streams.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StreamModeDetails" })
  @Type(() => StreamModeDetails)
  streamModeDetails?: StreamModeDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamName" })
  streamName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamStatus" })
  streamStatus: StreamStatusEnum;
}
