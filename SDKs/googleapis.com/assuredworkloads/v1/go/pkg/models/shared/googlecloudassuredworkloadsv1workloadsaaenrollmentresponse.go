// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum string

const (
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnumSetupErrorUnspecified          GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum = "SETUP_ERROR_UNSPECIFIED"
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnumErrorInvalidBaseSetup          GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum = "ERROR_INVALID_BASE_SETUP"
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnumErrorMissingExternalSigningKey GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum = "ERROR_MISSING_EXTERNAL_SIGNING_KEY"
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnumErrorNotAllServicesEnrolled    GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum = "ERROR_NOT_ALL_SERVICES_ENROLLED"
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnumErrorSetupCheckFailed          GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum = "ERROR_SETUP_CHECK_FAILED"
)

func (e *GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SETUP_ERROR_UNSPECIFIED":
		fallthrough
	case "ERROR_INVALID_BASE_SETUP":
		fallthrough
	case "ERROR_MISSING_EXTERNAL_SIGNING_KEY":
		fallthrough
	case "ERROR_NOT_ALL_SERVICES_ENROLLED":
		fallthrough
	case "ERROR_SETUP_CHECK_FAILED":
		*e = GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum: %s", s)
	}
}

// GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum - Indicates SAA enrollment status of a given workload.
type GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum string

const (
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnumSetupStateUnspecified GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum = "SETUP_STATE_UNSPECIFIED"
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnumStatusPending         GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum = "STATUS_PENDING"
	GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnumStatusComplete        GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum = "STATUS_COMPLETE"
)

func (e *GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SETUP_STATE_UNSPECIFIED":
		fallthrough
	case "STATUS_PENDING":
		fallthrough
	case "STATUS_COMPLETE":
		*e = GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum: %s", s)
	}
}

// GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponse - Signed Access Approvals (SAA) enrollment response.
type GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponse struct {
	// Indicates SAA enrollment setup error if any.
	SetupErrors []GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum `json:"setupErrors,omitempty"`
	// Indicates SAA enrollment status of a given workload.
	SetupStatus *GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum `json:"setupStatus,omitempty"`
}
