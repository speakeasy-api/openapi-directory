"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostAuthRenewRequestBody:
    
    client_id: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'client_id' }})
    r"""ID of the client"""  
    client_secret: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'client_secret' }})
    r"""secret of the client"""  
    id_user: int = dataclasses.field(metadata={'multipart_form': { 'field_name': 'id_user' }})
    r"""id of the user to generate a token for"""  
    grant_type: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'grant_type' }})
    r"""default is \\"client_credentials\\" """  
    revoke_previous: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'revoke_previous' }})
    r"""if true, all other permanent tokens for the user will be deleted"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAuthRenew200ApplicationJSON:
    
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token') }})
    r"""the access token transformed from the temporary one"""  
    token_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_type') }})
    r"""the access token type"""  
    

@dataclasses.dataclass
class PostAuthRenewResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_auth_renew_200_application_json_object: Optional[PostAuthRenew200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    