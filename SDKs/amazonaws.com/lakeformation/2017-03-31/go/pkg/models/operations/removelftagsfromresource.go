// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// RemoveLFTagsFromResourceRequestBodyResource - A structure for the resource.
type RemoveLFTagsFromResourceRequestBodyResource struct {
	Catalog          map[string]interface{}           `json:"Catalog,omitempty"`
	DataCellsFilter  *shared.DataCellsFilterResource  `json:"DataCellsFilter,omitempty"`
	DataLocation     *shared.DataLocationResource     `json:"DataLocation,omitempty"`
	Database         *shared.DatabaseResource         `json:"Database,omitempty"`
	LFTag            *shared.LFTagKeyResource         `json:"LFTag,omitempty"`
	LFTagPolicy      *shared.LFTagPolicyResource      `json:"LFTagPolicy,omitempty"`
	Table            *shared.TableResource            `json:"Table,omitempty"`
	TableWithColumns *shared.TableWithColumnsResource `json:"TableWithColumns,omitempty"`
}

type RemoveLFTagsFromResourceRequestBody struct {
	// The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
	CatalogID *string `json:"CatalogId,omitempty"`
	// The LF-tags to be removed from the resource.
	LFTags []shared.LFTagPair `json:"LFTags"`
	// A structure for the resource.
	Resource RemoveLFTagsFromResourceRequestBodyResource `json:"Resource"`
}

type RemoveLFTagsFromResourceRequest struct {
	RequestBody       RemoveLFTagsFromResourceRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type RemoveLFTagsFromResourceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// GlueEncryptionException
	GlueEncryptionException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	RemoveLFTagsFromResourceResponse *shared.RemoveLFTagsFromResourceResponse
	StatusCode                       int
	RawResponse                      *http.Response
}
