/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum WritableRackTypeEnum {
  OneHundred = "100",
  TwoHundred = "200",
  ThreeHundred = "300",
  OneThousand = "1000",
  OneThousandOneHundred = "1100",
}

/**
 * Rail-to-rail width
 */
export enum WritableRackWidthEnum {
  Nineteen = "19",
  TwentyThree = "23",
}

export class WritableRackInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  /**
   * Units are numbered top-to-bottom
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desc_units" })
  descUnits?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "facility_id" })
  facilityId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  site: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  tenant?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: WritableRackTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "u_height" })
  uHeight?: number;

  /**
   * Rail-to-rail width
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: WritableRackWidthEnum;
}
