// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteHostXAmzTargetEnum
type DeleteHostXAmzTargetEnum string

const (
	DeleteHostXAmzTargetEnumComAmazonawsCodestarConnectionsCodeStarConnections20191201DeleteHost DeleteHostXAmzTargetEnum = "com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteHost"
)

func (e *DeleteHostXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "com.amazonaws.codestar.connections.CodeStar_connections_20191201.DeleteHost":
		*e = DeleteHostXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteHostXAmzTargetEnum: %s", s)
	}
}

type DeleteHostRequest struct {
	DeleteHostInput   shared.DeleteHostInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteHostXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteHostResponse struct {
	ContentType string
	// Success
	DeleteHostOutput map[string]interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
}
