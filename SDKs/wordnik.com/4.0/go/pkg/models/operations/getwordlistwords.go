// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetWordListWordsPathParams struct {
	// ID of WordList to use
	Permalink string `pathParam:"style=simple,explode=false,name=permalink"`
}

// GetWordListWordsSortByEnum - Field to sort by
type GetWordListWordsSortByEnum string

const (
	GetWordListWordsSortByEnumCreateDate GetWordListWordsSortByEnum = "createDate"
	GetWordListWordsSortByEnumAlpha      GetWordListWordsSortByEnum = "alpha"
)

func (e *GetWordListWordsSortByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "createDate":
		fallthrough
	case "alpha":
		*e = GetWordListWordsSortByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWordListWordsSortByEnum: %s", s)
	}
}

type GetWordListWordsQueryParams struct {
	// Maximum number of results to return
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Results to skip
	Skip *int `queryParam:"style=form,explode=true,name=skip"`
	// Field to sort by
	SortBy *GetWordListWordsSortByEnum `queryParam:"style=form,explode=true,name=sortBy"`
	// Direction to sort
	SortOrder *string `queryParam:"style=form,explode=true,name=sortOrder"`
}

type GetWordListWordsHeaders struct {
	// The auth token of the logged-in user, obtained by calling /account.{format}/authenticate/{username} (described above)
	AuthToken string `header:"style=simple,explode=false,name=auth_token"`
}

type GetWordListWordsRequest struct {
	PathParams  GetWordListWordsPathParams
	QueryParams GetWordListWordsQueryParams
	Headers     GetWordListWordsHeaders
}

type GetWordListWordsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
