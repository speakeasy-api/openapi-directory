/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Ephemeral certificate creation request.
 */
export class GenerateEphemeralCertRequest extends SpeakeasyBase {
  /**
   * Optional. Access token to include in the signed certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_token" })
  accessToken?: string;

  /**
   * PEM encoded public key to include in the signed certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_key" })
  publicKey?: string;

  /**
   * Optional. Optional snapshot read timestamp to trade freshness for performance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readTime" })
  readTime?: string;

  /**
   * Optional. If set, it will contain the cert valid duration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validDuration" })
  validDuration?: string;
}
