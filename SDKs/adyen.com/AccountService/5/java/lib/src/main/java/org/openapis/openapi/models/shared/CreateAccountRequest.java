/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateAccountRequest {
    /**
     * The code of Account Holder under which to create the account.
     */
    @JsonProperty("accountHolderCode")
    public String accountHolderCode;

    public CreateAccountRequest withAccountHolderCode(String accountHolderCode) {
        this.accountHolderCode = accountHolderCode;
        return this;
    }
    
    /**
     * The bankAccountUUID of the bank account held by the account holder to couple the account with. Scheduled payouts in currencies matching the currency of this bank account will be sent to this bank account. Payouts in different currencies will be sent to a matching bank account of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountUUID")
    public String bankAccountUUID;

    public CreateAccountRequest withBankAccountUUID(String bankAccountUUID) {
        this.bankAccountUUID = bankAccountUUID;
        return this;
    }
    
    /**
     * A description of the account, maximum 256 characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores `_`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateAccountRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A set of key and value pairs for general use by the merchant.
     * The keys do not have specific names and may be used for storing miscellaneous data as desired.
     * &gt; Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public CreateAccountRequest withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The payout method code held by the account holder to couple the account with. Scheduled card payouts will be sent using this payout method code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutMethodCode")
    public String payoutMethodCode;

    public CreateAccountRequest withPayoutMethodCode(String payoutMethodCode) {
        this.payoutMethodCode = payoutMethodCode;
        return this;
    }
    
    /**
     * The payout schedule of the prospective account.
     * &gt;Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutSchedule")
    public CreateAccountRequestPayoutScheduleEnum payoutSchedule;

    public CreateAccountRequest withPayoutSchedule(CreateAccountRequestPayoutScheduleEnum payoutSchedule) {
        this.payoutSchedule = payoutSchedule;
        return this;
    }
    
    /**
     * The reason for the payout schedule choice.
     * &gt;Required if the payoutSchedule is `HOLD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutScheduleReason")
    public String payoutScheduleReason;

    public CreateAccountRequest withPayoutScheduleReason(String payoutScheduleReason) {
        this.payoutScheduleReason = payoutScheduleReason;
        return this;
    }
    
    /**
     * Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutSpeed")
    public CreateAccountRequestPayoutSpeedEnum payoutSpeed;

    public CreateAccountRequest withPayoutSpeed(CreateAccountRequestPayoutSpeedEnum payoutSpeed) {
        this.payoutSpeed = payoutSpeed;
        return this;
    }
    
    public CreateAccountRequest(@JsonProperty("accountHolderCode") String accountHolderCode) {
        this.accountHolderCode = accountHolderCode;
  }
}
