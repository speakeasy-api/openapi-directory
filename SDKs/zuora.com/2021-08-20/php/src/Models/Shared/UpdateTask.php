<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UpdateTask - A task.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UpdateTask
{
    /**
     * The type of task.
     * 
     * 
     * 
     * @var ?string $actionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('action_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $actionType = null;
    
    /**
     * The type of the API used.
     * 
     * 
     * 
     * @var ?string $callType
     */
	#[\JMS\Serializer\Annotation\SerializedName('call_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callType = null;
    
    /**
     * The maximum number of this task that can run concurrently.
     * 
     * 
     * 
     * @var ?int $concurrentLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('concurrent_limit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $concurrentLimit = null;
    
    /**
     * The unique ID of the task.
     * 
     * 
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * The name of the task.
     * 
     * 
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The selected object for the task.
     * 
     * 
     * 
     * @var ?string $object
     */
	#[\JMS\Serializer\Annotation\SerializedName('object')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $object = null;
    
    /**
     * The ID of the selected object of the task.
     * 
     * 
     * 
     * @var ?string $objectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('object_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectId = null;
    
    /**
     * The status of the task instance.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UpdateTaskStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UpdateTaskStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateTaskStatusEnum $status = null;
    
    /**
     * The array of filter tags.
     * 
     * 
     * 
     * @var ?array<string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * The ID of the workflow the task belongs too.
     * 
     * 
     * 
     * @var ?int $workflowId
     */
	#[\JMS\Serializer\Annotation\SerializedName('workflow_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $workflowId = null;
    
	public function __construct()
	{
		$this->actionType = null;
		$this->callType = null;
		$this->concurrentLimit = null;
		$this->id = 0;
		$this->name = null;
		$this->object = null;
		$this->objectId = null;
		$this->status = null;
		$this->tags = null;
		$this->workflowId = null;
	}
}
