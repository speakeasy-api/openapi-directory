<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetAssociationBySubjectAndObjectCategorySearchRequest
{
    /**
     * Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2
     * 
     * @var ?string $evidence
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=evidence')]
    public ?string $evidence = null;
    
    /**
     * If true, excludes associations that involve IEAs (ECO:0000501)
     * 
     * @var ?bool $excludeAutomaticAssertions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=exclude_automatic_assertions')]
    public ?bool $excludeAutomaticAssertions = null;
    
    /**
     * Object CURIE
     * 
     * @var ?string $object
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=object')]
    public ?string $object = null;
    
    /**
     * Category of entity at link Object (target), e.g. gene, disease, phenotype
     * 
     * @var string $objectCategory
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=object_category')]
    public string $objectCategory;
    
    /**
     * Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)
     * 
     * @var ?string $objectTaxon
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=object_taxon')]
    public ?string $objectTaxon = null;
    
    /**
     * Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc.
     * 
     * @var ?string $relation
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=relation')]
    public ?string $relation = null;
    
    /**
     * number of rows
     * 
     * @var ?int $rows
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=rows')]
    public ?int $rows = null;
    
    /**
     * beginning row
     * 
     * @var ?int $start
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=start')]
    public ?int $start = null;
    
    /**
     * Subject CURIE
     * 
     * @var ?string $subject
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=subject')]
    public ?string $subject = null;
    
    /**
     * Category of entity at link Subject (source), e.g. gene, disease, phenotype
     * 
     * @var string $subjectCategory
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=subject_category')]
    public string $subjectCategory;
    
    /**
     * Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)
     * 
     * @var ?string $subjectTaxon
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=subject_taxon')]
    public ?string $subjectTaxon = null;
    
    /**
     * If true, excludes evidence objects in response
     * 
     * @var ?bool $unselectEvidence
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=unselect_evidence')]
    public ?bool $unselectEvidence = null;
    
    /**
     * If true, returns results in compact associations format
     * 
     * @var ?bool $useCompactAssociations
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=use_compact_associations')]
    public ?bool $useCompactAssociations = null;
    
	public function __construct()
	{
		$this->evidence = null;
		$this->excludeAutomaticAssertions = null;
		$this->object = null;
		$this->objectCategory = "";
		$this->objectTaxon = null;
		$this->relation = null;
		$this->rows = null;
		$this->start = null;
		$this->subject = null;
		$this->subjectCategory = "";
		$this->subjectTaxon = null;
		$this->unselectEvidence = null;
		$this->useCompactAssociations = null;
	}
}
