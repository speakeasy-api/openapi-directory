/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApplicationResponseCollection - Success
 */
public class ApplicationResponseCollection {
    /**
     * A list of applications matching your existing filters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_embedded")
    public ApplicationResponseCollectionEmbedded embedded;
    public ApplicationResponseCollection withEmbedded(ApplicationResponseCollectionEmbedded embedded) {
        this.embedded = embedded;
        return this;
    }
    
    /**
     * The current page number (starts at 1)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    public Long page;
    public ApplicationResponseCollection withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of applications per page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;
    public ApplicationResponseCollection withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The total number of applications
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_items")
    public Long totalItems;
    public ApplicationResponseCollection withTotalItems(Long totalItems) {
        this.totalItems = totalItems;
        return this;
    }
    
    /**
     * The total number of pages returned
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_pages")
    public Long totalPages;
    public ApplicationResponseCollection withTotalPages(Long totalPages) {
        this.totalPages = totalPages;
        return this;
    }
    
}
