// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SettingNameEnum string

const (
	SettingNameEnumServiceLongArnFormat           SettingNameEnum = "serviceLongArnFormat"
	SettingNameEnumTaskLongArnFormat              SettingNameEnum = "taskLongArnFormat"
	SettingNameEnumContainerInstanceLongArnFormat SettingNameEnum = "containerInstanceLongArnFormat"
	SettingNameEnumAwsvpcTrunking                 SettingNameEnum = "awsvpcTrunking"
	SettingNameEnumContainerInsights              SettingNameEnum = "containerInsights"
)

func (e *SettingNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "serviceLongArnFormat":
		fallthrough
	case "taskLongArnFormat":
		fallthrough
	case "containerInstanceLongArnFormat":
		fallthrough
	case "awsvpcTrunking":
		fallthrough
	case "containerInsights":
		*e = SettingNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SettingNameEnum: %s", s)
	}
}
