<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Filter - An expression to filter dimension or metric values.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Filter
{
    /**
     * To express that the result needs to be between two numbers (inclusive).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BetweenFilter $betweenFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('betweenFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BetweenFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BetweenFilter $betweenFilter = null;
    
    /**
     * The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics.
     * 
     * @var ?string $fieldName
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fieldName = null;
    
    /**
     * The result needs to be in a list of string values.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InListFilter $inListFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('inListFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InListFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InListFilter $inListFilter = null;
    
    /**
     * Filters for numeric or date values.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NumericFilter $numericFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('numericFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NumericFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NumericFilter $numericFilter = null;
    
    /**
     * The filter for string
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StringFilter $stringFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('stringFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StringFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StringFilter $stringFilter = null;
    
	public function __construct()
	{
		$this->betweenFilter = null;
		$this->fieldName = null;
		$this->inListFilter = null;
		$this->numericFilter = null;
		$this->stringFilter = null;
	}
}
