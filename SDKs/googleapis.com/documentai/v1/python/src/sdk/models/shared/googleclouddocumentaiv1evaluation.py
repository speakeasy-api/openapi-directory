"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddocumentaiv1evaluationcounters as shared_googleclouddocumentaiv1evaluationcounters
from ..shared import googleclouddocumentaiv1evaluationmulticonfidencemetrics as shared_googleclouddocumentaiv1evaluationmulticonfidencemetrics
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1Evaluation:
    r"""An evaluation of a ProcessorVersion's performance."""
    
    all_entities_metrics: Optional[shared_googleclouddocumentaiv1evaluationmulticonfidencemetrics.GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allEntitiesMetrics'), 'exclude': lambda f: f is None }})
    r"""Metrics across multiple confidence levels."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""The time that the evaluation was created."""  
    document_counters: Optional[shared_googleclouddocumentaiv1evaluationcounters.GoogleCloudDocumentaiV1EvaluationCounters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentCounters'), 'exclude': lambda f: f is None }})
    r"""Evaluation counters for the documents that were used."""  
    entity_metrics: Optional[dict[str, shared_googleclouddocumentaiv1evaluationmulticonfidencemetrics.GoogleCloudDocumentaiV1EvaluationMultiConfidenceMetrics]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entityMetrics'), 'exclude': lambda f: f is None }})
    r"""Metrics across confidence levels, for different entities."""  
    kms_key_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kmsKeyName'), 'exclude': lambda f: f is None }})
    r"""The KMS key name used for encryption."""  
    kms_key_version_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kmsKeyVersionName'), 'exclude': lambda f: f is None }})
    r"""The KMS key version with which data is encrypted."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the evaluation. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}`"""  
    