/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonitoringAlertHistorySortKeyEnum } from "./monitoringalerthistorysortkeyenum";
import { MonitoringAlertStatusEnum } from "./monitoringalertstatusenum";
import { SortOrderEnum } from "./sortorderenum";
import { Expose, Transform } from "class-transformer";

export class ListMonitoringAlertHistoryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimeAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimeBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringAlertName" })
  monitoringAlertName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringScheduleName" })
  monitoringScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SortBy" })
  sortBy?: MonitoringAlertHistorySortKeyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SortOrder" })
  sortOrder?: SortOrderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusEquals" })
  statusEquals?: MonitoringAlertStatusEnum;
}
