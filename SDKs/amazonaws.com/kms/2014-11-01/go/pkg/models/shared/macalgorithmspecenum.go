// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MacAlgorithmSpecEnum string

const (
	MacAlgorithmSpecEnumHmacSha224 MacAlgorithmSpecEnum = "HMAC_SHA_224"
	MacAlgorithmSpecEnumHmacSha256 MacAlgorithmSpecEnum = "HMAC_SHA_256"
	MacAlgorithmSpecEnumHmacSha384 MacAlgorithmSpecEnum = "HMAC_SHA_384"
	MacAlgorithmSpecEnumHmacSha512 MacAlgorithmSpecEnum = "HMAC_SHA_512"
)

func (e MacAlgorithmSpecEnum) ToPointer() *MacAlgorithmSpecEnum {
	return &e
}

func (e *MacAlgorithmSpecEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HMAC_SHA_224":
		fallthrough
	case "HMAC_SHA_256":
		fallthrough
	case "HMAC_SHA_384":
		fallthrough
	case "HMAC_SHA_512":
		*e = MacAlgorithmSpecEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MacAlgorithmSpecEnum: %v", v)
	}
}
