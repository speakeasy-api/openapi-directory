/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateReturnLabelRequestBody - A create return label request body
 */
public class CreateReturnLabelRequestBody {
    /**
     * The label charge event.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("charge_event")
    public LabelChargeEventEnum chargeEvent;

    public CreateReturnLabelRequestBody withChargeEvent(LabelChargeEventEnum chargeEvent) {
        this.chargeEvent = chargeEvent;
        return this;
    }
    
    /**
     * The display format that the label should be shown in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_scheme")
    public CreateReturnLabelRequestBodyDisplaySchemeEnum displayScheme;

    public CreateReturnLabelRequestBody withDisplayScheme(CreateReturnLabelRequestBodyDisplaySchemeEnum displayScheme) {
        this.displayScheme = displayScheme;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_download_type")
    public CreateReturnLabelRequestBodyLabelDownloadTypeEnum labelDownloadType;

    public CreateReturnLabelRequestBody withLabelDownloadType(CreateReturnLabelRequestBodyLabelDownloadTypeEnum labelDownloadType) {
        this.labelDownloadType = labelDownloadType;
        return this;
    }
    
    /**
     * The file format that you want the label to be in.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_format")
    public CreateReturnLabelRequestBodyLabelFormatEnum labelFormat;

    public CreateReturnLabelRequestBody withLabelFormat(CreateReturnLabelRequestBodyLabelFormatEnum labelFormat) {
        this.labelFormat = labelFormat;
        return this;
    }
    
    /**
     * The label image resource that was used to create a custom label image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_image_id")
    public String labelImageId;

    public CreateReturnLabelRequestBody withLabelImageId(String labelImageId) {
        this.labelImageId = labelImageId;
        return this;
    }
    
    /**
     * The layout (size) that you want the label to be in.  The `label_format` determines which sizes are allowed.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_layout")
    public CreateReturnLabelRequestBodyLabelLayoutEnum labelLayout;

    public CreateReturnLabelRequestBody withLabelLayout(CreateReturnLabelRequestBodyLabelLayoutEnum labelLayout) {
        this.labelLayout = labelLayout;
        return this;
    }
    
    public CreateReturnLabelRequestBody(){}
}
