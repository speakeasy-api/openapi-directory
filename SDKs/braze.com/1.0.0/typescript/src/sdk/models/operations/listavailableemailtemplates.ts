/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ListAvailableEmailTemplatesRequest extends SpeakeasyBase {
  /**
   * (Optional) Positive Number
   *
   * @remarks
   *
   * Maximum number of templates to retrieve, default to 100 if not provided, maximum acceptable value is 1000.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: string;

  /**
   * (Optional) String in ISO 8601
   *
   * @remarks
   *
   * Retrieve only templates updated at or after the given time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=modified_after",
  })
  modifiedAfter?: string;

  /**
   * (Optional) String in ISO 8601
   *
   * @remarks
   *
   * Retrieve only templates updated at or before the given time
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=modified_before",
  })
  modifiedBefore?: string;

  /**
   * (Optional) Positive Number
   *
   * @remarks
   *
   * Number of templates to skip before returning rest of the templates that fit the search criteria.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: string;
}

export class ListAvailableEmailTemplatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
