<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VirtualMachineConfig - The config settings for virtual machine.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VirtualMachineConfig
{
    /**
     * Definition of the types of hardware accelerators that can be used. Definition of the types of hardware accelerators that can be used. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `nvidia-tesla-k80` * `nvidia-tesla-p100` * `nvidia-tesla-v100` * `nvidia-tesla-p4` * `nvidia-tesla-t4` * `nvidia-tesla-a100`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RuntimeAcceleratorConfig $acceleratorConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceleratorConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RuntimeAcceleratorConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RuntimeAcceleratorConfig $acceleratorConfig = null;
    
    /**
     * Definition of the boot image used by the Runtime. Used to facilitate runtime upgradeability.
     * 
     * @var ?array<string, mixed> $bootImage
     */
	#[\JMS\Serializer\Annotation\SerializedName('bootImage')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $bootImage = null;
    
    /**
     * Optional. Use a list of container images to use as Kernels in the notebook instance.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ContainerImage> $containerImages
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerImages')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ContainerImage>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $containerImages = null;
    
    /**
     * A Local attached disk resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LocalDisk $dataDisk
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataDisk')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LocalDisk')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LocalDisk $dataDisk = null;
    
    /**
     * Represents a custom encryption key configuration that can be applied to a resource. This will encrypt all disks in Virtual Machine.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EncryptionConfig $encryptionConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EncryptionConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EncryptionConfig $encryptionConfig = null;
    
    /**
     * Output only. The Compute Engine guest attributes. (see [Project and instance guest attributes](https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes)).
     * 
     * @var ?array<string, string> $guestAttributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestAttributes')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $guestAttributes = null;
    
    /**
     * Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.
     * 
     * @var ?bool $internalIpOnly
     */
	#[\JMS\Serializer\Annotation\SerializedName('internalIpOnly')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $internalIpOnly = null;
    
    /**
     * Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples: * `n1-standard-2` * `e2-standard-8`
     * 
     * @var ?string $machineType
     */
	#[\JMS\Serializer\Annotation\SerializedName('machineType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $machineType = null;
    
    /**
     * Optional. The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
     * 
     * @var ?array<string, string> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither `network` nor `subnet` is specified, the "default" network of the project is used, if it exists. A full URL or partial URI. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default` * `projects/[project_id]/global/networks/default` Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations: * Google Managed Network (Network & subnet are empty) * Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. * Shared VPC (network & subnet are required). Requires configuring Private Service Access.
     * 
     * @var ?string $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $network = null;
    
    /**
     * Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VirtualMachineConfigNicTypeEnum $nicType
     */
	#[\JMS\Serializer\Annotation\SerializedName('nicType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualMachineConfigNicTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineConfigNicTypeEnum $nicType = null;
    
    /**
     * Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned. Example: managed-notebooks-range-c PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \ --global \ --prefix-length=24 \ --description="Google Cloud Managed Notebooks Range 24 c" \ --network=$NETWORK \ --addresses=192.168.0.0 \ --purpose=VPC_PEERING Field value will be: `managed-notebooks-range-c`
     * 
     * @var ?string $reservedIpRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('reservedIpRange')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reservedIpRange = null;
    
    /**
     * A set of Shielded Instance options. Check [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RuntimeShieldedInstanceConfig $shieldedInstanceConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('shieldedInstanceConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RuntimeShieldedInstanceConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RuntimeShieldedInstanceConfig $shieldedInstanceConfig = null;
    
    /**
     * Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
     * 
     * @var ?string $subnet
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnet = null;
    
    /**
     * Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
     * 
     * @var ?array<string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example: * `us-central1-b`
     * 
     * @var ?string $zone
     */
	#[\JMS\Serializer\Annotation\SerializedName('zone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $zone = null;
    
	public function __construct()
	{
		$this->acceleratorConfig = null;
		$this->bootImage = null;
		$this->containerImages = null;
		$this->dataDisk = null;
		$this->encryptionConfig = null;
		$this->guestAttributes = null;
		$this->internalIpOnly = null;
		$this->labels = null;
		$this->machineType = null;
		$this->metadata = null;
		$this->network = null;
		$this->nicType = null;
		$this->reservedIpRange = null;
		$this->shieldedInstanceConfig = null;
		$this->subnet = null;
		$this->tags = null;
		$this->zone = null;
	}
}
