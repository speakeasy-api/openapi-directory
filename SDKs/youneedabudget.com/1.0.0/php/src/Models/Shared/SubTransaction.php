<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SubTransaction
{
    /**
     * The subtransaction amount in milliunits format
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
	#[\JMS\Serializer\Annotation\SerializedName('category_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $categoryId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('category_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $categoryName = null;
    
    /**
     * Whether or not the subtransaction has been deleted.  Deleted subtransactions will only be included in delta requests.
     * 
     * @var bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $deleted;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('memo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $memo = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('payee_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payeeId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('payee_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payeeName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transactionId;
    
    /**
     * If a transfer, the account_id which the subtransaction transfers to
     * 
     * @var ?string $transferAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfer_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferAccountId = null;
    
    /**
     * If a transfer, the id of transaction on the other side of the transfer
     * 
     * @var ?string $transferTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfer_transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferTransactionId = null;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->categoryId = null;
		$this->categoryName = null;
		$this->deleted = false;
		$this->id = "";
		$this->memo = null;
		$this->payeeId = null;
		$this->payeeName = null;
		$this->transactionId = "";
		$this->transferAccountId = null;
		$this->transferTransactionId = null;
	}
}
