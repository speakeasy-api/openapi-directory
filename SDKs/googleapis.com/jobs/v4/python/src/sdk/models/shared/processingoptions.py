"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProcessingOptionsHTMLSanitizationEnum(str, Enum):
    r"""Option for job HTML content sanitization. Applied fields are: * description * applicationInfo.instruction * incentives * qualifications * responsibilities HTML tags in these fields may be stripped if sanitiazation isn't disabled. Defaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY."""
    HTML_SANITIZATION_UNSPECIFIED = 'HTML_SANITIZATION_UNSPECIFIED'
    HTML_SANITIZATION_DISABLED = 'HTML_SANITIZATION_DISABLED'
    SIMPLE_FORMATTING_ONLY = 'SIMPLE_FORMATTING_ONLY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessingOptions:
    r"""Options for job processing."""
    
    disable_street_address_resolution: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableStreetAddressResolution'), 'exclude': lambda f: f is None }})
    r"""If set to `true`, the service does not attempt to resolve a more precise address for the job."""  
    html_sanitization: Optional[ProcessingOptionsHTMLSanitizationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('htmlSanitization'), 'exclude': lambda f: f is None }})
    r"""Option for job HTML content sanitization. Applied fields are: * description * applicationInfo.instruction * incentives * qualifications * responsibilities HTML tags in these fields may be stripped if sanitiazation isn't disabled. Defaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY."""  
    