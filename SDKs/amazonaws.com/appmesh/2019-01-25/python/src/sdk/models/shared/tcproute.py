"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tcprouteaction as shared_tcprouteaction
from ..shared import tcproutematch as shared_tcproutematch
from ..shared import tcptimeout as shared_tcptimeout
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TCPRoute:
    r"""An object that represents a TCP route type."""
    
    action: shared_tcprouteaction.TCPRouteAction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action') }})  
    match: Optional[shared_tcproutematch.TCPRouteMatch] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('match'), 'exclude': lambda f: f is None }})  
    timeout: Optional[shared_tcptimeout.TCPTimeout] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeout'), 'exclude': lambda f: f is None }})  
    