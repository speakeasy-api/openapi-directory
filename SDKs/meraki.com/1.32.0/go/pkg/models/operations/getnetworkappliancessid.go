// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkApplianceSsidRequest struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
	Number    string `pathParam:"style=simple,explode=false,name=number"`
}

type GetNetworkApplianceSsid200ApplicationJSONRadiusServers struct {
	// The IP address of your RADIUS server.
	Host *string `json:"host,omitempty"`
	// The UDP port your RADIUS servers listens on for Access-requests.
	Port *int64 `json:"port,omitempty"`
}

// GetNetworkApplianceSsid200ApplicationJSON - Successful operation
type GetNetworkApplianceSsid200ApplicationJSON struct {
	// The association control method for the SSID.
	AuthMode *string `json:"authMode,omitempty"`
	// The VLAN ID of the VLAN associated to this SSID.
	DefaultVlanID *int64 `json:"defaultVlanId,omitempty"`
	// Whether or not the SSID is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// The psk encryption mode for the SSID.
	EncryptionMode *string `json:"encryptionMode,omitempty"`
	// The name of the SSID.
	Name *string `json:"name,omitempty"`
	// The number of the SSID.
	Number *int64 `json:"number,omitempty"`
	// The RADIUS 802.1x servers to be used for authentication.
	RadiusServers []GetNetworkApplianceSsid200ApplicationJSONRadiusServers `json:"radiusServers,omitempty"`
	// Boolean indicating whether the MX should advertise or hide this SSID.
	Visible *bool `json:"visible,omitempty"`
	// WPA encryption mode for the SSID.
	WpaEncryptionMode *string `json:"wpaEncryptionMode,omitempty"`
}

type GetNetworkApplianceSsidResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkApplianceSsid200ApplicationJSONObject *GetNetworkApplianceSsid200ApplicationJSON
}
