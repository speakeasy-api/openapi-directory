"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clusteringkey as shared_clusteringkey
from ..shared import columndefinition as shared_columndefinition
from ..shared import partitionkey as shared_partitionkey
from ..shared import staticcolumn as shared_staticcolumn
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SchemaDefinition:
    r"""Describes the schema of the table."""
    
    all_columns: list[shared_columndefinition.ColumnDefinition] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allColumns') }})  
    partition_keys: list[shared_partitionkey.PartitionKey] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partitionKeys') }})  
    clustering_keys: Optional[list[shared_clusteringkey.ClusteringKey]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusteringKeys'), 'exclude': lambda f: f is None }})  
    static_columns: Optional[list[shared_staticcolumn.StaticColumn]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('staticColumns'), 'exclude': lambda f: f is None }})  
    