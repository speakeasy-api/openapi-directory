/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSplitResult } from "./datasplitresult";
import { EvaluationMetrics } from "./evaluationmetrics";
import { GlobalExplanation } from "./globalexplanation";
import { IterationResult } from "./iterationresult";
import { TrainingOptions } from "./trainingoptions";
import { Expose, Type } from "class-transformer";

/**
 * Information about a single training query run for the model.
 */
export class TrainingRunInput extends SpeakeasyBase {
  /**
   * Data split result. This contains references to the training and evaluation data tables that were used to train the model.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataSplitResult" })
  @Type(() => DataSplitResult)
  dataSplitResult?: DataSplitResult;

  /**
   * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evaluationMetrics" })
  @Type(() => EvaluationMetrics)
  evaluationMetrics?: EvaluationMetrics;

  /**
   * Global explanations containing the top most important features after training.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modelLevelGlobalExplanation" })
  @Type(() => GlobalExplanation)
  modelLevelGlobalExplanation?: GlobalExplanation;

  /**
   * Options used in model training.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainingOptions" })
  @Type(() => TrainingOptions)
  trainingOptions?: TrainingOptions;

  /**
   * The model id in the [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction) for this training run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vertexAiModelId" })
  vertexAiModelId?: string;
}

/**
 * Information about a single training query run for the model.
 */
export class TrainingRun extends SpeakeasyBase {
  /**
   * Output only. Global explanation contains the explanation of top features on the class level. Applies to classification models only.
   */
  @SpeakeasyMetadata({ elemType: GlobalExplanation })
  @Expose({ name: "classLevelGlobalExplanations" })
  @Type(() => GlobalExplanation)
  classLevelGlobalExplanations?: GlobalExplanation[];

  /**
   * Data split result. This contains references to the training and evaluation data tables that were used to train the model.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataSplitResult" })
  @Type(() => DataSplitResult)
  dataSplitResult?: DataSplitResult;

  /**
   * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evaluationMetrics" })
  @Type(() => EvaluationMetrics)
  evaluationMetrics?: EvaluationMetrics;

  /**
   * Global explanations containing the top most important features after training.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modelLevelGlobalExplanation" })
  @Type(() => GlobalExplanation)
  modelLevelGlobalExplanation?: GlobalExplanation;

  /**
   * Output only. Output of each iteration run, results.size() <= max_iterations.
   */
  @SpeakeasyMetadata({ elemType: IterationResult })
  @Expose({ name: "results" })
  @Type(() => IterationResult)
  results?: IterationResult[];

  /**
   * Output only. The start time of this training run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * Options used in model training.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainingOptions" })
  @Type(() => TrainingOptions)
  trainingOptions?: TrainingOptions;

  /**
   * Output only. The start time of this training run, in milliseconds since epoch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainingStartTime" })
  trainingStartTime?: string;

  /**
   * The model id in the [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction) for this training run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vertexAiModelId" })
  vertexAiModelId?: string;

  /**
   * Output only. The model version in the [Vertex AI Model Registry](https://cloud.google.com/vertex-ai/docs/model-registry/introduction) for this training run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vertexAiModelVersion" })
  vertexAiModelVersion?: string;
}
