// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// SubscriptionPushReporting - The subscription push reporting
type SubscriptionPushReporting struct {
	// The duration of the push operation
	Duration     string                `json:"duration"`
	ErrorMessage *ErrorResponseMessage `json:"errorMessage,omitempty"`
	// The message identifier. It's a guid.
	EventID string `json:"eventId"`
	// The HTTP status received from the consumer
	HTTPStatus *int `json:"httpStatus,omitempty"`
	// This modification date correspond to the last order pushed by your subscription consumer
	LastOrderModificationUtcDate time.Time `json:"lastOrderModificationUtcDate"`
	// The maximum BeezUP will retry to push orders. When we the retry count will reach maximum retry count, the subscription will be deactivated.
	MaxRetryCount *int64 `json:"maxRetryCount,omitempty"`
	// The next scheduled  date we retry to send orders
	NextScheduledRetryUtcDate *time.Time `json:"nextScheduledRetryUtcDate,omitempty"`
	// The order count sent
	OrderCount int `json:"orderCount"`
	// The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
	RequestURI *string `json:"requestUri,omitempty"`
	// The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
	ResponseURI *string `json:"responseUri,omitempty"`
	// The retry count. When we the retry count will reach maximum retry count, the subscription will be deactivated.
	RetryCount *int64 `json:"retryCount,omitempty"`
	// The identifier of the subscription to the orders for a merchant
	SubscriptionID string `json:"subscriptionId"`
	// Indicates if the push operation has succeed
	Succeed bool `json:"succeed"`
}
