/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

public class Users200ApplicationXMLUsers {
    /**
     * The time when user's account was created.
     */
    
    public OffsetDateTime createdAt;
    public Users200ApplicationXMLUsers withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Custom attributes. This field is only returned if users have been assigned custom attributes and if you provided `custom_attributes` as the value of `include_fields` query parameter in the API request.
     */
    
    public Users200ApplicationXMLUsersCustomAttributes[] customAttributes;
    public Users200ApplicationXMLUsers withCustomAttributes(Users200ApplicationXMLUsersCustomAttributes[] customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }
    
    /**
     * Department, if provided by the user.
     */
    
    public String dept;
    public Users200ApplicationXMLUsers withDept(String dept) {
        this.dept = dept;
        return this;
    }
    
    /**
     * User's email address.
     */
    
    public String email;
    public Users200ApplicationXMLUsers withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * User's first name.
     */
    
    public String firstName;
    public Users200ApplicationXMLUsers withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * IDs of groups where the user is a member.
     */
    
    public String[] groupIds;
    public Users200ApplicationXMLUsers withGroupIds(String[] groupIds) {
        this.groupIds = groupIds;
        return this;
    }
    
    /**
     * The [host key](https://support.zoom.us/hc/en-us/articles/205172555-Using-your-host-key) of the user. This field is only returned if users have been assigned a host key and if you provided `host_key` as the value of `include_fields` query parameter in the API request.
     */
    
    public String hostKey;
    public Users200ApplicationXMLUsers withHostKey(String hostKey) {
        this.hostKey = hostKey;
        return this;
    }
    
    /**
     * User ID.
     */
    
    public String id;
    public Users200ApplicationXMLUsers withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * IDs of IM directory groups where the user is a member.
     */
    
    public String[] imGroupIds;
    public Users200ApplicationXMLUsers withImGroupIds(String[] imGroupIds) {
        this.imGroupIds = imGroupIds;
        return this;
    }
    
    /**
     * The last client version that user used to login.
     */
    
    public String lastClientVersion;
    public Users200ApplicationXMLUsers withLastClientVersion(String lastClientVersion) {
        this.lastClientVersion = lastClientVersion;
        return this;
    }
    
    /**
     * User's last login time. There is a three-days buffer period for this field. For example, if user first logged in on 2020-01-01 and then logged out and logged in on 2020-01-02, the value of this field will still reflect the login time of 2020-01-01. However, if the user logs in on 2020-01-04, the value of this field will reflect the corresponding login time since it exceeds the three-day buffer period.
     */
    
    public OffsetDateTime lastLoginTime;
    public Users200ApplicationXMLUsers withLastLoginTime(OffsetDateTime lastLoginTime) {
        this.lastLoginTime = lastLoginTime;
        return this;
    }
    
    /**
     * User's last name.
     */
    
    public String lastName;
    public Users200ApplicationXMLUsers withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * This field is returned if the user is enrolled in the [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
     */
    
    public String planUnitedType;
    public Users200ApplicationXMLUsers withPlanUnitedType(String planUnitedType) {
        this.planUnitedType = planUnitedType;
        return this;
    }
    
    /**
     * Personal meeting ID of the user.
     */
    
    public Long pmi;
    public Users200ApplicationXMLUsers withPmi(Long pmi) {
        this.pmi = pmi;
        return this;
    }
    
    /**
     * Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.
     */
    
    public String roleId;
    public Users200ApplicationXMLUsers withRoleId(String roleId) {
        this.roleId = roleId;
        return this;
    }
    
    /**
     * User's status
     */
    
    public String status;
    public Users200ApplicationXMLUsers withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The time zone of the user.
     */
    
    public String timezone;
    public Users200ApplicationXMLUsers withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }
    
    /**
     * User's plan type.&lt;br&gt;
     * `1` - Basic.&lt;br&gt;
     * `2` - Licensed.&lt;br&gt;
     * `3` - On-prem.&lt;br&gt;
     * `99` - None (this can only be set with `ssoCreate`).
     * 
     */
    
    public Long type;
    public Users200ApplicationXMLUsers withType(Long type) {
        this.type = type;
        return this;
    }
    
    /**
     * Display whether the user's email address for the Zoom account is verified or not. &lt;br&gt;
     * `1` - Verified user email.&lt;br&gt;
     * `0` - User's email not verified.
     */
    
    public Long verified;
    public Users200ApplicationXMLUsers withVerified(Long verified) {
        this.verified = verified;
        return this;
    }
    
}
