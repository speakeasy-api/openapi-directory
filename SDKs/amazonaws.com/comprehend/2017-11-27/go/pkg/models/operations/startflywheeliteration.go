// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartFlywheelIterationXAmzTargetEnum
type StartFlywheelIterationXAmzTargetEnum string

const (
	StartFlywheelIterationXAmzTargetEnumComprehend20171127StartFlywheelIteration StartFlywheelIterationXAmzTargetEnum = "Comprehend_20171127.StartFlywheelIteration"
)

func (e *StartFlywheelIterationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Comprehend_20171127.StartFlywheelIteration":
		*e = StartFlywheelIterationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartFlywheelIterationXAmzTargetEnum: %s", s)
	}
}

type StartFlywheelIterationRequest struct {
	StartFlywheelIterationRequest shared.StartFlywheelIterationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    StartFlywheelIterationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartFlywheelIterationResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartFlywheelIterationResponse *shared.StartFlywheelIterationResponse
	StatusCode                     int
	RawResponse                    *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
