// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// UserEntitiesURL - Expanded details for the URL specified in the user's profile, with start and end indices.
type UserEntitiesURL struct {
	Urls []URLEntity `json:"urls,omitempty"`
}

// UserEntities - A list of metadata found in the user's profile description.
type UserEntities struct {
	Description *FullTextEntities `json:"description,omitempty"`
	// Expanded details for the URL specified in the user's profile, with start and end indices.
	URL *UserEntitiesURL `json:"url,omitempty"`
}

// UserPublicMetrics - A list of metrics for this user
type UserPublicMetrics struct {
	// Number of users who are following this user.
	FollowersCount int64 `json:"followers_count"`
	// Number of users this user is following.
	FollowingCount int64 `json:"following_count"`
	// The number of lists that include this user.
	ListedCount int64 `json:"listed_count"`
	// The number of Tweets (including Retweets) posted by this user.
	TweetCount int64 `json:"tweet_count"`
}

// User - The Twitter User object
type User struct {
	// Creation time of this user.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The text of this user's profile description (also known as bio), if the user provided one.
	Description *string `json:"description,omitempty"`
	// A list of metadata found in the user's profile description.
	Entities *UserEntities `json:"entities,omitempty"`
	// Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
	ID string `json:"id"`
	// The location specified in the user's profile, if the user provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.
	Location *string `json:"location,omitempty"`
	// The friendly name of this user, as shown on their profile.
	Name string `json:"name"`
	// Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.
	PinnedTweetID *string `json:"pinned_tweet_id,omitempty"`
	// The URL to the profile image for this user.
	ProfileImageURL *string `json:"profile_image_url,omitempty"`
	// Indicates if this user has chosen to protect their Tweets (in other words, if this user's Tweets are private).
	Protected *bool `json:"protected,omitempty"`
	// A list of metrics for this user
	PublicMetrics *UserPublicMetrics `json:"public_metrics,omitempty"`
	// The URL specified in the user's profile.
	URL *string `json:"url,omitempty"`
	// The Twitter handle (screen name) of this user.
	Username string `json:"username"`
	// Indicate if this user is a verified Twitter User.
	Verified *bool `json:"verified,omitempty"`
	// Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
	Withheld *UserWithheld `json:"withheld,omitempty"`
}
