<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudIntegrationsV1alphaParameterMap - A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudIntegrationsV1alphaParameterMap
{
    /**
     * A list of parameter map entries.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaParameterMapEntry> $entries
     */
	#[\JMS\Serializer\Annotation\SerializedName('entries')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaParameterMapEntry>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $entries = null;
    
    /**
     * Option to specify key type for all entries of the map. If provided then field types for all entries must conform to this.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaParameterMapKeyTypeEnum $keyType
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaParameterMapKeyTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudIntegrationsV1alphaParameterMapKeyTypeEnum $keyType = null;
    
    /**
     * Option to specify value type for all entries of the map. If provided then field types for all entries must conform to this.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaParameterMapValueTypeEnum $valueType
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudIntegrationsV1alphaParameterMapValueTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudIntegrationsV1alphaParameterMapValueTypeEnum $valueType = null;
    
	public function __construct()
	{
		$this->entries = null;
		$this->keyType = null;
		$this->valueType = null;
	}
}
