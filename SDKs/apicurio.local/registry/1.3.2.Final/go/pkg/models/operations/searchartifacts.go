// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SearchArtifactsOrderEnum - Sort order, ascending or descending.
type SearchArtifactsOrderEnum string

const (
	SearchArtifactsOrderEnumAsc  SearchArtifactsOrderEnum = "asc"
	SearchArtifactsOrderEnumDesc SearchArtifactsOrderEnum = "desc"
)

func (e SearchArtifactsOrderEnum) ToPointer() *SearchArtifactsOrderEnum {
	return &e
}

func (e *SearchArtifactsOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = SearchArtifactsOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchArtifactsOrderEnum: %v", v)
	}
}

// SearchArtifactsOverEnum - What fields to search.
type SearchArtifactsOverEnum string

const (
	SearchArtifactsOverEnumEverything  SearchArtifactsOverEnum = "everything"
	SearchArtifactsOverEnumName        SearchArtifactsOverEnum = "name"
	SearchArtifactsOverEnumDescription SearchArtifactsOverEnum = "description"
	SearchArtifactsOverEnumLabels      SearchArtifactsOverEnum = "labels"
)

func (e SearchArtifactsOverEnum) ToPointer() *SearchArtifactsOverEnum {
	return &e
}

func (e *SearchArtifactsOverEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "everything":
		fallthrough
	case "name":
		fallthrough
	case "description":
		fallthrough
	case "labels":
		*e = SearchArtifactsOverEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchArtifactsOverEnum: %v", v)
	}
}

type SearchArtifactsRequest struct {
	// The number of artifacts to return.
	Limit int64 `queryParam:"style=form,explode=true,name=limit"`
	// The number of artifacts to skip before starting to collect the result set.
	Offset int64 `queryParam:"style=form,explode=true,name=offset"`
	// Sort order, ascending or descending.
	Order *SearchArtifactsOrderEnum `queryParam:"style=form,explode=true,name=order"`
	// What fields to search.
	Over *SearchArtifactsOverEnum `queryParam:"style=form,explode=true,name=over"`
	// The text to search.
	Search *string `queryParam:"style=form,explode=true,name=search"`
}

type SearchArtifactsResponse struct {
	// On a successful response, returns a result set of artifacts - one for each artifact
	// in the registry that matches the criteria.
	ArtifactSearchResults *shared.ArtifactSearchResults
	ContentType           string
	// Common response for all operations that can fail with an unexpected server error.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
