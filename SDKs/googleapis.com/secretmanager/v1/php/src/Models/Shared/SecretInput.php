<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SecretInput - A Secret is a logical secret whose value and versions can be accessed. A Secret is made up of zero or more SecretVersions that represent the secret data.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SecretInput
{
    /**
     * Optional. Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]), and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of annotation keys and values must be less than 16KiB.
     * 
     * @var ?array<string, string> $annotations
     */
	#[\JMS\Serializer\Annotation\SerializedName('annotations')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $annotations = null;
    
    /**
     * Optional. Etag of the currently stored Secret.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Optional. Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent on input.
     * 
     * @var ?string $expireTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expireTime = null;
    
    /**
     * The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: `\p{Ll}\p{Lo}{0,62}` Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}` No more than 64 labels can be assigned to a given resource.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * A policy that defines the replication and encryption configuration of data.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Replication $replication
     */
	#[\JMS\Serializer\Annotation\SerializedName('replication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Replication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Replication $replication = null;
    
    /**
     * The rotation time and period for a Secret. At next_rotation_time, Secret Manager will send a Pub/Sub notification to the topics configured on the Secret. Secret.topics must be set to configure rotation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Rotation $rotation
     */
	#[\JMS\Serializer\Annotation\SerializedName('rotation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Rotation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Rotation $rotation = null;
    
    /**
     * Optional. A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret or its versions.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Topic> $topics
     */
	#[\JMS\Serializer\Annotation\SerializedName('topics')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Topic>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $topics = null;
    
    /**
     * Input only. The TTL for the Secret.
     * 
     * @var ?string $ttl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ttl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ttl = null;
    
    /**
     * Optional. Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can contain uppercase and lowercase letters, numerals, and the hyphen (`-`) and underscore ('_') characters. An alias string must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given secret. Version-Alias pairs will be viewable via GetSecret and modifiable via UpdateSecret. At launch Access by Allias will only be supported on GetSecretVersion and AccessSecretVersion.
     * 
     * @var ?array<string, string> $versionAliases
     */
	#[\JMS\Serializer\Annotation\SerializedName('versionAliases')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $versionAliases = null;
    
	public function __construct()
	{
		$this->annotations = null;
		$this->etag = null;
		$this->expireTime = null;
		$this->labels = null;
		$this->replication = null;
		$this->rotation = null;
		$this->topics = null;
		$this->ttl = null;
		$this->versionAliases = null;
	}
}
