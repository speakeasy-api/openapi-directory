<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Event - Successful response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Event
{
    /**
     * Address of the event's venue, if available.
     * 
     * @var ?string $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address = null;
    
    /**
     * City, town, village, etc. the event is located in.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * Country the event is located in.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('district')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DistrictList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DistrictList $district = null;
    
    /**
     * An array of event keys for the divisions at this event.
     * 
     * @var ?array<string> $divisionKeys
     */
	#[\JMS\Serializer\Annotation\SerializedName('division_keys')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $divisionKeys = null;
    
    /**
     * Event end date in `yyyy-mm-dd` format.
     * 
     * @var \DateTime $endDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('end_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $endDate;
    
    /**
     * Event short code, as provided by FIRST.
     * 
     * @var string $eventCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventCode;
    
    /**
     * Event Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/event_type.py#L2
     * 
     * @var int $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $eventType;
    
    /**
     * Event Type, eg Regional, District, or Offseason.
     * 
     * @var string $eventTypeString
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type_string')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventTypeString;
    
    /**
     * Public facing event code used by FIRST (on frc-events.firstinspires.org, for example)
     * 
     * @var ?string $firstEventCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_event_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstEventCode = null;
    
    /**
     * The FIRST internal Event ID, used to link to the event on the FRC webpage.
     * 
     * @var ?string $firstEventId
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_event_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstEventId = null;
    
    /**
     * Google Maps Place ID for the event address.
     * 
     * @var ?string $gmapsPlaceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('gmaps_place_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gmapsPlaceId = null;
    
    /**
     * Link to address location on Google Maps.
     * 
     * @var ?string $gmapsUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('gmaps_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gmapsUrl = null;
    
    /**
     * TBA event key with the format yyyy[EVENT_CODE], where yyyy is the year, and EVENT_CODE is the event code of the event.
     * 
     * @var string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $key;
    
    /**
     * Latitude for the event address.
     * 
     * @var ?float $lat
     */
	#[\JMS\Serializer\Annotation\SerializedName('lat')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $lat = null;
    
    /**
     * Longitude for the event address.
     * 
     * @var ?float $lng
     */
	#[\JMS\Serializer\Annotation\SerializedName('lng')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $lng = null;
    
    /**
     * Name of the location at the address for the event, eg. Blue Alliance High School.
     * 
     * @var ?string $locationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationName = null;
    
    /**
     * Official name of event on record either provided by FIRST or organizers of offseason event.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The TBA Event key that represents the event's parent. Used to link back to the event from a division event. It is also the inverse relation of `divison_keys`.
     * 
     * @var ?string $parentEventKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_event_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentEventKey = null;
    
    /**
     * Playoff Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/playoff_type.py#L4, or null.
     * 
     * @var ?int $playoffType
     */
	#[\JMS\Serializer\Annotation\SerializedName('playoff_type')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $playoffType = null;
    
    /**
     * String representation of the `playoff_type`, or null.
     * 
     * @var ?string $playoffTypeString
     */
	#[\JMS\Serializer\Annotation\SerializedName('playoff_type_string')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $playoffTypeString = null;
    
    /**
     * Postal code from the event address.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postal_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * Same as `name` but doesn't include event specifiers, such as 'Regional' or 'District'. May be null.
     * 
     * @var ?string $shortName
     */
	#[\JMS\Serializer\Annotation\SerializedName('short_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shortName = null;
    
    /**
     * Event start date in `yyyy-mm-dd` format.
     * 
     * @var \DateTime $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $startDate;
    
    /**
     * State or Province the event is located in.
     * 
     * @var ?string $stateProv
     */
	#[\JMS\Serializer\Annotation\SerializedName('state_prov')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stateProv = null;
    
    /**
     * Timezone name.
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
    /**
     * $webcasts
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Webcast> $webcasts
     */
	#[\JMS\Serializer\Annotation\SerializedName('webcasts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Webcast>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $webcasts = null;
    
    /**
     * The event's website, if any.
     * 
     * @var ?string $website
     */
	#[\JMS\Serializer\Annotation\SerializedName('website')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $website = null;
    
    /**
     * Week of the event relative to the first official season event, zero-indexed. Only valid for Regionals, Districts, and District Championships. Null otherwise. (Eg. A season with a week 0 'preseason' event does not count, and week 1 events will show 0 here. Seasons with a week 0.5 regional event will show week 0 for those event(s) and week 1 for week 1 events and so on.)
     * 
     * @var ?int $week
     */
	#[\JMS\Serializer\Annotation\SerializedName('week')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $week = null;
    
    /**
     * Year the event data is for.
     * 
     * @var int $year
     */
	#[\JMS\Serializer\Annotation\SerializedName('year')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $year;
    
	public function __construct()
	{
		$this->address = null;
		$this->city = null;
		$this->country = null;
		$this->district = null;
		$this->divisionKeys = null;
		$this->endDate = new \DateTime();
		$this->eventCode = "";
		$this->eventType = 0;
		$this->eventTypeString = "";
		$this->firstEventCode = null;
		$this->firstEventId = null;
		$this->gmapsPlaceId = null;
		$this->gmapsUrl = null;
		$this->key = "";
		$this->lat = null;
		$this->lng = null;
		$this->locationName = null;
		$this->name = "";
		$this->parentEventKey = null;
		$this->playoffType = null;
		$this->playoffTypeString = null;
		$this->postalCode = null;
		$this->shortName = null;
		$this->startDate = new \DateTime();
		$this->stateProv = null;
		$this->timezone = null;
		$this->webcasts = null;
		$this->website = null;
		$this->week = null;
		$this->year = 0;
	}
}
