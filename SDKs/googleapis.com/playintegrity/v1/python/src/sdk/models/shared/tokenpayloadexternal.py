"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountdetails as shared_accountdetails
from ..shared import appintegrity as shared_appintegrity
from ..shared import deviceintegrity as shared_deviceintegrity
from ..shared import requestdetails as shared_requestdetails
from ..shared import testingdetails as shared_testingdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TokenPayloadExternal:
    r"""Contains basic app information and integrity signals like device attestation and licensing details."""
    
    account_details: Optional[shared_accountdetails.AccountDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountDetails'), 'exclude': lambda f: f is None }})
    r"""Contains the account information such as the licensing status for the user in the scope."""  
    app_integrity: Optional[shared_appintegrity.AppIntegrity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appIntegrity'), 'exclude': lambda f: f is None }})
    r"""Contains the application integrity information."""  
    device_integrity: Optional[shared_deviceintegrity.DeviceIntegrity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceIntegrity'), 'exclude': lambda f: f is None }})
    r"""Contains the device attestation information."""  
    request_details: Optional[shared_requestdetails.RequestDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestDetails'), 'exclude': lambda f: f is None }})
    r"""Contains the integrity request information."""  
    testing_details: Optional[shared_testingdetails.TestingDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testingDetails'), 'exclude': lambda f: f is None }})
    r"""Contains additional information generated for testing responses."""  
    