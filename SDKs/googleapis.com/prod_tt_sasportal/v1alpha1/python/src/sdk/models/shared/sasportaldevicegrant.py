"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sasportaldpamovelist as shared_sasportaldpamovelist
from ..shared import sasportalfrequencyrange as shared_sasportalfrequencyrange
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SasPortalDeviceGrantChannelTypeEnum(str, Enum):
    r"""Type of channel used."""
    CHANNEL_TYPE_UNSPECIFIED = 'CHANNEL_TYPE_UNSPECIFIED'
    CHANNEL_TYPE_GAA = 'CHANNEL_TYPE_GAA'
    CHANNEL_TYPE_PAL = 'CHANNEL_TYPE_PAL'

class SasPortalDeviceGrantStateEnum(str, Enum):
    r"""State of the grant."""
    GRANT_STATE_UNSPECIFIED = 'GRANT_STATE_UNSPECIFIED'
    GRANT_STATE_GRANTED = 'GRANT_STATE_GRANTED'
    GRANT_STATE_TERMINATED = 'GRANT_STATE_TERMINATED'
    GRANT_STATE_SUSPENDED = 'GRANT_STATE_SUSPENDED'
    GRANT_STATE_AUTHORIZED = 'GRANT_STATE_AUTHORIZED'
    GRANT_STATE_EXPIRED = 'GRANT_STATE_EXPIRED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SasPortalDeviceGrant:
    r"""Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device."""
    
    channel_type: Optional[SasPortalDeviceGrantChannelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelType'), 'exclude': lambda f: f is None }})
    r"""Type of channel used."""  
    expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireTime'), 'exclude': lambda f: f is None }})
    r"""The expiration time of the grant."""  
    frequency_range: Optional[shared_sasportalfrequencyrange.SasPortalFrequencyRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequencyRange'), 'exclude': lambda f: f is None }})
    r"""Frequency range from `low_frequency` to `high_frequency`."""  
    grant_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grantId'), 'exclude': lambda f: f is None }})
    r"""Grant Id."""  
    last_heartbeat_transmit_expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastHeartbeatTransmitExpireTime'), 'exclude': lambda f: f is None }})
    r"""The transmit expiration time of the last heartbeat."""  
    max_eirp: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxEirp'), 'exclude': lambda f: f is None }})
    r"""Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3)."""  
    move_list: Optional[list[shared_sasportaldpamovelist.SasPortalDpaMoveList]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('moveList'), 'exclude': lambda f: f is None }})
    r"""The DPA move lists on which this grant appears."""  
    state: Optional[SasPortalDeviceGrantStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State of the grant."""  
    suspension_reason: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suspensionReason'), 'exclude': lambda f: f is None }})
    r"""If the grant is suspended, the reason(s) for suspension."""  
    