/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StepActionTypeEnum } from "./stepactiontypeenum";
import { StepAutomationConfiguration } from "./stepautomationconfiguration";
import { StepOutput } from "./stepoutput";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class GetTemplateStepResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  creationTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string[];

  @SpeakeasyMetadata({ elemType: StepOutput })
  @Expose({ name: "outputs" })
  @Type(() => StepOutput)
  outputs?: StepOutput[];

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "stepActionType" })
  stepActionType?: StepActionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stepAutomationConfiguration" })
  @Type(() => StepAutomationConfiguration)
  stepAutomationConfiguration?: StepAutomationConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "stepGroupId" })
  stepGroupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "templateId" })
  templateId?: string;
}
