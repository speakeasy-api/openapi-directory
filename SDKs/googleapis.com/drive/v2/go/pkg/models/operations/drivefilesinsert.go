// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DriveFilesInsertSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesInsertSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesInsertSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesInsertSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesInsertSecurity struct {
	Option1 *DriveFilesInsertSecurityOption1 `security:"option"`
	Option2 *DriveFilesInsertSecurityOption2 `security:"option"`
	Option3 *DriveFilesInsertSecurityOption3 `security:"option"`
	Option4 *DriveFilesInsertSecurityOption4 `security:"option"`
}

// DriveFilesInsertVisibilityEnum - The visibility of the new file. This parameter is only relevant when convert=false.
type DriveFilesInsertVisibilityEnum string

const (
	DriveFilesInsertVisibilityEnumDefault DriveFilesInsertVisibilityEnum = "DEFAULT"
	DriveFilesInsertVisibilityEnumPrivate DriveFilesInsertVisibilityEnum = "PRIVATE"
)

func (e DriveFilesInsertVisibilityEnum) ToPointer() *DriveFilesInsertVisibilityEnum {
	return &e
}

func (e *DriveFilesInsertVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEFAULT":
		fallthrough
	case "PRIVATE":
		*e = DriveFilesInsertVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DriveFilesInsertVisibilityEnum: %v", v)
	}
}

type DriveFilesInsertRequest struct {
	RequestBody []byte `request:"mediaType=application/octet-stream"`
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Whether to convert this file to the corresponding Docs Editors format.
	Convert *bool `queryParam:"style=form,explode=true,name=convert"`
	// Deprecated. Creating files in multiple folders is no longer supported.
	EnforceSingleParent *bool `queryParam:"style=form,explode=true,name=enforceSingleParent"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// A comma-separated list of IDs of labels to include in the labelInfo part of the response.
	IncludeLabels *string `queryParam:"style=form,explode=true,name=includeLabels"`
	// Specifies which additional view's permissions to include in the response. Only 'published' is supported.
	IncludePermissionsForView *string `queryParam:"style=form,explode=true,name=includePermissionsForView"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.
	Ocr *bool `queryParam:"style=form,explode=true,name=ocr"`
	// If ocr is true, hints at the language to use. Valid values are BCP 47 codes.
	OcrLanguage *string `queryParam:"style=form,explode=true,name=ocrLanguage"`
	// Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.
	Pinned *bool `queryParam:"style=form,explode=true,name=pinned"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Whether the requesting application supports both My Drives and shared drives.
	SupportsAllDrives *bool `queryParam:"style=form,explode=true,name=supportsAllDrives"`
	// Deprecated use supportsAllDrives instead.
	SupportsTeamDrives *bool `queryParam:"style=form,explode=true,name=supportsTeamDrives"`
	// The language of the timed text.
	TimedTextLanguage *string `queryParam:"style=form,explode=true,name=timedTextLanguage"`
	// The timed text track name.
	TimedTextTrackName *string `queryParam:"style=form,explode=true,name=timedTextTrackName"`
	// Whether to use the content as indexable text.
	UseContentAsIndexableText *bool `queryParam:"style=form,explode=true,name=useContentAsIndexableText"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
	// The visibility of the new file. This parameter is only relevant when convert=false.
	Visibility *DriveFilesInsertVisibilityEnum `queryParam:"style=form,explode=true,name=visibility"`
}

type DriveFilesInsertResponse struct {
	ContentType string
	// Successful response
	File        *shared.File
	StatusCode  int
	RawResponse *http.Response
}
