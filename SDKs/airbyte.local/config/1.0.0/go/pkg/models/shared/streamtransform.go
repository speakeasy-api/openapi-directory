// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StreamTransformTransformTypeEnum string

const (
	StreamTransformTransformTypeEnumAddStream    StreamTransformTransformTypeEnum = "add_stream"
	StreamTransformTransformTypeEnumRemoveStream StreamTransformTransformTypeEnum = "remove_stream"
	StreamTransformTransformTypeEnumUpdateStream StreamTransformTransformTypeEnum = "update_stream"
)

func (e *StreamTransformTransformTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "add_stream":
		fallthrough
	case "remove_stream":
		fallthrough
	case "update_stream":
		*e = StreamTransformTransformTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamTransformTransformTypeEnum: %s", s)
	}
}

type StreamTransform struct {
	StreamDescriptor StreamDescriptor                 `json:"streamDescriptor"`
	TransformType    StreamTransformTransformTypeEnum `json:"transformType"`
	// list of field transformations. order does not matter.
	UpdateStream []FieldTransform `json:"updateStream,omitempty"`
}
