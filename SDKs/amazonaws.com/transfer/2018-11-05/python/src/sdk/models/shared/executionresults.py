"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import executionstepresult as shared_executionstepresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExecutionResults:
    r"""Specifies the steps in the workflow, as well as the steps to execute in case of any errors during workflow execution."""
    
    on_exception_steps: Optional[list[shared_executionstepresult.ExecutionStepResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnExceptionSteps'), 'exclude': lambda f: f is None }})  
    steps: Optional[list[shared_executionstepresult.ExecutionStepResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Steps'), 'exclude': lambda f: f is None }})  
    