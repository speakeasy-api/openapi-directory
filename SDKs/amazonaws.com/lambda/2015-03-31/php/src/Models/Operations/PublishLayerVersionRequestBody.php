<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PublishLayerVersionRequestBody
{
    /**
     * A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html">instruction set architectures</a>.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ArchitectureEnum> $compatibleArchitectures
     */
	#[\JMS\Serializer\Annotation\SerializedName('CompatibleArchitectures')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\ArchitectureEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $compatibleArchitectures = null;
    
    /**
     * A list of compatible <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RuntimeEnum> $compatibleRuntimes
     */
	#[\JMS\Serializer\Annotation\SerializedName('CompatibleRuntimes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\RuntimeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $compatibleRuntimes = null;
    
    /**
     * A ZIP archive that contains the contents of an <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PublishLayerVersionRequestBodyContent $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('Content')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PublishLayerVersionRequestBodyContent')]
    public PublishLayerVersionRequestBodyContent $content;
    
    /**
     * The description of the version.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * <p>The layer's software license. It can be any of the following:</p> <ul> <li> <p>An <a href="https://spdx.org/licenses/">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>
     * 
     * @var ?string $licenseInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('LicenseInfo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $licenseInfo = null;
    
	public function __construct()
	{
		$this->compatibleArchitectures = null;
		$this->compatibleRuntimes = null;
		$this->content = new \OpenAPI\OpenAPI\Models\Operations\PublishLayerVersionRequestBodyContent();
		$this->description = null;
		$this->licenseInfo = null;
	}
}
