/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoTaskMetadata } from "./enterprisecrmeventbusprototaskmetadata";
import { EnterpriseCrmEventbusProtoTaskUiConfig } from "./enterprisecrmeventbusprototaskuiconfig";
import { EnterpriseCrmEventbusStats } from "./enterprisecrmeventbusstats";
import { EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage } from "./enterprisecrmfrontendseventbusprotoparamspecsmessage";
import { Expose, Type } from "class-transformer";

/**
 * Defines the type of the task
 */
export enum EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskTypeEnum {
  Task = "TASK",
  AsisTemplate = "ASIS_TEMPLATE",
  IoTemplate = "IO_TEMPLATE",
}

/**
 * Contains a task's metadata and associated information. Next available id: 7
 */
export class EnterpriseCrmFrontendsEventbusProtoTaskEntity extends SpeakeasyBase {
  /**
   * True if the task has conflict with vpcsc
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabledForVpcSc" })
  disabledForVpcSc?: boolean;

  /**
   * TaskMetadata are attributes that are associated to every common Task we have.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => EnterpriseCrmEventbusProtoTaskMetadata)
  metadata?: EnterpriseCrmEventbusProtoTaskMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "paramSpecs" })
  @Type(() => EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage)
  paramSpecs?: EnterpriseCrmFrontendsEventbusProtoParamSpecsMessage;

  /**
   * Stats for the requested dimensions: QPS, duration, and error/warning rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stats" })
  @Type(() => EnterpriseCrmEventbusStats)
  stats?: EnterpriseCrmEventbusStats;

  /**
   * Defines the type of the task
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskType" })
  taskType?: EnterpriseCrmFrontendsEventbusProtoTaskEntityTaskTypeEnum;

  /**
   * Task authors would use this type to configure the UI for a particular task by specifying what UI config modules should be included to compose the UI. Learn more about config module framework:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uiConfig" })
  @Type(() => EnterpriseCrmEventbusProtoTaskUiConfig)
  uiConfig?: EnterpriseCrmEventbusProtoTaskUiConfig;
}
