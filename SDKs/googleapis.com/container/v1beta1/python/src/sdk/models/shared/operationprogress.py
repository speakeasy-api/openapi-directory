"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metric as shared_metric
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OperationProgressStatusEnum(str, Enum):
    r"""Status of an operation stage. Unset for single-stage operations."""
    STATUS_UNSPECIFIED = 'STATUS_UNSPECIFIED'
    PENDING = 'PENDING'
    RUNNING = 'RUNNING'
    DONE = 'DONE'
    ABORTING = 'ABORTING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OperationProgress:
    r"""Information about operation (or operation stage) progress."""
    
    metrics: Optional[list[shared_metric.Metric]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics'), 'exclude': lambda f: f is None }})
    r"""Progress metric bundle, for example: metrics: [{name: \\"nodes done\\", int_value: 15}, {name: \\"nodes total\\", int_value: 32}] or metrics: [{name: \\"progress\\", double_value: 0.56}, {name: \\"progress scale\\", double_value: 1.0}]"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""A non-parameterized string describing an operation stage. Unset for single-stage operations."""  
    stages: Optional[list[OperationProgress]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stages'), 'exclude': lambda f: f is None }})
    r"""Substages of an operation or a stage."""  
    status: Optional[OperationProgressStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of an operation stage. Unset for single-stage operations."""  
    