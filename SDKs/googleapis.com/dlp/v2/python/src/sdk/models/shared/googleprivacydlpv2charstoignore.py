"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreEnum(str, Enum):
    r"""Common characters to not transform when masking. Useful to avoid removing punctuation."""
    COMMON_CHARS_TO_IGNORE_UNSPECIFIED = 'COMMON_CHARS_TO_IGNORE_UNSPECIFIED'
    NUMERIC = 'NUMERIC'
    ALPHA_UPPER_CASE = 'ALPHA_UPPER_CASE'
    ALPHA_LOWER_CASE = 'ALPHA_LOWER_CASE'
    PUNCTUATION = 'PUNCTUATION'
    WHITESPACE = 'WHITESPACE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2CharsToIgnore:
    r"""Characters to skip when doing deidentification of a value. These will be left alone and skipped."""
    
    characters_to_skip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('charactersToSkip'), 'exclude': lambda f: f is None }})
    r"""Characters to not transform when masking."""  
    common_characters_to_ignore: Optional[GooglePrivacyDlpV2CharsToIgnoreCommonCharactersToIgnoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonCharactersToIgnore'), 'exclude': lambda f: f is None }})
    r"""Common characters to not transform when masking. Useful to avoid removing punctuation."""  
    