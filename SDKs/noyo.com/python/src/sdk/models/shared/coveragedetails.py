"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CoverageDetails:
    
    dependent_coverage: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dependent_coverage'), 'exclude': lambda f: f is None }})
    r"""Boolean, whether dependent coverage is offered"""  
    elected_official_coverage: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('elected_official_coverage'), 'exclude': lambda f: f is None }})
    r"""Boolean, whether elected official coverage is offered"""  
    retiree_coverage: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retiree_coverage'), 'exclude': lambda f: f is None }})
    r"""Boolean, whether retiree coverage is offered"""  
    