/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConversionWorkspace - The main conversion workspace resource entity.
 */
public class ConversionWorkspace {
    /**
     * Output only. The timestamp when the workspace resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public ConversionWorkspace withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The type and version of a source or destination database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination")
    public DatabaseEngineInfo destination;

    public ConversionWorkspace withDestination(DatabaseEngineInfo destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * The display name for the workspace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public ConversionWorkspace withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A generic list of settings for the workspace. The settings are database pair dependant and can indicate default behavior for the mapping rules engine or turn on or off specific features. Such examples can be: convert_foreign_key_to_interleave=true, skip_triggers=false, ignore_non_table_synonyms=true
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("globalSettings")
    public java.util.Map<String, String> globalSettings;

    public ConversionWorkspace withGlobalSettings(java.util.Map<String, String> globalSettings) {
        this.globalSettings = globalSettings;
        return this;
    }
    
    /**
     * Output only. Whether the workspace has uncommitted changes (changes which were made after the workspace was committed).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasUncommittedChanges")
    public Boolean hasUncommittedChanges;

    public ConversionWorkspace withHasUncommittedChanges(Boolean hasUncommittedChanges) {
        this.hasUncommittedChanges = hasUncommittedChanges;
        return this;
    }
    
    /**
     * Output only. The latest commit ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestCommitId")
    public String latestCommitId;

    public ConversionWorkspace withLatestCommitId(String latestCommitId) {
        this.latestCommitId = latestCommitId;
        return this;
    }
    
    /**
     * Output only. The timestamp when the workspace was committed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestCommitTime")
    public String latestCommitTime;

    public ConversionWorkspace withLatestCommitTime(String latestCommitTime) {
        this.latestCommitTime = latestCommitTime;
        return this;
    }
    
    /**
     * Full name of the workspace resource, in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ConversionWorkspace withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The type and version of a source or destination database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public DatabaseEngineInfo source;

    public ConversionWorkspace withSource(DatabaseEngineInfo source) {
        this.source = source;
        return this;
    }
    
    /**
     * Output only. The timestamp when the workspace resource was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public ConversionWorkspace withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public ConversionWorkspace(){}
}
