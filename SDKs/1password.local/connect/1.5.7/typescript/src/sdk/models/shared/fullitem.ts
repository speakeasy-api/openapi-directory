/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Field, FieldInput } from "./field";
import { File, FileInput } from "./file";
import { Expose, Transform, Type } from "class-transformer";

export enum FullItemCategoryEnum {
  Login = "LOGIN",
  Password = "PASSWORD",
  ApiCredential = "API_CREDENTIAL",
  Server = "SERVER",
  Database = "DATABASE",
  CreditCard = "CREDIT_CARD",
  Membership = "MEMBERSHIP",
  Passport = "PASSPORT",
  SoftwareLicense = "SOFTWARE_LICENSE",
  OutdoorLicense = "OUTDOOR_LICENSE",
  SecureNote = "SECURE_NOTE",
  WirelessRouter = "WIRELESS_ROUTER",
  BankAccount = "BANK_ACCOUNT",
  DriverLicense = "DRIVER_LICENSE",
  Identity = "IDENTITY",
  RewardProgram = "REWARD_PROGRAM",
  Document = "DOCUMENT",
  EmailAccount = "EMAIL_ACCOUNT",
  SocialSecurityNumber = "SOCIAL_SECURITY_NUMBER",
  MedicalRecord = "MEDICAL_RECORD",
  SshKey = "SSH_KEY",
  Custom = "CUSTOM",
}

export class FullItemSections extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;
}

export class FullItemUrls extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href: string;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: boolean;
}

export class FullItemVault extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class FullItemInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category: FullItemCategoryEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "favorite" })
  favorite?: boolean;

  @SpeakeasyMetadata({ elemType: FieldInput })
  @Expose({ name: "fields" })
  @Type(() => FieldInput)
  fields?: FieldInput[];

  @SpeakeasyMetadata({ elemType: FileInput })
  @Expose({ name: "files" })
  @Type(() => FileInput)
  files?: FileInput[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: FullItemSections })
  @Expose({ name: "sections" })
  @Type(() => FullItemSections)
  sections?: FullItemSections[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata({ elemType: FullItemUrls })
  @Expose({ name: "urls" })
  @Type(() => FullItemUrls)
  urls?: FullItemUrls[];

  @SpeakeasyMetadata()
  @Expose({ name: "vault" })
  @Type(() => FullItemVault)
  vault: FullItemVault;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}

export enum FullItemStateEnum {
  Archived = "ARCHIVED",
  Deleted = "DELETED",
}

/**
 * OK
 */
export class FullItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category: FullItemCategoryEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "favorite" })
  favorite?: boolean;

  @SpeakeasyMetadata({ elemType: Field })
  @Expose({ name: "fields" })
  @Type(() => Field)
  fields?: Field[];

  @SpeakeasyMetadata({ elemType: File })
  @Expose({ name: "files" })
  @Type(() => File)
  files?: File[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastEditedBy" })
  lastEditedBy?: string;

  @SpeakeasyMetadata({ elemType: FullItemSections })
  @Expose({ name: "sections" })
  @Type(() => FullItemSections)
  sections?: FullItemSections[];

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: FullItemStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata({ elemType: FullItemUrls })
  @Expose({ name: "urls" })
  @Type(() => FullItemUrls)
  urls?: FullItemUrls[];

  @SpeakeasyMetadata()
  @Expose({ name: "vault" })
  @Type(() => FullItemVault)
  vault: FullItemVault;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
