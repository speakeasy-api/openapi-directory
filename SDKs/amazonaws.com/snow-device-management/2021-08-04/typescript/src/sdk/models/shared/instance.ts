/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CpuOptions } from "./cpuoptions";
import { InstanceBlockDeviceMapping } from "./instanceblockdevicemapping";
import { InstanceState } from "./instancestate";
import { SecurityGroupIdentifier } from "./securitygroupidentifier";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The description of an instance. Currently, Amazon EC2 instances are the only supported instance type.
 */
export class Instance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amiLaunchIndex" })
  amiLaunchIndex?: number;

  @SpeakeasyMetadata({ elemType: InstanceBlockDeviceMapping })
  @Expose({ name: "blockDeviceMappings" })
  @Type(() => InstanceBlockDeviceMapping)
  blockDeviceMappings?: InstanceBlockDeviceMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "cpuOptions" })
  @Type(() => CpuOptions)
  cpuOptions?: CpuOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "imageId" })
  imageId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceId" })
  instanceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceType" })
  instanceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "privateIpAddress" })
  privateIpAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publicIpAddress" })
  publicIpAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rootDeviceName" })
  rootDeviceName?: string;

  @SpeakeasyMetadata({ elemType: SecurityGroupIdentifier })
  @Expose({ name: "securityGroups" })
  @Type(() => SecurityGroupIdentifier)
  securityGroups?: SecurityGroupIdentifier[];

  /**
   * The description of the current state of an instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => InstanceState)
  state?: InstanceState;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
