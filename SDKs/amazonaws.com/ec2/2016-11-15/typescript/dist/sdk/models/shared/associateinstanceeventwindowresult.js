"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssociateInstanceEventWindowResult = exports.AssociateInstanceEventWindowResultInstanceEventWindow = exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges = exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = exports.AssociateInstanceEventWindowResultInstanceEventWindowTags = exports.AssociateInstanceEventWindowResultInstanceEventWindowStateEnum = exports.AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget = exports.AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Describes a tag.
 */
var AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags = /** @class */ (function (_super) {
    __extends(AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags, _super);
    function AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags.prototype, "value", void 0);
    return AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags;
}(utils_1.SpeakeasyBase));
exports.AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags = AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags;
/**
 * One or more targets associated with the event window.
 */
var AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget = /** @class */ (function (_super) {
    __extends(AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget, _super);
    function AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget.prototype, "dedicatedHostIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget.prototype, "instanceIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags,
        }),
        __metadata("design:type", Array)
    ], AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget.prototype, "tags", void 0);
    return AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget;
}(utils_1.SpeakeasyBase));
exports.AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget = AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget;
/**
 * The current state of the event window.
 */
var AssociateInstanceEventWindowResultInstanceEventWindowStateEnum;
(function (AssociateInstanceEventWindowResultInstanceEventWindowStateEnum) {
    AssociateInstanceEventWindowResultInstanceEventWindowStateEnum["Creating"] = "creating";
    AssociateInstanceEventWindowResultInstanceEventWindowStateEnum["Deleting"] = "deleting";
    AssociateInstanceEventWindowResultInstanceEventWindowStateEnum["Active"] = "active";
    AssociateInstanceEventWindowResultInstanceEventWindowStateEnum["Deleted"] = "deleted";
})(AssociateInstanceEventWindowResultInstanceEventWindowStateEnum = exports.AssociateInstanceEventWindowResultInstanceEventWindowStateEnum || (exports.AssociateInstanceEventWindowResultInstanceEventWindowStateEnum = {}));
/**
 * Describes a tag.
 */
var AssociateInstanceEventWindowResultInstanceEventWindowTags = /** @class */ (function (_super) {
    __extends(AssociateInstanceEventWindowResultInstanceEventWindowTags, _super);
    function AssociateInstanceEventWindowResultInstanceEventWindowTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindowTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindowTags.prototype, "value", void 0);
    return AssociateInstanceEventWindowResultInstanceEventWindowTags;
}(utils_1.SpeakeasyBase));
exports.AssociateInstanceEventWindowResultInstanceEventWindowTags = AssociateInstanceEventWindowResultInstanceEventWindowTags;
/**
 * The day on which the time range ends.
 */
var AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum;
(function (AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum) {
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum["Sunday"] = "sunday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum["Monday"] = "monday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum["Tuesday"] = "tuesday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum["Wednesday"] = "wednesday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum["Thursday"] = "thursday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum["Friday"] = "friday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum["Saturday"] = "saturday";
})(AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum || (exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = {}));
/**
 * The day on which the time range begins.
 */
var AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum;
(function (AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum) {
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum["Sunday"] = "sunday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum["Monday"] = "monday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum["Tuesday"] = "tuesday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum["Wednesday"] = "wednesday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum["Thursday"] = "thursday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum["Friday"] = "friday";
    AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum["Saturday"] = "saturday";
})(AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum || (exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = {}));
/**
 * The start day and time and the end day and time of the time range, in UTC.
 */
var AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges = /** @class */ (function (_super) {
    __extends(AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges, _super);
    function AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges.prototype, "endHour", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges.prototype, "endWeekDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges.prototype, "startHour", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges.prototype, "startWeekDay", void 0);
    return AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges;
}(utils_1.SpeakeasyBase));
exports.AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges = AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges;
/**
 * Information about the event window.
 */
var AssociateInstanceEventWindowResultInstanceEventWindow = /** @class */ (function (_super) {
    __extends(AssociateInstanceEventWindowResultInstanceEventWindow, _super);
    function AssociateInstanceEventWindowResultInstanceEventWindow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget)
    ], AssociateInstanceEventWindowResultInstanceEventWindow.prototype, "associationTarget", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindow.prototype, "cronExpression", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindow.prototype, "instanceEventWindowId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindow.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssociateInstanceEventWindowResultInstanceEventWindow.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AssociateInstanceEventWindowResultInstanceEventWindowTags,
        }),
        __metadata("design:type", Array)
    ], AssociateInstanceEventWindowResultInstanceEventWindow.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges,
        }),
        __metadata("design:type", Array)
    ], AssociateInstanceEventWindowResultInstanceEventWindow.prototype, "timeRanges", void 0);
    return AssociateInstanceEventWindowResultInstanceEventWindow;
}(utils_1.SpeakeasyBase));
exports.AssociateInstanceEventWindowResultInstanceEventWindow = AssociateInstanceEventWindowResultInstanceEventWindow;
/**
 * Success
 */
var AssociateInstanceEventWindowResult = /** @class */ (function (_super) {
    __extends(AssociateInstanceEventWindowResult, _super);
    function AssociateInstanceEventWindowResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AssociateInstanceEventWindowResultInstanceEventWindow)
    ], AssociateInstanceEventWindowResult.prototype, "instanceEventWindow", void 0);
    return AssociateInstanceEventWindowResult;
}(utils_1.SpeakeasyBase));
exports.AssociateInstanceEventWindowResult = AssociateInstanceEventWindowResult;
