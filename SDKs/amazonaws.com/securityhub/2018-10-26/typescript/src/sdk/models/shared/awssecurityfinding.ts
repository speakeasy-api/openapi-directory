/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Action } from "./action";
import { Compliance } from "./compliance";
import { FindingProviderFields } from "./findingproviderfields";
import { Malware } from "./malware";
import { Network } from "./network";
import { NetworkPathComponent } from "./networkpathcomponent";
import { Note } from "./note";
import { PatchSummary } from "./patchsummary";
import { ProcessDetails } from "./processdetails";
import { RecordStateEnum } from "./recordstateenum";
import { RelatedFinding } from "./relatedfinding";
import { Remediation } from "./remediation";
import { Resource } from "./resource";
import { Severity } from "./severity";
import { Threat } from "./threat";
import { ThreatIntelIndicator } from "./threatintelindicator";
import { VerificationStateEnum } from "./verificationstateenum";
import { Vulnerability } from "./vulnerability";
import { Workflow } from "./workflow";
import { WorkflowStateEnum } from "./workflowstateenum";
import { Expose, Type } from "class-transformer";

/**
 * <p>Provides a consistent format for Security Hub findings. <code>AwsSecurityFinding</code> format allows you to share findings between Amazon Web Services security services and third-party solutions.</p> <note> <p>A finding is a potential security issue generated either by Amazon Web Services services or by the integrated third-party solutions and standards checks.</p> </note>
 */
export class AwsSecurityFinding extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Action" })
  @Type(() => Action)
  action?: Action;

  @SpeakeasyMetadata()
  @Expose({ name: "AwsAccountId" })
  awsAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CompanyName" })
  companyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Compliance" })
  @Type(() => Compliance)
  compliance?: Compliance;

  @SpeakeasyMetadata()
  @Expose({ name: "Confidence" })
  confidence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  createdAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Criticality" })
  criticality?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FindingProviderFields" })
  @Type(() => FindingProviderFields)
  findingProviderFields?: FindingProviderFields;

  @SpeakeasyMetadata()
  @Expose({ name: "FirstObservedAt" })
  firstObservedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GeneratorId" })
  generatorId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastObservedAt" })
  lastObservedAt?: string;

  @SpeakeasyMetadata({ elemType: Malware })
  @Expose({ name: "Malware" })
  @Type(() => Malware)
  malware?: Malware[];

  @SpeakeasyMetadata()
  @Expose({ name: "Network" })
  @Type(() => Network)
  network?: Network;

  @SpeakeasyMetadata({ elemType: NetworkPathComponent })
  @Expose({ name: "NetworkPath" })
  @Type(() => NetworkPathComponent)
  networkPath?: NetworkPathComponent[];

  @SpeakeasyMetadata()
  @Expose({ name: "Note" })
  @Type(() => Note)
  note?: Note;

  @SpeakeasyMetadata()
  @Expose({ name: "PatchSummary" })
  @Type(() => PatchSummary)
  patchSummary?: PatchSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "Process" })
  @Type(() => ProcessDetails)
  process?: ProcessDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductArn" })
  productArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductFields" })
  productFields?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductName" })
  productName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RecordState" })
  recordState?: RecordStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Region" })
  region?: string;

  @SpeakeasyMetadata({ elemType: RelatedFinding })
  @Expose({ name: "RelatedFindings" })
  @Type(() => RelatedFinding)
  relatedFindings?: RelatedFinding[];

  @SpeakeasyMetadata()
  @Expose({ name: "Remediation" })
  @Type(() => Remediation)
  remediation?: Remediation;

  @SpeakeasyMetadata({ elemType: Resource })
  @Expose({ name: "Resources" })
  @Type(() => Resource)
  resources: Resource[];

  @SpeakeasyMetadata()
  @Expose({ name: "Sample" })
  sample?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "SchemaVersion" })
  schemaVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Severity" })
  @Type(() => Severity)
  severity?: Severity;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceUrl" })
  sourceUrl?: string;

  @SpeakeasyMetadata({ elemType: ThreatIntelIndicator })
  @Expose({ name: "ThreatIntelIndicators" })
  @Type(() => ThreatIntelIndicator)
  threatIntelIndicators?: ThreatIntelIndicator[];

  @SpeakeasyMetadata({ elemType: Threat })
  @Expose({ name: "Threats" })
  @Type(() => Threat)
  threats?: Threat[];

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Types" })
  types?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  updatedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UserDefinedFields" })
  userDefinedFields?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "VerificationState" })
  verificationState?: VerificationStateEnum;

  @SpeakeasyMetadata({ elemType: Vulnerability })
  @Expose({ name: "Vulnerabilities" })
  @Type(() => Vulnerability)
  vulnerabilities?: Vulnerability[];

  @SpeakeasyMetadata()
  @Expose({ name: "Workflow" })
  @Type(() => Workflow)
  workflow?: Workflow;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkflowState" })
  workflowState?: WorkflowStateEnum;
}
