"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeNetworkInterfacesResult = exports.DescribeNetworkInterfacesResultNetworkInterfaces = exports.DescribeNetworkInterfacesResultNetworkInterfacesTagSet = exports.DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum = exports.DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses = exports.DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation = exports.DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes = exports.DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses = exports.DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes = exports.DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum = exports.DescribeNetworkInterfacesResultNetworkInterfacesGroups = exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachment = exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum = exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification = exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification = exports.DescribeNetworkInterfacesResultNetworkInterfacesAssociation = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The association information for an Elastic IP address (IPv4) associated with the network interface.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesAssociation = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesAssociation, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesAssociation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAssociation.prototype, "allocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAssociation.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAssociation.prototype, "carrierIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAssociation.prototype, "customerOwnedIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAssociation.prototype, "ipOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAssociation.prototype, "publicDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAssociation.prototype, "publicIp", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesAssociation;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesAssociation = DescribeNetworkInterfacesResultNetworkInterfacesAssociation;
/**
 * ENA Express configuration for UDP network traffic.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification.prototype, "enaSrdUdpEnabled", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification = DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification;
/**
 * Configures ENA Express for the network interface that this action attaches to the instance.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification.prototype, "enaSrdEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecificationEnaSrdUdpSpecification)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification.prototype, "enaSrdUdpSpecification", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification = DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification;
/**
 * The attachment state.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum;
(function (DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum) {
    DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum["Attaching"] = "attaching";
    DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum["Attached"] = "attached";
    DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum["Detaching"] = "detaching";
    DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum["Detached"] = "detached";
})(DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum = exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum || (exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachmentStatusEnum = {}));
/**
 * The network interface attachment.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesAttachment = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesAttachment, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesAttachment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "attachTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "attachmentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "deviceIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeNetworkInterfacesResultNetworkInterfacesAttachmentEnaSrdSpecification)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "enaSrdSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "instanceOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "networkCardIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesAttachment.prototype, "status", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesAttachment;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesAttachment = DescribeNetworkInterfacesResultNetworkInterfacesAttachment;
/**
 * Describes a security group.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesGroups = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesGroups, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesGroups() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesGroups.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesGroups.prototype, "groupName", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesGroups;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesGroups = DescribeNetworkInterfacesResultNetworkInterfacesGroups;
/**
 * The type of network interface.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum;
(function (DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum) {
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["Interface"] = "interface";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["NatGateway"] = "natGateway";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["Efa"] = "efa";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["Trunk"] = "trunk";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["LoadBalancer"] = "load_balancer";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["NetworkLoadBalancer"] = "network_load_balancer";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["VpcEndpoint"] = "vpc_endpoint";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["Branch"] = "branch";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["TransitGateway"] = "transit_gateway";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["Lambda"] = "lambda";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["Quicksight"] = "quicksight";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["GlobalAcceleratorManaged"] = "global_accelerator_managed";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["ApiGatewayManaged"] = "api_gateway_managed";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["GatewayLoadBalancer"] = "gateway_load_balancer";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["GatewayLoadBalancerEndpoint"] = "gateway_load_balancer_endpoint";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["IotRulesManaged"] = "iot_rules_managed";
    DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum["AwsCodestarConnectionsManaged"] = "aws_codestar_connections_managed";
})(DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum = exports.DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum || (exports.DescribeNetworkInterfacesResultNetworkInterfacesInterfaceTypeEnum = {}));
/**
 * Describes an IPv4 prefix.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes.prototype, "ipv4Prefix", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes = DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes;
/**
 * Describes an IPv6 address associated with a network interface.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses.prototype, "ipv6Address", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses = DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses;
/**
 * Describes the IPv6 prefix.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes.prototype, "ipv6Prefix", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes = DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes;
/**
 * The association information for an Elastic IP address (IPv4) associated with the network interface.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation.prototype, "allocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation.prototype, "carrierIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation.prototype, "customerOwnedIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation.prototype, "ipOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation.prototype, "publicDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation.prototype, "publicIp", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation = DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation;
/**
 * Describes the private IPv4 address of a network interface.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddressesAssociation)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses.prototype, "association", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses.prototype, "primary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses.prototype, "privateDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses.prototype, "privateIpAddress", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses = DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses;
/**
 * The status of the network interface.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum;
(function (DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum) {
    DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum["Available"] = "available";
    DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum["Associated"] = "associated";
    DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum["Attaching"] = "attaching";
    DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum["InUse"] = "in-use";
    DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum["Detaching"] = "detaching";
})(DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum = exports.DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum || (exports.DescribeNetworkInterfacesResultNetworkInterfacesStatusEnum = {}));
/**
 * Describes a tag.
 */
var DescribeNetworkInterfacesResultNetworkInterfacesTagSet = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfacesTagSet, _super);
    function DescribeNetworkInterfacesResultNetworkInterfacesTagSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesTagSet.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfacesTagSet.prototype, "value", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfacesTagSet;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfacesTagSet = DescribeNetworkInterfacesResultNetworkInterfacesTagSet;
/**
 * Describes a network interface.
 */
var DescribeNetworkInterfacesResultNetworkInterfaces = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResultNetworkInterfaces, _super);
    function DescribeNetworkInterfacesResultNetworkInterfaces() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeNetworkInterfacesResultNetworkInterfacesAssociation)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "association", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeNetworkInterfacesResultNetworkInterfacesAttachment)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "attachment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "denyAllIgwTraffic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeNetworkInterfacesResultNetworkInterfacesGroups,
        }),
        __metadata("design:type", Array)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "interfaceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeNetworkInterfacesResultNetworkInterfacesIpv4Prefixes,
        }),
        __metadata("design:type", Array)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "ipv4Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "ipv6Address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeNetworkInterfacesResultNetworkInterfacesIpv6Addresses,
        }),
        __metadata("design:type", Array)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "ipv6Addresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "ipv6Native", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeNetworkInterfacesResultNetworkInterfacesIpv6Prefixes,
        }),
        __metadata("design:type", Array)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "ipv6Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "macAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "networkInterfaceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "outpostArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "privateDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "privateIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeNetworkInterfacesResultNetworkInterfacesPrivateIpAddresses,
        }),
        __metadata("design:type", Array)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "privateIpAddresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "requesterId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "requesterManaged", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "sourceDestCheck", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "subnetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeNetworkInterfacesResultNetworkInterfacesTagSet,
        }),
        __metadata("design:type", Array)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "tagSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResultNetworkInterfaces.prototype, "vpcId", void 0);
    return DescribeNetworkInterfacesResultNetworkInterfaces;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResultNetworkInterfaces = DescribeNetworkInterfacesResultNetworkInterfaces;
/**
 * Success
 */
var DescribeNetworkInterfacesResult = /** @class */ (function (_super) {
    __extends(DescribeNetworkInterfacesResult, _super);
    function DescribeNetworkInterfacesResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeNetworkInterfacesResultNetworkInterfaces,
        }),
        __metadata("design:type", Array)
    ], DescribeNetworkInterfacesResult.prototype, "networkInterfaces", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeNetworkInterfacesResult.prototype, "nextToken", void 0);
    return DescribeNetworkInterfacesResult;
}(utils_1.SpeakeasyBase));
exports.DescribeNetworkInterfacesResult = DescribeNetworkInterfacesResult;
