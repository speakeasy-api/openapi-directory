/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SearchFreetextRequestBody {
    /**
     * **currency code** for the currency in which to display product pricing information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;
    public SearchFreetextRequestBody withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * **unique numeric identifier** of the destination to search within 
     * - `destinationId` can be retrieved from the [/taxonomy/destinations](#operation/taxonomyDestinations) service
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destId")
    public Long destId;
    public SearchFreetextRequestBody withDestId(Long destId) {
        this.destId = destId;
        return this;
    }
    
    /**
     * **array** of search domain specifiers where each item is *one of*:
     *   - `"PRODUCT"`: a tour / activity
     *   - `"DESTINATION"`: continent, country, city, region
     *   - `"ATTRACTION"`: an attraction within a destination (only available to partners with SEO access)
     *   - `"RECOMMENDATION"`: an attraction within a destination (only available to partners with SEO access)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchTypes")
    public SearchFreetextRequestBodySearchTypesEnum[] searchTypes;
    public SearchFreetextRequestBody withSearchTypes(SearchFreetextRequestBodySearchTypesEnum[] searchTypes) {
        this.searchTypes = searchTypes;
        return this;
    }
    
    /**
     * **sort order** in which to return the results that is *one of*:
     * 
     *   - `'TOP_SELLERS'`: the top sellers
     *   - `'REVIEW_AVG_RATING_A'`: ascending by average traveler rating (low -&amp;gt; high)
     *   - `'REVIEW_AVG_RATING_D'`: descending by average traveler rating (high -&amp;gt; low)
     *   - `'PRICE_FROM_A'`: ascending by price (low -&amp;gt; high)
     *   - `'PRICE_FROM_D'`: descending by price (high -&amp;gt; low)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public org.openapis.openapi.models.shared.SortOrderEnum sortOrder;
    public SearchFreetextRequestBody withSortOrder(org.openapis.openapi.models.shared.SortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * **text** to search for
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;
    public SearchFreetextRequestBody withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * **start and end rows** to return in the format {start}-{end}
     * - e.g. `'1-10'`, `'11-20'`
     * 
     * **Note**: 
     * - the maximum number of rows per request is 100; therefore, `'100-400'` will return the same as `'100-200'`
     * - if `topX` is not specified, the default is `'1-100'`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topX")
    public String topX;
    public SearchFreetextRequestBody withTopX(String topX) {
        this.topX = topX;
        return this;
    }
    
}
