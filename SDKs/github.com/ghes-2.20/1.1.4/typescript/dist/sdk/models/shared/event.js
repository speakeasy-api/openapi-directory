"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Event = exports.EventRepo = exports.EventPayload = exports.EventPayloadPages = void 0;
var utils_1 = require("../../../internal/utils");
var actor_1 = require("./actor");
var issuecomment_1 = require("./issuecomment");
var issuesimple_1 = require("./issuesimple");
var class_transformer_1 = require("class-transformer");
var EventPayloadPages = /** @class */ (function (_super) {
    __extends(EventPayloadPages, _super);
    function EventPayloadPages() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "action" }),
        __metadata("design:type", String)
    ], EventPayloadPages.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "html_url" }),
        __metadata("design:type", String)
    ], EventPayloadPages.prototype, "htmlUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page_name" }),
        __metadata("design:type", String)
    ], EventPayloadPages.prototype, "pageName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sha" }),
        __metadata("design:type", String)
    ], EventPayloadPages.prototype, "sha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "summary" }),
        __metadata("design:type", String)
    ], EventPayloadPages.prototype, "summary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], EventPayloadPages.prototype, "title", void 0);
    return EventPayloadPages;
}(utils_1.SpeakeasyBase));
exports.EventPayloadPages = EventPayloadPages;
var EventPayload = /** @class */ (function (_super) {
    __extends(EventPayload, _super);
    function EventPayload() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "action" }),
        __metadata("design:type", String)
    ], EventPayload.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        (0, class_transformer_1.Type)(function () { return issuecomment_1.IssueComment; }),
        __metadata("design:type", issuecomment_1.IssueComment)
    ], EventPayload.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issue" }),
        (0, class_transformer_1.Type)(function () { return issuesimple_1.IssueSimple; }),
        __metadata("design:type", issuesimple_1.IssueSimple)
    ], EventPayload.prototype, "issue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EventPayloadPages }),
        (0, class_transformer_1.Expose)({ name: "pages" }),
        (0, class_transformer_1.Type)(function () { return EventPayloadPages; }),
        __metadata("design:type", Array)
    ], EventPayload.prototype, "pages", void 0);
    return EventPayload;
}(utils_1.SpeakeasyBase));
exports.EventPayload = EventPayload;
var EventRepo = /** @class */ (function (_super) {
    __extends(EventRepo, _super);
    function EventRepo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], EventRepo.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], EventRepo.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], EventRepo.prototype, "url", void 0);
    return EventRepo;
}(utils_1.SpeakeasyBase));
exports.EventRepo = EventRepo;
/**
 * Event
 */
var Event = /** @class */ (function (_super) {
    __extends(Event, _super);
    function Event() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "actor" }),
        (0, class_transformer_1.Type)(function () { return actor_1.Actor; }),
        __metadata("design:type", actor_1.Actor)
    ], Event.prototype, "actor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Event.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Event.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "org" }),
        (0, class_transformer_1.Type)(function () { return actor_1.Actor; }),
        __metadata("design:type", actor_1.Actor)
    ], Event.prototype, "org", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payload" }),
        (0, class_transformer_1.Type)(function () { return EventPayload; }),
        __metadata("design:type", EventPayload)
    ], Event.prototype, "payload", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "public" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "public", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "repo" }),
        (0, class_transformer_1.Type)(function () { return EventRepo; }),
        __metadata("design:type", EventRepo)
    ], Event.prototype, "repo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Event.prototype, "type", void 0);
    return Event;
}(utils_1.SpeakeasyBase));
exports.Event = Event;
