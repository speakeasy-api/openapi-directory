// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// VpcLinkVpcLinkStatusEnum - The status of the VPC link.
type VpcLinkVpcLinkStatusEnum string

const (
	VpcLinkVpcLinkStatusEnumPending   VpcLinkVpcLinkStatusEnum = "PENDING"
	VpcLinkVpcLinkStatusEnumAvailable VpcLinkVpcLinkStatusEnum = "AVAILABLE"
	VpcLinkVpcLinkStatusEnumDeleting  VpcLinkVpcLinkStatusEnum = "DELETING"
	VpcLinkVpcLinkStatusEnumFailed    VpcLinkVpcLinkStatusEnum = "FAILED"
	VpcLinkVpcLinkStatusEnumInactive  VpcLinkVpcLinkStatusEnum = "INACTIVE"
)

func (e *VpcLinkVpcLinkStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "INACTIVE":
		*e = VpcLinkVpcLinkStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VpcLinkVpcLinkStatusEnum: %s", s)
	}
}

// VpcLinkVpcLinkVersionEnum - The version of the VPC link.
type VpcLinkVpcLinkVersionEnum string

const (
	VpcLinkVpcLinkVersionEnumV2 VpcLinkVpcLinkVersionEnum = "V2"
)

func (e *VpcLinkVpcLinkVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "V2":
		*e = VpcLinkVpcLinkVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VpcLinkVpcLinkVersionEnum: %s", s)
	}
}

// VpcLink - Represents a VPC link.
type VpcLink struct {
	CreatedDate          *time.Time                 `json:"CreatedDate,omitempty"`
	Name                 string                     `json:"Name"`
	SecurityGroupIds     []string                   `json:"SecurityGroupIds"`
	SubnetIds            []string                   `json:"SubnetIds"`
	Tags                 map[string]string          `json:"Tags,omitempty"`
	VpcLinkID            string                     `json:"VpcLinkId"`
	VpcLinkStatus        *VpcLinkVpcLinkStatusEnum  `json:"VpcLinkStatus,omitempty"`
	VpcLinkStatusMessage *string                    `json:"VpcLinkStatusMessage,omitempty"`
	VpcLinkVersion       *VpcLinkVpcLinkVersionEnum `json:"VpcLinkVersion,omitempty"`
}
