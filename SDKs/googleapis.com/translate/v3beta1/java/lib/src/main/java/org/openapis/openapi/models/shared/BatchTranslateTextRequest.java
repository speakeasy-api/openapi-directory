/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BatchTranslateTextRequest - The batch translation request.
 */
public class BatchTranslateTextRequest {
    /**
     * Optional. Glossaries to be applied for translation. It's keyed by target language code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("glossaries")
    public java.util.Map<String, TranslateTextGlossaryConfig> glossaries;

    public BatchTranslateTextRequest withGlossaries(java.util.Map<String, TranslateTextGlossaryConfig> glossaries) {
        this.glossaries = glossaries;
        return this;
    }
    
    /**
     * Required. Input configurations. The total number of files matched should be &lt;= 100. The total content size should be &lt;= 100M Unicode codepoints. The files must use UTF-8 encoding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputConfigs")
    public InputConfig[] inputConfigs;

    public BatchTranslateTextRequest withInputConfigs(InputConfig[] inputConfigs) {
        this.inputConfigs = inputConfigs;
        return this;
    }
    
    /**
     * Optional. The labels with user-defined metadata for the request. Label keys and values can be no longer than 63 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter. See https://cloud.google.com/translate/docs/labels for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public BatchTranslateTextRequest withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Optional. The models to use for translation. Map's key is target language code. Map's value is model name. Value can be a built-in general model, or an AutoML Translation model. The value format depends on model type: - AutoML Translation models: `projects/{project-number-or-id}/locations/{location-id}/models/{model-id}` - General (built-in) models: `projects/{project-number-or-id}/locations/{location-id}/models/general/nmt`, If the map is empty or a specific model is not requested for a language pair, then default google model (nmt) is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("models")
    public java.util.Map<String, String> models;

    public BatchTranslateTextRequest withModels(java.util.Map<String, String> models) {
        this.models = models;
        return this;
    }
    
    /**
     * Output configuration for BatchTranslateText request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputConfig")
    public OutputConfig outputConfig;

    public BatchTranslateTextRequest withOutputConfig(OutputConfig outputConfig) {
        this.outputConfig = outputConfig;
        return this;
    }
    
    /**
     * Required. Source language code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceLanguageCode")
    public String sourceLanguageCode;

    public BatchTranslateTextRequest withSourceLanguageCode(String sourceLanguageCode) {
        this.sourceLanguageCode = sourceLanguageCode;
        return this;
    }
    
    /**
     * Required. Specify up to 10 language codes here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetLanguageCodes")
    public String[] targetLanguageCodes;

    public BatchTranslateTextRequest withTargetLanguageCodes(String[] targetLanguageCodes) {
        this.targetLanguageCodes = targetLanguageCodes;
        return this;
    }
    
    public BatchTranslateTextRequest(){}
}
