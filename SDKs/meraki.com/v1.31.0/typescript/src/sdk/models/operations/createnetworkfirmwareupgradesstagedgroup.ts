/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesDevices extends SpeakeasyBase {
  /**
   * Name of the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Serial of the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial: string;
}

export class CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesSwitchStacks extends SpeakeasyBase {
  /**
   * ID of the Switch Stack
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Name of the Switch Stack
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * The devices and Switch Stacks assigned to the Group
 */
export class CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevices extends SpeakeasyBase {
  /**
   * Data Array of Devices containing the name and serial
   */
  @SpeakeasyMetadata({
    elemType:
      CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesDevices,
  })
  @Expose({ name: "devices" })
  @Type(
    () =>
      CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesDevices
  )
  devices?: CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesDevices[];

  /**
   * Data Array of Switch Stacks containing the name and id
   */
  @SpeakeasyMetadata({
    elemType:
      CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesSwitchStacks,
  })
  @Expose({ name: "switchStacks" })
  @Type(
    () =>
      CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesSwitchStacks
  )
  switchStacks?: CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevicesSwitchStacks[];
}

export class CreateNetworkFirmwareUpgradesStagedGroupRequestBody extends SpeakeasyBase {
  /**
   * The devices and Switch Stacks assigned to the Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignedDevices" })
  @Type(
    () => CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevices
  )
  assignedDevices?: CreateNetworkFirmwareUpgradesStagedGroupRequestBodyAssignedDevices;

  /**
   * Description of the Staged Upgrade Group. Length must be 1 to 255 characters
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Boolean indicating the default Group. Any device that does not have a group explicitly assigned will upgrade with this group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDefault" })
  isDefault: boolean;

  /**
   * Name of the Staged Upgrade Group. Length must be 1 to 255 characters
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class CreateNetworkFirmwareUpgradesStagedGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateNetworkFirmwareUpgradesStagedGroupRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class CreateNetworkFirmwareUpgradesStagedGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createNetworkFirmwareUpgradesStagedGroup200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
