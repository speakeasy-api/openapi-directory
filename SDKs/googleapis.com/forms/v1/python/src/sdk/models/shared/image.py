"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mediaproperties as shared_mediaproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Image:
    r"""Data representing an image."""
    
    alt_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('altText'), 'exclude': lambda f: f is None }})
    r"""A description of the image that is shown on hover and read by screenreaders."""  
    content_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentUri'), 'exclude': lambda f: f is None }})
    r"""Output only. A URI from which you can download the image; this is valid only for a limited time."""  
    properties: Optional[shared_mediaproperties.MediaProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""Properties of the media."""  
    source_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceUri'), 'exclude': lambda f: f is None }})
    r"""Input only. The source URI is the URI used to insert the image. The source URI can be empty when fetched."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageInput:
    r"""Data representing an image."""
    
    alt_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('altText'), 'exclude': lambda f: f is None }})
    r"""A description of the image that is shown on hover and read by screenreaders."""  
    properties: Optional[shared_mediaproperties.MediaProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""Properties of the media."""  
    source_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceUri'), 'exclude': lambda f: f is None }})
    r"""Input only. The source URI is the URI used to insert the image. The source URI can be empty when fetched."""  
    