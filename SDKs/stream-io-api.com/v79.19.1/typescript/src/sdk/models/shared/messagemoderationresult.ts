/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModerationResponse } from "./moderationresponse";
import { Thresholds } from "./thresholds";
import { Expose, Transform, Type } from "class-transformer";

export class MessageModerationResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ai_moderation_response" })
  @Type(() => ModerationResponse)
  aiModerationResponse?: ModerationResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "blocked_word" })
  blockedWord?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "blocklist_name" })
  blocklistName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "message_id" })
  messageId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "moderated_by" })
  moderatedBy?: string;

  /**
   * Sets thresholds for AI moderation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "moderation_thresholds" })
  @Type(() => Thresholds)
  moderationThresholds?: Thresholds;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "user_bad_karma" })
  userBadKarma: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "user_karma" })
  userKarma: number;
}
