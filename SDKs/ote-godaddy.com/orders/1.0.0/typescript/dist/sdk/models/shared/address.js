"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Address = exports.AddressCountryEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Two-letter ISO country code to be used as a hint for target region<br/><br/>
 *
 * @remarks
 * NOTE: These are sample values, there are many
 * <a href='http://www.iso.org/iso/country_codes.htm'>more</a>
 */
var AddressCountryEnum;
(function (AddressCountryEnum) {
    AddressCountryEnum["Ac"] = "AC";
    AddressCountryEnum["Ad"] = "AD";
    AddressCountryEnum["Ae"] = "AE";
    AddressCountryEnum["Af"] = "AF";
    AddressCountryEnum["Ag"] = "AG";
    AddressCountryEnum["Ai"] = "AI";
    AddressCountryEnum["Al"] = "AL";
    AddressCountryEnum["Am"] = "AM";
    AddressCountryEnum["Ao"] = "AO";
    AddressCountryEnum["Aq"] = "AQ";
    AddressCountryEnum["Ar"] = "AR";
    AddressCountryEnum["As"] = "AS";
    AddressCountryEnum["At"] = "AT";
    AddressCountryEnum["Au"] = "AU";
    AddressCountryEnum["Aw"] = "AW";
    AddressCountryEnum["Ax"] = "AX";
    AddressCountryEnum["Az"] = "AZ";
    AddressCountryEnum["Ba"] = "BA";
    AddressCountryEnum["Bb"] = "BB";
    AddressCountryEnum["Bd"] = "BD";
    AddressCountryEnum["Be"] = "BE";
    AddressCountryEnum["Bf"] = "BF";
    AddressCountryEnum["Bg"] = "BG";
    AddressCountryEnum["Bh"] = "BH";
    AddressCountryEnum["Bi"] = "BI";
    AddressCountryEnum["Bj"] = "BJ";
    AddressCountryEnum["Bm"] = "BM";
    AddressCountryEnum["Bn"] = "BN";
    AddressCountryEnum["Bo"] = "BO";
    AddressCountryEnum["Bq"] = "BQ";
    AddressCountryEnum["Br"] = "BR";
    AddressCountryEnum["Bs"] = "BS";
    AddressCountryEnum["Bt"] = "BT";
    AddressCountryEnum["Bv"] = "BV";
    AddressCountryEnum["Bw"] = "BW";
    AddressCountryEnum["By"] = "BY";
    AddressCountryEnum["Bz"] = "BZ";
    AddressCountryEnum["Ca"] = "CA";
    AddressCountryEnum["Cc"] = "CC";
    AddressCountryEnum["Cd"] = "CD";
    AddressCountryEnum["Cf"] = "CF";
    AddressCountryEnum["Cg"] = "CG";
    AddressCountryEnum["Ch"] = "CH";
    AddressCountryEnum["Ci"] = "CI";
    AddressCountryEnum["Ck"] = "CK";
    AddressCountryEnum["Cl"] = "CL";
    AddressCountryEnum["Cm"] = "CM";
    AddressCountryEnum["Cn"] = "CN";
    AddressCountryEnum["Co"] = "CO";
    AddressCountryEnum["Cr"] = "CR";
    AddressCountryEnum["Cv"] = "CV";
    AddressCountryEnum["Cw"] = "CW";
    AddressCountryEnum["Cx"] = "CX";
    AddressCountryEnum["Cy"] = "CY";
    AddressCountryEnum["Cz"] = "CZ";
    AddressCountryEnum["De"] = "DE";
    AddressCountryEnum["Dj"] = "DJ";
    AddressCountryEnum["Dk"] = "DK";
    AddressCountryEnum["Dm"] = "DM";
    AddressCountryEnum["Do"] = "DO";
    AddressCountryEnum["Dz"] = "DZ";
    AddressCountryEnum["Ec"] = "EC";
    AddressCountryEnum["Ee"] = "EE";
    AddressCountryEnum["Eg"] = "EG";
    AddressCountryEnum["Eh"] = "EH";
    AddressCountryEnum["Er"] = "ER";
    AddressCountryEnum["Es"] = "ES";
    AddressCountryEnum["Et"] = "ET";
    AddressCountryEnum["Fi"] = "FI";
    AddressCountryEnum["Fj"] = "FJ";
    AddressCountryEnum["Fk"] = "FK";
    AddressCountryEnum["Fm"] = "FM";
    AddressCountryEnum["Fo"] = "FO";
    AddressCountryEnum["Fr"] = "FR";
    AddressCountryEnum["Ga"] = "GA";
    AddressCountryEnum["Gb"] = "GB";
    AddressCountryEnum["Gd"] = "GD";
    AddressCountryEnum["Ge"] = "GE";
    AddressCountryEnum["Gf"] = "GF";
    AddressCountryEnum["Gg"] = "GG";
    AddressCountryEnum["Gh"] = "GH";
    AddressCountryEnum["Gi"] = "GI";
    AddressCountryEnum["Gl"] = "GL";
    AddressCountryEnum["Gm"] = "GM";
    AddressCountryEnum["Gn"] = "GN";
    AddressCountryEnum["Gp"] = "GP";
    AddressCountryEnum["Gq"] = "GQ";
    AddressCountryEnum["Gr"] = "GR";
    AddressCountryEnum["Gs"] = "GS";
    AddressCountryEnum["Gt"] = "GT";
    AddressCountryEnum["Gu"] = "GU";
    AddressCountryEnum["Gw"] = "GW";
    AddressCountryEnum["Gy"] = "GY";
    AddressCountryEnum["Hk"] = "HK";
    AddressCountryEnum["Hm"] = "HM";
    AddressCountryEnum["Hn"] = "HN";
    AddressCountryEnum["Hr"] = "HR";
    AddressCountryEnum["Ht"] = "HT";
    AddressCountryEnum["Hu"] = "HU";
    AddressCountryEnum["Id"] = "ID";
    AddressCountryEnum["Ie"] = "IE";
    AddressCountryEnum["Il"] = "IL";
    AddressCountryEnum["Im"] = "IM";
    AddressCountryEnum["In"] = "IN";
    AddressCountryEnum["Io"] = "IO";
    AddressCountryEnum["Iq"] = "IQ";
    AddressCountryEnum["Is"] = "IS";
    AddressCountryEnum["It"] = "IT";
    AddressCountryEnum["Je"] = "JE";
    AddressCountryEnum["Jm"] = "JM";
    AddressCountryEnum["Jo"] = "JO";
    AddressCountryEnum["Jp"] = "JP";
    AddressCountryEnum["Ke"] = "KE";
    AddressCountryEnum["Kg"] = "KG";
    AddressCountryEnum["Kh"] = "KH";
    AddressCountryEnum["Ki"] = "KI";
    AddressCountryEnum["Km"] = "KM";
    AddressCountryEnum["Kn"] = "KN";
    AddressCountryEnum["Kr"] = "KR";
    AddressCountryEnum["Kv"] = "KV";
    AddressCountryEnum["Kw"] = "KW";
    AddressCountryEnum["Ky"] = "KY";
    AddressCountryEnum["Kz"] = "KZ";
    AddressCountryEnum["La"] = "LA";
    AddressCountryEnum["Lb"] = "LB";
    AddressCountryEnum["Lc"] = "LC";
    AddressCountryEnum["Li"] = "LI";
    AddressCountryEnum["Lk"] = "LK";
    AddressCountryEnum["Lr"] = "LR";
    AddressCountryEnum["Ls"] = "LS";
    AddressCountryEnum["Lt"] = "LT";
    AddressCountryEnum["Lu"] = "LU";
    AddressCountryEnum["Lv"] = "LV";
    AddressCountryEnum["Ly"] = "LY";
    AddressCountryEnum["Ma"] = "MA";
    AddressCountryEnum["Mc"] = "MC";
    AddressCountryEnum["Md"] = "MD";
    AddressCountryEnum["Me"] = "ME";
    AddressCountryEnum["Mg"] = "MG";
    AddressCountryEnum["Mh"] = "MH";
    AddressCountryEnum["Mk"] = "MK";
    AddressCountryEnum["Ml"] = "ML";
    AddressCountryEnum["Mm"] = "MM";
    AddressCountryEnum["Mn"] = "MN";
    AddressCountryEnum["Mo"] = "MO";
    AddressCountryEnum["Mp"] = "MP";
    AddressCountryEnum["Mq"] = "MQ";
    AddressCountryEnum["Mr"] = "MR";
    AddressCountryEnum["Ms"] = "MS";
    AddressCountryEnum["Mt"] = "MT";
    AddressCountryEnum["Mu"] = "MU";
    AddressCountryEnum["Mv"] = "MV";
    AddressCountryEnum["Mw"] = "MW";
    AddressCountryEnum["Mx"] = "MX";
    AddressCountryEnum["My"] = "MY";
    AddressCountryEnum["Mz"] = "MZ";
    AddressCountryEnum["Na"] = "NA";
    AddressCountryEnum["Nc"] = "NC";
    AddressCountryEnum["Ne"] = "NE";
    AddressCountryEnum["Nf"] = "NF";
    AddressCountryEnum["Ng"] = "NG";
    AddressCountryEnum["Ni"] = "NI";
    AddressCountryEnum["Nl"] = "NL";
    AddressCountryEnum["No"] = "NO";
    AddressCountryEnum["Np"] = "NP";
    AddressCountryEnum["Nr"] = "NR";
    AddressCountryEnum["Nu"] = "NU";
    AddressCountryEnum["Nz"] = "NZ";
    AddressCountryEnum["Om"] = "OM";
    AddressCountryEnum["Pa"] = "PA";
    AddressCountryEnum["Pe"] = "PE";
    AddressCountryEnum["Pf"] = "PF";
    AddressCountryEnum["Pg"] = "PG";
    AddressCountryEnum["Ph"] = "PH";
    AddressCountryEnum["Pk"] = "PK";
    AddressCountryEnum["Pl"] = "PL";
    AddressCountryEnum["Pm"] = "PM";
    AddressCountryEnum["Pn"] = "PN";
    AddressCountryEnum["Pr"] = "PR";
    AddressCountryEnum["Ps"] = "PS";
    AddressCountryEnum["Pt"] = "PT";
    AddressCountryEnum["Pw"] = "PW";
    AddressCountryEnum["Py"] = "PY";
    AddressCountryEnum["Qa"] = "QA";
    AddressCountryEnum["Re"] = "RE";
    AddressCountryEnum["Ro"] = "RO";
    AddressCountryEnum["Rs"] = "RS";
    AddressCountryEnum["Ru"] = "RU";
    AddressCountryEnum["Rw"] = "RW";
    AddressCountryEnum["Sa"] = "SA";
    AddressCountryEnum["Sb"] = "SB";
    AddressCountryEnum["Sc"] = "SC";
    AddressCountryEnum["Se"] = "SE";
    AddressCountryEnum["Sg"] = "SG";
    AddressCountryEnum["Sh"] = "SH";
    AddressCountryEnum["Si"] = "SI";
    AddressCountryEnum["Sj"] = "SJ";
    AddressCountryEnum["Sk"] = "SK";
    AddressCountryEnum["Sl"] = "SL";
    AddressCountryEnum["Sm"] = "SM";
    AddressCountryEnum["Sn"] = "SN";
    AddressCountryEnum["So"] = "SO";
    AddressCountryEnum["Sr"] = "SR";
    AddressCountryEnum["St"] = "ST";
    AddressCountryEnum["Sv"] = "SV";
    AddressCountryEnum["Sx"] = "SX";
    AddressCountryEnum["Sz"] = "SZ";
    AddressCountryEnum["Tc"] = "TC";
    AddressCountryEnum["Td"] = "TD";
    AddressCountryEnum["Tf"] = "TF";
    AddressCountryEnum["Tg"] = "TG";
    AddressCountryEnum["Th"] = "TH";
    AddressCountryEnum["Tj"] = "TJ";
    AddressCountryEnum["Tk"] = "TK";
    AddressCountryEnum["Tl"] = "TL";
    AddressCountryEnum["Tm"] = "TM";
    AddressCountryEnum["Tn"] = "TN";
    AddressCountryEnum["To"] = "TO";
    AddressCountryEnum["Tp"] = "TP";
    AddressCountryEnum["Tr"] = "TR";
    AddressCountryEnum["Tt"] = "TT";
    AddressCountryEnum["Tv"] = "TV";
    AddressCountryEnum["Tw"] = "TW";
    AddressCountryEnum["Tz"] = "TZ";
    AddressCountryEnum["Ua"] = "UA";
    AddressCountryEnum["Ug"] = "UG";
    AddressCountryEnum["Um"] = "UM";
    AddressCountryEnum["Us"] = "US";
    AddressCountryEnum["Uy"] = "UY";
    AddressCountryEnum["Uz"] = "UZ";
    AddressCountryEnum["Va"] = "VA";
    AddressCountryEnum["Vc"] = "VC";
    AddressCountryEnum["Ve"] = "VE";
    AddressCountryEnum["Vg"] = "VG";
    AddressCountryEnum["Vi"] = "VI";
    AddressCountryEnum["Vn"] = "VN";
    AddressCountryEnum["Vu"] = "VU";
    AddressCountryEnum["Wf"] = "WF";
    AddressCountryEnum["Ws"] = "WS";
    AddressCountryEnum["Ye"] = "YE";
    AddressCountryEnum["Yt"] = "YT";
    AddressCountryEnum["Za"] = "ZA";
    AddressCountryEnum["Zm"] = "ZM";
    AddressCountryEnum["Zw"] = "ZW";
})(AddressCountryEnum = exports.AddressCountryEnum || (exports.AddressCountryEnum = {}));
var Address = /** @class */ (function (_super) {
    __extends(Address, _super);
    function Address() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address1" }),
        __metadata("design:type", String)
    ], Address.prototype, "address1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address2" }),
        __metadata("design:type", String)
    ], Address.prototype, "address2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], Address.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], Address.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postalCode" }),
        __metadata("design:type", String)
    ], Address.prototype, "postalCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], Address.prototype, "state", void 0);
    return Address;
}(utils_1.SpeakeasyBase));
exports.Address = Address;
