"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Matcher:
    
    hook_base_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hook-base-address') }})
    r"""The chosen Matcher's url. It is the endpoint that the Received SKUs module calls, to send new suggestions for the Matcher's review."""  
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsActive') }})
    r"""Whether the matcher is active in the account (`true`), or not (`false`)."""  
    matcher_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MatcherId') }})
    r"""Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint."""  
    updates_notification_endpoint: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatesNotificationEndpoint') }})
    r"""The Received SKUs module uses this endpoint to send updates about a suggestion, to the chosen Matcher."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""Insert in this field any notes about the approval. This field is optional."""  
    