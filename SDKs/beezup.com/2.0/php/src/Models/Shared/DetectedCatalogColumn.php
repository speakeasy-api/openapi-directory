<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DetectedCatalogColumn - The catalog column detected during the first parsing step
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DetectedCatalogColumn
{
    /**
     * The catalog column name
     * 
     * @var string $catalogColumnName
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalogColumnName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $catalogColumnName;
    
    /**
     * Indicates the configuration applied on the column (catalog or custom) during the importation process.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ColumnConfiguration $configuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ColumnConfiguration')]
    public ColumnConfiguration $configuration;
    
    /**
     * Describe how you want to manage the duplication of the product value
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DuplicateProductValueConfiguration $duplicateProductValueConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duplicateProductValueConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DuplicateProductValueConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DuplicateProductValueConfiguration $duplicateProductValueConfiguration = null;
    
    /**
     * The catalog column identifier
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * IF true, the product values of this column will be not taken in account during the importation process
     * 
     * @var ?bool $ignored
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignored')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignored = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DetectedCatalogColumnLinks')]
    public DetectedCatalogColumnLinks $links;
    
    /**
     * Column named by the user
     * 
     * @var string $userColumName
     */
	#[\JMS\Serializer\Annotation\SerializedName('userColumName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $userColumName;
    
	public function __construct()
	{
		$this->catalogColumnName = "";
		$this->configuration = new \OpenAPI\OpenAPI\Models\Shared\ColumnConfiguration();
		$this->duplicateProductValueConfiguration = null;
		$this->id = "";
		$this->ignored = null;
		$this->links = new \OpenAPI\OpenAPI\Models\Shared\DetectedCatalogColumnLinks();
		$this->userColumName = "";
	}
}
