// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExistingSnapshotRetentionEnum - Specifies the retention policy to apply to existing snapshots when unprotecting an object.
type ExistingSnapshotRetentionEnum string

const (
	ExistingSnapshotRetentionEnumRetainSnapshots   ExistingSnapshotRetentionEnum = "RetainSnapshots"
	ExistingSnapshotRetentionEnumKeepForever       ExistingSnapshotRetentionEnum = "KeepForever"
	ExistingSnapshotRetentionEnumExpireImmediately ExistingSnapshotRetentionEnum = "ExpireImmediately"
)

func (e ExistingSnapshotRetentionEnum) ToPointer() *ExistingSnapshotRetentionEnum {
	return &e
}

func (e *ExistingSnapshotRetentionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RetainSnapshots":
		fallthrough
	case "KeepForever":
		fallthrough
	case "ExpireImmediately":
		*e = ExistingSnapshotRetentionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExistingSnapshotRetentionEnum: %v", v)
	}
}
