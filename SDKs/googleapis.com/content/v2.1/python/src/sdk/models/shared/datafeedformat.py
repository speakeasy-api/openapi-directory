"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatafeedFormat:
    
    column_delimiter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnDelimiter'), 'exclude': lambda f: f is None }})
    r"""Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \\"`pipe`\\" - \\"`tab`\\" - \\"`tilde`\\" """  
    file_encoding: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileEncoding'), 'exclude': lambda f: f is None }})
    r"""Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \\"`latin-1`\\" - \\"`utf-16be`\\" - \\"`utf-16le`\\" - \\"`utf-8`\\" - \\"`windows-1252`\\" """  
    quoting_mode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quotingMode'), 'exclude': lambda f: f is None }})
    r"""Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \\"`normal character`\\" - \\"`value quoting`\\" """  
    