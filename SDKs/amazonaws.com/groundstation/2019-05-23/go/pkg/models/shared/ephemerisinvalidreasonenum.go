// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EphemerisInvalidReasonEnum string

const (
	EphemerisInvalidReasonEnumMetadataInvalid   EphemerisInvalidReasonEnum = "METADATA_INVALID"
	EphemerisInvalidReasonEnumTimeRangeInvalid  EphemerisInvalidReasonEnum = "TIME_RANGE_INVALID"
	EphemerisInvalidReasonEnumTrajectoryInvalid EphemerisInvalidReasonEnum = "TRAJECTORY_INVALID"
	EphemerisInvalidReasonEnumKmsKeyInvalid     EphemerisInvalidReasonEnum = "KMS_KEY_INVALID"
	EphemerisInvalidReasonEnumValidationError   EphemerisInvalidReasonEnum = "VALIDATION_ERROR"
)

func (e *EphemerisInvalidReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METADATA_INVALID":
		fallthrough
	case "TIME_RANGE_INVALID":
		fallthrough
	case "TRAJECTORY_INVALID":
		fallthrough
	case "KMS_KEY_INVALID":
		fallthrough
	case "VALIDATION_ERROR":
		*e = EphemerisInvalidReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EphemerisInvalidReasonEnum: %s", s)
	}
}
