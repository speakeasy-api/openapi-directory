/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LivingAreaAccessibility } from "./livingareaaccessibility";
import { LivingAreaEating } from "./livingareaeating";
import { LivingAreaFeatures } from "./livingareafeatures";
import { LivingAreaLayout } from "./livingarealayout";
import { LivingAreaSleeping } from "./livingareasleeping";
import { Expose, Type } from "class-transformer";

/**
 * An individual room, such as kitchen, bathroom, bedroom, within a bookable guest unit.
 */
export class LivingArea extends SpeakeasyBase {
  /**
   * Accessibility features of the living area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessibility" })
  @Type(() => LivingAreaAccessibility)
  accessibility?: LivingAreaAccessibility;

  /**
   * Information about eating features in the living area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eating" })
  @Type(() => LivingAreaEating)
  eating?: LivingAreaEating;

  /**
   * Features in the living area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "features" })
  @Type(() => LivingAreaFeatures)
  features?: LivingAreaFeatures;

  /**
   * Information about the layout of the living area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layout" })
  @Type(() => LivingAreaLayout)
  layout?: LivingAreaLayout;

  /**
   * Information about sleeping features in the living area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sleeping" })
  @Type(() => LivingAreaSleeping)
  sleeping?: LivingAreaSleeping;
}
