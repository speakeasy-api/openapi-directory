// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartMLEvaluationTaskRunXAmzTargetEnum
type StartMLEvaluationTaskRunXAmzTargetEnum string

const (
	StartMLEvaluationTaskRunXAmzTargetEnumAwsGlueStartMlEvaluationTaskRun StartMLEvaluationTaskRunXAmzTargetEnum = "AWSGlue.StartMLEvaluationTaskRun"
)

func (e StartMLEvaluationTaskRunXAmzTargetEnum) ToPointer() *StartMLEvaluationTaskRunXAmzTargetEnum {
	return &e
}

func (e *StartMLEvaluationTaskRunXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.StartMLEvaluationTaskRun":
		*e = StartMLEvaluationTaskRunXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartMLEvaluationTaskRunXAmzTargetEnum: %v", v)
	}
}

type StartMLEvaluationTaskRunRequest struct {
	StartMLEvaluationTaskRunRequest shared.StartMLEvaluationTaskRunRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      StartMLEvaluationTaskRunXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartMLEvaluationTaskRunResponse struct {
	// ConcurrentRunsExceededException
	ConcurrentRunsExceededException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// MLTransformNotReadyException
	MLTransformNotReadyException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	StartMLEvaluationTaskRunResponse *shared.StartMLEvaluationTaskRunResponse
	StatusCode                       int
	RawResponse                      *http.Response
}
