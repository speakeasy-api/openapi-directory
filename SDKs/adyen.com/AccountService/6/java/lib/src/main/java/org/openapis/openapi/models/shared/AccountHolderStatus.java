/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AccountHolderStatus {
    /**
     * A list of events scheduled for the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("events")
    public AccountEvent[] events;

    public AccountHolderStatus withEvents(AccountEvent[] events) {
        this.events = events;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutState")
    public AccountPayoutState payoutState;

    public AccountHolderStatus withPayoutState(AccountPayoutState payoutState) {
        this.payoutState = payoutState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingState")
    public AccountProcessingState processingState;

    public AccountHolderStatus withProcessingState(AccountProcessingState processingState) {
        this.processingState = processingState;
        return this;
    }
    
    /**
     * The status of the account holder.
     * &gt;Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.
     */
    @JsonProperty("status")
    public AccountHolderStatusStatusEnum status;

    public AccountHolderStatus withStatus(AccountHolderStatusStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The reason why the status was assigned to the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusReason")
    public String statusReason;

    public AccountHolderStatus withStatusReason(String statusReason) {
        this.statusReason = statusReason;
        return this;
    }
    
    public AccountHolderStatus(@JsonProperty("status") AccountHolderStatusStatusEnum status) {
        this.status = status;
  }
}
