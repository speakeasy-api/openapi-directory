// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetConnectionXAmzTargetEnum
type GetConnectionXAmzTargetEnum string

const (
	GetConnectionXAmzTargetEnumComAmazonawsCodestarConnectionsCodeStarConnections20191201GetConnection GetConnectionXAmzTargetEnum = "com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetConnection"
)

func (e GetConnectionXAmzTargetEnum) ToPointer() *GetConnectionXAmzTargetEnum {
	return &e
}

func (e *GetConnectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.codestar.connections.CodeStar_connections_20191201.GetConnection":
		*e = GetConnectionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetConnectionXAmzTargetEnum: %v", v)
	}
}

type GetConnectionRequest struct {
	GetConnectionInput shared.GetConnectionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         GetConnectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetConnectionResponse struct {
	ContentType string
	// Success
	GetConnectionOutput *shared.GetConnectionOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
}
