/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * IngestionStatus - A table showing information about the most recent successful and failed attempts to ingest events.
 */
public class IngestionStatus {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatestIngestionAttemptEventID")
    public String latestIngestionAttemptEventID;

    public IngestionStatus withLatestIngestionAttemptEventID(String latestIngestionAttemptEventID) {
        this.latestIngestionAttemptEventID = latestIngestionAttemptEventID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LatestIngestionAttemptTime")
    public OffsetDateTime latestIngestionAttemptTime;

    public IngestionStatus withLatestIngestionAttemptTime(OffsetDateTime latestIngestionAttemptTime) {
        this.latestIngestionAttemptTime = latestIngestionAttemptTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatestIngestionErrorCode")
    public String latestIngestionErrorCode;

    public IngestionStatus withLatestIngestionErrorCode(String latestIngestionErrorCode) {
        this.latestIngestionErrorCode = latestIngestionErrorCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatestIngestionSuccessEventID")
    public String latestIngestionSuccessEventID;

    public IngestionStatus withLatestIngestionSuccessEventID(String latestIngestionSuccessEventID) {
        this.latestIngestionSuccessEventID = latestIngestionSuccessEventID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LatestIngestionSuccessTime")
    public OffsetDateTime latestIngestionSuccessTime;

    public IngestionStatus withLatestIngestionSuccessTime(OffsetDateTime latestIngestionSuccessTime) {
        this.latestIngestionSuccessTime = latestIngestionSuccessTime;
        return this;
    }
    
    public IngestionStatus(){}
}
