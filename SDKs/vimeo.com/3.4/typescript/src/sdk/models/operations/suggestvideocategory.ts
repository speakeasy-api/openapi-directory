/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class SuggestVideoCategorySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class SuggestVideoCategoryRequestBody extends SpeakeasyBase {
  /**
   * The array of the names of the categories that you're suggesting.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category: string[];
}

export class SuggestVideoCategoryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/vnd.vimeo.category+json",
  })
  requestBody: SuggestVideoCategoryRequestBody;

  /**
   * The ID of the video.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=video_id",
  })
  videoId: number;
}

export class SuggestVideoCategoryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The categories were suggested.
   */
  @SpeakeasyMetadata()
  category?: shared.Category;

  /**
   * You don't own this video.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;
}
