"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Optional

class Latest:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_organization_sensor_readings_latest(self, request: operations.GetOrganizationSensorReadingsLatestRequest) -> operations.GetOrganizationSensorReadingsLatestResponse:
        r"""Return the latest available reading for each metric from each sensor, sorted by sensor serial
        Return the latest available reading for each metric from each sensor, sorted by sensor serial
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetOrganizationSensorReadingsLatestRequest, base_url, '/organizations/{organizationId}/sensor/readings/latest', request)
        
        query_params = utils.get_query_params(operations.GetOrganizationSensorReadingsLatestRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetOrganizationSensorReadingsLatestResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[list[operations.GetOrganizationSensorReadingsLatest200ApplicationJSON]])
                res.get_organization_sensor_readings_latest_200_application_json_objects = out

        return res

    