/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExpenseCurrency } from "./expensecurrency";
import { ExpenseDetection } from "./expensedetection";
import { ExpenseGroupProperty } from "./expensegroupproperty";
import { ExpenseType } from "./expensetype";
import { Expose, Type } from "class-transformer";

/**
 * Breakdown of detected information, seperated into the catagories Type, LabelDetection, and ValueDetection
 */
export class ExpenseField extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Currency" })
  @Type(() => ExpenseCurrency)
  currency?: ExpenseCurrency;

  @SpeakeasyMetadata({ elemType: ExpenseGroupProperty })
  @Expose({ name: "GroupProperties" })
  @Type(() => ExpenseGroupProperty)
  groupProperties?: ExpenseGroupProperty[];

  @SpeakeasyMetadata()
  @Expose({ name: "LabelDetection" })
  @Type(() => ExpenseDetection)
  labelDetection?: ExpenseDetection;

  @SpeakeasyMetadata()
  @Expose({ name: "PageNumber" })
  pageNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  @Type(() => ExpenseType)
  type?: ExpenseType;

  @SpeakeasyMetadata()
  @Expose({ name: "ValueDetection" })
  @Type(() => ExpenseDetection)
  valueDetection?: ExpenseDetection;
}
