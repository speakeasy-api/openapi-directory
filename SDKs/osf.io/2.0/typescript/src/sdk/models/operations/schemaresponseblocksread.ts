/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class SchemaResponseBlocksReadRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=schema_response_id",
  })
  schemaResponseId: string;
}

/**
 * A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend.
 */
export enum SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum {
  PageHeading = "page-heading",
  SectionHeading = "section-heading",
  SubsectionHeading = "subsection-heading",
  Paragraph = "paragraph",
  QuestionLabel = "question-label",
  ShortTextInput = "short-text-input",
  LongTextInput = "long-text-input",
  FileInput = "file-input",
  ContributorsInput = "contributors-input",
  SingleSelectInput = "single-select-input",
  MultiSelectInput = "multi-select-input",
  SelectInputOption = "select-input-option",
  SelectOtherOption = "select-other-option",
}

/**
 * The attributes of the Registration Schema Block.
 */
export class SchemaResponseBlocksReadRegistrationSchemaBlockAttributes extends SpeakeasyBase {
  /**
   * A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend.
   */
  @SpeakeasyMetadata()
  blockType?: SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum;

  /**
   * The text that will accompany the UI element displayed on this Registration Schema Block.
   */
  @SpeakeasyMetadata()
  displayText?: string;

  /**
   * The text that will accompany the UI element displayed on this Registration Schema Block.
   */
  @SpeakeasyMetadata()
  exampleText?: string;

  /**
   * Integer beginning at zero that represents the order of Registration Schema Block in the Registration Schema.
   */
  @SpeakeasyMetadata()
  index?: number;

  /**
   * This string is the the block key for the Registration Schema Block's corresponding block on the Schema Response.
   */
  @SpeakeasyMetadata()
  registrationResponseKey?: string;

  /**
   * Bool that represents if this field is required for creation of a Schema Response.
   */
  @SpeakeasyMetadata()
  required?: boolean;

  /**
   * This string indicates if a block is part of a block group, block groups may contain the different options dropdown menu or a group of inputs and display elements that are validated together.
   */
  @SpeakeasyMetadata()
  schemaBlockGroupKey?: string;
}

/**
 * URLs to alternative representations of the  Registration Schema Block.
 */
export class SchemaResponseBlocksReadRegistrationSchemaBlockLinks extends SpeakeasyBase {
  /**
   * A link to the detail page for a Registration Schema Block.
   */
  @SpeakeasyMetadata()
  self?: string;
}

/**
 * Links to other entities or entity collections that have a relationship to the Schema Response Action.
 */
export class SchemaResponseBlocksReadRegistrationSchemaBlockRelationships extends SpeakeasyBase {
  /**
   * A link to the schema the the Registration Schema Block is on.
   */
  @SpeakeasyMetadata()
  schema?: string;
}

/**
 * OK
 */
export class SchemaResponseBlocksReadRegistrationSchemaBlock extends SpeakeasyBase {
  /**
   * The attributes of the Registration Schema Block.
   */
  @SpeakeasyMetadata()
  attributes?: SchemaResponseBlocksReadRegistrationSchemaBlockAttributes;

  /**
   * The unique identifier of the Registration Schema Block.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * URLs to alternative representations of the  Registration Schema Block.
   */
  @SpeakeasyMetadata()
  links?: SchemaResponseBlocksReadRegistrationSchemaBlockLinks;

  /**
   * Links to other entities or entity collections that have a relationship to the Schema Response Action.
   */
  @SpeakeasyMetadata()
  relationships?: SchemaResponseBlocksReadRegistrationSchemaBlockRelationships;

  /**
   * The type identifier of the Registration Schema Block (`schema-blocks`).
   */
  @SpeakeasyMetadata()
  type?: string;
}

export class SchemaResponseBlocksReadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
