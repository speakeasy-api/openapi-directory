// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransferRunStateEnum - Data transfer run state. Ignored for input requests.
type TransferRunStateEnum string

const (
	TransferRunStateEnumTransferStateUnspecified TransferRunStateEnum = "TRANSFER_STATE_UNSPECIFIED"
	TransferRunStateEnumPending                  TransferRunStateEnum = "PENDING"
	TransferRunStateEnumRunning                  TransferRunStateEnum = "RUNNING"
	TransferRunStateEnumSucceeded                TransferRunStateEnum = "SUCCEEDED"
	TransferRunStateEnumFailed                   TransferRunStateEnum = "FAILED"
	TransferRunStateEnumCancelled                TransferRunStateEnum = "CANCELLED"
)

func (e *TransferRunStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TRANSFER_STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		*e = TransferRunStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferRunStateEnum: %s", s)
	}
}

// TransferRun - Represents a data transfer run.
type TransferRun struct {
	// Output only. Data source id.
	DataSourceID *string `json:"dataSourceId,omitempty"`
	// Output only. The BigQuery target dataset id.
	DestinationDatasetID *string `json:"destinationDatasetId,omitempty"`
	// Represents preferences for sending email notifications for transfer run events.
	EmailPreferences *EmailPreferences `json:"emailPreferences,omitempty"`
	// Output only. Time when transfer run ended. Parameter ignored by server for input requests.
	EndTime *string `json:"endTime,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	ErrorStatus *Status `json:"errorStatus,omitempty"`
	// The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run.
	Name *string `json:"name,omitempty"`
	// Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`
	NotificationPubsubTopic *string `json:"notificationPubsubTopic,omitempty"`
	// Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq
	Params map[string]interface{} `json:"params,omitempty"`
	// For batch transfer runs, specifies the date and time of the data should be ingested.
	RunTime *string `json:"runTime,omitempty"`
	// Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this.
	Schedule *string `json:"schedule,omitempty"`
	// Minimum time after which a transfer run can be started.
	ScheduleTime *string `json:"scheduleTime,omitempty"`
	// Output only. Time when transfer run was started. Parameter ignored by server for input requests.
	StartTime *string `json:"startTime,omitempty"`
	// Data transfer run state. Ignored for input requests.
	State *TransferRunStateEnum `json:"state,omitempty"`
	// Output only. Last time the data transfer run state was updated.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Deprecated. Unique ID of the user on whose behalf transfer is done.
	UserID *string `json:"userId,omitempty"`
}
