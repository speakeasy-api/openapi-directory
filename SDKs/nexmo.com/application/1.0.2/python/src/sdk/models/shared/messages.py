"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MessagesWebhooksEndpointTypeEnum(str, Enum):
    INBOUND_URL = 'inbound_url'
    STATUS_URL = 'status_url'

class MessagesWebhooksHTTPMethodEnum(str, Enum):
    r"""The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST."""
    GET = 'GET'
    POST = 'POST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessagesWebhooks:
    
    endpoint: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpoint') }})
    r"""`inbound_url`: The URL where inbound messages are delivered. `status_url`: The URL where message status is delivered."""  
    endpoint_type: MessagesWebhooksEndpointTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpoint_type') }})  
    http_method: MessagesWebhooksHTTPMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method') }})
    r"""The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Messages:
    r"""The Nexmo product that you access with this application."""
    
    webhooks: Optional[list[MessagesWebhooks]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhooks'), 'exclude': lambda f: f is None }})  
    