"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from typing import Optional


@dataclasses.dataclass
class Blobstore2Info:
    r"""Information to read/write to blobstore2."""
    
    blob_generation: Optional[str] = dataclasses.field(default=None)
    r"""The blob generation id."""  
    blob_id: Optional[str] = dataclasses.field(default=None)
    r"""The blob id, e.g., /blobstore/prod/playground/scotty"""  
    download_read_handle: Optional[str] = dataclasses.field(default=None)
    r"""Read handle passed from Bigstore -> Scotty for a GCS download. This is a signed, serialized blobstore2.ReadHandle proto which must never be set outside of Bigstore, and is not applicable to non-GCS media downloads."""  
    read_token: Optional[str] = dataclasses.field(default=None)
    r"""The blob read token. Needed to read blobs that have not been replicated. Might not be available until the final call."""  
    upload_metadata_container: Optional[str] = dataclasses.field(default=None)
    r"""Metadata passed from Blobstore -> Scotty for a new GCS upload. This is a signed, serialized blobstore2.BlobMetadataContainer proto which must never be consumed outside of Bigstore, and is not applicable to non-GCS media uploads."""  
    