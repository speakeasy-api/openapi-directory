<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class FacetsFacets
{
    /**
     * Whether the client-side should hide the facet (`true`) or not (`false`)
     * 
     * @var ?bool $hidden
     */
	#[\JMS\Serializer\Annotation\SerializedName('hidden')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hidden = null;
    
    /**
     * Human-readable format of the facet key.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Number of possible values.
     * 
     * @var ?float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
    /**
     * Facet type
     * 
     *  - `TEXT` - The value is a simple text.
     *  - `PRICERANGE` - The value contains the property `range` representing the minimum and the maximum price for the query.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FacetsFacetsTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FacetsFacetsTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FacetsFacetsTypeEnum $type = null;
    
    /**
     * Possible values.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FacetsFacetsValues> $values
     */
	#[\JMS\Serializer\Annotation\SerializedName('values')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FacetsFacetsValues>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $values = null;
    
	public function __construct()
	{
		$this->hidden = null;
		$this->name = null;
		$this->quantity = null;
		$this->type = null;
		$this->values = null;
	}
}
