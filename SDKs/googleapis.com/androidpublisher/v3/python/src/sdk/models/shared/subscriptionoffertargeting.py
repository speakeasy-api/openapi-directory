"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import acquisitiontargetingrule as shared_acquisitiontargetingrule
from ..shared import upgradetargetingrule as shared_upgradetargetingrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionOfferTargeting:
    r"""Defines the rule a user needs to satisfy to receive this offer."""
    
    acquisition_rule: Optional[shared_acquisitiontargetingrule.AcquisitionTargetingRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acquisitionRule'), 'exclude': lambda f: f is None }})
    r"""Represents a targeting rule of the form: User never had {scope} before."""  
    upgrade_rule: Optional[shared_upgradetargetingrule.UpgradeTargetingRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upgradeRule'), 'exclude': lambda f: f is None }})
    r"""Represents a targeting rule of the form: User currently has {scope} [with billing period {billing_period}]."""  
    