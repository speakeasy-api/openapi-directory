// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LookupAttributeKeyEnum string

const (
	LookupAttributeKeyEnumEventID      LookupAttributeKeyEnum = "EventId"
	LookupAttributeKeyEnumEventName    LookupAttributeKeyEnum = "EventName"
	LookupAttributeKeyEnumReadOnly     LookupAttributeKeyEnum = "ReadOnly"
	LookupAttributeKeyEnumUsername     LookupAttributeKeyEnum = "Username"
	LookupAttributeKeyEnumResourceType LookupAttributeKeyEnum = "ResourceType"
	LookupAttributeKeyEnumResourceName LookupAttributeKeyEnum = "ResourceName"
	LookupAttributeKeyEnumEventSource  LookupAttributeKeyEnum = "EventSource"
	LookupAttributeKeyEnumAccessKeyID  LookupAttributeKeyEnum = "AccessKeyId"
)

func (e *LookupAttributeKeyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EventId":
		fallthrough
	case "EventName":
		fallthrough
	case "ReadOnly":
		fallthrough
	case "Username":
		fallthrough
	case "ResourceType":
		fallthrough
	case "ResourceName":
		fallthrough
	case "EventSource":
		fallthrough
	case "AccessKeyId":
		*e = LookupAttributeKeyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LookupAttributeKeyEnum: %s", s)
	}
}
