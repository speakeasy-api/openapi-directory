"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmfrontendseventbusprotoworkflowparameterentry as shared_enterprisecrmfrontendseventbusprotoworkflowparameterentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmFrontendsEventbusProtoWorkflowParameters:
    r"""LINT.IfChange This is the frontend version of WorkflowParameters. It's exactly like the backend version except that instead of flattening protobuf parameters and treating every field and subfield of a protobuf parameter as a separate parameter, the fields/subfields of a protobuf parameter will be nested as \\"children\\" (see 'children' field below) parameters of the parent parameter. Please refer to enterprise/crm/eventbus/proto/workflow_parameters.proto for more information about WorkflowParameters."""
    
    parameters: Optional[list[shared_enterprisecrmfrontendseventbusprotoworkflowparameterentry.EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""Parameters are a part of Event and can be used to communiticate between different tasks that are part of the same workflow execution."""  
    