/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class UserAssistantCreateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class UserAssistantCreateUserAssistantsListAssistants extends SpeakeasyBase {
  /**
   * Assistant's email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Assistant's user ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

/**
 * List of user's assistants.
 */
export class UserAssistantCreateUserAssistantsList extends SpeakeasyBase {
  /**
   * List of User's assistants.
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=assistants;json=true",
    elemType: UserAssistantCreateUserAssistantsListAssistants,
  })
  @Expose({ name: "assistants" })
  @Type(() => UserAssistantCreateUserAssistantsListAssistants)
  assistants?: UserAssistantCreateUserAssistantsListAssistants[];
}

export class UserAssistantCreateRequest extends SpeakeasyBase {
  /**
   * User assistant.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UserAssistantCreateUserAssistantsList;

  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

/**
 * **HTTP Status Code:** `201`<br>
 *
 * @remarks
 * Assistant added.
 */
export class UserAssistantCreate201ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata()
  addAt?: Date;

  /**
   * User ID.
   */
  @SpeakeasyMetadata()
  ids?: string;
}

/**
 * **HTTP Status Code:** `201`<br>
 *
 * @remarks
 * Assistant added.
 */
export class UserAssistantCreate201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "add_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  addAt?: Date;

  /**
   * User ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ids" })
  ids?: string;
}

export class UserAssistantCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `201`<br>
   *
   * @remarks
   * Assistant added.
   */
  @SpeakeasyMetadata()
  userAssistantCreate201ApplicationJSONObject?: UserAssistantCreate201ApplicationJSON;
}
