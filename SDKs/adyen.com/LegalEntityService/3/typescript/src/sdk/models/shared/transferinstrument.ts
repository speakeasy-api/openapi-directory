/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { BankAccountInfo } from "./bankaccountinfo";
import { CapabilityProblem } from "./capabilityproblem";
import { DocumentReference } from "./documentreference";
import { SupportingEntityCapability } from "./supportingentitycapability";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The type of transfer instrument.
 *
 * @remarks
 *
 * Possible value: **bankAccount**.
 */
export enum TransferInstrumentTypeEnum {
  BankAccount = "bankAccount",
  RecurringDetail = "recurringDetail",
}

/**
 * OK - the request has succeeded.
 */
export class TransferInstrument extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bankAccount" })
  @Type(() => BankAccountInfo)
  bankAccount: BankAccountInfo;

  /**
   * List of capabilities for this supporting entity.
   */
  @SpeakeasyMetadata({ elemType: SupportingEntityCapability })
  @Expose({ name: "capabilities" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SupportingEntityCapability> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SupportingEntityCapability);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  capabilities?: Record<string, SupportingEntityCapability>;

  /**
   * List of documents uploaded for the transfer instrument.
   */
  @SpeakeasyMetadata({ elemType: DocumentReference })
  @Expose({ name: "documentDetails" })
  @Type(() => DocumentReference)
  documentDetails?: DocumentReference[];

  /**
   * The unique identifier of the transfer instrument.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) that owns the transfer instrument.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalEntityId" })
  legalEntityId: string;

  /**
   * List of the verification errors from capabilities for this supporting entity.
   */
  @SpeakeasyMetadata({ elemType: CapabilityProblem })
  @Expose({ name: "problems" })
  @Type(() => CapabilityProblem)
  problems?: CapabilityProblem[];

  /**
   * The type of transfer instrument.
   *
   * @remarks
   *
   * Possible value: **bankAccount**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TransferInstrumentTypeEnum;
}
