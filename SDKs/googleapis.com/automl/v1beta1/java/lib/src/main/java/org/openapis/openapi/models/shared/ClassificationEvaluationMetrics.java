/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClassificationEvaluationMetrics - Model evaluation metrics for classification problems. Note: For Video Classification this metrics only describe quality of the Video Classification predictions of "segment_classification" type.
 */
public class ClassificationEvaluationMetrics {
    /**
     * Output only. The annotation spec ids used for this evaluation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotationSpecId")
    public String[] annotationSpecId;
    public ClassificationEvaluationMetrics withAnnotationSpecId(String[] annotationSpecId) {
        this.annotationSpecId = annotationSpecId;
        return this;
    }
    
    /**
     * Output only. The Area Under Precision-Recall Curve metric. Micro-averaged for the overall evaluation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auPrc")
    public Float auPrc;
    public ClassificationEvaluationMetrics withAuPrc(Float auPrc) {
        this.auPrc = auPrc;
        return this;
    }
    
    /**
     * Output only. The Area Under Receiver Operating Characteristic curve metric. Micro-averaged for the overall evaluation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auRoc")
    public Float auRoc;
    public ClassificationEvaluationMetrics withAuRoc(Float auRoc) {
        this.auRoc = auRoc;
        return this;
    }
    
    /**
     * Output only. The Area Under Precision-Recall Curve metric based on priors. Micro-averaged for the overall evaluation. Deprecated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseAuPrc")
    public Float baseAuPrc;
    public ClassificationEvaluationMetrics withBaseAuPrc(Float baseAuPrc) {
        this.baseAuPrc = baseAuPrc;
        return this;
    }
    
    /**
     * Output only. Metrics for each confidence_threshold in 0.00,0.05,0.10,...,0.95,0.96,0.97,0.98,0.99 and position_threshold = INT32_MAX_VALUE. ROC and precision-recall curves, and other aggregated metrics are derived from them. The confidence metrics entries may also be supplied for additional values of position_threshold, but from these no aggregated metrics are computed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidenceMetricsEntry")
    public ClassificationEvaluationMetricsConfidenceMetricsEntry[] confidenceMetricsEntry;
    public ClassificationEvaluationMetrics withConfidenceMetricsEntry(ClassificationEvaluationMetricsConfidenceMetricsEntry[] confidenceMetricsEntry) {
        this.confidenceMetricsEntry = confidenceMetricsEntry;
        return this;
    }
    
    /**
     * Confusion matrix of the model running the classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confusionMatrix")
    public ConfusionMatrix confusionMatrix;
    public ClassificationEvaluationMetrics withConfusionMatrix(ConfusionMatrix confusionMatrix) {
        this.confusionMatrix = confusionMatrix;
        return this;
    }
    
    /**
     * Output only. The Log Loss metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logLoss")
    public Float logLoss;
    public ClassificationEvaluationMetrics withLogLoss(Float logLoss) {
        this.logLoss = logLoss;
        return this;
    }
    
}
