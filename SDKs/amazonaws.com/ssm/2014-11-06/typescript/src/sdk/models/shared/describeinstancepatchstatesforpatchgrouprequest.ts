/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstancePatchStateFilter } from "./instancepatchstatefilter";
import { Expose, Type } from "class-transformer";

export class DescribeInstancePatchStatesForPatchGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: InstancePatchStateFilter })
  @Expose({ name: "Filters" })
  @Type(() => InstancePatchStateFilter)
  filters?: InstancePatchStateFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PatchGroup" })
  patchGroup: string;
}
