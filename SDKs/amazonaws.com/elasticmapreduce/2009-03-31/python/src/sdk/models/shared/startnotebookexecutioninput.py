"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import executionengineconfig as shared_executionengineconfig
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartNotebookExecutionInput:
    
    editor_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EditorId') }})  
    execution_engine: shared_executionengineconfig.ExecutionEngineConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionEngine') }})  
    relative_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RelativePath') }})  
    service_role: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceRole') }})  
    notebook_execution_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotebookExecutionName'), 'exclude': lambda f: f is None }})  
    notebook_instance_security_group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotebookInstanceSecurityGroupId'), 'exclude': lambda f: f is None }})  
    notebook_params: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotebookParams'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    