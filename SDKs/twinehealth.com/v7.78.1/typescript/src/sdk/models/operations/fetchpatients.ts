/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class FetchPatientsRequest extends SpeakeasyBase {
  /**
   * If not specified, return all patients. If set to 'true' return only archived patients, if set to 'false', return only patients who are not archived.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[archived]",
  })
  filterArchived?: boolean;

  /**
   * The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[created_at]",
  })
  filterCreatedAt?: string;

  /**
   * Comma-separated list of group ids. Note that either `filter[group]` or `filter[organization]` must be specified.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[groups]",
  })
  filterGroups?: string;

  /**
   * Identifier system (example: "MyEHR") - requires a "filter[identifier][value]" parameter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[identifier][system]",
  })
  filterIdentifierSystem?: string;

  /**
   * Identifier value (example: "12345") - requires a "filter[identifier][system]" parameter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[identifier][value]",
  })
  filterIdentifierValue?: string;

  /**
   * Fitbit Plus organization id. Note that either `filter[group]` or `filter[organization]` must be specified.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[organization]",
  })
  filterOrganization?: string;

  /**
   * The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[updated_at]",
  })
  filterUpdatedAt?: string;

  /**
   * Page cursor
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[cursor]",
  })
  pageCursor?: string;

  /**
   * Page limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[limit]",
  })
  pageLimit?: number;

  /**
   * Page number
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[number]",
  })
  pageNumber?: number;

  /**
   * Page size
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[size]",
  })
  pageSize?: number;
}

export class FetchPatientsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  fetchErrorResponse?: shared.FetchErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  fetchPatientsResponse?: shared.FetchPatientsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
