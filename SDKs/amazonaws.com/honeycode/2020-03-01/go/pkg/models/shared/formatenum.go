// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FormatEnum string

const (
	FormatEnumAuto       FormatEnum = "AUTO"
	FormatEnumNumber     FormatEnum = "NUMBER"
	FormatEnumCurrency   FormatEnum = "CURRENCY"
	FormatEnumDate       FormatEnum = "DATE"
	FormatEnumTime       FormatEnum = "TIME"
	FormatEnumDateTime   FormatEnum = "DATE_TIME"
	FormatEnumPercentage FormatEnum = "PERCENTAGE"
	FormatEnumText       FormatEnum = "TEXT"
	FormatEnumAccounting FormatEnum = "ACCOUNTING"
	FormatEnumContact    FormatEnum = "CONTACT"
	FormatEnumRowlink    FormatEnum = "ROWLINK"
	FormatEnumRowset     FormatEnum = "ROWSET"
)

func (e FormatEnum) ToPointer() *FormatEnum {
	return &e
}

func (e *FormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTO":
		fallthrough
	case "NUMBER":
		fallthrough
	case "CURRENCY":
		fallthrough
	case "DATE":
		fallthrough
	case "TIME":
		fallthrough
	case "DATE_TIME":
		fallthrough
	case "PERCENTAGE":
		fallthrough
	case "TEXT":
		fallthrough
	case "ACCOUNTING":
		fallthrough
	case "CONTACT":
		fallthrough
	case "ROWLINK":
		fallthrough
	case "ROWSET":
		*e = FormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FormatEnum: %v", v)
	}
}
