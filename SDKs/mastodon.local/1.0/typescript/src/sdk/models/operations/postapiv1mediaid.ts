/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostApiV1MediaIdSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

export class PostApiV1MediaIdRequestBody extends SpeakeasyBase {
  /**
   * A plain-text description of the media, for accessibility purposes.
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * The file to be attached, using multipart form data.
   */
  @SpeakeasyMetadata()
  file: Uint8Array;

  /**
   * Two floating points (x,y), comma-delimited, ranging from -1.0 to 1.0 (see “Focal points” below)
   */
  @SpeakeasyMetadata()
  focus?: string;

  /**
   * The custom thumbnail of the media to be attached, using multipart form data.
   */
  @SpeakeasyMetadata()
  thumbnail?: Uint8Array;
}

export class PostApiV1MediaIdRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/form-data" })
  requestBody?: Uint8Array;

  /**
   * The id of the Attachment entity to be updated.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class PostApiV1MediaIdResponse extends SpeakeasyBase {
  /**
   * Attachment updated successfully.
   */
  @SpeakeasyMetadata()
  attachment?: shared.Attachment;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing Authorization header
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
