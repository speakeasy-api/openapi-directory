<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateIncidentRecordRequestBody
{
    /**
     * The Amazon Resource Name (ARN) of the incident record you are updating.
     * 
     * @var string $arn
     */
	#[\JMS\Serializer\Annotation\SerializedName('arn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $arn;
    
    /**
     * The Chatbot chat channel used for collaboration during an incident.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateIncidentRecordRequestBodyChatChannel $chatChannel
     */
	#[\JMS\Serializer\Annotation\SerializedName('chatChannel')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateIncidentRecordRequestBodyChatChannel')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateIncidentRecordRequestBodyChatChannel $chatChannel = null;
    
    /**
     * A token that ensures that a client calls the operation only once with the specified details.
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     * <p>Defines the impact of the incident to customers and applications. If you provide an impact for an incident, it overwrites the impact provided by the response plan.</p> <p class="title"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>1</code> - Critical impact, full application failure that impacts many to all customers. </p> </li> <li> <p> <code>2</code> - High impact, partial application failure with impact to many customers.</p> </li> <li> <p> <code>3</code> - Medium impact, the application is providing reduced service to customers.</p> </li> <li> <p> <code>4</code> - Low impact, customer aren't impacted by the problem yet.</p> </li> <li> <p> <code>5</code> - No impact, customers aren't currently impacted but urgent action is needed to avoid impact.</p> </li> </ul>
     * 
     * @var ?int $impact
     */
	#[\JMS\Serializer\Annotation\SerializedName('impact')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $impact = null;
    
    /**
     * <p>The Amazon SNS targets that Incident Manager notifies when a client updates an incident.</p> <p>Using multiple SNS topics creates redundancy in the event that a Region is down during the incident.</p>
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NotificationTargetItem> $notificationTargets
     */
	#[\JMS\Serializer\Annotation\SerializedName('notificationTargets')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NotificationTargetItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notificationTargets = null;
    
    /**
     * The status of the incident. Possible statuses are <code>Open</code> or <code>Resolved</code>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateIncidentRecordRequestBodyStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateIncidentRecordRequestBodyStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateIncidentRecordRequestBodyStatusEnum $status = null;
    
    /**
     * A longer description of what occurred during the incident.
     * 
     * @var ?string $summary
     */
	#[\JMS\Serializer\Annotation\SerializedName('summary')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $summary = null;
    
    /**
     * A brief description of the incident.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->arn = "";
		$this->chatChannel = null;
		$this->clientToken = null;
		$this->impact = null;
		$this->notificationTargets = null;
		$this->status = null;
		$this->summary = null;
		$this->title = null;
	}
}
