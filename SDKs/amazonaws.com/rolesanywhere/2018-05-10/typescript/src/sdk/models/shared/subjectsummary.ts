/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A summary representation of Subject resources returned in read operations; primarily ListSubjects.
 */
export class SubjectSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastSeenAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSeenAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectArn" })
  subjectArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectId" })
  subjectId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "x509Subject" })
  x509Subject?: string;
}
