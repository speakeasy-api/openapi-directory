// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BPAStatusMessageEnum string

const (
	BPAStatusMessageEnumDefaultedForSlrMissing       BPAStatusMessageEnum = "DEFAULTED_FOR_SLR_MISSING"
	BPAStatusMessageEnumSyncOnHold                   BPAStatusMessageEnum = "SYNC_ON_HOLD"
	BPAStatusMessageEnumDefaultedForSlrMissingOnHold BPAStatusMessageEnum = "DEFAULTED_FOR_SLR_MISSING_ON_HOLD"
	BPAStatusMessageEnumUnknown                      BPAStatusMessageEnum = "Unknown"
)

func (e BPAStatusMessageEnum) ToPointer() *BPAStatusMessageEnum {
	return &e
}

func (e *BPAStatusMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEFAULTED_FOR_SLR_MISSING":
		fallthrough
	case "SYNC_ON_HOLD":
		fallthrough
	case "DEFAULTED_FOR_SLR_MISSING_ON_HOLD":
		fallthrough
	case "Unknown":
		*e = BPAStatusMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BPAStatusMessageEnum: %v", v)
	}
}
