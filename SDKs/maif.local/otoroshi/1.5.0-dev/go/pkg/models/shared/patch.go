// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PatchOpEnum string

const (
	PatchOpEnumAdd     PatchOpEnum = "add"
	PatchOpEnumReplace PatchOpEnum = "replace"
	PatchOpEnumRemove  PatchOpEnum = "remove"
	PatchOpEnumCopy    PatchOpEnum = "copy"
	PatchOpEnumTest    PatchOpEnum = "test"
)

func (e *PatchOpEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "add":
		fallthrough
	case "replace":
		fallthrough
	case "remove":
		fallthrough
	case "copy":
		fallthrough
	case "test":
		*e = PatchOpEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchOpEnum: %s", s)
	}
}

type Patch struct {
	Op    PatchOpEnum `json:"op"`
	Path  string      `json:"path"`
	Value interface{} `json:"value,omitempty"`
}
