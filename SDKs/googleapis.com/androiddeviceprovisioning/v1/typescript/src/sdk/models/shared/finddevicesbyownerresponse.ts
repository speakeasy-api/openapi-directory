/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Device } from "./device";
import { Expose, Type } from "class-transformer";

/**
 * Response containing found devices.
 */
export class FindDevicesByOwnerResponse extends SpeakeasyBase {
  /**
   * The customer's devices.
   */
  @SpeakeasyMetadata({ elemType: Device })
  @Expose({ name: "devices" })
  @Type(() => Device)
  devices?: Device[];

  /**
   * A token used to access the next page of results. Omitted if no further results are available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The total count of items in the list irrespective of pagination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
