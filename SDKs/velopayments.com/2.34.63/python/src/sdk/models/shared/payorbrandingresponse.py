"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayorBrandingResponse:
    r"""HTTP Ok, key created"""
    
    logo_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logoUrl') }})
    r"""<p>The URL to use for this payor’s logo</p>
    <p>This will be an immutable system-generated URL</p>
    """  
    payor_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payorName') }})
    r"""The name of the payor"""  
    collective_alias: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collectiveAlias'), 'exclude': lambda f: f is None }})
    r"""How the payor has chosen to refer to payees"""  
    dba_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dbaName'), 'exclude': lambda f: f is None }})
    r"""The payor’s 'Doing Business As' name"""  
    support_contact: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportContact'), 'exclude': lambda f: f is None }})
    r"""The payor’s support contact address"""  
    