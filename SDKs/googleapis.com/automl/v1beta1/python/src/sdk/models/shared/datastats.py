"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import arraystats as shared_arraystats
from ..shared import categorystats as shared_categorystats
from ..shared import float64stats as shared_float64stats
from ..shared import stringstats as shared_stringstats
from ..shared import structstats as shared_structstats
from ..shared import timestampstats as shared_timestampstats
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataStats:
    r"""The data statistics of a series of values that share the same DataType."""
    
    array_stats: Optional[shared_arraystats.ArrayStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arrayStats'), 'exclude': lambda f: f is None }})
    r"""The data statistics of a series of ARRAY values."""  
    category_stats: Optional[shared_categorystats.CategoryStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoryStats'), 'exclude': lambda f: f is None }})
    r"""The data statistics of a series of CATEGORY values."""  
    distinct_value_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distinctValueCount'), 'exclude': lambda f: f is None }})
    r"""The number of distinct values."""  
    float64_stats: Optional[shared_float64stats.Float64Stats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('float64Stats'), 'exclude': lambda f: f is None }})
    r"""The data statistics of a series of FLOAT64 values."""  
    null_value_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nullValueCount'), 'exclude': lambda f: f is None }})
    r"""The number of values that are null."""  
    string_stats: Optional[shared_stringstats.StringStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringStats'), 'exclude': lambda f: f is None }})
    r"""The data statistics of a series of STRING values."""  
    struct_stats: Optional[shared_structstats.StructStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('structStats'), 'exclude': lambda f: f is None }})
    r"""The data statistics of a series of STRUCT values."""  
    timestamp_stats: Optional[shared_timestampstats.TimestampStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestampStats'), 'exclude': lambda f: f is None }})
    r"""The data statistics of a series of TIMESTAMP values."""  
    valid_value_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validValueCount'), 'exclude': lambda f: f is None }})
    r"""The number of values that are valid."""  
    