// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAccessXAmzTargetEnum
type CreateAccessXAmzTargetEnum string

const (
	CreateAccessXAmzTargetEnumTransferServiceCreateAccess CreateAccessXAmzTargetEnum = "TransferService.CreateAccess"
)

func (e CreateAccessXAmzTargetEnum) ToPointer() *CreateAccessXAmzTargetEnum {
	return &e
}

func (e *CreateAccessXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TransferService.CreateAccess":
		*e = CreateAccessXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccessXAmzTargetEnum: %v", v)
	}
}

type CreateAccessRequest struct {
	CreateAccessRequest shared.CreateAccessRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          CreateAccessXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateAccessResponse struct {
	ContentType string
	// Success
	CreateAccessResponse *shared.CreateAccessResponse
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceExistsException
	ResourceExistsException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
