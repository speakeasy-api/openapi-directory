"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class UpdateInlineScriptTagSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class UpdateInlineScriptTagRequestBodyInlineScriptTagDisplayScopeEnum(str, Enum):
    r"""インラインスクリプトを出力するページ。
    
    - `all`: カートの途中のページと注文完了ページの両方
    - `thanks_page`: 注文完了ページ
    - `cart`: カートの途中のページ
    """
    ALL = 'all'
    THANKS_PAGE = 'thanks_page'
    CART = 'cart'

class UpdateInlineScriptTagRequestBodyInlineScriptTagTriggerEventEnum(str, Enum):
    r"""インラインスクリプトを実行するタイミング。
    
    - `object_builded`: JSオブジェクトの作成が完了した時
    """
    OBJECT_BUILDED = 'object_builded'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateInlineScriptTagRequestBodyInlineScriptTag:
    
    display_scope: Optional[UpdateInlineScriptTagRequestBodyInlineScriptTagDisplayScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_scope'), 'exclude': lambda f: f is None }})
    r"""インラインスクリプトを出力するページ。
    
    - `all`: カートの途中のページと注文完了ページの両方
    - `thanks_page`: 注文完了ページ
    - `cart`: カートの途中のページ
    """  
    script: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script'), 'exclude': lambda f: f is None }})
    r"""インラインスクリプト"""  
    trigger_event: Optional[UpdateInlineScriptTagRequestBodyInlineScriptTagTriggerEventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trigger_event'), 'exclude': lambda f: f is None }})
    r"""インラインスクリプトを実行するタイミング。
    
    - `object_builded`: JSオブジェクトの作成が完了した時
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateInlineScriptTagRequestBody:
    r"""更新するスクリプトタグの情報"""
    
    inline_script_tag: Optional[UpdateInlineScriptTagRequestBodyInlineScriptTag] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inline_script_tag'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class UpdateInlineScriptTagRequest:
    
    inline_script_tag_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'inlineScriptTagId', 'style': 'simple', 'explode': False }})
    r"""インラインスクリプトタグID"""  
    request_body: Optional[UpdateInlineScriptTagRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""更新するスクリプトタグの情報"""  
    
class UpdateInlineScriptTag200ApplicationJSONInlineScriptTagDisplayScopeEnum(str, Enum):
    r"""インラインスクリプトを出力するページ。
    
    - `all`: カートの途中のページと注文完了ページの両方
    - `thanks_page`: 注文完了ページ
    - `cart`: カートの途中のページ
    """
    ALL = 'all'
    THANKS_PAGE = 'thanks_page'
    CART = 'cart'

class UpdateInlineScriptTag200ApplicationJSONInlineScriptTagTriggerEventEnum(str, Enum):
    r"""インラインスクリプトを実行するタイミング。
    
    - `object_builded`: JSオブジェクトの作成が完了した時
    """
    OBJECT_BUILDED = 'object_builded'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateInlineScriptTag200ApplicationJSONInlineScriptTag:
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_id'), 'exclude': lambda f: f is None }})
    r"""アカウントID"""  
    display_scope: Optional[UpdateInlineScriptTag200ApplicationJSONInlineScriptTagDisplayScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_scope'), 'exclude': lambda f: f is None }})
    r"""インラインスクリプトを出力するページ。
    
    - `all`: カートの途中のページと注文完了ページの両方
    - `thanks_page`: 注文完了ページ
    - `cart`: カートの途中のページ
    """  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""インラインスクリプトタグID"""  
    make_date: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('make_date'), 'exclude': lambda f: f is None }})
    r"""作成日時"""  
    oauth_application_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth_application_id'), 'exclude': lambda f: f is None }})
    r"""アプリID"""  
    script: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script'), 'exclude': lambda f: f is None }})
    r"""インラインスクリプト"""  
    trigger_event: Optional[UpdateInlineScriptTag200ApplicationJSONInlineScriptTagTriggerEventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trigger_event'), 'exclude': lambda f: f is None }})
    r"""インラインスクリプトを実行するタイミング。
    
    - `object_builded`: JSオブジェクトの作成が完了した時
    """  
    update_date: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_date'), 'exclude': lambda f: f is None }})
    r"""更新日時"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateInlineScriptTag200ApplicationJSON:
    
    inline_script_tag: Optional[UpdateInlineScriptTag200ApplicationJSONInlineScriptTag] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inline_script_tag'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class UpdateInlineScriptTagResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_inline_script_tag_200_application_json_object: Optional[UpdateInlineScriptTag200ApplicationJSON] = dataclasses.field(default=None)  
    