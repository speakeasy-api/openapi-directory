/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class SamsungPreviewSectionTile {
    /**
     * Data to send to the application when the tile is clicked
     */
    @JsonProperty("action_data")
    public String actionData;
    public SamsungPreviewSectionTile withActionData(String actionData) {
        this.actionData = actionData;
        return this;
    }
    
    /**
     * Time to begin showing the tile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("display_from")
    public OffsetDateTime displayFrom;
    public SamsungPreviewSectionTile withDisplayFrom(OffsetDateTime displayFrom) {
        this.displayFrom = displayFrom;
        return this;
    }
    
    /**
     * Time to stop showing the tile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("display_until")
    public OffsetDateTime displayUntil;
    public SamsungPreviewSectionTile withDisplayUntil(OffsetDateTime displayUntil) {
        this.displayUntil = displayUntil;
        return this;
    }
    
    /**
     * Thumbnail image aspect ratio
     *   "16:9"
     *   "4:3"
     *   "1:1" (default)
     *   "2:3"
     *   The thumbnail height is fixed at 250 px on presentation.
     * 
     */
    @JsonProperty("image_ratio")
    public String imageRatio;
    public SamsungPreviewSectionTile withImageRatio(String imageRatio) {
        this.imageRatio = imageRatio;
        return this;
    }
    
    /**
     * Thumbnail image URL
     */
    @JsonProperty("image_url")
    public String imageUrl;
    public SamsungPreviewSectionTile withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * If "true", a "Play" icon is shown over the thumbnail image
     */
    @JsonProperty("is_playable")
    public Boolean isPlayable;
    public SamsungPreviewSectionTile withIsPlayable(Boolean isPlayable) {
        this.isPlayable = isPlayable;
        return this;
    }
    
    /**
     * Section position. If specified, sections are shown in ascending position order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("position")
    public Integer position;
    public SamsungPreviewSectionTile withPosition(Integer position) {
        this.position = position;
        return this;
    }
    
    /**
     * Tile subtitle
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtitle")
    public String subtitle;
    public SamsungPreviewSectionTile withSubtitle(String subtitle) {
        this.subtitle = subtitle;
        return this;
    }
    
    /**
     * Tile title
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public SamsungPreviewSectionTile withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
