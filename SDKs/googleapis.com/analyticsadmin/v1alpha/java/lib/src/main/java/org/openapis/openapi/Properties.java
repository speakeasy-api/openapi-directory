/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Properties {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Properties(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Creates information about multiple access bindings to an account or property. This method is transactional. If any AccessBinding cannot be created, none of the AccessBindings will be created.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchCreateResponse analyticsadminPropertiesAccessBindingsBatchCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchCreateRequest.class, baseUrl, "/v1alpha/{parent}/accessBindings:batchCreate", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequestInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchCreateResponse() {{
            googleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse.class);
                res.googleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse = out;
            }
        }

        return res;
    }

    /**
     * Deletes information about multiple users' links to an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchDeleteResponse analyticsadminPropertiesAccessBindingsBatchDelete(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchDeleteRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchDeleteRequest.class, baseUrl, "/v1alpha/{parent}/accessBindings:batchDelete", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchDeleteResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchDeleteResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Gets information about multiple access bindings to an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchGetResponse analyticsadminPropertiesAccessBindingsBatchGet(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchGetRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchGetRequest.class, baseUrl, "/v1alpha/{parent}/accessBindings:batchGet", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchGetResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchGetResponse() {{
            googleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse.class);
                res.googleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse = out;
            }
        }

        return res;
    }

    /**
     * Updates information about multiple access bindings to an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchUpdateResponse analyticsadminPropertiesAccessBindingsBatchUpdate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchUpdateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchUpdateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchUpdateRequest.class, baseUrl, "/v1alpha/{parent}/accessBindings:batchUpdate", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequestInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchUpdateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchUpdateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsBatchUpdateResponse() {{
            googleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse.class);
                res.googleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an access binding on an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsCreateResponse analyticsadminPropertiesAccessBindingsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsCreateRequest.class, baseUrl, "/v1alpha/{parent}/accessBindings", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaAccessBindingInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsCreateResponse() {{
            googleAnalyticsAdminV1alphaAccessBinding = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaAccessBinding out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaAccessBinding.class);
                res.googleAnalyticsAdminV1alphaAccessBinding = out;
            }
        }

        return res;
    }

    /**
     * Lists all access bindings on an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsListResponse analyticsadminPropertiesAccessBindingsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsListRequest.class, baseUrl, "/v1alpha/{parent}/accessBindings", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAccessBindingsListResponse() {{
            googleAnalyticsAdminV1alphaListAccessBindingsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListAccessBindingsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListAccessBindingsResponse.class);
                res.googleAnalyticsAdminV1alphaListAccessBindingsResponse = out;
            }
        }

        return res;
    }

    /**
     * Acknowledges the terms of user data collection for the specified property. This acknowledgement must be completed (either in the Google Analytics UI or through this API) before MeasurementProtocolSecret resources may be created.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAcknowledgeUserDataCollectionResponse analyticsadminPropertiesAcknowledgeUserDataCollection(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAcknowledgeUserDataCollectionRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAcknowledgeUserDataCollectionSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAcknowledgeUserDataCollectionRequest.class, baseUrl, "/v1alpha/{property}:acknowledgeUserDataCollection", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAcknowledgeUserDataCollectionRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAcknowledgeUserDataCollectionResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAcknowledgeUserDataCollectionResponse() {{
            googleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an Audience.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesCreateResponse analyticsadminPropertiesAudiencesCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesCreateRequest.class, baseUrl, "/v1alpha/{parent}/audiences", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaAudienceInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesCreateResponse() {{
            googleAnalyticsAdminV1alphaAudience = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaAudience out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaAudience.class);
                res.googleAnalyticsAdminV1alphaAudience = out;
            }
        }

        return res;
    }

    /**
     * Lists Audiences on a property. Audiences created before 2020 may not be supported. Default audiences will not show filter definitions.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesListResponse analyticsadminPropertiesAudiencesList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesListRequest.class, baseUrl, "/v1alpha/{parent}/audiences", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesAudiencesListResponse() {{
            googleAnalyticsAdminV1alphaListAudiencesResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListAudiencesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListAudiencesResponse.class);
                res.googleAnalyticsAdminV1alphaListAudiencesResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists BigQuery Links on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesBigQueryLinksListResponse analyticsadminPropertiesBigQueryLinksList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesBigQueryLinksListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesBigQueryLinksListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesBigQueryLinksListRequest.class, baseUrl, "/v1alpha/{parent}/bigQueryLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesBigQueryLinksListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesBigQueryLinksListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesBigQueryLinksListResponse() {{
            googleAnalyticsAdminV1alphaListBigQueryLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListBigQueryLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListBigQueryLinksResponse.class);
                res.googleAnalyticsAdminV1alphaListBigQueryLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a conversion event with the specified attributes.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsCreateResponse analyticsadminPropertiesConversionEventsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsCreateRequest.class, baseUrl, "/v1alpha/{parent}/conversionEvents", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaConversionEventInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsCreateResponse() {{
            googleAnalyticsAdminV1alphaConversionEvent = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaConversionEvent out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaConversionEvent.class);
                res.googleAnalyticsAdminV1alphaConversionEvent = out;
            }
        }

        return res;
    }

    /**
     * Returns a list of conversion events in the specified parent property. Returns an empty list if no conversion events are found.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsListResponse analyticsadminPropertiesConversionEventsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsListRequest.class, baseUrl, "/v1alpha/{parent}/conversionEvents", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesConversionEventsListResponse() {{
            googleAnalyticsAdminV1alphaListConversionEventsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListConversionEventsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListConversionEventsResponse.class);
                res.googleAnalyticsAdminV1alphaListConversionEventsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an "GA4" property with the specified location and attributes.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateResponse analyticsadminPropertiesCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1alpha/properties");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaPropertyInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateResponse() {{
            googleAnalyticsAdminV1alphaProperty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaProperty out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaProperty.class);
                res.googleAnalyticsAdminV1alphaProperty = out;
            }
        }

        return res;
    }

    /**
     * Creates a connected site tag for a Universal Analytics property. You can create a maximum of 20 connected site tags per property. Note: This API cannot be used on GA4 properties.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateConnectedSiteTagResponse analyticsadminPropertiesCreateConnectedSiteTag(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateConnectedSiteTagRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateConnectedSiteTagSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1alpha/properties:createConnectedSiteTag");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateConnectedSiteTagRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateConnectedSiteTagResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesCreateConnectedSiteTagResponse() {{
            googleAnalyticsAdminV1alphaCreateConnectedSiteTagResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleAnalyticsAdminV1alphaCreateConnectedSiteTagResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a CustomDimension.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsCreateResponse analyticsadminPropertiesCustomDimensionsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsCreateRequest.class, baseUrl, "/v1alpha/{parent}/customDimensions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaCustomDimensionInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsCreateResponse() {{
            googleAnalyticsAdminV1alphaCustomDimension = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaCustomDimension out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaCustomDimension.class);
                res.googleAnalyticsAdminV1alphaCustomDimension = out;
            }
        }

        return res;
    }

    /**
     * Lists CustomDimensions on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsListResponse analyticsadminPropertiesCustomDimensionsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsListRequest.class, baseUrl, "/v1alpha/{parent}/customDimensions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomDimensionsListResponse() {{
            googleAnalyticsAdminV1alphaListCustomDimensionsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListCustomDimensionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListCustomDimensionsResponse.class);
                res.googleAnalyticsAdminV1alphaListCustomDimensionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Archives a CustomMetric on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsArchiveResponse analyticsadminPropertiesCustomMetricsArchive(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsArchiveRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsArchiveSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsArchiveRequest.class, baseUrl, "/v1alpha/{name}:archive", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsArchiveRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsArchiveResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsArchiveResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Creates a CustomMetric.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsCreateResponse analyticsadminPropertiesCustomMetricsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsCreateRequest.class, baseUrl, "/v1alpha/{parent}/customMetrics", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaCustomMetricInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsCreateResponse() {{
            googleAnalyticsAdminV1alphaCustomMetric = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaCustomMetric out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaCustomMetric.class);
                res.googleAnalyticsAdminV1alphaCustomMetric = out;
            }
        }

        return res;
    }

    /**
     * Lists CustomMetrics on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsListResponse analyticsadminPropertiesCustomMetricsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsListRequest.class, baseUrl, "/v1alpha/{parent}/customMetrics", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesCustomMetricsListResponse() {{
            googleAnalyticsAdminV1alphaListCustomMetricsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListCustomMetricsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListCustomMetricsResponse.class);
                res.googleAnalyticsAdminV1alphaListCustomMetricsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a DataStream.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsCreateResponse analyticsadminPropertiesDataStreamsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsCreateRequest.class, baseUrl, "/v1alpha/{parent}/dataStreams", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaDataStreamInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsCreateResponse() {{
            googleAnalyticsAdminV1alphaDataStream = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDataStream out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDataStream.class);
                res.googleAnalyticsAdminV1alphaDataStream = out;
            }
        }

        return res;
    }

    /**
     * Lists DataStreams on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsListResponse analyticsadminPropertiesDataStreamsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsListRequest.class, baseUrl, "/v1alpha/{parent}/dataStreams", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsListResponse() {{
            googleAnalyticsAdminV1alphaListDataStreamsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListDataStreamsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListDataStreamsResponse.class);
                res.googleAnalyticsAdminV1alphaListDataStreamsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a measurement protocol secret.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateResponse analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateRequest.class, baseUrl, "/v1alpha/{parent}/measurementProtocolSecrets", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaMeasurementProtocolSecretInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsCreateResponse() {{
            googleAnalyticsAdminV1alphaMeasurementProtocolSecret = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret.class);
                res.googleAnalyticsAdminV1alphaMeasurementProtocolSecret = out;
            }
        }

        return res;
    }

    /**
     * Returns child MeasurementProtocolSecrets under the specified parent Property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListResponse analyticsadminPropertiesDataStreamsMeasurementProtocolSecretsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListRequest.class, baseUrl, "/v1alpha/{parent}/measurementProtocolSecrets", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDataStreamsMeasurementProtocolSecretsListResponse() {{
            googleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse.class);
                res.googleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse = out;
            }
        }

        return res;
    }

    /**
     * Deletes a connected site tag for a Universal Analytics property. Note: this has no effect on GA4 properties.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDeleteConnectedSiteTagResponse analyticsadminPropertiesDeleteConnectedSiteTag(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDeleteConnectedSiteTagRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDeleteConnectedSiteTagSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1alpha/properties:deleteConnectedSiteTag");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDeleteConnectedSiteTagRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDeleteConnectedSiteTagResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDeleteConnectedSiteTagResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Approves a DisplayVideo360AdvertiserLinkProposal. The DisplayVideo360AdvertiserLinkProposal will be deleted and a new DisplayVideo360AdvertiserLink will be created.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveResponse analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApprove(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveRequest.class, baseUrl, "/v1alpha/{name}:approve", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsApproveResponse() {{
            googleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse.class);
                res.googleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse = out;
            }
        }

        return res;
    }

    /**
     * Cancels a DisplayVideo360AdvertiserLinkProposal. Cancelling can mean either: - Declining a proposal initiated from Display &amp; Video 360 - Withdrawing a proposal initiated from Google Analytics After being cancelled, a proposal will eventually be deleted automatically.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelResponse analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancel(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelRequest.class, baseUrl, "/v1alpha/{name}:cancel", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCancelResponse() {{
            googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class);
                res.googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal = out;
            }
        }

        return res;
    }

    /**
     * Creates a DisplayVideo360AdvertiserLinkProposal.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateResponse analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateRequest.class, baseUrl, "/v1alpha/{parent}/displayVideo360AdvertiserLinkProposals", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposalInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsCreateResponse() {{
            googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class);
                res.googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal = out;
            }
        }

        return res;
    }

    /**
     * Lists DisplayVideo360AdvertiserLinkProposals on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListResponse analyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListRequest.class, baseUrl, "/v1alpha/{parent}/displayVideo360AdvertiserLinkProposals", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinkProposalsListResponse() {{
            googleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse.class);
                res.googleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a DisplayVideo360AdvertiserLink. This can only be utilized by users who have proper authorization both on the Google Analytics property and on the Display &amp; Video 360 advertiser. Users who do not have access to the Display &amp; Video 360 advertiser should instead seek to create a DisplayVideo360LinkProposal.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateResponse analyticsadminPropertiesDisplayVideo360AdvertiserLinksCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateRequest.class, baseUrl, "/v1alpha/{parent}/displayVideo360AdvertiserLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksCreateResponse() {{
            googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.class);
                res.googleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink = out;
            }
        }

        return res;
    }

    /**
     * Lists all DisplayVideo360AdvertiserLinks on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksListResponse analyticsadminPropertiesDisplayVideo360AdvertiserLinksList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksListRequest.class, baseUrl, "/v1alpha/{parent}/displayVideo360AdvertiserLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesDisplayVideo360AdvertiserLinksListResponse() {{
            googleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse.class);
                res.googleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a ExpandedDataSet.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsCreateResponse analyticsadminPropertiesExpandedDataSetsCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsCreateRequest.class, baseUrl, "/v1alpha/{parent}/expandedDataSets", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaExpandedDataSetInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsCreateResponse() {{
            googleAnalyticsAdminV1alphaExpandedDataSet = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaExpandedDataSet out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaExpandedDataSet.class);
                res.googleAnalyticsAdminV1alphaExpandedDataSet = out;
            }
        }

        return res;
    }

    /**
     * Lists ExpandedDataSets on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsListResponse analyticsadminPropertiesExpandedDataSetsList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsListRequest.class, baseUrl, "/v1alpha/{parent}/expandedDataSets", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesExpandedDataSetsListResponse() {{
            googleAnalyticsAdminV1alphaListExpandedDataSetsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListExpandedDataSetsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListExpandedDataSetsResponse.class);
                res.googleAnalyticsAdminV1alphaListExpandedDataSetsResponse = out;
            }
        }

        return res;
    }

    /**
     * Fetches the opt out status for the automated GA4 setup process for a UA property. Note: this has no effect on GA4 property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOutResponse analyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOut(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOutRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOutSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1alpha/properties:fetchAutomatedGa4ConfigurationOptOut");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOutRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOutResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesFetchAutomatedGa4ConfigurationOptOutResponse() {{
            googleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse.class);
                res.googleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a FirebaseLink. Properties can have at most one FirebaseLink.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksCreateResponse analyticsadminPropertiesFirebaseLinksCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksCreateRequest.class, baseUrl, "/v1alpha/{parent}/firebaseLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaFirebaseLinkInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksCreateResponse() {{
            googleAnalyticsAdminV1alphaFirebaseLink = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaFirebaseLink out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaFirebaseLink.class);
                res.googleAnalyticsAdminV1alphaFirebaseLink = out;
            }
        }

        return res;
    }

    /**
     * Lists FirebaseLinks on a property. Properties can have at most one FirebaseLink.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksListResponse analyticsadminPropertiesFirebaseLinksList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksListRequest.class, baseUrl, "/v1alpha/{parent}/firebaseLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesFirebaseLinksListResponse() {{
            googleAnalyticsAdminV1alphaListFirebaseLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse.class);
                res.googleAnalyticsAdminV1alphaListFirebaseLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a GoogleAdsLink.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksCreateResponse analyticsadminPropertiesGoogleAdsLinksCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksCreateRequest.class, baseUrl, "/v1alpha/{parent}/googleAdsLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaGoogleAdsLinkInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksCreateResponse() {{
            googleAnalyticsAdminV1alphaGoogleAdsLink = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaGoogleAdsLink out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaGoogleAdsLink.class);
                res.googleAnalyticsAdminV1alphaGoogleAdsLink = out;
            }
        }

        return res;
    }

    /**
     * Lists GoogleAdsLinks on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksListResponse analyticsadminPropertiesGoogleAdsLinksList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksListRequest.class, baseUrl, "/v1alpha/{parent}/googleAdsLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesGoogleAdsLinksListResponse() {{
            googleAnalyticsAdminV1alphaListGoogleAdsLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse.class);
                res.googleAnalyticsAdminV1alphaListGoogleAdsLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Returns child Properties under the specified parent Account. Only "GA4" properties will be returned. Properties will be excluded if the caller does not have access. Soft-deleted (ie: "trashed") properties are excluded by default. Returns an empty list if no relevant properties are found.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesListResponse analyticsadminPropertiesList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1alpha/properties");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesListResponse() {{
            googleAnalyticsAdminV1alphaListPropertiesResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListPropertiesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListPropertiesResponse.class);
                res.googleAnalyticsAdminV1alphaListPropertiesResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists the connected site tags for a Universal Analytics property. A maximum of 20 connected site tags will be returned. Note: this has no effect on GA4 property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesListConnectedSiteTagsResponse analyticsadminPropertiesListConnectedSiteTags(org.openapis.openapi.models.operations.AnalyticsadminPropertiesListConnectedSiteTagsRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesListConnectedSiteTagsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1alpha/properties:listConnectedSiteTags");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaListConnectedSiteTagsRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesListConnectedSiteTagsRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesListConnectedSiteTagsResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesListConnectedSiteTagsResponse() {{
            googleAnalyticsAdminV1alphaListConnectedSiteTagsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.class);
                res.googleAnalyticsAdminV1alphaListConnectedSiteTagsResponse = out;
            }
        }

        return res;
    }

    /**
     * Returns a customized report of data access records. The report provides records of each time a user reads Google Analytics reporting data. Access records are retained for up to 2 years. Data Access Reports can be requested for a property. The property must be in Google Analytics 360. This method is only available to Administrators. These data access records include GA4 UI Reporting, GA4 UI Explorations, GA4 Data API, and other products like Firebase &amp; Admob that can retrieve data from Google Analytics through a linkage. These records don't include property configuration changes like adding a stream or changing a property's time zone. For configuration change history, see [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesRunAccessReportResponse analyticsadminPropertiesRunAccessReport(org.openapis.openapi.models.operations.AnalyticsadminPropertiesRunAccessReportRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesRunAccessReportSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesRunAccessReportRequest.class, baseUrl, "/v1alpha/{entity}:runAccessReport", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaRunAccessReportRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesRunAccessReportRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesRunAccessReportResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesRunAccessReportResponse() {{
            googleAnalyticsAdminV1alphaRunAccessReportResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaRunAccessReportResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaRunAccessReportResponse.class);
                res.googleAnalyticsAdminV1alphaRunAccessReportResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a SearchAds360Link.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksCreateResponse analyticsadminPropertiesSearchAds360LinksCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksCreateRequest.class, baseUrl, "/v1alpha/{parent}/searchAds360Links", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaSearchAds360LinkInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksCreateResponse() {{
            googleAnalyticsAdminV1alphaSearchAds360Link = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaSearchAds360Link out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaSearchAds360Link.class);
                res.googleAnalyticsAdminV1alphaSearchAds360Link = out;
            }
        }

        return res;
    }

    /**
     * Lists all SearchAds360Links on a property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksListResponse analyticsadminPropertiesSearchAds360LinksList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksListRequest.class, baseUrl, "/v1alpha/{parent}/searchAds360Links", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesSearchAds360LinksListResponse() {{
            googleAnalyticsAdminV1alphaListSearchAds360LinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListSearchAds360LinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListSearchAds360LinksResponse.class);
                res.googleAnalyticsAdminV1alphaListSearchAds360LinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Sets the opt out status for the automated GA4 setup process for a UA property. Note: this has no effect on GA4 property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesSetAutomatedGa4ConfigurationOptOutResponse analyticsadminPropertiesSetAutomatedGa4ConfigurationOptOut(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSetAutomatedGa4ConfigurationOptOutRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesSetAutomatedGa4ConfigurationOptOutSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1alpha/properties:setAutomatedGa4ConfigurationOptOut");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesSetAutomatedGa4ConfigurationOptOutRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesSetAutomatedGa4ConfigurationOptOutResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesSetAutomatedGa4ConfigurationOptOutResponse() {{
            googleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists all user links on an account or property, including implicit ones that come from effective permissions granted by groups or organization admin roles. If a returned user link does not have direct permissions, they cannot be removed from the account or property directly with the DeleteUserLink command. They have to be removed from the group/etc that gives them permissions, which is currently only usable/discoverable in the GA or GMP UIs.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksAuditResponse analyticsadminPropertiesUserLinksAudit(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksAuditRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksAuditSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksAuditRequest.class, baseUrl, "/v1alpha/{parent}/userLinks:audit", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaAuditUserLinksRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksAuditRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksAuditResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksAuditResponse() {{
            googleAnalyticsAdminV1alphaAuditUserLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaAuditUserLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaAuditUserLinksResponse.class);
                res.googleAnalyticsAdminV1alphaAuditUserLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates information about multiple users' links to an account or property. This method is transactional. If any UserLink cannot be created, none of the UserLinks will be created.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchCreateResponse analyticsadminPropertiesUserLinksBatchCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchCreateRequest.class, baseUrl, "/v1alpha/{parent}/userLinks:batchCreate", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaBatchCreateUserLinksRequestInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchCreateResponse() {{
            googleAnalyticsAdminV1alphaBatchCreateUserLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksResponse.class);
                res.googleAnalyticsAdminV1alphaBatchCreateUserLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Deletes information about multiple users' links to an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchDeleteResponse analyticsadminPropertiesUserLinksBatchDelete(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchDeleteRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchDeleteRequest.class, baseUrl, "/v1alpha/{parent}/userLinks:batchDelete", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchDeleteResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchDeleteResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Gets information about multiple users' links to an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchGetResponse analyticsadminPropertiesUserLinksBatchGet(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchGetRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchGetRequest.class, baseUrl, "/v1alpha/{parent}/userLinks:batchGet", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchGetResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchGetResponse() {{
            googleAnalyticsAdminV1alphaBatchGetUserLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchGetUserLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchGetUserLinksResponse.class);
                res.googleAnalyticsAdminV1alphaBatchGetUserLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Updates information about multiple users' links to an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchUpdateResponse analyticsadminPropertiesUserLinksBatchUpdate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchUpdateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchUpdateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchUpdateRequest.class, baseUrl, "/v1alpha/{parent}/userLinks:batchUpdate", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaBatchUpdateUserLinksRequestInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchUpdateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchUpdateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksBatchUpdateResponse() {{
            googleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse.class);
                res.googleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a user link on an account or property. If the user with the specified email already has permissions on the account or property, then the user's existing permissions will be unioned with the permissions specified in the new UserLink.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksCreateResponse analyticsadminPropertiesUserLinksCreate(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksCreateRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksCreateRequest.class, baseUrl, "/v1alpha/{parent}/userLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaUserLinkInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksCreateResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksCreateResponse() {{
            googleAnalyticsAdminV1alphaUserLink = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaUserLink out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaUserLink.class);
                res.googleAnalyticsAdminV1alphaUserLink = out;
            }
        }

        return res;
    }

    /**
     * Deletes a user link on an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksDeleteResponse analyticsadminPropertiesUserLinksDelete(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksDeleteRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksDeleteRequest.class, baseUrl, "/v1alpha/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksDeleteResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksDeleteResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Gets information about a user's link to an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksGetResponse analyticsadminPropertiesUserLinksGet(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksGetRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksGetRequest.class, baseUrl, "/v1alpha/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksGetResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksGetResponse() {{
            googleAnalyticsAdminV1alphaUserLink = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaUserLink out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaUserLink.class);
                res.googleAnalyticsAdminV1alphaUserLink = out;
            }
        }

        return res;
    }

    /**
     * Lists all user links on an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksListResponse analyticsadminPropertiesUserLinksList(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksListRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksListRequest.class, baseUrl, "/v1alpha/{parent}/userLinks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksListResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksListResponse() {{
            googleAnalyticsAdminV1alphaListUserLinksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListUserLinksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaListUserLinksResponse.class);
                res.googleAnalyticsAdminV1alphaListUserLinksResponse = out;
            }
        }

        return res;
    }

    /**
     * Updates a user link on an account or property.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksPatchResponse analyticsadminPropertiesUserLinksPatch(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksPatchRequest request, org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksPatchSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksPatchRequest.class, baseUrl, "/v1alpha/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleAnalyticsAdminV1alphaUserLinkInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksPatchRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksPatchResponse res = new org.openapis.openapi.models.operations.AnalyticsadminPropertiesUserLinksPatchResponse() {{
            googleAnalyticsAdminV1alphaUserLink = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaUserLink out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleAnalyticsAdminV1alphaUserLink.class);
                res.googleAnalyticsAdminV1alphaUserLink = out;
            }
        }

        return res;
    }
}