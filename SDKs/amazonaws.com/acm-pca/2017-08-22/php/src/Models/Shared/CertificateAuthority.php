<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CertificateAuthority - Contains information about your private certificate authority (CA). Your private CA can issue and revoke X.509 digital certificates. Digital certificates verify that the entity named in the certificate <b>Subject</b> field owns or controls the public key contained in the <b>Subject Public Key Info</b> field. Call the <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html">CreateCertificateAuthority</a> action to create your private CA. You must then call the <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_GetCertificateAuthorityCertificate.html">GetCertificateAuthorityCertificate</a> action to retrieve a private CA certificate signing request (CSR). Sign the CSR with your Amazon Web Services Private CA-hosted or on-premises root or subordinate CA certificate. Call the <a href="https://docs.aws.amazon.com/privateca/latest/APIReference/API_ImportCertificateAuthorityCertificate.html">ImportCertificateAuthorityCertificate</a> action to import the signed certificate into Certificate Manager (ACM). 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CertificateAuthority
{
	#[\JMS\Serializer\Annotation\SerializedName('Arn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $arn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CertificateAuthorityConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CertificateAuthorityConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateAuthorityConfiguration $certificateAuthorityConfiguration = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CreatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FailureReason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FailureReasonEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FailureReasonEnum $failureReason = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('KeyStorageSecurityStandard')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\KeyStorageSecurityStandardEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KeyStorageSecurityStandardEnum $keyStorageSecurityStandard = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LastStateChangeAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastStateChangeAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NotAfter')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $notAfter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NotBefore')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $notBefore = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OwnerAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownerAccount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RestorableUntil')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $restorableUntil = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RevocationConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RevocationConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RevocationConfiguration $revocationConfiguration = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Serial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serial = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateAuthorityStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateAuthorityStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateAuthorityTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateAuthorityTypeEnum $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('UsageMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateAuthorityUsageModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateAuthorityUsageModeEnum $usageMode = null;
    
	public function __construct()
	{
		$this->arn = null;
		$this->certificateAuthorityConfiguration = null;
		$this->createdAt = null;
		$this->failureReason = null;
		$this->keyStorageSecurityStandard = null;
		$this->lastStateChangeAt = null;
		$this->notAfter = null;
		$this->notBefore = null;
		$this->ownerAccount = null;
		$this->restorableUntil = null;
		$this->revocationConfiguration = null;
		$this->serial = null;
		$this->status = null;
		$this->type = null;
		$this->usageMode = null;
	}
}
