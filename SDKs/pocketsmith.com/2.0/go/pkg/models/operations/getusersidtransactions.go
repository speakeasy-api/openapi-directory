// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetUsersIDTransactionsPathParams struct {
	// The unique identifier of the account.
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

// GetUsersIDTransactionsTypeEnum - Only return transactions of this type.
type GetUsersIDTransactionsTypeEnum string

const (
	GetUsersIDTransactionsTypeEnumDebit  GetUsersIDTransactionsTypeEnum = "debit"
	GetUsersIDTransactionsTypeEnumCredit GetUsersIDTransactionsTypeEnum = "credit"
)

func (e *GetUsersIDTransactionsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "debit":
		fallthrough
	case "credit":
		*e = GetUsersIDTransactionsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUsersIDTransactionsTypeEnum: %s", s)
	}
}

type GetUsersIDTransactionsQueryParams struct {
	// Return transactions that fall on or before this date. Required if start_date is provided. If not provided, defaults to today's date.
	EndDate *string `queryParam:"style=form,explode=true,name=end_date"`
	// If set, will return only uncategorised results.
	OnlyUncategorised *int64 `queryParam:"style=form,explode=true,name=only_uncategorised"`
	// Choose a particular page of the results.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Return transactions matching a keyword search string. The provided string is matched against the transaction amount, account name, payee, category title, note, labels, and the date in yyyy-mm-dd format.
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Return only transactions on or after this date. Required if end_date is provided. If not provided, defaults to the furtherest date allowed by the user's subscription.
	StartDate *string `queryParam:"style=form,explode=true,name=start_date"`
	// Only return transactions of this type.
	Type *GetUsersIDTransactionsTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetUsersIDTransactionsRequest struct {
	PathParams  GetUsersIDTransactionsPathParams
	QueryParams GetUsersIDTransactionsQueryParams
}

type GetUsersIDTransactionsResponse struct {
	ContentType string
	// Bad Request
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
	// Success
	Transactions []shared.Transaction
}
