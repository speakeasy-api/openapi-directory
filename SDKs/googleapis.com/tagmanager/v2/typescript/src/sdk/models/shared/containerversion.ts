/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BuiltInVariable } from "./builtinvariable";
import { Client } from "./client";
import { Container } from "./container";
import { CustomTemplate } from "./customtemplate";
import { Folder } from "./folder";
import { GtagConfig } from "./gtagconfig";
import { Tag } from "./tag";
import { Trigger } from "./trigger";
import { Variable } from "./variable";
import { Zone } from "./zone";
import { Expose, Type } from "class-transformer";

/**
 * Represents a Google Tag Manager Container Version.
 */
export class ContainerVersion extends SpeakeasyBase {
  /**
   * GTM Account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The built-in variables in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: BuiltInVariable })
  @Expose({ name: "builtInVariable" })
  @Type(() => BuiltInVariable)
  builtInVariable?: BuiltInVariable[];

  /**
   * The clients in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: Client })
  @Expose({ name: "client" })
  @Type(() => Client)
  client?: Client[];

  /**
   * Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "container" })
  @Type(() => Container)
  container?: Container;

  /**
   * GTM Container ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containerId" })
  containerId?: string;

  /**
   * The Container Version ID uniquely identifies the GTM Container Version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containerVersionId" })
  containerVersionId?: string;

  /**
   * The custom templates in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: CustomTemplate })
  @Expose({ name: "customTemplate" })
  @Type(() => CustomTemplate)
  customTemplate?: CustomTemplate[];

  /**
   * A value of true indicates this container version has been deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * Container version description. @mutable tagmanager.accounts.containers.versions.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  /**
   * The folders in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: Folder })
  @Expose({ name: "folder" })
  @Type(() => Folder)
  folder?: Folder[];

  /**
   * The Google tag configs in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: GtagConfig })
  @Expose({ name: "gtagConfig" })
  @Type(() => GtagConfig)
  gtagConfig?: GtagConfig[];

  /**
   * Container version display name. @mutable tagmanager.accounts.containers.versions.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * GTM Container Version's API relative path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * The tags in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tag" })
  @Type(() => Tag)
  tag?: Tag[];

  /**
   * Auto generated link to the tag manager UI
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagManagerUrl" })
  tagManagerUrl?: string;

  /**
   * The triggers in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: Trigger })
  @Expose({ name: "trigger" })
  @Type(() => Trigger)
  trigger?: Trigger[];

  /**
   * The variables in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: Variable })
  @Expose({ name: "variable" })
  @Type(() => Variable)
  variable?: Variable[];

  /**
   * The zones in the container that this version was taken from.
   */
  @SpeakeasyMetadata({ elemType: Zone })
  @Expose({ name: "zone" })
  @Type(() => Zone)
  zone?: Zone[];
}
