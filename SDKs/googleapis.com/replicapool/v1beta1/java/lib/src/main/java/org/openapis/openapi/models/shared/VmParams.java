/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VmParams - Parameters for creating a Compute Engine Instance resource. Most fields are identical to the corresponding Compute Engine resource.
 */
public class VmParams {
    /**
     * Deprecated. Please use baseInstanceName instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseInstanceName")
    public String baseInstanceName;
    public VmParams withBaseInstanceName(String baseInstanceName) {
        this.baseInstanceName = baseInstanceName;
        return this;
    }
    
    /**
     * Enables IP Forwarding, which allows this instance to receive packets destined for a different IP address, and send packets with a different source IP. See IP Forwarding for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canIpForward")
    public Boolean canIpForward;
    public VmParams withCanIpForward(Boolean canIpForward) {
        this.canIpForward = canIpForward;
        return this;
    }
    
    /**
     * An optional textual description of the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public VmParams withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A list of existing Persistent Disk resources to attach to each replica in the pool. Each disk will be attached in read-only mode to every replica.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disksToAttach")
    public ExistingDisk[] disksToAttach;
    public VmParams withDisksToAttach(ExistingDisk[] disksToAttach) {
        this.disksToAttach = disksToAttach;
        return this;
    }
    
    /**
     * A list of Disk resources to create and attach to each Replica in the Pool. Currently, you can only define one disk and it must be a root persistent disk. Note that Replica Pool will create a root persistent disk for each replica.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disksToCreate")
    public NewDisk[] disksToCreate;
    public VmParams withDisksToCreate(NewDisk[] disksToCreate) {
        this.disksToCreate = disksToCreate;
        return this;
    }
    
    /**
     * The machine type for this instance. The resource name (e.g. n1-standard-1).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineType")
    public String machineType;
    public VmParams withMachineType(String machineType) {
        this.machineType = machineType;
        return this;
    }
    
    /**
     * A Compute Engine metadata entry. Identical to the metadata on the corresponding Compute Engine resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public Metadata metadata;
    public VmParams withMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * A list of network interfaces for the instance. Currently only one interface is supported by Google Compute Engine, ONE_TO_ONE_NAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkInterfaces")
    public NetworkInterface[] networkInterfaces;
    public VmParams withNetworkInterfaces(NetworkInterface[] networkInterfaces) {
        this.networkInterfaces = networkInterfaces;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onHostMaintenance")
    public String onHostMaintenance;
    public VmParams withOnHostMaintenance(String onHostMaintenance) {
        this.onHostMaintenance = onHostMaintenance;
        return this;
    }
    
    /**
     * A list of Service Accounts to enable for this instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccounts")
    public ServiceAccount[] serviceAccounts;
    public VmParams withServiceAccounts(ServiceAccount[] serviceAccounts) {
        this.serviceAccounts = serviceAccounts;
        return this;
    }
    
    /**
     * A Compute Engine Instance tag, identical to the tags on the corresponding Compute Engine Instance resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public Tag tags;
    public VmParams withTags(Tag tags) {
        this.tags = tags;
        return this;
    }
    
}
