/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class CustomNotification {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Amount amount;

    public CustomNotification withAmount(Amount amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The event that caused the notification to be sent.Currently supported values:
     * * **AUTHORISATION**
     * * **CANCELLATION**
     * * **REFUND**
     * * **CAPTURE**
     * * **DEACTIVATE_RECURRING**
     * * **REPORT_AVAILABLE**
     * * **CHARGEBACK**
     * * **REQUEST_FOR_INFORMATION**
     * * **NOTIFICATION_OF_CHARGEBACK**
     * * **NOTIFICATIONTEST**
     * * **ORDER_OPENED**
     * * **ORDER_CLOSED**
     * * **CHARGEBACK_REVERSED**
     * * **REFUNDED_REVERSED**
     * * **REFUND_WITH_DATA**
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventCode")
    public String eventCode;

    public CustomNotification withEventCode(String eventCode) {
        this.eventCode = eventCode;
        return this;
    }
    
    /**
     * The time of the event. Format: [ISO 8601](http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDThh:mm:ssTZD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("eventDate")
    public OffsetDateTime eventDate;

    public CustomNotification withEventDate(OffsetDateTime eventDate) {
        this.eventDate = eventDate;
        return this;
    }
    
    /**
     * Your reference for the custom test notification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantReference")
    public String merchantReference;

    public CustomNotification withMerchantReference(String merchantReference) {
        this.merchantReference = merchantReference;
        return this;
    }
    
    /**
     * The payment method for the payment that the notification is about. Possible values:
     * * **amex**
     * * **visa**
     * * **mc**
     * * **maestro**
     * * **bcmc**
     * * **paypal**
     *  * **sms**
     *  * **bankTransfer_NL**
     * * **bankTransfer_DE**
     * * **bankTransfer_BE**
     * * **ideal**
     * * **elv**
     * * **sepadirectdebit**
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethod")
    public String paymentMethod;

    public CustomNotification withPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * A descripton of what caused the notification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public CustomNotification withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The outcome of the event which the notification is about. Set to either **true** or **false**. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;

    public CustomNotification withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    public CustomNotification(){}
}
