// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyVpcEndpointConnectionNotificationActionEnum
type GETModifyVpcEndpointConnectionNotificationActionEnum string

const (
	GETModifyVpcEndpointConnectionNotificationActionEnumModifyVpcEndpointConnectionNotification GETModifyVpcEndpointConnectionNotificationActionEnum = "ModifyVpcEndpointConnectionNotification"
)

func (e *GETModifyVpcEndpointConnectionNotificationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyVpcEndpointConnectionNotification":
		*e = GETModifyVpcEndpointConnectionNotificationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpcEndpointConnectionNotificationActionEnum: %s", s)
	}
}

// GETModifyVpcEndpointConnectionNotificationVersionEnum
type GETModifyVpcEndpointConnectionNotificationVersionEnum string

const (
	GETModifyVpcEndpointConnectionNotificationVersionEnumTwoThousandAndSixteen1115 GETModifyVpcEndpointConnectionNotificationVersionEnum = "2016-11-15"
)

func (e *GETModifyVpcEndpointConnectionNotificationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETModifyVpcEndpointConnectionNotificationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpcEndpointConnectionNotificationVersionEnum: %s", s)
	}
}

type GETModifyVpcEndpointConnectionNotificationRequest struct {
	Action GETModifyVpcEndpointConnectionNotificationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The events for the endpoint. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.
	ConnectionEvents []string `queryParam:"style=form,explode=true,name=ConnectionEvents"`
	// The ARN for the SNS topic for the notification.
	ConnectionNotificationArn *string `queryParam:"style=form,explode=true,name=ConnectionNotificationArn"`
	// The ID of the notification.
	ConnectionNotificationID string `queryParam:"style=form,explode=true,name=ConnectionNotificationId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun            *bool                                                 `queryParam:"style=form,explode=true,name=DryRun"`
	Version           GETModifyVpcEndpointConnectionNotificationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyVpcEndpointConnectionNotificationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
