"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import markedepisode as shared_markedepisode
from enum import Enum
from typing import Optional

class GetScrobbleShowsShowIDEmbedEnum(str, Enum):
    r"""Embed full episode info"""
    EPISODE = 'episode'


@dataclasses.dataclass
class GetScrobbleShowsShowIDRequest:
    
    show_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'show_id', 'style': 'simple', 'explode': False }})
    r"""ID of the target show"""  
    embed: Optional[GetScrobbleShowsShowIDEmbedEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'embed', 'style': 'form', 'explode': True }})
    r"""Embed full episode info"""  
    

@dataclasses.dataclass
class GetScrobbleShowsShowIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    marked_episodes: Optional[list[shared_markedepisode.MarkedEpisode]] = dataclasses.field(default=None)
    r"""An array of marked episodes"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    