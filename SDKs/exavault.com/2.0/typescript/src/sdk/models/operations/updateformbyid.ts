/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateFormByIdUpdateFormByIdRequestBodyElementsSettings extends SpeakeasyBase {
  /**
   * True is the form element is required for submission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isRequired" })
  isRequired?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "senderEmail" })
  senderEmail?: boolean;

  /**
   * True if the submitted response should be used as the name for the new folder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useAsFolderName" })
  useAsFolderName?: boolean;
}

/**
 * Type of form field to use.
 */
export enum UpdateFormByIdUpdateFormByIdRequestBodyElementsTypeEnum {
  Name = "name",
  Email = "email",
  Text = "text",
  Textarea = "textarea",
  UploadArea = "upload_area",
}

export class UpdateFormByIdUpdateFormByIdRequestBodyElements extends SpeakeasyBase {
  /**
   * ID of the form element. If you're adding a new element to the form, do not include this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Name of the form element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The order the fields will be displayed to the recipient. Starts at 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "settings" })
  @Type(() => UpdateFormByIdUpdateFormByIdRequestBodyElementsSettings)
  settings?: UpdateFormByIdUpdateFormByIdRequestBodyElementsSettings;

  /**
   * Type of form field to use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: UpdateFormByIdUpdateFormByIdRequestBodyElementsTypeEnum;
}

/**
 * CSS Styles of the form.
 */
export class UpdateFormByIdUpdateFormByIdRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cssStyles" })
  cssStyles?: string;

  @SpeakeasyMetadata({
    elemType: UpdateFormByIdUpdateFormByIdRequestBodyElements,
  })
  @Expose({ name: "elements" })
  @Type(() => UpdateFormByIdUpdateFormByIdRequestBodyElements)
  elements?: UpdateFormByIdUpdateFormByIdRequestBodyElements[];

  /**
   * Set a description for the form that will be visible to recipients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formDescription" })
  formDescription?: string;

  /**
   * Text to be displayed on the submission button.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submitButtonText" })
  submitButtonText?: string;

  /**
   * Text to be displayed when a recipient has submitted the form.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "successMessage" })
  successMessage?: string;
}

export class UpdateFormByIdRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateFormByIdUpdateFormByIdRequestBody;

  /**
   * Access token required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-access-token",
  })
  evAccessToken: string;

  /**
   * API Key required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-api-key",
  })
  evApiKey: string;

  /**
   * Form unique ID number.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

export class UpdateFormByIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Operation
   */
  @SpeakeasyMetadata()
  formResponse?: shared.FormResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
