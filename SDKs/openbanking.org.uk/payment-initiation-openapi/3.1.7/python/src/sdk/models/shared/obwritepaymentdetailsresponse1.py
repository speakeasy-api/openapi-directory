"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import links as shared_links
from ..shared import meta as shared_meta
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum(str, Enum):
    r"""Status of a transfe, as assigned by the transaction administrator."""
    ACCEPTED = 'Accepted'
    ACCEPTED_CANCELLATION_REQUEST = 'AcceptedCancellationRequest'
    ACCEPTED_CREDIT_SETTLEMENT_COMPLETED = 'AcceptedCreditSettlementCompleted'
    ACCEPTED_CUSTOMER_PROFILE = 'AcceptedCustomerProfile'
    ACCEPTED_FUNDS_CHECKED = 'AcceptedFundsChecked'
    ACCEPTED_SETTLEMENT_COMPLETED = 'AcceptedSettlementCompleted'
    ACCEPTED_SETTLEMENT_IN_PROCESS = 'AcceptedSettlementInProcess'
    ACCEPTED_TECHNICAL_VALIDATION = 'AcceptedTechnicalValidation'
    ACCEPTED_WITH_CHANGE = 'AcceptedWithChange'
    ACCEPTED_WITHOUT_POSTING = 'AcceptedWithoutPosting'
    CANCELLED = 'Cancelled'
    NO_CANCELLATION_PROCESS = 'NoCancellationProcess'
    PARTIALLY_ACCEPTED_CANCELLATION_REQUEST = 'PartiallyAcceptedCancellationRequest'
    PARTIALLY_ACCEPTED_TECHNICAL_CORRECT = 'PartiallyAcceptedTechnicalCorrect'
    PAYMENT_CANCELLED = 'PaymentCancelled'
    PENDING = 'Pending'
    PENDING_CANCELLATION_REQUEST = 'PendingCancellationRequest'
    RECEIVED = 'Received'
    REJECTED = 'Rejected'
    REJECTED_CANCELLATION_REQUEST = 'RejectedCancellationRequest'

class OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum(str, Enum):
    r"""Reason Code provided for the status of a transfer."""
    CANCELLED = 'Cancelled'
    PENDING_FAILING_SETTLEMENT = 'PendingFailingSettlement'
    PENDING_SETTLEMENT = 'PendingSettlement'
    PROPRIETARY = 'Proprietary'
    PROPRIETARY_REJECTION = 'ProprietaryRejection'
    SUSPENDED = 'Suspended'
    UNMATCHED = 'Unmatched'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetail:
    r"""Payment status details as per underlying Payment Rail."""
    
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status') }})
    r"""Status of a transfer, as assigned by the transaction administrator."""  
    local_instrument: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalInstrument'), 'exclude': lambda f: f is None }})
    r"""User community specific instrument.
    Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.
    """  
    status_reason: Optional[OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusReason'), 'exclude': lambda f: f is None }})
    r"""Reason Code provided for the status of a transfer."""  
    status_reason_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusReasonDescription'), 'exclude': lambda f: f is None }})
    r"""Reason provided for the status of a transfer."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBWritePaymentDetailsResponse1DataPaymentStatus:
    r"""Payment status details."""
    
    payment_transaction_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentTransactionId') }})
    r"""Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable."""  
    status: OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status') }})
    r"""Status of a transfe, as assigned by the transaction administrator."""  
    status_update_date_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusUpdateDateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date and time at which the status was assigned to the transfer.All dates in the JSON payloads are represented in ISO 8601 date-time format.
    All date-time fields in responses must include the timezone. An example is below:
    2017-04-05T10:43:07+00:00
    """  
    status_detail: Optional[OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusDetail'), 'exclude': lambda f: f is None }})
    r"""Payment status details as per underlying Payment Rail."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBWritePaymentDetailsResponse1Data:
    
    payment_status: Optional[list[OBWritePaymentDetailsResponse1DataPaymentStatus]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentStatus'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBWritePaymentDetailsResponse1:
    r"""Payment Details Read"""
    
    data: OBWritePaymentDetailsResponse1Data = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Data') }})  
    links: Optional[shared_links.Links] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Links'), 'exclude': lambda f: f is None }})
    r"""Links relevant to the payload"""  
    meta: Optional[shared_meta.Meta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Meta'), 'exclude': lambda f: f is None }})
    r"""Meta Data relevant to the payload"""  
    