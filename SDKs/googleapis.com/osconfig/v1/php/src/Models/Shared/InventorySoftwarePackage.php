<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InventorySoftwarePackage - Software package information of the operating system.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InventorySoftwarePackage
{
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage $aptPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('aptPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryVersionedPackage $aptPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage $cosPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('cosPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryVersionedPackage $cosPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage $googetPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('googetPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryVersionedPackage $googetPackage = null;
    
    /**
     * Information related to a Quick Fix Engineering package. Fields are taken from Windows QuickFixEngineering Interface and match the source names: https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryWindowsQuickFixEngineeringPackage $qfePackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('qfePackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryWindowsQuickFixEngineeringPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryWindowsQuickFixEngineeringPackage $qfePackage = null;
    
    /**
     * Contains information about a Windows application that is retrieved from the Windows Registry. For more information about these fields, see: https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryWindowsApplication $windowsApplication
     */
	#[\JMS\Serializer\Annotation\SerializedName('windowsApplication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryWindowsApplication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryWindowsApplication $windowsApplication = null;
    
    /**
     * Details related to a Windows Update package. Field data and names are taken from Windows Update API IUpdate Interface: https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive fields like title, and description are localized based on the locale of the VM being updated.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryWindowsUpdatePackage $wuaPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('wuaPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryWindowsUpdatePackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryWindowsUpdatePackage $wuaPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage $yumPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('yumPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryVersionedPackage $yumPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage $zypperPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('zypperPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryVersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryVersionedPackage $zypperPackage = null;
    
    /**
     * Details related to a Zypper Patch.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryZypperPatch $zypperPatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('zypperPatch')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryZypperPatch')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryZypperPatch $zypperPatch = null;
    
	public function __construct()
	{
		$this->aptPackage = null;
		$this->cosPackage = null;
		$this->googetPackage = null;
		$this->qfePackage = null;
		$this->windowsApplication = null;
		$this->wuaPackage = null;
		$this->yumPackage = null;
		$this->zypperPackage = null;
		$this->zypperPatch = null;
	}
}
