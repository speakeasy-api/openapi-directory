/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * CreateOrderTriggerParams - Specifies when a charge becomes active.
 * 
 */
public class CreateOrderTriggerParams {
    /**
     * Date in YYYY-MM-DD format. Only applicable if the value of the `triggerEvent` field is `SpecificDate`. 
     * 
     * While this field is applicable, if this field is not set, your `CreateSubscription` order action creates a `Pending` order and a `Pending Acceptance` subscription. If at the same time the service activation date is required and not set, a `Pending Activation` subscription is created.
     * 
     * While this field is applicable, if this field is not set, the following order actions create a `Pending` order but do not impact the subscription status. **Note**: This feature is in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     *  * AddProduct
     *  * UpdateProduct
     *  * RemoveProduct
     *  * RenewSubscription
     *  * TermsAndConditions
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("specificTriggerDate")
    public LocalDate specificTriggerDate;
    public CreateOrderTriggerParams withSpecificTriggerDate(LocalDate specificTriggerDate) {
        this.specificTriggerDate = specificTriggerDate;
        return this;
    }
    
    /**
     * Condition for the charge to become active.
     * 
     * If the value of this field is `SpecificDate`, use the `specificTriggerDate` field to specify the date when the charge becomes active.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerEvent")
    public CreateOrderTriggerParamsTriggerEventEnum triggerEvent;
    public CreateOrderTriggerParams withTriggerEvent(CreateOrderTriggerParamsTriggerEventEnum triggerEvent) {
        this.triggerEvent = triggerEvent;
        return this;
    }
    
}
