// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UploadLayerPartXAmzTargetEnum
type UploadLayerPartXAmzTargetEnum string

const (
	UploadLayerPartXAmzTargetEnumAmazonEc2ContainerRegistryV20150921UploadLayerPart UploadLayerPartXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.UploadLayerPart"
)

func (e *UploadLayerPartXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerRegistry_V20150921.UploadLayerPart":
		*e = UploadLayerPartXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UploadLayerPartXAmzTargetEnum: %s", s)
	}
}

type UploadLayerPartRequest struct {
	UploadLayerPartRequest shared.UploadLayerPartRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             UploadLayerPartXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UploadLayerPartResponse struct {
	ContentType string
	// InvalidLayerPartException
	InvalidLayerPartException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// KmsException
	KmsException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServerException
	ServerException interface{}
	// Success
	UploadLayerPartResponse *shared.UploadLayerPartResponse
	// UploadNotFoundException
	UploadNotFoundException interface{}
}
