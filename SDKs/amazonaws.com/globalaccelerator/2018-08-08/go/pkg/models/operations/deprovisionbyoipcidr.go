// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeprovisionByoipCidrXAmzTargetEnum
type DeprovisionByoipCidrXAmzTargetEnum string

const (
	DeprovisionByoipCidrXAmzTargetEnumGlobalAcceleratorV20180706DeprovisionByoipCidr DeprovisionByoipCidrXAmzTargetEnum = "GlobalAccelerator_V20180706.DeprovisionByoipCidr"
)

func (e *DeprovisionByoipCidrXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GlobalAccelerator_V20180706.DeprovisionByoipCidr":
		*e = DeprovisionByoipCidrXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeprovisionByoipCidrXAmzTargetEnum: %s", s)
	}
}

type DeprovisionByoipCidrHeaders struct {
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeprovisionByoipCidrXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeprovisionByoipCidrRequest struct {
	Headers DeprovisionByoipCidrHeaders
	Request shared.DeprovisionByoipCidrRequest `request:"mediaType=application/json"`
}

type DeprovisionByoipCidrResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ByoipCidrNotFoundException
	ByoipCidrNotFoundException interface{}
	ContentType                string
	// Success
	DeprovisionByoipCidrResponse *shared.DeprovisionByoipCidrResponse
	// IncorrectCidrStateException
	IncorrectCidrStateException interface{}
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	StatusCode               int
	RawResponse              *http.Response
}
