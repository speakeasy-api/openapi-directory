"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timedto as shared_timedto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProjectDatesDTO:
    r"""Success"""
    
    actual_delivery_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actualDeliveryDate'), 'exclude': lambda f: f is None }})  
    actual_start_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actualStartDate'), 'exclude': lambda f: f is None }})  
    deadline: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deadline'), 'exclude': lambda f: f is None }})  
    start_date: Optional[shared_timedto.TimeDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDate'), 'exclude': lambda f: f is None }})  
    