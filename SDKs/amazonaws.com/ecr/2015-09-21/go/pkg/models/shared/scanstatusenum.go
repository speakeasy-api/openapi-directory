// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScanStatusEnum string

const (
	ScanStatusEnumInProgress             ScanStatusEnum = "IN_PROGRESS"
	ScanStatusEnumComplete               ScanStatusEnum = "COMPLETE"
	ScanStatusEnumFailed                 ScanStatusEnum = "FAILED"
	ScanStatusEnumUnsupportedImage       ScanStatusEnum = "UNSUPPORTED_IMAGE"
	ScanStatusEnumActive                 ScanStatusEnum = "ACTIVE"
	ScanStatusEnumPending                ScanStatusEnum = "PENDING"
	ScanStatusEnumScanEligibilityExpired ScanStatusEnum = "SCAN_ELIGIBILITY_EXPIRED"
	ScanStatusEnumFindingsUnavailable    ScanStatusEnum = "FINDINGS_UNAVAILABLE"
)

func (e ScanStatusEnum) ToPointer() *ScanStatusEnum {
	return &e
}

func (e *ScanStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETE":
		fallthrough
	case "FAILED":
		fallthrough
	case "UNSUPPORTED_IMAGE":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "PENDING":
		fallthrough
	case "SCAN_ELIGIBILITY_EXPIRED":
		fallthrough
	case "FINDINGS_UNAVAILABLE":
		*e = ScanStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanStatusEnum: %v", v)
	}
}
