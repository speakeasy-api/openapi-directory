"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesDestinationPortRange:
    r"""The destination port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum(str, Enum):
    r"""The action assigned to the Traffic Mirror rule."""
    ACCEPT = 'accept'
    REJECT = 'reject'


@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesSourcePortRange:
    r"""The source port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum(str, Enum):
    r"""The traffic direction assigned to the Traffic Mirror rule."""
    INGRESS = 'ingress'
    EGRESS = 'egress'


@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRules:
    r"""Describes the Traffic Mirror rule."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    destination_cidr_block: Optional[str] = dataclasses.field(default=None)  
    destination_port_range: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesDestinationPortRange] = dataclasses.field(default=None)  
    protocol: Optional[int] = dataclasses.field(default=None)  
    rule_action: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesRuleActionEnum] = dataclasses.field(default=None)  
    rule_number: Optional[int] = dataclasses.field(default=None)  
    source_cidr_block: Optional[str] = dataclasses.field(default=None)  
    source_port_range: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesSourcePortRange] = dataclasses.field(default=None)  
    traffic_direction: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRulesTrafficDirectionEnum] = dataclasses.field(default=None)  
    traffic_mirror_filter_id: Optional[str] = dataclasses.field(default=None)  
    traffic_mirror_filter_rule_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesDestinationPortRange:
    r"""The destination port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum(str, Enum):
    r"""The action assigned to the Traffic Mirror rule."""
    ACCEPT = 'accept'
    REJECT = 'reject'


@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesSourcePortRange:
    r"""The source port range assigned to the Traffic Mirror rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum(str, Enum):
    r"""The traffic direction assigned to the Traffic Mirror rule."""
    INGRESS = 'ingress'
    EGRESS = 'egress'


@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRules:
    r"""Describes the Traffic Mirror rule."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    destination_cidr_block: Optional[str] = dataclasses.field(default=None)  
    destination_port_range: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesDestinationPortRange] = dataclasses.field(default=None)  
    protocol: Optional[int] = dataclasses.field(default=None)  
    rule_action: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesRuleActionEnum] = dataclasses.field(default=None)  
    rule_number: Optional[int] = dataclasses.field(default=None)  
    source_cidr_block: Optional[str] = dataclasses.field(default=None)  
    source_port_range: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesSourcePortRange] = dataclasses.field(default=None)  
    traffic_direction: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRulesTrafficDirectionEnum] = dataclasses.field(default=None)  
    traffic_mirror_filter_id: Optional[str] = dataclasses.field(default=None)  
    traffic_mirror_filter_rule_id: Optional[str] = dataclasses.field(default=None)  
    
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum(str, Enum):
    AMAZON_DNS = 'amazon-dns'


@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilter:
    r"""The Traffic Mirror filter that the network service is associated with."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    egress_filter_rules: Optional[list[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterEgressFilterRules]] = dataclasses.field(default=None)  
    ingress_filter_rules: Optional[list[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterIngressFilterRules]] = dataclasses.field(default=None)  
    network_services: Optional[list[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterNetworkServicesEnum]] = dataclasses.field(default=None)  
    tags: Optional[list[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilterTags]] = dataclasses.field(default=None)  
    traffic_mirror_filter_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ModifyTrafficMirrorFilterNetworkServicesResult:
    r"""Success"""
    
    traffic_mirror_filter: Optional[ModifyTrafficMirrorFilterNetworkServicesResultTrafficMirrorFilter] = dataclasses.field(default=None)  
    