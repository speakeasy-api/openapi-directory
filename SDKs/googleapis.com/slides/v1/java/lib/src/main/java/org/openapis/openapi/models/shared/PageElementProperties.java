/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PageElementProperties - Common properties for a page element. Note: When you initially create a PageElement, the API may modify the values of both `size` and `transform`, but the visual size will be unchanged.
 */
public class PageElementProperties {
    /**
     * The object ID of the page where the element is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageObjectId")
    public String pageObjectId;
    public PageElementProperties withPageObjectId(String pageObjectId) {
        this.pageObjectId = pageObjectId;
        return this;
    }
    
    /**
     * A width and height.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Size size;
    public PageElementProperties withSize(Size size) {
        this.size = size;
        return this;
    }
    
    /**
     * AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x', y') according to: x' x = shear_y scale_y translate_y 1 [ 1 ] After transformation, x' = scale_x * x + shear_x * y + translate_x; y' = scale_y * y + shear_y * x + translate_y; This message is therefore composed of these six matrix elements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transform")
    public AffineTransform transform;
    public PageElementProperties withTransform(AffineTransform transform) {
        this.transform = transform;
        return this;
    }
    
}
