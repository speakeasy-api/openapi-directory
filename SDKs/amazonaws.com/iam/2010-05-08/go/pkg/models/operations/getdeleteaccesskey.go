// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteAccessKeyActionEnum
type GETDeleteAccessKeyActionEnum string

const (
	GETDeleteAccessKeyActionEnumDeleteAccessKey GETDeleteAccessKeyActionEnum = "DeleteAccessKey"
)

func (e GETDeleteAccessKeyActionEnum) ToPointer() *GETDeleteAccessKeyActionEnum {
	return &e
}

func (e *GETDeleteAccessKeyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteAccessKey":
		*e = GETDeleteAccessKeyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteAccessKeyActionEnum: %v", v)
	}
}

// GETDeleteAccessKeyVersionEnum
type GETDeleteAccessKeyVersionEnum string

const (
	GETDeleteAccessKeyVersionEnumTwoThousandAndTen0508 GETDeleteAccessKeyVersionEnum = "2010-05-08"
)

func (e GETDeleteAccessKeyVersionEnum) ToPointer() *GETDeleteAccessKeyVersionEnum {
	return &e
}

func (e *GETDeleteAccessKeyVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETDeleteAccessKeyVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteAccessKeyVersionEnum: %v", v)
	}
}

type GETDeleteAccessKeyRequest struct {
	// <p>The access key ID for the access key ID and secret access key you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
	AccessKeyID string                       `queryParam:"style=form,explode=true,name=AccessKeyId"`
	Action      GETDeleteAccessKeyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the user whose access key pair you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName          *string                       `queryParam:"style=form,explode=true,name=UserName"`
	Version           GETDeleteAccessKeyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteAccessKeyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
