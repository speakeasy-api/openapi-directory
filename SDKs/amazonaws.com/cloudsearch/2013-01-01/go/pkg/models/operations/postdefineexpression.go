// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDefineExpressionActionEnum
type POSTDefineExpressionActionEnum string

const (
	POSTDefineExpressionActionEnumDefineExpression POSTDefineExpressionActionEnum = "DefineExpression"
)

func (e POSTDefineExpressionActionEnum) ToPointer() *POSTDefineExpressionActionEnum {
	return &e
}

func (e *POSTDefineExpressionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DefineExpression":
		*e = POSTDefineExpressionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDefineExpressionActionEnum: %v", v)
	}
}

// POSTDefineExpressionVersionEnum
type POSTDefineExpressionVersionEnum string

const (
	POSTDefineExpressionVersionEnumTwoThousandAndThirteen0101 POSTDefineExpressionVersionEnum = "2013-01-01"
)

func (e POSTDefineExpressionVersionEnum) ToPointer() *POSTDefineExpressionVersionEnum {
	return &e
}

func (e *POSTDefineExpressionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = POSTDefineExpressionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDefineExpressionVersionEnum: %v", v)
	}
}

type POSTDefineExpressionRequest struct {
	Action            POSTDefineExpressionActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                          `request:"mediaType=text/xml"`
	Version           POSTDefineExpressionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDefineExpressionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
