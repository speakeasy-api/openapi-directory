"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ErrorTemplate:
    r"""Error templates for a service descriptor"""
    
    messages: dict[str, str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messages') }})
    r"""Map for custom messages"""  
    service_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceId') }})
    r"""The Id of the service for which the error template is enabled"""  
    template40x: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template40x') }})
    r"""The html template for 40x errors"""  
    template50x: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template50x') }})
    r"""The html template for 50x errors"""  
    template_build: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('templateBuild') }})
    r"""The html template for build page"""  
    template_maintenance: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('templateMaintenance') }})
    r"""The html template for maintenance page"""  
    