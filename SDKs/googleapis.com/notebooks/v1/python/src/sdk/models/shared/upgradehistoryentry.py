"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpgradeHistoryEntryActionEnum(str, Enum):
    r"""Action. Rolloback or Upgrade."""
    ACTION_UNSPECIFIED = 'ACTION_UNSPECIFIED'
    UPGRADE = 'UPGRADE'
    ROLLBACK = 'ROLLBACK'

class UpgradeHistoryEntryStateEnum(str, Enum):
    r"""The state of this instance upgrade history entry."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    STARTED = 'STARTED'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpgradeHistoryEntry:
    r"""The entry of VM image upgrade history."""
    
    action: Optional[UpgradeHistoryEntryActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})
    r"""Action. Rolloback or Upgrade."""  
    container_image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerImage'), 'exclude': lambda f: f is None }})
    r"""The container image before this instance upgrade."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""The time that this instance upgrade history entry is created."""  
    framework: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('framework'), 'exclude': lambda f: f is None }})
    r"""The framework of this notebook instance."""  
    snapshot: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snapshot'), 'exclude': lambda f: f is None }})
    r"""The snapshot of the boot disk of this notebook instance before upgrade."""  
    state: Optional[UpgradeHistoryEntryStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The state of this instance upgrade history entry."""  
    target_image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetImage'), 'exclude': lambda f: f is None }})
    r"""Target VM Image. Format: `ainotebooks-vm/project/image-name/name`."""  
    target_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetVersion'), 'exclude': lambda f: f is None }})
    r"""Target VM Version, like m63."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""The version of the notebook instance before this upgrade."""  
    vm_image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmImage'), 'exclude': lambda f: f is None }})
    r"""The VM image before this instance upgrade."""  
    