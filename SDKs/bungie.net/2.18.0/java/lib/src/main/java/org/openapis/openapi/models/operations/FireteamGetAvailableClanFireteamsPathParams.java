/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class FireteamGetAvailableClanFireteamsPathParams {
    /**
     * The activity type to filter by.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=activityType")
    public Integer activityType;
    public FireteamGetAvailableClanFireteamsPathParams withActivityType(Integer activityType) {
        this.activityType = activityType;
        return this;
    }
    
    /**
     * The date range to grab available fireteams.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=dateRange")
    public Long dateRange;
    public FireteamGetAvailableClanFireteamsPathParams withDateRange(Long dateRange) {
        this.dateRange = dateRange;
        return this;
    }
    
    /**
     * The group id of the clan.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=groupId")
    public Long groupId;
    public FireteamGetAvailableClanFireteamsPathParams withGroupId(Long groupId) {
        this.groupId = groupId;
        return this;
    }
    
    /**
     * Zero based page
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=page")
    public Integer page;
    public FireteamGetAvailableClanFireteamsPathParams withPage(Integer page) {
        this.page = page;
        return this;
    }
    
    /**
     * The platform filter.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=platform")
    public Long platform;
    public FireteamGetAvailableClanFireteamsPathParams withPlatform(Long platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * Determines public/private filtering.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=publicOnly")
    public Long publicOnly;
    public FireteamGetAvailableClanFireteamsPathParams withPublicOnly(Long publicOnly) {
        this.publicOnly = publicOnly;
        return this;
    }
    
    /**
     * Filters based on available slots
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=slotFilter")
    public Long slotFilter;
    public FireteamGetAvailableClanFireteamsPathParams withSlotFilter(Long slotFilter) {
        this.slotFilter = slotFilter;
        return this;
    }
    
}
