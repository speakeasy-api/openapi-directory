/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectionStatusEnum } from "./connectionstatusenum";
import { ProviderTypeEnum } from "./providertypeenum";
import { Expose } from "class-transformer";

/**
 * <p>A resource that is used to connect third-party source providers with services like AWS CodePipeline.</p> <p>Note: A connection created through CloudFormation, the CLI, or the SDK is in `PENDING` status by default. You can make its status `AVAILABLE` by updating the connection in the console.</p>
 */
export class Connection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionArn" })
  connectionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionName" })
  connectionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionStatus" })
  connectionStatus?: ConnectionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "HostArn" })
  hostArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OwnerAccountId" })
  ownerAccountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderType" })
  providerType?: ProviderTypeEnum;
}
