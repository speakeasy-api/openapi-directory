/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DevicesUserDevicesList200ApplicationJSON - The information for a single iOS device
 */
public class DevicesUserDevicesList200ApplicationJSON {
    /**
     * The device description, in the format "iPhone 7 Plus (A1784)"
     */
    @JsonProperty("device_name")
    public String deviceName;

    public DevicesUserDevicesList200ApplicationJSON withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }
    
    /**
     * A combination of the device model name and the owner name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("full_device_name")
    public String fullDeviceName;

    public DevicesUserDevicesList200ApplicationJSON withFullDeviceName(String fullDeviceName) {
        this.fullDeviceName = fullDeviceName;
        return this;
    }
    
    /**
     * The device's International Mobile Equipment Identity number. Always empty or undefined at present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imei")
    public String imei;

    public DevicesUserDevicesList200ApplicationJSON withImei(String imei) {
        this.imei = imei;
        return this;
    }
    
    /**
     * The model identifier of the device, in the format iDeviceM,N
     */
    @JsonProperty("model")
    public String model;

    public DevicesUserDevicesList200ApplicationJSON withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * The last known OS version running on the device
     */
    @JsonProperty("os_build")
    public String osBuild;

    public DevicesUserDevicesList200ApplicationJSON withOsBuild(String osBuild) {
        this.osBuild = osBuild;
        return this;
    }
    
    /**
     * The last known OS version running on the device
     */
    @JsonProperty("os_version")
    public String osVersion;

    public DevicesUserDevicesList200ApplicationJSON withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    /**
     * The user ID of the device owner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner_id")
    public String ownerId;

    public DevicesUserDevicesList200ApplicationJSON withOwnerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    /**
     * Timestamp of when the device was registered in ISO format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registered_at")
    public String registeredAt;

    public DevicesUserDevicesList200ApplicationJSON withRegisteredAt(String registeredAt) {
        this.registeredAt = registeredAt;
        return this;
    }
    
    /**
     * The device's serial number. Always empty or undefined at present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serial")
    public String serial;

    public DevicesUserDevicesList200ApplicationJSON withSerial(String serial) {
        this.serial = serial;
        return this;
    }
    
    /**
     * The provisioning status of the device.
     */
    @JsonProperty("status")
    public String status;

    public DevicesUserDevicesList200ApplicationJSON withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The Unique Device IDentifier of the device
     */
    @JsonProperty("udid")
    public String udid;

    public DevicesUserDevicesList200ApplicationJSON withUdid(String udid) {
        this.udid = udid;
        return this;
    }
    
    public DevicesUserDevicesList200ApplicationJSON(@JsonProperty("device_name") String deviceName, @JsonProperty("model") String model, @JsonProperty("os_build") String osBuild, @JsonProperty("os_version") String osVersion, @JsonProperty("status") String status, @JsonProperty("udid") String udid) {
        this.deviceName = deviceName;
        this.model = model;
        this.osBuild = osBuild;
        this.osVersion = osVersion;
        this.status = status;
        this.udid = udid;
  }
}
