// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteTestGridProjectXAmzTargetEnum
type DeleteTestGridProjectXAmzTargetEnum string

const (
	DeleteTestGridProjectXAmzTargetEnumDeviceFarm20150623DeleteTestGridProject DeleteTestGridProjectXAmzTargetEnum = "DeviceFarm_20150623.DeleteTestGridProject"
)

func (e DeleteTestGridProjectXAmzTargetEnum) ToPointer() *DeleteTestGridProjectXAmzTargetEnum {
	return &e
}

func (e *DeleteTestGridProjectXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.DeleteTestGridProject":
		*e = DeleteTestGridProjectXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTestGridProjectXAmzTargetEnum: %v", v)
	}
}

type DeleteTestGridProjectRequest struct {
	DeleteTestGridProjectRequest shared.DeleteTestGridProjectRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteTestGridProjectXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteTestGridProjectResponse struct {
	// ArgumentException
	ArgumentException interface{}
	// CannotDeleteException
	CannotDeleteException interface{}
	ContentType           string
	// Success
	DeleteTestGridProjectResult map[string]interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
