/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DatabaseResource } from "./databaseresource";
import { DataCellsFilterResource } from "./datacellsfilterresource";
import { DataLocationResource } from "./datalocationresource";
import { LFTagKeyResource } from "./lftagkeyresource";
import { LFTagPolicyResource } from "./lftagpolicyresource";
import { TableResource } from "./tableresource";
import { TableWithColumnsResource } from "./tablewithcolumnsresource";
import { Expose, Type } from "class-transformer";

/**
 * A structure for the resource.
 */
export class Resource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Catalog" })
  catalog?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "DataCellsFilter" })
  @Type(() => DataCellsFilterResource)
  dataCellsFilter?: DataCellsFilterResource;

  @SpeakeasyMetadata()
  @Expose({ name: "DataLocation" })
  @Type(() => DataLocationResource)
  dataLocation?: DataLocationResource;

  @SpeakeasyMetadata()
  @Expose({ name: "Database" })
  @Type(() => DatabaseResource)
  database?: DatabaseResource;

  @SpeakeasyMetadata()
  @Expose({ name: "LFTag" })
  @Type(() => LFTagKeyResource)
  lfTag?: LFTagKeyResource;

  @SpeakeasyMetadata()
  @Expose({ name: "LFTagPolicy" })
  @Type(() => LFTagPolicyResource)
  lfTagPolicy?: LFTagPolicyResource;

  @SpeakeasyMetadata()
  @Expose({ name: "Table" })
  @Type(() => TableResource)
  table?: TableResource;

  @SpeakeasyMetadata()
  @Expose({ name: "TableWithColumns" })
  @Type(() => TableWithColumnsResource)
  tableWithColumns?: TableWithColumnsResource;
}
