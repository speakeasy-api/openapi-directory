"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class PostAPIV1StatusesSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class PostAPIV1StatusesRequestBodyVisibilityEnum(str, Enum):
    r"""Visibility of the posted status. Enumerable oneOf public, unlisted, private, direct."""
    PUBLIC = 'public'
    UNLISTED = 'unlisted'
    PRIVATE = 'private'
    DIRECT = 'direct'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPIV1StatusesRequestBody:
    
    in_reply_to_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('in_reply_to_id'), 'exclude': lambda f: f is None }})
    r"""ID of the status being replied to, if status is a reply"""  
    language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language'), 'exclude': lambda f: f is None }})
    r"""ISO 639 language code for this status."""  
    media_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('media_ids'), 'exclude': lambda f: f is None }})
    r"""Array of Attachment ids to be attached as media. If provided, `status` becomes optional, and `poll` cannot be used."""  
    poll: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('poll'), 'exclude': lambda f: f is None }})  
    scheduled_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduled_at'), 'exclude': lambda f: f is None }})
    r"""ISO 8601 Datetime at which to schedule a status. Providing this paramter will cause ScheduledStatus to be returned instead of Status. Must be at least 5 minutes in the future."""  
    sensitive: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sensitive'), 'exclude': lambda f: f is None }})
    r"""Mark status and attached media as sensitive?"""  
    spoiler_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spoiler_text'), 'exclude': lambda f: f is None }})
    r"""Text to be shown as a warning or subject before the actual content. Statuses are generally collapsed behind this field."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Text content of the status. If `media_ids` is provided, this becomes optional. Attaching a `poll` is optional while `status` is provided."""  
    visibility: Optional[PostAPIV1StatusesRequestBodyVisibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibility'), 'exclude': lambda f: f is None }})
    r"""Visibility of the posted status. Enumerable oneOf public, unlisted, private, direct."""  
    

@dataclasses.dataclass
class PostAPIV1StatusesRequest:
    
    idempotency_key: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Idempotency-Key', 'style': 'simple', 'explode': False }})
    r"""Prevent duplicate submissions of the same status. Idempotency keys are stored for up to 1 hour, and can be any arbitrary string. Consider using a hash or UUID generated client-side."""  
    request_body: Optional[list[PostAPIV1StatusesRequestBody]] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PostAPIV1StatusesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Invalid or missing Authorization header"""  
    post_api_v1_statuses_200_application_json_one_of: Optional[Any] = dataclasses.field(default=None)
    r"""Status will be posted with chosen parameters. If scheduled_at is provided, then a ScheduledStatus will be returned instead."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    