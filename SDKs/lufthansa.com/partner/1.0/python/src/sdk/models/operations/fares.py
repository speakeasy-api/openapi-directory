"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class FaresSecurity:
    
    auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class FaresRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""http header: application/json or application/xml (Acceptable values are: \\"application/json\\", \\"application/xml\\")"""  
    carriers: str = dataclasses.field(metadata={'query_param': { 'field_name': 'carriers', 'style': 'form', 'explode': True }})
    r"""Include fares for these carriers e.g. ('4U;LH')"""  
    catalogues: str = dataclasses.field(metadata={'query_param': { 'field_name': 'catalogues', 'style': 'form', 'explode': True }})
    r"""Search fares from these carriers' catalogues - currently active for Germanwings only  (4U)"""  
    segments: str = dataclasses.field(metadata={'query_param': { 'field_name': 'segments', 'style': 'form', 'explode': True }})
    r"""Journey details  e.g. (origin=TXL;destination=CGN;travel-date=2016-12-15;return-date=2016-12-20;cabin=Economy)"""  
    fare_types: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fare-types', 'style': 'form', 'explode': True }})
    r"""Fares family: basic,smart, best, smartflex, bestflex - Germanwings only (Acceptable values are: \\"\\", \\"basic\\", \\"smart\\", \\"best\\", \\"smartflex\\", \\"bestflex\\")"""  
    travelers: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'travelers', 'style': 'form', 'explode': True }})
    r"""Type and number of travelers e.g. (adult=1;child=1;infant=1)"""  
    

@dataclasses.dataclass
class FaresResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    fares_200_application_json_string: Optional[str] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    