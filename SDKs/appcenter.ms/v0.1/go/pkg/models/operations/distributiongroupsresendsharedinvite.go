// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DistributionGroupsResendSharedInviteSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// DistributionGroupsResendSharedInviteRequestBody - The list of members to add
type DistributionGroupsResendSharedInviteRequestBody struct {
	// The list of emails of the users
	UserEmails []string `json:"user_emails,omitempty"`
}

type DistributionGroupsResendSharedInviteRequest struct {
	// The list of members to add
	RequestBody DistributionGroupsResendSharedInviteRequestBody `request:"mediaType=application/json"`
	// The name of the distribution group
	DistributionGroupName string `pathParam:"style=simple,explode=false,name=distribution_group_name"`
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum string

const (
	DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnumBadRequest          DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnumConflict            DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnumNotAcceptable       DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnumNotFound            DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnumInternalServerError DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnumUnauthorized        DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnumTooManyRequests     DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum) ToPointer() *DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type DistributionGroupsResendSharedInviteDefaultApplicationJSONError struct {
	Code    DistributionGroupsResendSharedInviteDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                                  `json:"message"`
}

// DistributionGroupsResendSharedInviteDefaultApplicationJSON - Error
type DistributionGroupsResendSharedInviteDefaultApplicationJSON struct {
	Error DistributionGroupsResendSharedInviteDefaultApplicationJSONError `json:"error"`
}

type DistributionGroupsResendSharedInviteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	DistributionGroupsResendSharedInviteDefaultApplicationJSONObject *DistributionGroupsResendSharedInviteDefaultApplicationJSON
}
