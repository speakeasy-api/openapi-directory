/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Price } from "./price";
import { Expose, Type } from "class-transformer";

/**
 * Pricing terms for Private Auctions.
 */
export class PrivateAuctionTermsInput extends SpeakeasyBase {
  /**
   * Represents a price and a pricing type for a deal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floorPrice" })
  @Type(() => Price)
  floorPrice?: Price;
}

/**
 * Pricing terms for Private Auctions.
 */
export class PrivateAuctionTerms extends SpeakeasyBase {
  /**
   * Represents a price and a pricing type for a deal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floorPrice" })
  @Type(() => Price)
  floorPrice?: Price;

  /**
   * Output only. True if open auction buyers are allowed to compete with invited buyers in this private auction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "openAuctionAllowed" })
  openAuctionAllowed?: boolean;
}
