/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VmUtilizationMetrics - Utilization metrics values for a single VM.
 */
public class VmUtilizationMetrics {
    /**
     * Average CPU usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuAverage")
    public Integer cpuAverage;
    public VmUtilizationMetrics withCpuAverage(Integer cpuAverage) {
        this.cpuAverage = cpuAverage;
        return this;
    }
    
    /**
     * Average CPU usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuAveragePercent")
    public Integer cpuAveragePercent;
    public VmUtilizationMetrics withCpuAveragePercent(Integer cpuAveragePercent) {
        this.cpuAveragePercent = cpuAveragePercent;
        return this;
    }
    
    /**
     * Max CPU usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuMax")
    public Integer cpuMax;
    public VmUtilizationMetrics withCpuMax(Integer cpuMax) {
        this.cpuMax = cpuMax;
        return this;
    }
    
    /**
     * Max CPU usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuMaxPercent")
    public Integer cpuMaxPercent;
    public VmUtilizationMetrics withCpuMaxPercent(Integer cpuMaxPercent) {
        this.cpuMaxPercent = cpuMaxPercent;
        return this;
    }
    
    /**
     * Average disk IO rate, in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskIoRateAverage")
    public String diskIoRateAverage;
    public VmUtilizationMetrics withDiskIoRateAverage(String diskIoRateAverage) {
        this.diskIoRateAverage = diskIoRateAverage;
        return this;
    }
    
    /**
     * Average disk IO rate, in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskIoRateAverageKbps")
    public String diskIoRateAverageKbps;
    public VmUtilizationMetrics withDiskIoRateAverageKbps(String diskIoRateAverageKbps) {
        this.diskIoRateAverageKbps = diskIoRateAverageKbps;
        return this;
    }
    
    /**
     * Max disk IO rate, in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskIoRateMax")
    public String diskIoRateMax;
    public VmUtilizationMetrics withDiskIoRateMax(String diskIoRateMax) {
        this.diskIoRateMax = diskIoRateMax;
        return this;
    }
    
    /**
     * Max disk IO rate, in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskIoRateMaxKbps")
    public String diskIoRateMaxKbps;
    public VmUtilizationMetrics withDiskIoRateMaxKbps(String diskIoRateMaxKbps) {
        this.diskIoRateMaxKbps = diskIoRateMaxKbps;
        return this;
    }
    
    /**
     * Average memory usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryAverage")
    public Integer memoryAverage;
    public VmUtilizationMetrics withMemoryAverage(Integer memoryAverage) {
        this.memoryAverage = memoryAverage;
        return this;
    }
    
    /**
     * Average memory usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryAveragePercent")
    public Integer memoryAveragePercent;
    public VmUtilizationMetrics withMemoryAveragePercent(Integer memoryAveragePercent) {
        this.memoryAveragePercent = memoryAveragePercent;
        return this;
    }
    
    /**
     * Max memory usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryMax")
    public Integer memoryMax;
    public VmUtilizationMetrics withMemoryMax(Integer memoryMax) {
        this.memoryMax = memoryMax;
        return this;
    }
    
    /**
     * Max memory usage, percent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryMaxPercent")
    public Integer memoryMaxPercent;
    public VmUtilizationMetrics withMemoryMaxPercent(Integer memoryMaxPercent) {
        this.memoryMaxPercent = memoryMaxPercent;
        return this;
    }
    
    /**
     * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkThroughputAverage")
    public String networkThroughputAverage;
    public VmUtilizationMetrics withNetworkThroughputAverage(String networkThroughputAverage) {
        this.networkThroughputAverage = networkThroughputAverage;
        return this;
    }
    
    /**
     * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkThroughputAverageKbps")
    public String networkThroughputAverageKbps;
    public VmUtilizationMetrics withNetworkThroughputAverageKbps(String networkThroughputAverageKbps) {
        this.networkThroughputAverageKbps = networkThroughputAverageKbps;
        return this;
    }
    
    /**
     * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkThroughputMax")
    public String networkThroughputMax;
    public VmUtilizationMetrics withNetworkThroughputMax(String networkThroughputMax) {
        this.networkThroughputMax = networkThroughputMax;
        return this;
    }
    
    /**
     * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkThroughputMaxKbps")
    public String networkThroughputMaxKbps;
    public VmUtilizationMetrics withNetworkThroughputMaxKbps(String networkThroughputMaxKbps) {
        this.networkThroughputMaxKbps = networkThroughputMaxKbps;
        return this;
    }
    
}
