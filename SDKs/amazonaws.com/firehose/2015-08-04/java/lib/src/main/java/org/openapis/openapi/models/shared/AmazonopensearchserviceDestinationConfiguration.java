/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AmazonopensearchserviceDestinationConfiguration - Describes the configuration of a destination in Amazon OpenSearch Service
 */
public class AmazonopensearchserviceDestinationConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BufferingHints")
    public AmazonopensearchserviceBufferingHints bufferingHints;

    public AmazonopensearchserviceDestinationConfiguration withBufferingHints(AmazonopensearchserviceBufferingHints bufferingHints) {
        this.bufferingHints = bufferingHints;
        return this;
    }
    
    /**
     * Describes the Amazon CloudWatch logging options for your delivery stream.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CloudWatchLoggingOptions")
    public CloudWatchLoggingOptions cloudWatchLoggingOptions;

    public AmazonopensearchserviceDestinationConfiguration withCloudWatchLoggingOptions(CloudWatchLoggingOptions cloudWatchLoggingOptions) {
        this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClusterEndpoint")
    public String clusterEndpoint;

    public AmazonopensearchserviceDestinationConfiguration withClusterEndpoint(String clusterEndpoint) {
        this.clusterEndpoint = clusterEndpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DomainARN")
    public String domainARN;

    public AmazonopensearchserviceDestinationConfiguration withDomainARN(String domainARN) {
        this.domainARN = domainARN;
        return this;
    }
    
    @JsonProperty("IndexName")
    public String indexName;

    public AmazonopensearchserviceDestinationConfiguration withIndexName(String indexName) {
        this.indexName = indexName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IndexRotationPeriod")
    public AmazonopensearchserviceIndexRotationPeriodEnum indexRotationPeriod;

    public AmazonopensearchserviceDestinationConfiguration withIndexRotationPeriod(AmazonopensearchserviceIndexRotationPeriodEnum indexRotationPeriod) {
        this.indexRotationPeriod = indexRotationPeriod;
        return this;
    }
    
    /**
     * Describes a data processing configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProcessingConfiguration")
    public ProcessingConfiguration processingConfiguration;

    public AmazonopensearchserviceDestinationConfiguration withProcessingConfiguration(ProcessingConfiguration processingConfiguration) {
        this.processingConfiguration = processingConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RetryOptions")
    public AmazonopensearchserviceRetryOptions retryOptions;

    public AmazonopensearchserviceDestinationConfiguration withRetryOptions(AmazonopensearchserviceRetryOptions retryOptions) {
        this.retryOptions = retryOptions;
        return this;
    }
    
    @JsonProperty("RoleARN")
    public String roleARN;

    public AmazonopensearchserviceDestinationConfiguration withRoleARN(String roleARN) {
        this.roleARN = roleARN;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3BackupMode")
    public AmazonopensearchserviceS3BackupModeEnum s3BackupMode;

    public AmazonopensearchserviceDestinationConfiguration withS3BackupMode(AmazonopensearchserviceS3BackupModeEnum s3BackupMode) {
        this.s3BackupMode = s3BackupMode;
        return this;
    }
    
    /**
     * Describes the configuration of a destination in Amazon S3.
     */
    @JsonProperty("S3Configuration")
    public S3DestinationConfiguration s3Configuration;

    public AmazonopensearchserviceDestinationConfiguration withS3Configuration(S3DestinationConfiguration s3Configuration) {
        this.s3Configuration = s3Configuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TypeName")
    public String typeName;

    public AmazonopensearchserviceDestinationConfiguration withTypeName(String typeName) {
        this.typeName = typeName;
        return this;
    }
    
    /**
     * The details of the VPC of the Amazon ES destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcConfiguration")
    public VpcConfiguration vpcConfiguration;

    public AmazonopensearchserviceDestinationConfiguration withVpcConfiguration(VpcConfiguration vpcConfiguration) {
        this.vpcConfiguration = vpcConfiguration;
        return this;
    }
    
    public AmazonopensearchserviceDestinationConfiguration(@JsonProperty("IndexName") String indexName, @JsonProperty("RoleARN") String roleARN, @JsonProperty("S3Configuration") S3DestinationConfiguration s3Configuration) {
        this.indexName = indexName;
        this.roleARN = roleARN;
        this.s3Configuration = s3Configuration;
  }
}
