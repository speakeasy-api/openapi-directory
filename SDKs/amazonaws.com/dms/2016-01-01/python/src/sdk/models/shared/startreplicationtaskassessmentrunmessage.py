"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartReplicationTaskAssessmentRunMessage:
    r"""<p/>"""
    
    assessment_run_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AssessmentRunName') }})  
    replication_task_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicationTaskArn') }})  
    result_location_bucket: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultLocationBucket') }})  
    service_access_role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceAccessRoleArn') }})  
    exclude: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Exclude'), 'exclude': lambda f: f is None }})  
    include_only: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IncludeOnly'), 'exclude': lambda f: f is None }})  
    result_encryption_mode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultEncryptionMode'), 'exclude': lambda f: f is None }})  
    result_kms_key_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultKmsKeyArn'), 'exclude': lambda f: f is None }})  
    result_location_folder: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultLocationFolder'), 'exclude': lambda f: f is None }})  
    