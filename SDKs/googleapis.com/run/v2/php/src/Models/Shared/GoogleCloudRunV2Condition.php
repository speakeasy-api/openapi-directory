<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRunV2Condition - Defines a status condition for a resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRunV2Condition
{
    /**
     * A reason for the execution condition.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionExecutionReasonEnum $executionReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('executionReason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionExecutionReasonEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRunV2ConditionExecutionReasonEnum $executionReason = null;
    
    /**
     * Last time the condition transitioned from one status to another.
     * 
     * @var ?string $lastTransitionTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastTransitionTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastTransitionTime = null;
    
    /**
     * Human readable message indicating details about the current status.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * A common (service-level) reason for this condition.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionReasonEnum $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionReasonEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRunV2ConditionReasonEnum $reason = null;
    
    /**
     * A reason for the revision condition.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionRevisionReasonEnum $revisionReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('revisionReason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionRevisionReasonEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRunV2ConditionRevisionReasonEnum $revisionReason = null;
    
    /**
     * How to interpret failures of this condition, one of Error, Warning, Info
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionSeverityEnum $severity
     */
	#[\JMS\Serializer\Annotation\SerializedName('severity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionSeverityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRunV2ConditionSeverityEnum $severity = null;
    
    /**
     * State of the condition.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudRunV2ConditionStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRunV2ConditionStateEnum $state = null;
    
    /**
     * type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * "Ready": True when the Resource is ready.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->executionReason = null;
		$this->lastTransitionTime = null;
		$this->message = null;
		$this->reason = null;
		$this->revisionReason = null;
		$this->severity = null;
		$this->state = null;
		$this->type = null;
	}
}
