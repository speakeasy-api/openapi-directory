// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum string

const (
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumCustomer    PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "customer"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumProvider    PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "provider"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumBank        PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "bank"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumCashWoucher PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "cashWoucher"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumFiscal      PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "fiscal"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumInsurance   PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "insurance"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumSocial      PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "social"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumOther       PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "other"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnumPermanent   PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum = "permanent"
)

func (e *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum: %s", s)
	}
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccounting struct {
	AccountedOn *string                                                                                                        `json:"AccountedOn,omitempty"`
	Workbook    *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                                                                        `json:"YearMonth,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataFile struct {
	File    string `multipartForm:"name=File"`
	Content []byte `multipartForm:"content"`
}

// PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormData1 - Document to add (either DocumentId either (File,Name,Content64Encoded,Title) is mandatory)
type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormData1 struct {
	Accounting *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataAccounting `multipartForm:"name=Accounting,json"`
	Author     *string                                                                                            `multipartForm:"name=Author"`
	Code       *string                                                                                            `multipartForm:"name=Code"`
	Comment    *string                                                                                            `multipartForm:"name=Comment"`
	Date       *string                                                                                            `multipartForm:"name=Date"`
	File       PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormDataFile        `multipartForm:"file"`
	Title      string                                                                                             `multipartForm:"name=Title"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartRequest struct {
	// Document to add (either DocumentId either (File,Name,Content64Encoded,Title) is mandatory)
	RequestBody PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartFormData1 `request:"mediaType=multipart/form-data"`
	// Id of the folder social
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the payroll
	PayrollID string `pathParam:"style=simple,explode=false,name=payrollId"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipart201ApplicationJSON - Id of document created
type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipart201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipartResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of document created
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipart201ApplicationJSONObject *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationMultipart201ApplicationJSON
}
