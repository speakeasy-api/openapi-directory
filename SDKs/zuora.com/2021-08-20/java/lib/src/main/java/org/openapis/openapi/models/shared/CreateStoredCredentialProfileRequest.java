/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class CreateStoredCredentialProfileRequest {
    /**
     * Specifies how Zuora activates the stored credential profile. Only applicable if you set the `status` field to `Active`.
     * 
     * * `Activate` (default) - Use this value if you are creating the stored credential profile after receiving the customer's consent.
     * 
     *   Zuora will create the stored credential profile then send a cardholder-initiated transaction (CIT) to the payment gateway to validate the stored credential profile. If the CIT succeeds, the status of the stored credential profile will be `Active`. If the CIT does not succeed, Zuora will not create a stored credential profile.
     *   
     *   If the payment gateway does not support the stored credential transaction framework, the status of the stored credential profile will be `Agreed`.
     * 
     * 
     * * `Persist` - Use this value if the stored credential profile represents a stored credential profile in an external system. The status of the payment method's stored credential profile will be `Active`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public CreateStoredCredentialProfileRequestActionEnum action;
    public CreateStoredCredentialProfileRequest withAction(CreateStoredCredentialProfileRequestActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The date on which the profile is agreed. The date format is `yyyy-mm-dd`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("agreedOn")
    public LocalDate agreedOn;
    public CreateStoredCredentialProfileRequest withAgreedOn(LocalDate agreedOn) {
        this.agreedOn = agreedOn;
        return this;
    }
    
    /**
     * Specifies the ID of the payment gateway that Zuora will use when activating the stored credential profile.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authGateway")
    public String authGateway;
    public CreateStoredCredentialProfileRequest withAuthGateway(String authGateway) {
        this.authGateway = authGateway;
        return this;
    }
    
    /**
     * The security code of the credit card.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardSecurityCode")
    public String cardSecurityCode;
    public CreateStoredCredentialProfileRequest withCardSecurityCode(String cardSecurityCode) {
        this.cardSecurityCode = cardSecurityCode;
        return this;
    }
    
    /**
     * Specifies your reference for the consent agreement that you have established with the customer.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consentAgreementRef")
    public String consentAgreementRef;
    public CreateStoredCredentialProfileRequest withConsentAgreementRef(String consentAgreementRef) {
        this.consentAgreementRef = consentAgreementRef;
        return this;
    }
    
    @JsonProperty("consentAgreementSrc")
    public CreateStoredCredentialProfileRequestConsentAgreementSrcEnum consentAgreementSrc;
    public CreateStoredCredentialProfileRequest withConsentAgreementSrc(CreateStoredCredentialProfileRequestConsentAgreementSrcEnum consentAgreementSrc) {
        this.consentAgreementSrc = consentAgreementSrc;
        return this;
    }
    
    /**
     * The ID of a network transaction.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkTransactionId")
    public String networkTransactionId;
    public CreateStoredCredentialProfileRequest withNetworkTransactionId(String networkTransactionId) {
        this.networkTransactionId = networkTransactionId;
        return this;
    }
    
    /**
     * Specifies the status of the stored credential profile.
     * 
     * * `Active` - Use this value if you are creating the stored credential profile after receiving the customer's consent, or if the stored credential profile represents a stored credential profile in an external system.
     * 
     *   You can use the `action` field to specify how Zuora activates the stored credential profile.
     * 
     * 
     * * `Agreed` - Use this value if you are migrating the payment method to the stored credential transaction framework.
     * 
     *   In this case, Zuora will not send a cardholder-initiated transaction (CIT) to the payment gateway to validate the stored credential profile.
     * 
     */
    @JsonProperty("status")
    public CreateStoredCredentialProfileRequestStatusEnum status;
    public CreateStoredCredentialProfileRequest withStatus(CreateStoredCredentialProfileRequestStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("type")
    public CreateStoredCredentialProfileRequestTypeEnum type;
    public CreateStoredCredentialProfileRequest withType(CreateStoredCredentialProfileRequestTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
