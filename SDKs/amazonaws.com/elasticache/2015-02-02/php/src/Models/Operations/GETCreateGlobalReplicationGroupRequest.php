<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETCreateGlobalReplicationGroupRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETCreateGlobalReplicationGroupActionEnum $action;
    
    /**
     * Provides details of the Global datastore
     * 
     * @var ?string $globalReplicationGroupDescription
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=GlobalReplicationGroupDescription')]
    public ?string $globalReplicationGroupDescription = null;
    
    /**
     * <p>The suffix name of a Global datastore. Amazon ElastiCache automatically applies a prefix to the Global datastore ID when it is created. Each Amazon Region has its own prefix. For instance, a Global datastore ID created in the US-West-1 region will begin with "dsdfu" along with the suffix name you provide. The suffix, combined with the auto-generated prefix, guarantees uniqueness of the Global datastore name across multiple regions. </p> <p>For a full list of Amazon Regions and their respective Global datastore iD prefixes, see <a href="http://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Redis-Global-Datastores-CLI.html">Using the Amazon CLI with Global datastores </a>.</p>
     * 
     * @var string $globalReplicationGroupIdSuffix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=GlobalReplicationGroupIdSuffix')]
    public string $globalReplicationGroupIdSuffix;
    
    /**
     * The name of the primary cluster that accepts writes and will replicate updates to the secondary cluster.
     * 
     * @var string $primaryReplicationGroupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PrimaryReplicationGroupId')]
    public string $primaryReplicationGroupId;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETCreateGlobalReplicationGroupVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETCreateGlobalReplicationGroupActionEnum::CREATE_GLOBAL_REPLICATION_GROUP;
		$this->globalReplicationGroupDescription = null;
		$this->globalReplicationGroupIdSuffix = "";
		$this->primaryReplicationGroupId = "";
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETCreateGlobalReplicationGroupVersionEnum::TWO_THOUSAND_AND_FIFTEEN0202;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
