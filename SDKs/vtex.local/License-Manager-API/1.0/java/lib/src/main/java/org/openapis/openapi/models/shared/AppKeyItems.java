/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AppKeyItems - Object representing application keys
 */
public class AppKeyItems {
    /**
     * AppKey (Access Key in the license manager UI)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appKey")
    public String appKey;

    public AppKeyItems withAppKey(String appKey) {
        this.appKey = appKey;
        return this;
    }
    
    /**
     * AppToken. For security reasons, should always be null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appToken")
    public String appToken;

    public AppKeyItems withAppToken(String appToken) {
        this.appToken = appToken;
        return this;
    }
    
    /**
     * Creation date of the application key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdIn")
    public OffsetDateTime createdIn;

    public AppKeyItems withCreatedIn(OffsetDateTime createdIn) {
        this.createdIn = createdIn;
        return this;
    }
    
    /**
     * ID of the application key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public AppKeyItems withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If the application key is active
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isActive")
    public Boolean isActive;

    public AppKeyItems withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * If the application key is blocked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isBlocked")
    public Boolean isBlocked;

    public AppKeyItems withIsBlocked(Boolean isBlocked) {
        this.isBlocked = isBlocked;
        return this;
    }
    
    /**
     * Label of the application key
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public AppKeyItems withLabel(String label) {
        this.label = label;
        return this;
    }
    
    public AppKeyItems(){}
}
