/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CloudFormationStackRecord - &lt;p&gt;Describes a CloudFormation stack record created as a result of the &lt;code&gt;create cloud formation stack&lt;/code&gt; action.&lt;/p&gt; &lt;p&gt;A CloudFormation stack record provides information about the AWS CloudFormation stack used to create a new Amazon Elastic Compute Cloud instance from an exported Lightsail instance snapshot.&lt;/p&gt;
 */
public class CloudFormationStackRecord {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public CloudFormationStackRecord withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public CloudFormationStackRecord withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationInfo")
    public DestinationInfo destinationInfo;

    public CloudFormationStackRecord withDestinationInfo(DestinationInfo destinationInfo) {
        this.destinationInfo = destinationInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public ResourceLocation location;

    public CloudFormationStackRecord withLocation(ResourceLocation location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CloudFormationStackRecord withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceType")
    public ResourceTypeEnum resourceType;

    public CloudFormationStackRecord withResourceType(ResourceTypeEnum resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceInfo")
    public CloudFormationStackRecordSourceInfo[] sourceInfo;

    public CloudFormationStackRecord withSourceInfo(CloudFormationStackRecordSourceInfo[] sourceInfo) {
        this.sourceInfo = sourceInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public RecordStateEnum state;

    public CloudFormationStackRecord withState(RecordStateEnum state) {
        this.state = state;
        return this;
    }
    
    public CloudFormationStackRecord(){}
}
