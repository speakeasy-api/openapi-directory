// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConflictHandlerTypeEnum string

const (
	ConflictHandlerTypeEnumOptimisticConcurrency ConflictHandlerTypeEnum = "OPTIMISTIC_CONCURRENCY"
	ConflictHandlerTypeEnumLambda                ConflictHandlerTypeEnum = "LAMBDA"
	ConflictHandlerTypeEnumAutomerge             ConflictHandlerTypeEnum = "AUTOMERGE"
	ConflictHandlerTypeEnumNone                  ConflictHandlerTypeEnum = "NONE"
)

func (e ConflictHandlerTypeEnum) ToPointer() *ConflictHandlerTypeEnum {
	return &e
}

func (e *ConflictHandlerTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPTIMISTIC_CONCURRENCY":
		fallthrough
	case "LAMBDA":
		fallthrough
	case "AUTOMERGE":
		fallthrough
	case "NONE":
		*e = ConflictHandlerTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConflictHandlerTypeEnum: %v", v)
	}
}
