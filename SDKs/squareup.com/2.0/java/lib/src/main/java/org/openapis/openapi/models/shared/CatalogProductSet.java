/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CatalogProductSet - Represents a collection of catalog objects for the purpose of applying a
 * `PricingRule`. Including a catalog object will include all of its subtypes.
 * For example, including a category in a product set will include all of its
 * items and associated item variations in the product set. Including an item in
 * a product set will also include its item variations.
 */
public class CatalogProductSet {
    /**
     * If set to `true`, the product set will include every item in the catalog.
     * Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("all_products")
    public Boolean allProducts;
    public CatalogProductSet withAllProducts(Boolean allProducts) {
        this.allProducts = allProducts;
        return this;
    }
    
    /**
     * User-defined name for the product set. For example, "Clearance Items"
     * or "Winter Sale Items".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CatalogProductSet withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Unique IDs for any `CatalogObject` included in this product set.
     * All objects in this set must be included in an order for a pricing rule to apply.
     * 
     * Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
     * 
     * Max: 500 catalog object IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("product_ids_all")
    public String[] productIdsAll;
    public CatalogProductSet withProductIdsAll(String[] productIdsAll) {
        this.productIdsAll = productIdsAll;
        return this;
    }
    
    /**
     *  Unique IDs for any `CatalogObject` included in this product set. Any
     * number of these catalog objects can be in an order for a pricing rule to apply.
     * 
     * This can be used with `product_ids_all` in a parent `CatalogProductSet` to
     * match groups of products for a bulk discount, such as a discount for an
     * entree and side combo.
     * 
     * Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
     * 
     * Max: 500 catalog object IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("product_ids_any")
    public String[] productIdsAny;
    public CatalogProductSet withProductIdsAny(String[] productIdsAny) {
        this.productIdsAny = productIdsAny;
        return this;
    }
    
    /**
     * If set, there must be exactly this many items from `products_any` or `products_all`
     * in the cart for the discount to apply.
     * 
     * Cannot be combined with either `quantity_min` or `quantity_max`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity_exact")
    public Long quantityExact;
    public CatalogProductSet withQuantityExact(Long quantityExact) {
        this.quantityExact = quantityExact;
        return this;
    }
    
    /**
     * If set, the pricing rule will apply to a maximum of this many items from
     * `products_any` or `products_all`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity_max")
    public Long quantityMax;
    public CatalogProductSet withQuantityMax(Long quantityMax) {
        this.quantityMax = quantityMax;
        return this;
    }
    
    /**
     * If set, there must be at least this many items from `products_any` or `products_all`
     * in a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if
     * `quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity_min")
    public Long quantityMin;
    public CatalogProductSet withQuantityMin(Long quantityMin) {
        this.quantityMin = quantityMin;
        return this;
    }
    
}
