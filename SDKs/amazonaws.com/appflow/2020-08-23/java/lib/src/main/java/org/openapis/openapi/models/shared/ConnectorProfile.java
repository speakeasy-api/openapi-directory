/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ConnectorProfile -  Describes an instance of a connector. This includes the provided name, credentials ARN, connection-mode, and so on. To keep the API intuitive and extensible, the fields that are common to all types of connector profiles are explicitly specified at the top level. The rest of the connector-specific properties are available via the &lt;code&gt;connectorProfileProperties&lt;/code&gt; field. 
 */
public class ConnectorProfile {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionMode")
    public ConnectionModeEnum connectionMode;
    public ConnectorProfile withConnectionMode(ConnectionModeEnum connectionMode) {
        this.connectionMode = connectionMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorLabel")
    public String connectorLabel;
    public ConnectorProfile withConnectorLabel(String connectorLabel) {
        this.connectorLabel = connectorLabel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorProfileArn")
    public String connectorProfileArn;
    public ConnectorProfile withConnectorProfileArn(String connectorProfileArn) {
        this.connectorProfileArn = connectorProfileArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorProfileName")
    public String connectorProfileName;
    public ConnectorProfile withConnectorProfileName(String connectorProfileName) {
        this.connectorProfileName = connectorProfileName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorProfileProperties")
    public ConnectorProfileProperties connectorProfileProperties;
    public ConnectorProfile withConnectorProfileProperties(ConnectorProfileProperties connectorProfileProperties) {
        this.connectorProfileProperties = connectorProfileProperties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorType")
    public ConnectorTypeEnum connectorType;
    public ConnectorProfile withConnectorType(ConnectorTypeEnum connectorType) {
        this.connectorType = connectorType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public ConnectorProfile withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentialsArn")
    public String credentialsArn;
    public ConnectorProfile withCredentialsArn(String credentialsArn) {
        this.credentialsArn = credentialsArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdatedAt")
    public OffsetDateTime lastUpdatedAt;
    public ConnectorProfile withLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateConnectionProvisioningState")
    public PrivateConnectionProvisioningState privateConnectionProvisioningState;
    public ConnectorProfile withPrivateConnectionProvisioningState(PrivateConnectionProvisioningState privateConnectionProvisioningState) {
        this.privateConnectionProvisioningState = privateConnectionProvisioningState;
        return this;
    }
    
}
