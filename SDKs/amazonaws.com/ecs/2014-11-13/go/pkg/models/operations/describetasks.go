// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeTasksXAmzTargetEnum
type DescribeTasksXAmzTargetEnum string

const (
	DescribeTasksXAmzTargetEnumAmazonEc2ContainerServiceV20141113DescribeTasks DescribeTasksXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.DescribeTasks"
)

func (e DescribeTasksXAmzTargetEnum) ToPointer() *DescribeTasksXAmzTargetEnum {
	return &e
}

func (e *DescribeTasksXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerServiceV20141113.DescribeTasks":
		*e = DescribeTasksXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTasksXAmzTargetEnum: %v", v)
	}
}

type DescribeTasksRequest struct {
	DescribeTasksRequest shared.DescribeTasksRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           DescribeTasksXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeTasksResponse struct {
	// ClientException
	ClientException interface{}
	// ClusterNotFoundException
	ClusterNotFoundException interface{}
	ContentType              string
	// Success
	DescribeTasksResponse *shared.DescribeTasksResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
}
