/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetricEnum } from "./metricenum";
import { MetricNamespaceEnum } from "./metricnamespaceenum";
import { Expose, Transform } from "class-transformer";

/**
 * Represents a single metric data query to include in a batch.
 */
export class BatchGetMetricDataQuery extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Dimensions" })
  dimensions?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "EndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Metric" })
  metric: MetricEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Namespace" })
  namespace: MetricNamespaceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate: Date;
}
