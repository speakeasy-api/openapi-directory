/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Limit - You can set limits at the Account, Account Number, or Card level. Limits applied to Accounts will apply to all Account Numbers and Cards in the Account. You can specify any number of Limits and they will all be applied to inbound debits and card authorizations. Volume and count Limits are designed to prevent unauthorized debits.
 */
public class Limit {
    /**
     * The Limit identifier.
     */
    @JsonProperty("id")
    public String id;
    public Limit withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The interval for the metric. This is required if `metric` is `count` or `volume`.
     */
    @JsonProperty("interval")
    public LimitIntervalEnum interval;
    public Limit withInterval(LimitIntervalEnum interval) {
        this.interval = interval;
        return this;
    }
    
    /**
     * The metric for the Limit.
     */
    @JsonProperty("metric")
    public LimitMetricEnum metric;
    public Limit withMetric(LimitMetricEnum metric) {
        this.metric = metric;
        return this;
    }
    
    /**
     * The identifier of the Account Number, Account, or Card the Limit applies to.
     */
    @JsonProperty("model_id")
    public String modelId;
    public Limit withModelId(String modelId) {
        this.modelId = modelId;
        return this;
    }
    
    /**
     * The type of the model you wish to associate the Limit with.
     */
    @JsonProperty("model_type")
    public LimitModelTypeEnum modelType;
    public Limit withModelType(LimitModelTypeEnum modelType) {
        this.modelType = modelType;
        return this;
    }
    
    /**
     * The current status of the Limit.
     */
    @JsonProperty("status")
    public LimitStatusEnum status;
    public Limit withStatus(LimitStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * A constant representing the object's type. For this resource it will always be `limit`.
     */
    @JsonProperty("type")
    public LimitTypeEnum type;
    public Limit withType(LimitTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The value to evaluate the Limit against.
     */
    @JsonProperty("value")
    public Long value;
    public Limit withValue(Long value) {
        this.value = value;
        return this;
    }
    
}
