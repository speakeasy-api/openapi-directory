<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ResourcePolicySnapshotSchedulePolicyRetentionPolicy - Policy for retention of scheduled snapshots.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ResourcePolicySnapshotSchedulePolicyRetentionPolicy
{
    /**
     * Maximum age of the snapshot that is allowed to be kept.
     * 
     * @var ?int $maxRetentionDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxRetentionDays')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRetentionDays = null;
    
    /**
     * Specifies the behavior to apply to scheduled snapshots when the source disk is deleted.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteEnum $onSourceDiskDelete
     */
	#[\JMS\Serializer\Annotation\SerializedName('onSourceDiskDelete')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourcePolicySnapshotSchedulePolicyRetentionPolicyOnSourceDiskDeleteEnum $onSourceDiskDelete = null;
    
	public function __construct()
	{
		$this->maxRetentionDays = null;
		$this->onSourceDiskDelete = null;
	}
}
