// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EmployeeGenderEnum - The employee’s gender. See Employee Gender
type EmployeeGenderEnum string

const (
	EmployeeGenderEnumN EmployeeGenderEnum = "N"
	EmployeeGenderEnumM EmployeeGenderEnum = "M"
	EmployeeGenderEnumF EmployeeGenderEnum = "F"
	EmployeeGenderEnumI EmployeeGenderEnum = "I"
)

func (e EmployeeGenderEnum) ToPointer() *EmployeeGenderEnum {
	return &e
}

func (e *EmployeeGenderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "N":
		fallthrough
	case "M":
		fallthrough
	case "F":
		fallthrough
	case "I":
		*e = EmployeeGenderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeGenderEnum: %v", v)
	}
}

type EmployeeInput struct {
	BankAccounts []BankAccount `json:"BankAccounts,omitempty"`
	// Employees classification
	Classification *string `json:"Classification,omitempty"`
	// Date of birth of the employee (YYYY-MM-DD)
	DateOfBirth string `json:"DateOfBirth"`
	// The email address for the employee
	Email *string `json:"Email,omitempty"`
	// The Employee Group allows you to report on payroll expenses and liabilities for each group of employees
	EmployeeGroupName *string `json:"EmployeeGroupName,omitempty"`
	// Xero unique identifier for an Employee
	EmployeeID *string `json:"EmployeeID,omitempty"`
	// First name of employee
	FirstName string `json:"FirstName"`
	// The employee’s gender. See Employee Gender
	Gender      *EmployeeGenderEnum `json:"Gender,omitempty"`
	HomeAddress *HomeAddress        `json:"HomeAddress,omitempty"`
	// Authorised to approve other employees' leave requests
	IsAuthorisedToApproveLeave *bool `json:"IsAuthorisedToApproveLeave,omitempty"`
	// Authorised to approve timesheets
	IsAuthorisedToApproveTimesheets *bool `json:"IsAuthorisedToApproveTimesheets,omitempty"`
	// JobTitle of the employee
	JobTitle *string `json:"JobTitle,omitempty"`
	// Last name of employee
	LastName      string         `json:"LastName"`
	LeaveBalances []LeaveBalance `json:"LeaveBalances,omitempty"`
	LeaveLines    []LeaveLine    `json:"LeaveLines,omitempty"`
	// Middle name(s) of the employee
	MiddleNames *string `json:"MiddleNames,omitempty"`
	// Employee mobile number
	Mobile          *string          `json:"Mobile,omitempty"`
	OpeningBalances *OpeningBalances `json:"OpeningBalances,omitempty"`
	// Xero unique identifier for earnings rate
	OrdinaryEarningsRateID *string      `json:"OrdinaryEarningsRateID,omitempty"`
	PayTemplate            *PayTemplate `json:"PayTemplate,omitempty"`
	// Xero unique identifier for payroll calendar for the employee
	PayrollCalendarID *string `json:"PayrollCalendarID,omitempty"`
	// Employee phone number
	Phone *string `json:"Phone,omitempty"`
	// Start date for an employee (YYYY-MM-DD)
	StartDate *string `json:"StartDate,omitempty"`
	// Employee Status Types
	Status           *EmployeeStatusEnum  `json:"Status,omitempty"`
	SuperMemberships []SuperMembership    `json:"SuperMemberships,omitempty"`
	TaxDeclaration   *TaxDeclarationInput `json:"TaxDeclaration,omitempty"`
	// Employee Termination Date (YYYY-MM-DD)
	TerminationDate *string `json:"TerminationDate,omitempty"`
	// Title of the employee
	Title *string `json:"Title,omitempty"`
	// Employee’s twitter name
	TwitterUserName *string `json:"TwitterUserName,omitempty"`
	// Displays array of validation error messages from the API
	ValidationErrors []ValidationError `json:"ValidationErrors,omitempty"`
}

type Employee struct {
	BankAccounts []BankAccount `json:"BankAccounts,omitempty"`
	// Employees classification
	Classification *string `json:"Classification,omitempty"`
	// Date of birth of the employee (YYYY-MM-DD)
	DateOfBirth string `json:"DateOfBirth"`
	// The email address for the employee
	Email *string `json:"Email,omitempty"`
	// The Employee Group allows you to report on payroll expenses and liabilities for each group of employees
	EmployeeGroupName *string `json:"EmployeeGroupName,omitempty"`
	// Xero unique identifier for an Employee
	EmployeeID *string `json:"EmployeeID,omitempty"`
	// First name of employee
	FirstName string `json:"FirstName"`
	// The employee’s gender. See Employee Gender
	Gender      *EmployeeGenderEnum `json:"Gender,omitempty"`
	HomeAddress *HomeAddress        `json:"HomeAddress,omitempty"`
	// Authorised to approve other employees' leave requests
	IsAuthorisedToApproveLeave *bool `json:"IsAuthorisedToApproveLeave,omitempty"`
	// Authorised to approve timesheets
	IsAuthorisedToApproveTimesheets *bool `json:"IsAuthorisedToApproveTimesheets,omitempty"`
	// JobTitle of the employee
	JobTitle *string `json:"JobTitle,omitempty"`
	// Last name of employee
	LastName      string         `json:"LastName"`
	LeaveBalances []LeaveBalance `json:"LeaveBalances,omitempty"`
	LeaveLines    []LeaveLine    `json:"LeaveLines,omitempty"`
	// Middle name(s) of the employee
	MiddleNames *string `json:"MiddleNames,omitempty"`
	// Employee mobile number
	Mobile          *string          `json:"Mobile,omitempty"`
	OpeningBalances *OpeningBalances `json:"OpeningBalances,omitempty"`
	// Xero unique identifier for earnings rate
	OrdinaryEarningsRateID *string      `json:"OrdinaryEarningsRateID,omitempty"`
	PayTemplate            *PayTemplate `json:"PayTemplate,omitempty"`
	// Xero unique identifier for payroll calendar for the employee
	PayrollCalendarID *string `json:"PayrollCalendarID,omitempty"`
	// Employee phone number
	Phone *string `json:"Phone,omitempty"`
	// Start date for an employee (YYYY-MM-DD)
	StartDate *string `json:"StartDate,omitempty"`
	// Employee Status Types
	Status           *EmployeeStatusEnum `json:"Status,omitempty"`
	SuperMemberships []SuperMembership   `json:"SuperMemberships,omitempty"`
	TaxDeclaration   *TaxDeclaration     `json:"TaxDeclaration,omitempty"`
	// Employee Termination Date (YYYY-MM-DD)
	TerminationDate *string `json:"TerminationDate,omitempty"`
	// Title of the employee
	Title *string `json:"Title,omitempty"`
	// Employee’s twitter name
	TwitterUserName *string `json:"TwitterUserName,omitempty"`
	// Last modified timestamp
	UpdatedDateUTC *string `json:"UpdatedDateUTC,omitempty"`
	// Displays array of validation error messages from the API
	ValidationErrors []ValidationError `json:"ValidationErrors,omitempty"`
}
