/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2ByteContentItem } from "./googleprivacydlpv2bytecontentitem";
import { GooglePrivacyDlpV2Table } from "./googleprivacydlpv2table";
import { Expose, Type } from "class-transformer";

export class GooglePrivacyDlpV2ContentItem extends SpeakeasyBase {
  /**
   * Container for bytes to inspect or redact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "byteItem" })
  @Type(() => GooglePrivacyDlpV2ByteContentItem)
  byteItem?: GooglePrivacyDlpV2ByteContentItem;

  /**
   * Structured content to inspect. Up to 50,000 `Value`s per request allowed. See https://cloud.google.com/dlp/docs/inspecting-structured-text#inspecting_a_table to learn more.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "table" })
  @Type(() => GooglePrivacyDlpV2Table)
  table?: GooglePrivacyDlpV2Table;

  /**
   * String data to inspect or redact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
