import { SpeakeasyBase } from "../../../internal/utils";
import { Metadata } from "./metadata";
import { Source } from "./source";
/**
 * `Ruleset` is an immutable copy of `Source` with a globally unique identifier and a creation time.
 */
export declare class Ruleset extends SpeakeasyBase {
    /**
     * Output only. Time the `Ruleset` was created.
     */
    createTime?: string;
    /**
     * Metadata for a Ruleset.
     */
    metadata?: Metadata;
    /**
     * Output only. Name of the `Ruleset`. The ruleset_id is auto generated by the service. Format: `projects/{project_id}/rulesets/{ruleset_id}`
     */
    name?: string;
    /**
     * `Source` is one or more `File` messages comprising a logical set of rules.
     */
    source?: Source;
}
/**
 * `Ruleset` is an immutable copy of `Source` with a globally unique identifier and a creation time.
 */
export declare class RulesetInput extends SpeakeasyBase {
    /**
     * Metadata for a Ruleset.
     */
    metadata?: Metadata;
    /**
     * `Source` is one or more `File` messages comprising a logical set of rules.
     */
    source?: Source;
}
