<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetUnmaskedAddressByVersionRequest
{
    /**
     * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
     * 
     * @var string $accept
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Accept')]
    public string $accept;
    
    /**
     * Type of the content being sent.
     * 
     * @var string $contentType
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Content-Type')]
    public string $contentType;
    
    /**
     * ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.
     * 
     * @var string $addressId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=addressId')]
    public string $addressId;
    
    /**
     * ID of the version of a given client's address as returned by endpoints that create or update address information in the `version` field.
     * 
     * @var string $addressVersionId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=addressVersionId')]
    public string $addressVersionId;
    
    /**
     * The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.
     * 
     * 
     * 
     * > Currently, there are two possible values for this parameter: `email` and `document`.
     * 
     * @var ?string $alternativeKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alternativeKey')]
    public ?string $alternativeKey = null;
    
    /**
     * ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.
     * 
     * @var string $profileId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=profileId')]
    public string $profileId;
    
    /**
     * Reason for requesting unmasked data.
     * 
     * @var string $reason
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=reason')]
    public string $reason;
    
	public function __construct()
	{
		$this->accept = "";
		$this->contentType = "";
		$this->addressId = "";
		$this->addressVersionId = "";
		$this->alternativeKey = null;
		$this->profileId = "";
		$this->reason = "";
	}
}
