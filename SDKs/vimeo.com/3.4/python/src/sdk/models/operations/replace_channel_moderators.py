"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import legacy_error as shared_legacy_error
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ReplaceChannelModeratorsSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReplaceChannelModeratorsRequestBody:
    
    user_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_uri') }})
    r"""The URI of the user to add as a moderator."""  
    

@dataclasses.dataclass
class ReplaceChannelModeratorsRequest:
    
    channel_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'channel_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the channel."""  
    request_body: ReplaceChannelModeratorsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ReplaceChannelModeratorsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error code 2908: The list contains more than 100 users."""  
    legacy_error: Optional[shared_legacy_error.LegacyError] = dataclasses.field(default=None)
    r"""The authenticated user owns this channel."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    users: Optional[list[shared_user.User]] = dataclasses.field(default=None)
    r"""The moderators were replaced."""  
    