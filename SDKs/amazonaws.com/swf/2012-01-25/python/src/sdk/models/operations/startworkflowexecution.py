"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import run as shared_run
from ..shared import startworkflowexecutioninput as shared_startworkflowexecutioninput
from enum import Enum
from typing import Any, Optional

class StartWorkflowExecutionXAmzTargetEnum(str, Enum):
    SIMPLE_WORKFLOW_SERVICE_START_WORKFLOW_EXECUTION = 'SimpleWorkflowService.StartWorkflowExecution'


@dataclasses.dataclass
class StartWorkflowExecutionRequest:
    
    start_workflow_execution_input: shared_startworkflowexecutioninput.StartWorkflowExecutionInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: StartWorkflowExecutionXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class StartWorkflowExecutionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    default_undefined_fault: Optional[Any] = dataclasses.field(default=None)
    r"""DefaultUndefinedFault"""  
    limit_exceeded_fault: Optional[Any] = dataclasses.field(default=None)
    r"""LimitExceededFault"""  
    operation_not_permitted_fault: Optional[Any] = dataclasses.field(default=None)
    r"""OperationNotPermittedFault"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    run: Optional[shared_run.Run] = dataclasses.field(default=None)
    r"""Success"""  
    type_deprecated_fault: Optional[Any] = dataclasses.field(default=None)
    r"""TypeDeprecatedFault"""  
    unknown_resource_fault: Optional[Any] = dataclasses.field(default=None)
    r"""UnknownResourceFault"""  
    workflow_execution_already_started_fault: Optional[Any] = dataclasses.field(default=None)
    r"""WorkflowExecutionAlreadyStartedFault"""  
    