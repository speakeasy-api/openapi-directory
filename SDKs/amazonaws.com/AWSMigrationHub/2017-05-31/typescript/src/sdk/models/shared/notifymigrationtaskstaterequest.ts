/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Task } from "./task";
import { Expose, Transform, Type } from "class-transformer";

export class NotifyMigrationTaskStateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DryRun" })
  dryRun?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "MigrationTaskName" })
  migrationTaskName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NextUpdateSeconds" })
  nextUpdateSeconds: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ProgressUpdateStream" })
  progressUpdateStream: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Task" })
  @Type(() => Task)
  task: Task;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdateDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateDateTime: Date;
}
