"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Any, Optional

class ConvertRequestBodyValidateEnum(str, Enum):
    ON = 'on'


@dataclasses.dataclass
class ConvertRequestBody:
    
    filename: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'filename' }})
    r"""The file to upload and convert"""  
    source: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'source' }})
    r"""The text of a Swagger 2.0 definition to convert"""  
    validate: Optional[ConvertRequestBodyValidateEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'validate' }})  
    

@dataclasses.dataclass
class ConvertResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    convert_200_application_json_any: Optional[Any] = dataclasses.field(default=None)
    r"""default"""  
    convert_400_application_json_any: Optional[Any] = dataclasses.field(default=None)
    r"""Invalid request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    