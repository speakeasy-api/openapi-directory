"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsec2vpcpeeringconnectionstatusdetails as shared_awsec2vpcpeeringconnectionstatusdetails
from ..shared import awsec2vpcpeeringconnectionvpcinfodetails as shared_awsec2vpcpeeringconnectionvpcinfodetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEc2VpcPeeringConnectionDetails:
    r"""Provides information about a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection."""
    
    accepter_vpc_info: Optional[shared_awsec2vpcpeeringconnectionvpcinfodetails.AwsEc2VpcPeeringConnectionVpcInfoDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccepterVpcInfo'), 'exclude': lambda f: f is None }})  
    expiration_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExpirationTime'), 'exclude': lambda f: f is None }})  
    requester_vpc_info: Optional[shared_awsec2vpcpeeringconnectionvpcinfodetails.AwsEc2VpcPeeringConnectionVpcInfoDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequesterVpcInfo'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_awsec2vpcpeeringconnectionstatusdetails.AwsEc2VpcPeeringConnectionStatusDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    vpc_peering_connection_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcPeeringConnectionId'), 'exclude': lambda f: f is None }})  
    