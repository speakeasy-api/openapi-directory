/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContactInformation } from "./contactinformation";
import { DealServingMetadata } from "./dealservingmetadata";
import { DealTerms } from "./dealterms";
import { DeliveryControl } from "./deliverycontrol";
import { PrivateData } from "./privatedata";
import { SharedTargeting } from "./sharedtargeting";
import { Expose, Type } from "class-transformer";

/**
 * A proposal can contain multiple deals. A deal contains the terms and targeting information that is used for serving.
 */
export class MarketplaceDeal extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "buyerPrivateData" })
  @Type(() => PrivateData)
  buyerPrivateData?: PrivateData;

  /**
   * The time (ms since epoch) of the deal creation. (readonly)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTimeMs" })
  creationTimeMs?: string;

  /**
   * Specifies the creative pre-approval policy (buyer-readonly)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creativePreApprovalPolicy" })
  creativePreApprovalPolicy?: string;

  /**
   * Specifies whether the creative is safeFrame compatible (buyer-readonly)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creativeSafeFrameCompatibility" })
  creativeSafeFrameCompatibility?: string;

  /**
   * A unique deal-id for the deal (readonly).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dealId" })
  dealId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dealServingMetadata" })
  @Type(() => DealServingMetadata)
  dealServingMetadata?: DealServingMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "deliveryControl" })
  @Type(() => DeliveryControl)
  deliveryControl?: DeliveryControl;

  /**
   * The external deal id assigned to this deal once the deal is finalized. This is the deal-id that shows up in serving/reporting etc. (readonly)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalDealId" })
  externalDealId?: string;

  /**
   * Proposed flight end time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flightEndTimeMs" })
  flightEndTimeMs?: string;

  /**
   * Proposed flight start time of the deal (ms since epoch) This will generally be stored in a granularity of a second. (updatable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flightStartTimeMs" })
  flightStartTimeMs?: string;

  /**
   * Description for the deal terms. (buyer-readonly)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inventoryDescription" })
  inventoryDescription?: string;

  /**
   * Indicates whether the current deal is a RFP template. RFP template is created by buyer and not based on seller created products.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isRfpTemplate" })
  isRfpTemplate?: boolean;

  /**
   * True, if the buyside inventory setup is complete for this deal. (readonly, except via OrderSetupCompleted action)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSetupComplete" })
  isSetupComplete?: boolean;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#marketplaceDeal".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The time (ms since epoch) when the deal was last updated. (readonly)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTimeMs" })
  lastUpdateTimeMs?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "makegoodRequestedReason" })
  makegoodRequestedReason?: string;

  /**
   * The name of the deal. (updatable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The product-id from which this deal was created. (readonly, except on create)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * The revision number of the product that the deal was created from (readonly, except on create)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productRevisionNumber" })
  productRevisionNumber?: string;

  /**
   * Specifies the creative source for programmatic deals, PUBLISHER means creative is provided by seller and ADVERTISR means creative is provided by buyer. (buyer-readonly)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "programmaticCreativeSource" })
  programmaticCreativeSource?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "proposalId" })
  proposalId?: string;

  /**
   * Optional Seller contact information for the deal (buyer-readonly)
   */
  @SpeakeasyMetadata({ elemType: ContactInformation })
  @Expose({ name: "sellerContacts" })
  @Type(() => ContactInformation)
  sellerContacts?: ContactInformation[];

  /**
   * The shared targeting visible to buyers and sellers. Each shared targeting entity is AND'd together. (updatable)
   */
  @SpeakeasyMetadata({ elemType: SharedTargeting })
  @Expose({ name: "sharedTargetings" })
  @Type(() => SharedTargeting)
  sharedTargetings?: SharedTargeting[];

  /**
   * The syndication product associated with the deal. (readonly, except on create)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syndicationProduct" })
  syndicationProduct?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "terms" })
  @Type(() => DealTerms)
  terms?: DealTerms;

  @SpeakeasyMetadata()
  @Expose({ name: "webPropertyCode" })
  webPropertyCode?: string;
}
