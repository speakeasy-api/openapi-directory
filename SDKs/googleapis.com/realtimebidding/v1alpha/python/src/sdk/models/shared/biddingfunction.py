"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BiddingFunctionStateEnum(str, Enum):
    r"""Output only. The state of the bidding function."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    ARCHIVED = 'ARCHIVED'

class BiddingFunctionTypeEnum(str, Enum):
    r"""The type of the bidding function to be created."""
    FUNCTION_TYPE_UNSPECIFIED = 'FUNCTION_TYPE_UNSPECIFIED'
    TURTLEDOVE_SIMULATION_BIDDING_FUNCTION = 'TURTLEDOVE_SIMULATION_BIDDING_FUNCTION'
    FLEDGE_BIDDING_FUNCTION = 'FLEDGE_BIDDING_FUNCTION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BiddingFunction:
    r"""The bidding function to be executed as part of the TURTLEDOVE simulation experiment bidding flow."""
    
    bidding_function: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('biddingFunction'), 'exclude': lambda f: f is None }})
    r"""The raw Javascript source code of the bidding function."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the bidding function that must follow the pattern: `bidders/{bidder_account_id}/biddingFunctions/{bidding_function_name}`."""  
    state: Optional[BiddingFunctionStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The state of the bidding function."""  
    type: Optional[BiddingFunctionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the bidding function to be created."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BiddingFunctionInput:
    r"""The bidding function to be executed as part of the TURTLEDOVE simulation experiment bidding flow."""
    
    bidding_function: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('biddingFunction'), 'exclude': lambda f: f is None }})
    r"""The raw Javascript source code of the bidding function."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the bidding function that must follow the pattern: `bidders/{bidder_account_id}/biddingFunctions/{bidding_function_name}`."""  
    type: Optional[BiddingFunctionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the bidding function to be created."""  
    