/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateSubscriptionNewSubscriptionOwnerAccount - Information about a new account that will own the subscription. Only available if you have enabled the Owner Transfer feature.
 * 
 * **Note:** The Owner Transfer feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
 * 
 * If you do not set this field or the `subscriptionOwnerAccountNumber` field, the account that owns the order will also own the subscription. Zuora will return an error if you set this field and the `subscriptionOwnerAccountNumber` field.
 * 
 */
public class CreateSubscriptionNewSubscriptionOwnerAccount {
    /**
     * Account number. For example, A00000001.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public CreateSubscriptionNewSubscriptionOwnerAccount withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * Specifies whether future payments are automatically billed when they are due.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPay")
    public Boolean autoPay;
    public CreateSubscriptionNewSubscriptionOwnerAccount withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * Name of the billing batch that the account belongs to. For example, Batch1.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batch")
    public String batch;
    public CreateSubscriptionNewSubscriptionOwnerAccount withBatch(String batch) {
        this.batch = batch;
        return this;
    }
    
    /**
     * Day of the month that the account prefers billing periods to begin on. If set to 0, the bill cycle day will be set as "AutoSet".
     * 
     */
    @JsonProperty("billCycleDay")
    public Long billCycleDay;
    public CreateSubscriptionNewSubscriptionOwnerAccount withBillCycleDay(Long billCycleDay) {
        this.billCycleDay = billCycleDay;
        return this;
    }
    
    @JsonProperty("billToContact")
    public BillToContact billToContact;
    public CreateSubscriptionNewSubscriptionOwnerAccount withBillToContact(BillToContact billToContact) {
        this.billToContact = billToContact;
        return this;
    }
    
    /**
     * Internal identifier of the communication profile that Zuora uses when sending notifications to the account's contacts.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("communicationProfileId")
    public String communicationProfileId;
    public CreateSubscriptionNewSubscriptionOwnerAccount withCommunicationProfileId(String communicationProfileId) {
        this.communicationProfileId = communicationProfileId;
        return this;
    }
    
    /**
     * Default payment method associated with an account. Only credit card payment methods are supported.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditCard")
    public CreditCard creditCard;
    public CreateSubscriptionNewSubscriptionOwnerAccount withCreditCard(CreditCard creditCard) {
        this.creditCard = creditCard;
        return this;
    }
    
    /**
     * External identifier of the account in a CRM system.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("crmId")
    public String crmId;
    public CreateSubscriptionNewSubscriptionOwnerAccount withCrmId(String crmId) {
        this.crmId = crmId;
        return this;
    }
    
    /**
     * ISO 3-letter currency code (uppercase). For example, USD.
     * 
     */
    @JsonProperty("currency")
    public String currency;
    public CreateSubscriptionNewSubscriptionOwnerAccount withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Container for custom fields of an Account object.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;
    public CreateSubscriptionNewSubscriptionOwnerAccount withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * The ID of the payment method associated with this account. The payment method specified for this field will be set as the default payment method of the account.
     * 
     * If the `autoPay` field is set to `true`, you must provide the credit card payment method ID for either this field or the `creditCard` field,
     * but not both.        
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hpmCreditCardPaymentMethodId")
    public String hpmCreditCardPaymentMethodId;
    public CreateSubscriptionNewSubscriptionOwnerAccount withHpmCreditCardPaymentMethodId(String hpmCreditCardPaymentMethodId) {
        this.hpmCreditCardPaymentMethodId = hpmCreditCardPaymentMethodId;
        return this;
    }
    
    /**
     * Specifies whether to turn on the invoice delivery method 'Email' for the new account. 
     * Values are: 
     * 
     * * `true` (default). Turn on the invoice delivery method 'Email' for the new account.
     * * `false`. Turn off the invoice delivery method 'Email' for the new account.         
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceDeliveryPrefsEmail")
    public Boolean invoiceDeliveryPrefsEmail;
    public CreateSubscriptionNewSubscriptionOwnerAccount withInvoiceDeliveryPrefsEmail(Boolean invoiceDeliveryPrefsEmail) {
        this.invoiceDeliveryPrefsEmail = invoiceDeliveryPrefsEmail;
        return this;
    }
    
    /**
     * Specifies whether to turn on the invoice delivery method 'Print' for the new account.
     * Values are: 
     * 
     * * `true`. Turn on the invoice delivery method 'Print' for the new account.
     * * `false` (default). Turn off the invoice delivery method 'Print' for the new account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceDeliveryPrefsPrint")
    public Boolean invoiceDeliveryPrefsPrint;
    public CreateSubscriptionNewSubscriptionOwnerAccount withInvoiceDeliveryPrefsPrint(Boolean invoiceDeliveryPrefsPrint) {
        this.invoiceDeliveryPrefsPrint = invoiceDeliveryPrefsPrint;
        return this;
    }
    
    /**
     * Internal identifier of the invoice template that Zuora uses when generating invoices for the account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceTemplateId")
    public String invoiceTemplateId;
    public CreateSubscriptionNewSubscriptionOwnerAccount withInvoiceTemplateId(String invoiceTemplateId) {
        this.invoiceTemplateId = invoiceTemplateId;
        return this;
    }
    
    /**
     * Account name.
     * 
     */
    @JsonProperty("name")
    public String name;
    public CreateSubscriptionNewSubscriptionOwnerAccount withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Notes about the account. These notes are only visible to Zuora users.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public CreateSubscriptionNewSubscriptionOwnerAccount withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Identifier of the parent customer account for this Account object. Use this field if you have customer hierarchy enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentId")
    public String parentId;
    public CreateSubscriptionNewSubscriptionOwnerAccount withParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * The payment gateway that Zuora uses when processing electronic payments and refunds for the account. If you do not specify this field or if the value of this field is null, Zuora uses your default payment gateway.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentGateway")
    public String paymentGateway;
    public CreateSubscriptionNewSubscriptionOwnerAccount withPaymentGateway(String paymentGateway) {
        this.paymentGateway = paymentGateway;
        return this;
    }
    
    /**
     * Payment method to create for this new account. Supports all the payment methods that are supported in the "Create payment method" operation. See for more information about how to use this field in [Create payment method](https://www.zuora.com/developer/api-reference/#operation/POST_PaymentMethods).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethod")
    public PaymentMethod paymentMethod;
    public CreateSubscriptionNewSubscriptionOwnerAccount withPaymentMethod(PaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * Name of the payment term associated with the account. For example, "Net 30". The payment term determines the due dates of invoices.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentTerm")
    public String paymentTerm;
    public CreateSubscriptionNewSubscriptionOwnerAccount withPaymentTerm(String paymentTerm) {
        this.paymentTerm = paymentTerm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("soldToContact")
    public SoldToContact soldToContact;
    public CreateSubscriptionNewSubscriptionOwnerAccount withSoldToContact(SoldToContact soldToContact) {
        this.soldToContact = soldToContact;
        return this;
    }
    
    /**
     * Information about the tax exempt status of a customer account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxInfo")
    public TaxInfo taxInfo;
    public CreateSubscriptionNewSubscriptionOwnerAccount withTaxInfo(TaxInfo taxInfo) {
        this.taxInfo = taxInfo;
        return this;
    }
    
}
