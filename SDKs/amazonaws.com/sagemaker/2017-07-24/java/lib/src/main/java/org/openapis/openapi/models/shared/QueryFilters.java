/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * QueryFilters - A set of filters to narrow the set of lineage entities connected to the &lt;code&gt;StartArn&lt;/code&gt;(s) returned by the &lt;code&gt;QueryLineage&lt;/code&gt; API action.
 */
public class QueryFilters {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAfter")
    public OffsetDateTime createdAfter;
    public QueryFilters withCreatedAfter(OffsetDateTime createdAfter) {
        this.createdAfter = createdAfter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedBefore")
    public OffsetDateTime createdBefore;
    public QueryFilters withCreatedBefore(OffsetDateTime createdBefore) {
        this.createdBefore = createdBefore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LineageTypes")
    public LineageTypeEnum[] lineageTypes;
    public QueryFilters withLineageTypes(LineageTypeEnum[] lineageTypes) {
        this.lineageTypes = lineageTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ModifiedAfter")
    public OffsetDateTime modifiedAfter;
    public QueryFilters withModifiedAfter(OffsetDateTime modifiedAfter) {
        this.modifiedAfter = modifiedAfter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ModifiedBefore")
    public OffsetDateTime modifiedBefore;
    public QueryFilters withModifiedBefore(OffsetDateTime modifiedBefore) {
        this.modifiedBefore = modifiedBefore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Properties")
    public java.util.Map<String, String> properties;
    public QueryFilters withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Types")
    public String[] types;
    public QueryFilters withTypes(String[] types) {
        this.types = types;
        return this;
    }
    
}
