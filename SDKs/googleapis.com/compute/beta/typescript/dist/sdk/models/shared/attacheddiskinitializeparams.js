"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttachedDiskInitializeParams = exports.AttachedDiskInitializeParamsOnUpdateActionEnum = exports.AttachedDiskInitializeParamsArchitectureEnum = void 0;
var utils_1 = require("../../../internal/utils");
var customerencryptionkey_1 = require("./customerencryptionkey");
var guestosfeature_1 = require("./guestosfeature");
var class_transformer_1 = require("class-transformer");
/**
 * The architecture of the attached disk. Valid values are arm64 or x86_64.
 */
var AttachedDiskInitializeParamsArchitectureEnum;
(function (AttachedDiskInitializeParamsArchitectureEnum) {
    AttachedDiskInitializeParamsArchitectureEnum["ArchitectureUnspecified"] = "ARCHITECTURE_UNSPECIFIED";
    AttachedDiskInitializeParamsArchitectureEnum["Arm64"] = "ARM64";
    AttachedDiskInitializeParamsArchitectureEnum["X8664"] = "X86_64";
})(AttachedDiskInitializeParamsArchitectureEnum = exports.AttachedDiskInitializeParamsArchitectureEnum || (exports.AttachedDiskInitializeParamsArchitectureEnum = {}));
/**
 * Specifies which action to take on instance update with this disk. Default is to use the existing disk.
 */
var AttachedDiskInitializeParamsOnUpdateActionEnum;
(function (AttachedDiskInitializeParamsOnUpdateActionEnum) {
    AttachedDiskInitializeParamsOnUpdateActionEnum["RecreateDisk"] = "RECREATE_DISK";
    AttachedDiskInitializeParamsOnUpdateActionEnum["RecreateDiskIfSourceChanged"] = "RECREATE_DISK_IF_SOURCE_CHANGED";
    AttachedDiskInitializeParamsOnUpdateActionEnum["UseExistingDisk"] = "USE_EXISTING_DISK";
})(AttachedDiskInitializeParamsOnUpdateActionEnum = exports.AttachedDiskInitializeParamsOnUpdateActionEnum || (exports.AttachedDiskInitializeParamsOnUpdateActionEnum = {}));
/**
 * [Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This field is persisted and returned for instanceTemplate and not returned in the context of instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
 */
var AttachedDiskInitializeParams = /** @class */ (function (_super) {
    __extends(AttachedDiskInitializeParams, _super);
    function AttachedDiskInitializeParams() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "architecture" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "architecture", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskName" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "diskName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskSizeGb" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "diskSizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskType" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "diskType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: guestosfeature_1.GuestOsFeature }),
        (0, class_transformer_1.Expose)({ name: "guestOsFeatures" }),
        (0, class_transformer_1.Type)(function () { return guestosfeature_1.GuestOsFeature; }),
        __metadata("design:type", Array)
    ], AttachedDiskInitializeParams.prototype, "guestOsFeatures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], AttachedDiskInitializeParams.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "licenses" }),
        __metadata("design:type", Array)
    ], AttachedDiskInitializeParams.prototype, "licenses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "multiWriter" }),
        __metadata("design:type", Boolean)
    ], AttachedDiskInitializeParams.prototype, "multiWriter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "onUpdateAction" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "onUpdateAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisionedIops" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "provisionedIops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisionedThroughput" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "provisionedThroughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceManagerTags" }),
        __metadata("design:type", Object)
    ], AttachedDiskInitializeParams.prototype, "resourceManagerTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourcePolicies" }),
        __metadata("design:type", Array)
    ], AttachedDiskInitializeParams.prototype, "resourcePolicies", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceImage" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "sourceImage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceImageEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], AttachedDiskInitializeParams.prototype, "sourceImageEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceSnapshot" }),
        __metadata("design:type", String)
    ], AttachedDiskInitializeParams.prototype, "sourceSnapshot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceSnapshotEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], AttachedDiskInitializeParams.prototype, "sourceSnapshotEncryptionKey", void 0);
    return AttachedDiskInitializeParams;
}(utils_1.SpeakeasyBase));
exports.AttachedDiskInitializeParams = AttachedDiskInitializeParams;
