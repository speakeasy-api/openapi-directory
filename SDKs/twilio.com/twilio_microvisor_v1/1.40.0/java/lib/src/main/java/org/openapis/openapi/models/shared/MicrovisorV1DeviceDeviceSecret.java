/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MicrovisorV1DeviceDeviceSecret - Created
 */
public class MicrovisorV1DeviceDeviceSecret {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_rotated")
    public OffsetDateTime dateRotated;
    public MicrovisorV1DeviceDeviceSecret withDateRotated(OffsetDateTime dateRotated) {
        this.dateRotated = dateRotated;
        return this;
    }
    
    /**
     * A 34-character string that uniquely identifies the parent Device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("device_sid")
    public String deviceSid;
    public MicrovisorV1DeviceDeviceSecret withDeviceSid(String deviceSid) {
        this.deviceSid = deviceSid;
        return this;
    }
    
    /**
     * The secret key; up to 100 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;
    public MicrovisorV1DeviceDeviceSecret withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The absolute URL of the Secret.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public MicrovisorV1DeviceDeviceSecret withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
