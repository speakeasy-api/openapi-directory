"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class CreateNewCardNewCardAddressTypeEnum(str, Enum):
    HOME = 'HOME'
    BUSINESS = 'BUSINESS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateNewCardNewCard:
    r"""Details of the new card"""
    
    accept_fees_and_charges: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptFeesAndCharges'), 'exclude': lambda f: f is None }})  
    address_type: Optional[CreateNewCardNewCardAddressTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressType'), 'exclude': lambda f: f is None }})  
    card_pin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardPin'), 'exclude': lambda f: f is None }})  
    eur_ican: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eurIcan'), 'exclude': lambda f: f is None }})  
    gbp_ican: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gbpIcan'), 'exclude': lambda f: f is None }})  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId'), 'exclude': lambda f: f is None }})  
    
class CreateNewCardNewCardResponseStatusEnum(str, Enum):
    CREATED_ACTIVE = 'CREATED_ACTIVE'
    CREATED_INACTIVE = 'CREATED_INACTIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateNewCardNewCardResponse:
    r"""Card created successfully"""
    
    card_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardId'), 'exclude': lambda f: f is None }})  
    expiry_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiryDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    masked_pan: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maskedPan'), 'exclude': lambda f: f is None }})  
    status: Optional[CreateNewCardNewCardResponseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class CreateNewCardResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    new_card_response: Optional[CreateNewCardNewCardResponse] = dataclasses.field(default=None)
    r"""Card created successfully"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    