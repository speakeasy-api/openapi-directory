// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteEventSubscriptionActionEnum
type GETDeleteEventSubscriptionActionEnum string

const (
	GETDeleteEventSubscriptionActionEnumDeleteEventSubscription GETDeleteEventSubscriptionActionEnum = "DeleteEventSubscription"
)

func (e GETDeleteEventSubscriptionActionEnum) ToPointer() *GETDeleteEventSubscriptionActionEnum {
	return &e
}

func (e *GETDeleteEventSubscriptionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteEventSubscription":
		*e = GETDeleteEventSubscriptionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteEventSubscriptionActionEnum: %v", v)
	}
}

// GETDeleteEventSubscriptionVersionEnum
type GETDeleteEventSubscriptionVersionEnum string

const (
	GETDeleteEventSubscriptionVersionEnumTwoThousandAndFourteen1031 GETDeleteEventSubscriptionVersionEnum = "2014-10-31"
)

func (e GETDeleteEventSubscriptionVersionEnum) ToPointer() *GETDeleteEventSubscriptionVersionEnum {
	return &e
}

func (e *GETDeleteEventSubscriptionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETDeleteEventSubscriptionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteEventSubscriptionVersionEnum: %v", v)
	}
}

type GETDeleteEventSubscriptionRequest struct {
	Action GETDeleteEventSubscriptionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the RDS event notification subscription you want to delete.
	SubscriptionName  string                                `queryParam:"style=form,explode=true,name=SubscriptionName"`
	Version           GETDeleteEventSubscriptionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteEventSubscriptionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
