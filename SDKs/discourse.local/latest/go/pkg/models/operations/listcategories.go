// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// ListCategoriesIncludeSubcategoriesEnum
type ListCategoriesIncludeSubcategoriesEnum string

const (
	ListCategoriesIncludeSubcategoriesEnumTrue ListCategoriesIncludeSubcategoriesEnum = "true"
)

func (e *ListCategoriesIncludeSubcategoriesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "true":
		*e = ListCategoriesIncludeSubcategoriesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCategoriesIncludeSubcategoriesEnum: %s", s)
	}
}

type ListCategoriesRequest struct {
	IncludeSubcategories *ListCategoriesIncludeSubcategoriesEnum `queryParam:"style=form,explode=true,name=include_subcategories"`
}

type ListCategories200ApplicationJSONCategoryListCategories struct {
	CanEdit                      bool          `json:"can_edit"`
	Color                        string        `json:"color"`
	DefaultListFilter            string        `json:"default_list_filter"`
	DefaultTopPeriod             string        `json:"default_top_period"`
	DefaultView                  string        `json:"default_view"`
	Description                  string        `json:"description"`
	DescriptionExcerpt           string        `json:"description_excerpt"`
	DescriptionText              string        `json:"description_text"`
	HasChildren                  bool          `json:"has_children"`
	ID                           int64         `json:"id"`
	IsUncategorized              *bool         `json:"is_uncategorized,omitempty"`
	MinimumRequiredTags          int64         `json:"minimum_required_tags"`
	Name                         string        `json:"name"`
	NavigateToFirstPostAfterRead bool          `json:"navigate_to_first_post_after_read"`
	NotificationLevel            int64         `json:"notification_level"`
	NumFeaturedTopics            int64         `json:"num_featured_topics"`
	Permission                   int64         `json:"permission"`
	Position                     int64         `json:"position"`
	PostCount                    int64         `json:"post_count"`
	ReadRestricted               bool          `json:"read_restricted"`
	ShowSubcategoryList          bool          `json:"show_subcategory_list"`
	Slug                         string        `json:"slug"`
	SortAscending                string        `json:"sort_ascending"`
	SortOrder                    string        `json:"sort_order"`
	SubcategoryIds               []interface{} `json:"subcategory_ids"`
	SubcategoryList              []interface{} `json:"subcategory_list,omitempty"`
	SubcategoryListStyle         string        `json:"subcategory_list_style"`
	TextColor                    string        `json:"text_color"`
	TopicCount                   int64         `json:"topic_count"`
	TopicTemplate                string        `json:"topic_template"`
	TopicURL                     string        `json:"topic_url"`
	TopicsAllTime                int64         `json:"topics_all_time"`
	TopicsDay                    int64         `json:"topics_day"`
	TopicsMonth                  int64         `json:"topics_month"`
	TopicsWeek                   int64         `json:"topics_week"`
	TopicsYear                   int64         `json:"topics_year"`
	UploadedBackground           string        `json:"uploaded_background"`
	UploadedLogo                 string        `json:"uploaded_logo"`
	UploadedLogoDark             string        `json:"uploaded_logo_dark"`
}

type ListCategories200ApplicationJSONCategoryList struct {
	CanCreateCategory bool                                                     `json:"can_create_category"`
	CanCreateTopic    bool                                                     `json:"can_create_topic"`
	Categories        []ListCategories200ApplicationJSONCategoryListCategories `json:"categories"`
}

// ListCategories200ApplicationJSON - success response
type ListCategories200ApplicationJSON struct {
	CategoryList ListCategories200ApplicationJSONCategoryList `json:"category_list"`
}

type ListCategoriesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success response
	ListCategories200ApplicationJSONObject *ListCategories200ApplicationJSON
}
