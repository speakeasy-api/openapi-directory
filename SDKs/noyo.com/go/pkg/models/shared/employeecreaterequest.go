// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// EmployeeCreateRequestEmploymentEmploymentDates - Employee employment dates
type EmployeeCreateRequestEmploymentEmploymentDates struct {
	// ISO-8601 date string for start date as a full time employee with the group (if applicable)
	FullTimeStart *string `json:"full_time_start,omitempty"`
	// ISO-8601 date string for the hire date of the employee
	HireDate *types.Date `json:"hire_date,omitempty"`
	// ISO-8601 date string for the rehire date of the employee (if applicable)
	Rehire *string `json:"rehire,omitempty"`
	// ISO-8601 date string for the retirement date of the employee (if applicable)
	Retirement *string `json:"retirement,omitempty"`
	// ISO-8601 date string for the termination date of the employee (if applicable)
	Terminated *string `json:"terminated,omitempty"`
}

// EmployeeCreateRequestEmploymentEmploymentStatusEnum - Employee employment status at the company
type EmployeeCreateRequestEmploymentEmploymentStatusEnum string

const (
	EmployeeCreateRequestEmploymentEmploymentStatusEnumContract   EmployeeCreateRequestEmploymentEmploymentStatusEnum = "contract"
	EmployeeCreateRequestEmploymentEmploymentStatusEnumDisabled   EmployeeCreateRequestEmploymentEmploymentStatusEnum = "disabled"
	EmployeeCreateRequestEmploymentEmploymentStatusEnumFullTime   EmployeeCreateRequestEmploymentEmploymentStatusEnum = "full-time"
	EmployeeCreateRequestEmploymentEmploymentStatusEnumPartTime   EmployeeCreateRequestEmploymentEmploymentStatusEnum = "part-time"
	EmployeeCreateRequestEmploymentEmploymentStatusEnumRetired    EmployeeCreateRequestEmploymentEmploymentStatusEnum = "retired"
	EmployeeCreateRequestEmploymentEmploymentStatusEnumTerminated EmployeeCreateRequestEmploymentEmploymentStatusEnum = "terminated"
)

func (e *EmployeeCreateRequestEmploymentEmploymentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "contract":
		fallthrough
	case "disabled":
		fallthrough
	case "full-time":
		fallthrough
	case "part-time":
		fallthrough
	case "retired":
		fallthrough
	case "terminated":
		*e = EmployeeCreateRequestEmploymentEmploymentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestEmploymentEmploymentStatusEnum: %s", s)
	}
}

// EmployeeCreateRequestEmploymentSalaryTypeEnum - Type of salary earned by the employee
type EmployeeCreateRequestEmploymentSalaryTypeEnum string

const (
	EmployeeCreateRequestEmploymentSalaryTypeEnumHourly EmployeeCreateRequestEmploymentSalaryTypeEnum = "hourly"
	EmployeeCreateRequestEmploymentSalaryTypeEnumSalary EmployeeCreateRequestEmploymentSalaryTypeEnum = "salary"
)

func (e *EmployeeCreateRequestEmploymentSalaryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "hourly":
		fallthrough
	case "salary":
		*e = EmployeeCreateRequestEmploymentSalaryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestEmploymentSalaryTypeEnum: %s", s)
	}
}

// EmployeeCreateRequestEmploymentSalaryUnitEnum - Unit of salary earned by the employee
type EmployeeCreateRequestEmploymentSalaryUnitEnum string

const (
	EmployeeCreateRequestEmploymentSalaryUnitEnumAnnual      EmployeeCreateRequestEmploymentSalaryUnitEnum = "annual"
	EmployeeCreateRequestEmploymentSalaryUnitEnumHour        EmployeeCreateRequestEmploymentSalaryUnitEnum = "hour"
	EmployeeCreateRequestEmploymentSalaryUnitEnumMonth       EmployeeCreateRequestEmploymentSalaryUnitEnum = "month"
	EmployeeCreateRequestEmploymentSalaryUnitEnumSemiMonthly EmployeeCreateRequestEmploymentSalaryUnitEnum = "semi-monthly"
	EmployeeCreateRequestEmploymentSalaryUnitEnumWeek        EmployeeCreateRequestEmploymentSalaryUnitEnum = "week"
)

func (e *EmployeeCreateRequestEmploymentSalaryUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "annual":
		fallthrough
	case "hour":
		fallthrough
	case "month":
		fallthrough
	case "semi-monthly":
		fallthrough
	case "week":
		*e = EmployeeCreateRequestEmploymentSalaryUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestEmploymentSalaryUnitEnum: %s", s)
	}
}

// EmployeeCreateRequestEmploymentSalary - Employee salary information
type EmployeeCreateRequestEmploymentSalary struct {
	// Amount of salary earned by the employee in US dollars
	Amount *float64 `json:"amount,omitempty"`
	// Type of salary earned by the employee
	Type *EmployeeCreateRequestEmploymentSalaryTypeEnum `json:"type,omitempty"`
	// Unit of salary earned by the employee
	Unit *EmployeeCreateRequestEmploymentSalaryUnitEnum `json:"unit,omitempty"`
}

// EmployeeCreateRequestEmployment - Employment information for the employee
type EmployeeCreateRequestEmployment struct {
	// Employee employment dates
	EmploymentDates *EmployeeCreateRequestEmploymentEmploymentDates `json:"employment_dates,omitempty"`
	// Employee employment status at the company
	EmploymentStatus *EmployeeCreateRequestEmploymentEmploymentStatusEnum `json:"employment_status,omitempty"`
	// Number of hours worked per week by the employee
	HoursWorked *int `json:"hours_worked,omitempty"`
	// Employee occupation or job title
	Occupation *string `json:"occupation,omitempty"`
	// Employee salary information
	Salary *EmployeeCreateRequestEmploymentSalary `json:"salary,omitempty"`
}

// EmployeeCreateRequestPersonContactEmailAddressTypeEnum - Type of email address
type EmployeeCreateRequestPersonContactEmailAddressTypeEnum string

const (
	EmployeeCreateRequestPersonContactEmailAddressTypeEnumHome EmployeeCreateRequestPersonContactEmailAddressTypeEnum = "home"
	EmployeeCreateRequestPersonContactEmailAddressTypeEnumWork EmployeeCreateRequestPersonContactEmailAddressTypeEnum = "work"
)

func (e *EmployeeCreateRequestPersonContactEmailAddressTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "home":
		fallthrough
	case "work":
		*e = EmployeeCreateRequestPersonContactEmailAddressTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonContactEmailAddressTypeEnum: %s", s)
	}
}

// EmployeeCreateRequestPersonContactPreferredMethodEnum - Preferred method of contact for the person
type EmployeeCreateRequestPersonContactPreferredMethodEnum string

const (
	EmployeeCreateRequestPersonContactPreferredMethodEnumEmail     EmployeeCreateRequestPersonContactPreferredMethodEnum = "email"
	EmployeeCreateRequestPersonContactPreferredMethodEnumHomePhone EmployeeCreateRequestPersonContactPreferredMethodEnum = "home-phone"
	EmployeeCreateRequestPersonContactPreferredMethodEnumMail      EmployeeCreateRequestPersonContactPreferredMethodEnum = "mail"
	EmployeeCreateRequestPersonContactPreferredMethodEnumOther     EmployeeCreateRequestPersonContactPreferredMethodEnum = "other"
	EmployeeCreateRequestPersonContactPreferredMethodEnumWorkPhone EmployeeCreateRequestPersonContactPreferredMethodEnum = "work-phone"
)

func (e *EmployeeCreateRequestPersonContactPreferredMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "email":
		fallthrough
	case "home-phone":
		fallthrough
	case "mail":
		fallthrough
	case "other":
		fallthrough
	case "work-phone":
		*e = EmployeeCreateRequestPersonContactPreferredMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonContactPreferredMethodEnum: %s", s)
	}
}

// EmployeeCreateRequestPersonContact - Contact information for the person
type EmployeeCreateRequestPersonContact struct {
	// Email address of the person
	EmailAddress *string `json:"email_address,omitempty"`
	// Type of email address
	EmailAddressType *EmployeeCreateRequestPersonContactEmailAddressTypeEnum `json:"email_address_type,omitempty"`
	// Home phone number in E.164 format
	HomePhone *string `json:"home_phone,omitempty"`
	// Preferred written or spoken language of the person
	PreferredLanguage *string `json:"preferred_language,omitempty"`
	// Preferred method of contact for the person
	PreferredMethod *EmployeeCreateRequestPersonContactPreferredMethodEnum `json:"preferred_method,omitempty"`
	// True if the person can speak or communicate in English
	SpeaksEnglish *bool `json:"speaks_english,omitempty"`
	// Work phone number in E.164 format
	WorkPhone *string `json:"work_phone,omitempty"`
}

// EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum - Primary state of the federally-recognized American Indian or Alaska Native tribe, if applicable
type EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum string

const (
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumAk EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "AK"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumAl EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "AL"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumAr EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "AR"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumAs EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "AS"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumAz EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "AZ"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumCa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "CA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumCo EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "CO"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumCt EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "CT"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumDc EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "DC"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumDe EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "DE"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumFl EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "FL"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumFm EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "FM"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumGa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "GA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumGu EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "GU"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumHi EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "HI"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumIa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "IA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumID EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "ID"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumIl EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "IL"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumIn EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "IN"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumKs EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "KS"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumKy EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "KY"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumLa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "LA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMd EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MD"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMe EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "ME"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMh EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MH"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMi EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MI"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMn EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MN"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMo EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MO"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMp EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MP"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMs EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MS"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumMt EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "MT"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNc EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "NC"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNd EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "ND"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNe EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "NE"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNh EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "NH"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNj EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "NJ"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNm EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "NM"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNv EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "NV"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumNy EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "NY"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumOh EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "OH"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumOk EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "OK"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumOr EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "OR"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumPa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "PA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumPr EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "PR"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumPw EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "PW"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumRi EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "RI"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumSc EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "SC"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumSd EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "SD"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumTn EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "TN"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumTx EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "TX"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumUm EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "UM"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumUt EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "UT"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumVa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "VA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumVi EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "VI"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumVt EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "VT"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumWa EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "WA"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumWi EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "WI"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumWv EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "WV"
	EmployeeCreateRequestPersonDetailsAmericanIndianStateEnumWy EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum = "WY"
)

func (e *EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AK":
		fallthrough
	case "AL":
		fallthrough
	case "AR":
		fallthrough
	case "AS":
		fallthrough
	case "AZ":
		fallthrough
	case "CA":
		fallthrough
	case "CO":
		fallthrough
	case "CT":
		fallthrough
	case "DC":
		fallthrough
	case "DE":
		fallthrough
	case "FL":
		fallthrough
	case "FM":
		fallthrough
	case "GA":
		fallthrough
	case "GU":
		fallthrough
	case "HI":
		fallthrough
	case "IA":
		fallthrough
	case "ID":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		fallthrough
	case "KS":
		fallthrough
	case "KY":
		fallthrough
	case "LA":
		fallthrough
	case "MA":
		fallthrough
	case "MD":
		fallthrough
	case "ME":
		fallthrough
	case "MH":
		fallthrough
	case "MI":
		fallthrough
	case "MN":
		fallthrough
	case "MO":
		fallthrough
	case "MP":
		fallthrough
	case "MS":
		fallthrough
	case "MT":
		fallthrough
	case "NC":
		fallthrough
	case "ND":
		fallthrough
	case "NE":
		fallthrough
	case "NH":
		fallthrough
	case "NJ":
		fallthrough
	case "NM":
		fallthrough
	case "NV":
		fallthrough
	case "NY":
		fallthrough
	case "OH":
		fallthrough
	case "OK":
		fallthrough
	case "OR":
		fallthrough
	case "PA":
		fallthrough
	case "PR":
		fallthrough
	case "PW":
		fallthrough
	case "RI":
		fallthrough
	case "SC":
		fallthrough
	case "SD":
		fallthrough
	case "TN":
		fallthrough
	case "TX":
		fallthrough
	case "UM":
		fallthrough
	case "UT":
		fallthrough
	case "VA":
		fallthrough
	case "VI":
		fallthrough
	case "VT":
		fallthrough
	case "WA":
		fallthrough
	case "WI":
		fallthrough
	case "WV":
		fallthrough
	case "WY":
		*e = EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum: %s", s)
	}
}

// EmployeeCreateRequestPersonDetailsAmericanIndian - American Indian status details (if applicable)
type EmployeeCreateRequestPersonDetailsAmericanIndian struct {
	// Primary state of the federally-recognized American Indian or Alaska Native tribe, if applicable
	State *EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum `json:"state,omitempty"`
	// Name of the federally-recognized American Indian or Alaska Native tribe, if applicable
	Tribe *string `json:"tribe,omitempty"`
}

// EmployeeCreateRequestPersonDetailsDisability - Disability details (if applicable)
type EmployeeCreateRequestPersonDetailsDisability struct {
	// True if the disability impacts the ability to communicate or read
	Communication *bool `json:"communication,omitempty"`
	// True if the member has a disability
	Disabled *bool `json:"disabled,omitempty"`
	// Description of the disability
	Reason *string `json:"reason,omitempty"`
}

// EmployeeCreateRequestPersonDetailsTobaccoTypesEnum - Type of tobacco use
type EmployeeCreateRequestPersonDetailsTobaccoTypesEnum string

const (
	EmployeeCreateRequestPersonDetailsTobaccoTypesEnumChewingTobacco EmployeeCreateRequestPersonDetailsTobaccoTypesEnum = "chewing-tobacco"
	EmployeeCreateRequestPersonDetailsTobaccoTypesEnumCigarettes     EmployeeCreateRequestPersonDetailsTobaccoTypesEnum = "cigarettes"
	EmployeeCreateRequestPersonDetailsTobaccoTypesEnumPipe           EmployeeCreateRequestPersonDetailsTobaccoTypesEnum = "pipe"
)

func (e *EmployeeCreateRequestPersonDetailsTobaccoTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "chewing-tobacco":
		fallthrough
	case "cigarettes":
		fallthrough
	case "pipe":
		*e = EmployeeCreateRequestPersonDetailsTobaccoTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonDetailsTobaccoTypesEnum: %s", s)
	}
}

// EmployeeCreateRequestPersonDetailsTobacco - Tobacco usage details (if applicable)
type EmployeeCreateRequestPersonDetailsTobacco struct {
	// Duration of tobacco use
	Duration *string `json:"duration,omitempty"`
	// Frequency of tobacco use
	Frequency *string `json:"frequency,omitempty"`
	// List of types of tobacco use
	Types []EmployeeCreateRequestPersonDetailsTobaccoTypesEnum `json:"types,omitempty"`
	// True if the person uses tobacco of any kind
	User *bool `json:"user,omitempty"`
}

// EmployeeCreateRequestPersonDetails - Additional personal details of the person
type EmployeeCreateRequestPersonDetails struct {
	// American Indian status details (if applicable)
	AmericanIndian *EmployeeCreateRequestPersonDetailsAmericanIndian `json:"american_indian,omitempty"`
	// Disability details (if applicable)
	Disability *EmployeeCreateRequestPersonDetailsDisability `json:"disability,omitempty"`
	// True if the person is in the military
	IsMilitary *bool `json:"is_military,omitempty"`
	// True if the person is a student
	IsStudent *bool `json:"is_student,omitempty"`
	// Tobacco usage details (if applicable)
	Tobacco *EmployeeCreateRequestPersonDetailsTobacco `json:"tobacco,omitempty"`
}

// EmployeeCreateRequestPersonHomeAddressStateEnum - State postal code of the address
type EmployeeCreateRequestPersonHomeAddressStateEnum string

const (
	EmployeeCreateRequestPersonHomeAddressStateEnumAk EmployeeCreateRequestPersonHomeAddressStateEnum = "AK"
	EmployeeCreateRequestPersonHomeAddressStateEnumAl EmployeeCreateRequestPersonHomeAddressStateEnum = "AL"
	EmployeeCreateRequestPersonHomeAddressStateEnumAr EmployeeCreateRequestPersonHomeAddressStateEnum = "AR"
	EmployeeCreateRequestPersonHomeAddressStateEnumAs EmployeeCreateRequestPersonHomeAddressStateEnum = "AS"
	EmployeeCreateRequestPersonHomeAddressStateEnumAz EmployeeCreateRequestPersonHomeAddressStateEnum = "AZ"
	EmployeeCreateRequestPersonHomeAddressStateEnumCa EmployeeCreateRequestPersonHomeAddressStateEnum = "CA"
	EmployeeCreateRequestPersonHomeAddressStateEnumCo EmployeeCreateRequestPersonHomeAddressStateEnum = "CO"
	EmployeeCreateRequestPersonHomeAddressStateEnumCt EmployeeCreateRequestPersonHomeAddressStateEnum = "CT"
	EmployeeCreateRequestPersonHomeAddressStateEnumDc EmployeeCreateRequestPersonHomeAddressStateEnum = "DC"
	EmployeeCreateRequestPersonHomeAddressStateEnumDe EmployeeCreateRequestPersonHomeAddressStateEnum = "DE"
	EmployeeCreateRequestPersonHomeAddressStateEnumFl EmployeeCreateRequestPersonHomeAddressStateEnum = "FL"
	EmployeeCreateRequestPersonHomeAddressStateEnumFm EmployeeCreateRequestPersonHomeAddressStateEnum = "FM"
	EmployeeCreateRequestPersonHomeAddressStateEnumGa EmployeeCreateRequestPersonHomeAddressStateEnum = "GA"
	EmployeeCreateRequestPersonHomeAddressStateEnumGu EmployeeCreateRequestPersonHomeAddressStateEnum = "GU"
	EmployeeCreateRequestPersonHomeAddressStateEnumHi EmployeeCreateRequestPersonHomeAddressStateEnum = "HI"
	EmployeeCreateRequestPersonHomeAddressStateEnumIa EmployeeCreateRequestPersonHomeAddressStateEnum = "IA"
	EmployeeCreateRequestPersonHomeAddressStateEnumID EmployeeCreateRequestPersonHomeAddressStateEnum = "ID"
	EmployeeCreateRequestPersonHomeAddressStateEnumIl EmployeeCreateRequestPersonHomeAddressStateEnum = "IL"
	EmployeeCreateRequestPersonHomeAddressStateEnumIn EmployeeCreateRequestPersonHomeAddressStateEnum = "IN"
	EmployeeCreateRequestPersonHomeAddressStateEnumKs EmployeeCreateRequestPersonHomeAddressStateEnum = "KS"
	EmployeeCreateRequestPersonHomeAddressStateEnumKy EmployeeCreateRequestPersonHomeAddressStateEnum = "KY"
	EmployeeCreateRequestPersonHomeAddressStateEnumLa EmployeeCreateRequestPersonHomeAddressStateEnum = "LA"
	EmployeeCreateRequestPersonHomeAddressStateEnumMa EmployeeCreateRequestPersonHomeAddressStateEnum = "MA"
	EmployeeCreateRequestPersonHomeAddressStateEnumMd EmployeeCreateRequestPersonHomeAddressStateEnum = "MD"
	EmployeeCreateRequestPersonHomeAddressStateEnumMe EmployeeCreateRequestPersonHomeAddressStateEnum = "ME"
	EmployeeCreateRequestPersonHomeAddressStateEnumMh EmployeeCreateRequestPersonHomeAddressStateEnum = "MH"
	EmployeeCreateRequestPersonHomeAddressStateEnumMi EmployeeCreateRequestPersonHomeAddressStateEnum = "MI"
	EmployeeCreateRequestPersonHomeAddressStateEnumMn EmployeeCreateRequestPersonHomeAddressStateEnum = "MN"
	EmployeeCreateRequestPersonHomeAddressStateEnumMo EmployeeCreateRequestPersonHomeAddressStateEnum = "MO"
	EmployeeCreateRequestPersonHomeAddressStateEnumMp EmployeeCreateRequestPersonHomeAddressStateEnum = "MP"
	EmployeeCreateRequestPersonHomeAddressStateEnumMs EmployeeCreateRequestPersonHomeAddressStateEnum = "MS"
	EmployeeCreateRequestPersonHomeAddressStateEnumMt EmployeeCreateRequestPersonHomeAddressStateEnum = "MT"
	EmployeeCreateRequestPersonHomeAddressStateEnumNc EmployeeCreateRequestPersonHomeAddressStateEnum = "NC"
	EmployeeCreateRequestPersonHomeAddressStateEnumNd EmployeeCreateRequestPersonHomeAddressStateEnum = "ND"
	EmployeeCreateRequestPersonHomeAddressStateEnumNe EmployeeCreateRequestPersonHomeAddressStateEnum = "NE"
	EmployeeCreateRequestPersonHomeAddressStateEnumNh EmployeeCreateRequestPersonHomeAddressStateEnum = "NH"
	EmployeeCreateRequestPersonHomeAddressStateEnumNj EmployeeCreateRequestPersonHomeAddressStateEnum = "NJ"
	EmployeeCreateRequestPersonHomeAddressStateEnumNm EmployeeCreateRequestPersonHomeAddressStateEnum = "NM"
	EmployeeCreateRequestPersonHomeAddressStateEnumNv EmployeeCreateRequestPersonHomeAddressStateEnum = "NV"
	EmployeeCreateRequestPersonHomeAddressStateEnumNy EmployeeCreateRequestPersonHomeAddressStateEnum = "NY"
	EmployeeCreateRequestPersonHomeAddressStateEnumOh EmployeeCreateRequestPersonHomeAddressStateEnum = "OH"
	EmployeeCreateRequestPersonHomeAddressStateEnumOk EmployeeCreateRequestPersonHomeAddressStateEnum = "OK"
	EmployeeCreateRequestPersonHomeAddressStateEnumOr EmployeeCreateRequestPersonHomeAddressStateEnum = "OR"
	EmployeeCreateRequestPersonHomeAddressStateEnumPa EmployeeCreateRequestPersonHomeAddressStateEnum = "PA"
	EmployeeCreateRequestPersonHomeAddressStateEnumPr EmployeeCreateRequestPersonHomeAddressStateEnum = "PR"
	EmployeeCreateRequestPersonHomeAddressStateEnumPw EmployeeCreateRequestPersonHomeAddressStateEnum = "PW"
	EmployeeCreateRequestPersonHomeAddressStateEnumRi EmployeeCreateRequestPersonHomeAddressStateEnum = "RI"
	EmployeeCreateRequestPersonHomeAddressStateEnumSc EmployeeCreateRequestPersonHomeAddressStateEnum = "SC"
	EmployeeCreateRequestPersonHomeAddressStateEnumSd EmployeeCreateRequestPersonHomeAddressStateEnum = "SD"
	EmployeeCreateRequestPersonHomeAddressStateEnumTn EmployeeCreateRequestPersonHomeAddressStateEnum = "TN"
	EmployeeCreateRequestPersonHomeAddressStateEnumTx EmployeeCreateRequestPersonHomeAddressStateEnum = "TX"
	EmployeeCreateRequestPersonHomeAddressStateEnumUm EmployeeCreateRequestPersonHomeAddressStateEnum = "UM"
	EmployeeCreateRequestPersonHomeAddressStateEnumUt EmployeeCreateRequestPersonHomeAddressStateEnum = "UT"
	EmployeeCreateRequestPersonHomeAddressStateEnumVa EmployeeCreateRequestPersonHomeAddressStateEnum = "VA"
	EmployeeCreateRequestPersonHomeAddressStateEnumVi EmployeeCreateRequestPersonHomeAddressStateEnum = "VI"
	EmployeeCreateRequestPersonHomeAddressStateEnumVt EmployeeCreateRequestPersonHomeAddressStateEnum = "VT"
	EmployeeCreateRequestPersonHomeAddressStateEnumWa EmployeeCreateRequestPersonHomeAddressStateEnum = "WA"
	EmployeeCreateRequestPersonHomeAddressStateEnumWi EmployeeCreateRequestPersonHomeAddressStateEnum = "WI"
	EmployeeCreateRequestPersonHomeAddressStateEnumWv EmployeeCreateRequestPersonHomeAddressStateEnum = "WV"
	EmployeeCreateRequestPersonHomeAddressStateEnumWy EmployeeCreateRequestPersonHomeAddressStateEnum = "WY"
)

func (e *EmployeeCreateRequestPersonHomeAddressStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AK":
		fallthrough
	case "AL":
		fallthrough
	case "AR":
		fallthrough
	case "AS":
		fallthrough
	case "AZ":
		fallthrough
	case "CA":
		fallthrough
	case "CO":
		fallthrough
	case "CT":
		fallthrough
	case "DC":
		fallthrough
	case "DE":
		fallthrough
	case "FL":
		fallthrough
	case "FM":
		fallthrough
	case "GA":
		fallthrough
	case "GU":
		fallthrough
	case "HI":
		fallthrough
	case "IA":
		fallthrough
	case "ID":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		fallthrough
	case "KS":
		fallthrough
	case "KY":
		fallthrough
	case "LA":
		fallthrough
	case "MA":
		fallthrough
	case "MD":
		fallthrough
	case "ME":
		fallthrough
	case "MH":
		fallthrough
	case "MI":
		fallthrough
	case "MN":
		fallthrough
	case "MO":
		fallthrough
	case "MP":
		fallthrough
	case "MS":
		fallthrough
	case "MT":
		fallthrough
	case "NC":
		fallthrough
	case "ND":
		fallthrough
	case "NE":
		fallthrough
	case "NH":
		fallthrough
	case "NJ":
		fallthrough
	case "NM":
		fallthrough
	case "NV":
		fallthrough
	case "NY":
		fallthrough
	case "OH":
		fallthrough
	case "OK":
		fallthrough
	case "OR":
		fallthrough
	case "PA":
		fallthrough
	case "PR":
		fallthrough
	case "PW":
		fallthrough
	case "RI":
		fallthrough
	case "SC":
		fallthrough
	case "SD":
		fallthrough
	case "TN":
		fallthrough
	case "TX":
		fallthrough
	case "UM":
		fallthrough
	case "UT":
		fallthrough
	case "VA":
		fallthrough
	case "VI":
		fallthrough
	case "VT":
		fallthrough
	case "WA":
		fallthrough
	case "WI":
		fallthrough
	case "WV":
		fallthrough
	case "WY":
		*e = EmployeeCreateRequestPersonHomeAddressStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonHomeAddressStateEnum: %s", s)
	}
}

// EmployeeCreateRequestPersonHomeAddress - Home address of the person
type EmployeeCreateRequestPersonHomeAddress struct {
	// City of the address
	City string `json:"city"`
	// County of the address
	County *string `json:"county,omitempty"`
	// State postal code of the address
	State EmployeeCreateRequestPersonHomeAddressStateEnum `json:"state"`
	// Line one of the address
	StreetOne string `json:"street_one"`
	// Line two of the address
	StreetTwo *string `json:"street_two,omitempty"`
	// Zip code of the address
	ZipCode string `json:"zip_code"`
}

// EmployeeCreateRequestPersonMailingAddressStateEnum - State postal code of the address
type EmployeeCreateRequestPersonMailingAddressStateEnum string

const (
	EmployeeCreateRequestPersonMailingAddressStateEnumAk EmployeeCreateRequestPersonMailingAddressStateEnum = "AK"
	EmployeeCreateRequestPersonMailingAddressStateEnumAl EmployeeCreateRequestPersonMailingAddressStateEnum = "AL"
	EmployeeCreateRequestPersonMailingAddressStateEnumAr EmployeeCreateRequestPersonMailingAddressStateEnum = "AR"
	EmployeeCreateRequestPersonMailingAddressStateEnumAs EmployeeCreateRequestPersonMailingAddressStateEnum = "AS"
	EmployeeCreateRequestPersonMailingAddressStateEnumAz EmployeeCreateRequestPersonMailingAddressStateEnum = "AZ"
	EmployeeCreateRequestPersonMailingAddressStateEnumCa EmployeeCreateRequestPersonMailingAddressStateEnum = "CA"
	EmployeeCreateRequestPersonMailingAddressStateEnumCo EmployeeCreateRequestPersonMailingAddressStateEnum = "CO"
	EmployeeCreateRequestPersonMailingAddressStateEnumCt EmployeeCreateRequestPersonMailingAddressStateEnum = "CT"
	EmployeeCreateRequestPersonMailingAddressStateEnumDc EmployeeCreateRequestPersonMailingAddressStateEnum = "DC"
	EmployeeCreateRequestPersonMailingAddressStateEnumDe EmployeeCreateRequestPersonMailingAddressStateEnum = "DE"
	EmployeeCreateRequestPersonMailingAddressStateEnumFl EmployeeCreateRequestPersonMailingAddressStateEnum = "FL"
	EmployeeCreateRequestPersonMailingAddressStateEnumFm EmployeeCreateRequestPersonMailingAddressStateEnum = "FM"
	EmployeeCreateRequestPersonMailingAddressStateEnumGa EmployeeCreateRequestPersonMailingAddressStateEnum = "GA"
	EmployeeCreateRequestPersonMailingAddressStateEnumGu EmployeeCreateRequestPersonMailingAddressStateEnum = "GU"
	EmployeeCreateRequestPersonMailingAddressStateEnumHi EmployeeCreateRequestPersonMailingAddressStateEnum = "HI"
	EmployeeCreateRequestPersonMailingAddressStateEnumIa EmployeeCreateRequestPersonMailingAddressStateEnum = "IA"
	EmployeeCreateRequestPersonMailingAddressStateEnumID EmployeeCreateRequestPersonMailingAddressStateEnum = "ID"
	EmployeeCreateRequestPersonMailingAddressStateEnumIl EmployeeCreateRequestPersonMailingAddressStateEnum = "IL"
	EmployeeCreateRequestPersonMailingAddressStateEnumIn EmployeeCreateRequestPersonMailingAddressStateEnum = "IN"
	EmployeeCreateRequestPersonMailingAddressStateEnumKs EmployeeCreateRequestPersonMailingAddressStateEnum = "KS"
	EmployeeCreateRequestPersonMailingAddressStateEnumKy EmployeeCreateRequestPersonMailingAddressStateEnum = "KY"
	EmployeeCreateRequestPersonMailingAddressStateEnumLa EmployeeCreateRequestPersonMailingAddressStateEnum = "LA"
	EmployeeCreateRequestPersonMailingAddressStateEnumMa EmployeeCreateRequestPersonMailingAddressStateEnum = "MA"
	EmployeeCreateRequestPersonMailingAddressStateEnumMd EmployeeCreateRequestPersonMailingAddressStateEnum = "MD"
	EmployeeCreateRequestPersonMailingAddressStateEnumMe EmployeeCreateRequestPersonMailingAddressStateEnum = "ME"
	EmployeeCreateRequestPersonMailingAddressStateEnumMh EmployeeCreateRequestPersonMailingAddressStateEnum = "MH"
	EmployeeCreateRequestPersonMailingAddressStateEnumMi EmployeeCreateRequestPersonMailingAddressStateEnum = "MI"
	EmployeeCreateRequestPersonMailingAddressStateEnumMn EmployeeCreateRequestPersonMailingAddressStateEnum = "MN"
	EmployeeCreateRequestPersonMailingAddressStateEnumMo EmployeeCreateRequestPersonMailingAddressStateEnum = "MO"
	EmployeeCreateRequestPersonMailingAddressStateEnumMp EmployeeCreateRequestPersonMailingAddressStateEnum = "MP"
	EmployeeCreateRequestPersonMailingAddressStateEnumMs EmployeeCreateRequestPersonMailingAddressStateEnum = "MS"
	EmployeeCreateRequestPersonMailingAddressStateEnumMt EmployeeCreateRequestPersonMailingAddressStateEnum = "MT"
	EmployeeCreateRequestPersonMailingAddressStateEnumNc EmployeeCreateRequestPersonMailingAddressStateEnum = "NC"
	EmployeeCreateRequestPersonMailingAddressStateEnumNd EmployeeCreateRequestPersonMailingAddressStateEnum = "ND"
	EmployeeCreateRequestPersonMailingAddressStateEnumNe EmployeeCreateRequestPersonMailingAddressStateEnum = "NE"
	EmployeeCreateRequestPersonMailingAddressStateEnumNh EmployeeCreateRequestPersonMailingAddressStateEnum = "NH"
	EmployeeCreateRequestPersonMailingAddressStateEnumNj EmployeeCreateRequestPersonMailingAddressStateEnum = "NJ"
	EmployeeCreateRequestPersonMailingAddressStateEnumNm EmployeeCreateRequestPersonMailingAddressStateEnum = "NM"
	EmployeeCreateRequestPersonMailingAddressStateEnumNv EmployeeCreateRequestPersonMailingAddressStateEnum = "NV"
	EmployeeCreateRequestPersonMailingAddressStateEnumNy EmployeeCreateRequestPersonMailingAddressStateEnum = "NY"
	EmployeeCreateRequestPersonMailingAddressStateEnumOh EmployeeCreateRequestPersonMailingAddressStateEnum = "OH"
	EmployeeCreateRequestPersonMailingAddressStateEnumOk EmployeeCreateRequestPersonMailingAddressStateEnum = "OK"
	EmployeeCreateRequestPersonMailingAddressStateEnumOr EmployeeCreateRequestPersonMailingAddressStateEnum = "OR"
	EmployeeCreateRequestPersonMailingAddressStateEnumPa EmployeeCreateRequestPersonMailingAddressStateEnum = "PA"
	EmployeeCreateRequestPersonMailingAddressStateEnumPr EmployeeCreateRequestPersonMailingAddressStateEnum = "PR"
	EmployeeCreateRequestPersonMailingAddressStateEnumPw EmployeeCreateRequestPersonMailingAddressStateEnum = "PW"
	EmployeeCreateRequestPersonMailingAddressStateEnumRi EmployeeCreateRequestPersonMailingAddressStateEnum = "RI"
	EmployeeCreateRequestPersonMailingAddressStateEnumSc EmployeeCreateRequestPersonMailingAddressStateEnum = "SC"
	EmployeeCreateRequestPersonMailingAddressStateEnumSd EmployeeCreateRequestPersonMailingAddressStateEnum = "SD"
	EmployeeCreateRequestPersonMailingAddressStateEnumTn EmployeeCreateRequestPersonMailingAddressStateEnum = "TN"
	EmployeeCreateRequestPersonMailingAddressStateEnumTx EmployeeCreateRequestPersonMailingAddressStateEnum = "TX"
	EmployeeCreateRequestPersonMailingAddressStateEnumUm EmployeeCreateRequestPersonMailingAddressStateEnum = "UM"
	EmployeeCreateRequestPersonMailingAddressStateEnumUt EmployeeCreateRequestPersonMailingAddressStateEnum = "UT"
	EmployeeCreateRequestPersonMailingAddressStateEnumVa EmployeeCreateRequestPersonMailingAddressStateEnum = "VA"
	EmployeeCreateRequestPersonMailingAddressStateEnumVi EmployeeCreateRequestPersonMailingAddressStateEnum = "VI"
	EmployeeCreateRequestPersonMailingAddressStateEnumVt EmployeeCreateRequestPersonMailingAddressStateEnum = "VT"
	EmployeeCreateRequestPersonMailingAddressStateEnumWa EmployeeCreateRequestPersonMailingAddressStateEnum = "WA"
	EmployeeCreateRequestPersonMailingAddressStateEnumWi EmployeeCreateRequestPersonMailingAddressStateEnum = "WI"
	EmployeeCreateRequestPersonMailingAddressStateEnumWv EmployeeCreateRequestPersonMailingAddressStateEnum = "WV"
	EmployeeCreateRequestPersonMailingAddressStateEnumWy EmployeeCreateRequestPersonMailingAddressStateEnum = "WY"
)

func (e *EmployeeCreateRequestPersonMailingAddressStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AK":
		fallthrough
	case "AL":
		fallthrough
	case "AR":
		fallthrough
	case "AS":
		fallthrough
	case "AZ":
		fallthrough
	case "CA":
		fallthrough
	case "CO":
		fallthrough
	case "CT":
		fallthrough
	case "DC":
		fallthrough
	case "DE":
		fallthrough
	case "FL":
		fallthrough
	case "FM":
		fallthrough
	case "GA":
		fallthrough
	case "GU":
		fallthrough
	case "HI":
		fallthrough
	case "IA":
		fallthrough
	case "ID":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		fallthrough
	case "KS":
		fallthrough
	case "KY":
		fallthrough
	case "LA":
		fallthrough
	case "MA":
		fallthrough
	case "MD":
		fallthrough
	case "ME":
		fallthrough
	case "MH":
		fallthrough
	case "MI":
		fallthrough
	case "MN":
		fallthrough
	case "MO":
		fallthrough
	case "MP":
		fallthrough
	case "MS":
		fallthrough
	case "MT":
		fallthrough
	case "NC":
		fallthrough
	case "ND":
		fallthrough
	case "NE":
		fallthrough
	case "NH":
		fallthrough
	case "NJ":
		fallthrough
	case "NM":
		fallthrough
	case "NV":
		fallthrough
	case "NY":
		fallthrough
	case "OH":
		fallthrough
	case "OK":
		fallthrough
	case "OR":
		fallthrough
	case "PA":
		fallthrough
	case "PR":
		fallthrough
	case "PW":
		fallthrough
	case "RI":
		fallthrough
	case "SC":
		fallthrough
	case "SD":
		fallthrough
	case "TN":
		fallthrough
	case "TX":
		fallthrough
	case "UM":
		fallthrough
	case "UT":
		fallthrough
	case "VA":
		fallthrough
	case "VI":
		fallthrough
	case "VT":
		fallthrough
	case "WA":
		fallthrough
	case "WI":
		fallthrough
	case "WV":
		fallthrough
	case "WY":
		*e = EmployeeCreateRequestPersonMailingAddressStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonMailingAddressStateEnum: %s", s)
	}
}

// EmployeeCreateRequestPersonMailingAddress - Mailing address of the person
type EmployeeCreateRequestPersonMailingAddress struct {
	// City of the address
	City string `json:"city"`
	// County of the address
	County *string `json:"county,omitempty"`
	// State postal code of the address
	State EmployeeCreateRequestPersonMailingAddressStateEnum `json:"state"`
	// Line one of the address
	StreetOne string `json:"street_one"`
	// Line two of the address
	StreetTwo *string `json:"street_two,omitempty"`
	// Zip code of the address
	ZipCode string `json:"zip_code"`
}

// EmployeeCreateRequestPersonMaritalStatusEnum - Marital status of the person
type EmployeeCreateRequestPersonMaritalStatusEnum string

const (
	EmployeeCreateRequestPersonMaritalStatusEnumDivorced         EmployeeCreateRequestPersonMaritalStatusEnum = "divorced"
	EmployeeCreateRequestPersonMaritalStatusEnumDomesticPartner  EmployeeCreateRequestPersonMaritalStatusEnum = "domestic-partner"
	EmployeeCreateRequestPersonMaritalStatusEnumLegallySeparated EmployeeCreateRequestPersonMaritalStatusEnum = "legally-separated"
	EmployeeCreateRequestPersonMaritalStatusEnumMarried          EmployeeCreateRequestPersonMaritalStatusEnum = "married"
	EmployeeCreateRequestPersonMaritalStatusEnumSingle           EmployeeCreateRequestPersonMaritalStatusEnum = "single"
	EmployeeCreateRequestPersonMaritalStatusEnumWidowed          EmployeeCreateRequestPersonMaritalStatusEnum = "widowed"
)

func (e *EmployeeCreateRequestPersonMaritalStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "divorced":
		fallthrough
	case "domestic-partner":
		fallthrough
	case "legally-separated":
		fallthrough
	case "married":
		fallthrough
	case "single":
		fallthrough
	case "widowed":
		*e = EmployeeCreateRequestPersonMaritalStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonMaritalStatusEnum: %s", s)
	}
}

// EmployeeCreateRequestPersonSexEnum - Sex of the person
type EmployeeCreateRequestPersonSexEnum string

const (
	EmployeeCreateRequestPersonSexEnumF EmployeeCreateRequestPersonSexEnum = "F"
	EmployeeCreateRequestPersonSexEnumM EmployeeCreateRequestPersonSexEnum = "M"
	EmployeeCreateRequestPersonSexEnumU EmployeeCreateRequestPersonSexEnum = "U"
	EmployeeCreateRequestPersonSexEnumX EmployeeCreateRequestPersonSexEnum = "X"
)

func (e *EmployeeCreateRequestPersonSexEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "F":
		fallthrough
	case "M":
		fallthrough
	case "U":
		fallthrough
	case "X":
		*e = EmployeeCreateRequestPersonSexEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeCreateRequestPersonSexEnum: %s", s)
	}
}

// EmployeeCreateRequestPerson - Personal information for the employee
type EmployeeCreateRequestPerson struct {
	// Contact information for the person
	Contact *EmployeeCreateRequestPersonContact `json:"contact,omitempty"`
	// ISO-8601 date string for the date of birth of the person
	DateOfBirth types.Date `json:"date_of_birth"`
	// Additional personal details of the person
	Details *EmployeeCreateRequestPersonDetails `json:"details,omitempty"`
	// First name of the person
	FirstName string `json:"first_name"`
	// Home address of the person
	HomeAddress *EmployeeCreateRequestPersonHomeAddress `json:"home_address,omitempty"`
	// Last name of the person
	LastName string `json:"last_name"`
	// Mailing address of the person
	MailingAddress *EmployeeCreateRequestPersonMailingAddress `json:"mailing_address,omitempty"`
	// Marital status of the person
	MaritalStatus *EmployeeCreateRequestPersonMaritalStatusEnum `json:"marital_status,omitempty"`
	// Middle name of the person
	MiddleName *string `json:"middle_name,omitempty"`
	// Sex of the person
	Sex EmployeeCreateRequestPersonSexEnum `json:"sex"`
	// Social Security Number of the person
	Ssn *string `json:"ssn,omitempty"`
	// Suffix of the person
	Suffix *string `json:"suffix,omitempty"`
}

type EmployeeCreateRequest struct {
	// Employment information for the employee
	Employment *EmployeeCreateRequestEmployment `json:"employment,omitempty"`
	// Personal information for the employee
	Person EmployeeCreateRequestPerson `json:"person"`
}
