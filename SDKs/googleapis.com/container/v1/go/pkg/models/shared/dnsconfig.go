// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DNSConfigClusterDNSEnum - cluster_dns indicates which in-cluster DNS provider should be used.
type DNSConfigClusterDNSEnum string

const (
	DNSConfigClusterDNSEnumProviderUnspecified DNSConfigClusterDNSEnum = "PROVIDER_UNSPECIFIED"
	DNSConfigClusterDNSEnumPlatformDefault     DNSConfigClusterDNSEnum = "PLATFORM_DEFAULT"
	DNSConfigClusterDNSEnumCloudDNS            DNSConfigClusterDNSEnum = "CLOUD_DNS"
)

func (e DNSConfigClusterDNSEnum) ToPointer() *DNSConfigClusterDNSEnum {
	return &e
}

func (e *DNSConfigClusterDNSEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROVIDER_UNSPECIFIED":
		fallthrough
	case "PLATFORM_DEFAULT":
		fallthrough
	case "CLOUD_DNS":
		*e = DNSConfigClusterDNSEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DNSConfigClusterDNSEnum: %v", v)
	}
}

// DNSConfigClusterDNSScopeEnum - cluster_dns_scope indicates the scope of access to cluster DNS records.
type DNSConfigClusterDNSScopeEnum string

const (
	DNSConfigClusterDNSScopeEnumDNSScopeUnspecified DNSConfigClusterDNSScopeEnum = "DNS_SCOPE_UNSPECIFIED"
	DNSConfigClusterDNSScopeEnumClusterScope        DNSConfigClusterDNSScopeEnum = "CLUSTER_SCOPE"
	DNSConfigClusterDNSScopeEnumVpcScope            DNSConfigClusterDNSScopeEnum = "VPC_SCOPE"
)

func (e DNSConfigClusterDNSScopeEnum) ToPointer() *DNSConfigClusterDNSScopeEnum {
	return &e
}

func (e *DNSConfigClusterDNSScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DNS_SCOPE_UNSPECIFIED":
		fallthrough
	case "CLUSTER_SCOPE":
		fallthrough
	case "VPC_SCOPE":
		*e = DNSConfigClusterDNSScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DNSConfigClusterDNSScopeEnum: %v", v)
	}
}

// DNSConfig - DNSConfig contains the desired set of options for configuring clusterDNS.
type DNSConfig struct {
	// cluster_dns indicates which in-cluster DNS provider should be used.
	ClusterDNS *DNSConfigClusterDNSEnum `json:"clusterDns,omitempty"`
	// cluster_dns_domain is the suffix used for all cluster service records.
	ClusterDNSDomain *string `json:"clusterDnsDomain,omitempty"`
	// cluster_dns_scope indicates the scope of access to cluster DNS records.
	ClusterDNSScope *DNSConfigClusterDNSScopeEnum `json:"clusterDnsScope,omitempty"`
}
