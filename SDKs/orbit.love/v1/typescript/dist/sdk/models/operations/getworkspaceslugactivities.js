"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetWorkspaceSlugActivitiesResponse = exports.GetWorkspaceSlugActivitiesRequest = exports.GetWorkspaceSlugActivitiesSortEnum = exports.GetWorkspaceSlugActivitiesItemsEnum = exports.GetWorkspaceSlugActivitiesIdentityEnum = exports.GetWorkspaceSlugActivitiesDirectionEnum = exports.GetWorkspaceSlugActivitiesAffiliationEnum = exports.GetWorkspaceSlugActivitiesActivityTypeEnum = exports.GetWorkspaceSlugActivitiesSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var GetWorkspaceSlugActivitiesSecurity = /** @class */ (function (_super) {
    __extends(GetWorkspaceSlugActivitiesSecurity, _super);
    function GetWorkspaceSlugActivitiesSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesSecurity.prototype, "bearer", void 0);
    return GetWorkspaceSlugActivitiesSecurity;
}(utils_1.SpeakeasyBase));
exports.GetWorkspaceSlugActivitiesSecurity = GetWorkspaceSlugActivitiesSecurity;
/**
 * Comma separated list of activity types
 */
var GetWorkspaceSlugActivitiesActivityTypeEnum;
(function (GetWorkspaceSlugActivitiesActivityTypeEnum) {
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscourseTopicCreated"] = "discourse:topic:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscoursePostLiked"] = "discourse:post:liked";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscourseUserCreated"] = "discourse:user:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscoursePostCreated"] = "discourse:post:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["SlackMessageSent"] = "slack:message:sent";
    GetWorkspaceSlugActivitiesActivityTypeEnum["SlackThreadReplied"] = "slack:thread:replied";
    GetWorkspaceSlugActivitiesActivityTypeEnum["SlackChannelJoined"] = "slack:channel:joined";
    GetWorkspaceSlugActivitiesActivityTypeEnum["NoteCreated"] = "note:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["PostCreated"] = "post:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["IssuesOpened"] = "issues:opened";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscordMessageSent"] = "discord:message:sent";
    GetWorkspaceSlugActivitiesActivityTypeEnum["IssueCommentCreated"] = "issue_comment:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscordThreadReplied"] = "discord:thread:replied";
    GetWorkspaceSlugActivitiesActivityTypeEnum["CustomHappened"] = "custom:happened";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DevComment"] = "dev:comment";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscordMessageReplied"] = "discord:message:replied";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscordServerJoined"] = "discord:server:joined";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedConversationStarted"] = "insided:conversation:started";
    GetWorkspaceSlugActivitiesActivityTypeEnum["ForkCreated"] = "fork:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedIdeaReplied"] = "insided:idea:replied";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedArticleCreated"] = "insided:article:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscussionsDiscussionCreated"] = "discussions:discussion_created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedQuestionReplied"] = "insided:question:replied";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscussionsComment"] = "discussions:comment";
    GetWorkspaceSlugActivitiesActivityTypeEnum["DiscussionsReply"] = "discussions:reply";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedArticleReplied"] = "insided:article:replied";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedQuestionAsked"] = "insided:question:asked";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedConversationReplied"] = "insided:conversation:replied";
    GetWorkspaceSlugActivitiesActivityTypeEnum["InsidedIdeaSubmitted"] = "insided:idea:submitted";
    GetWorkspaceSlugActivitiesActivityTypeEnum["RedditComment"] = "reddit:comment";
    GetWorkspaceSlugActivitiesActivityTypeEnum["RedditPost"] = "reddit:post";
    GetWorkspaceSlugActivitiesActivityTypeEnum["StackoverflowAnswer"] = "stackoverflow:answer";
    GetWorkspaceSlugActivitiesActivityTypeEnum["LinkedinComment"] = "linkedin:comment";
    GetWorkspaceSlugActivitiesActivityTypeEnum["PullRequestsOpened"] = "pull_requests:opened";
    GetWorkspaceSlugActivitiesActivityTypeEnum["PullRequestsMerged"] = "pull_requests:merged";
    GetWorkspaceSlugActivitiesActivityTypeEnum["StarCreated"] = "star:created";
    GetWorkspaceSlugActivitiesActivityTypeEnum["StackoverflowQuestion"] = "stackoverflow:question";
    GetWorkspaceSlugActivitiesActivityTypeEnum["TweetSent"] = "tweet:sent";
    GetWorkspaceSlugActivitiesActivityTypeEnum["TwitterFollowed"] = "twitter:followed";
    GetWorkspaceSlugActivitiesActivityTypeEnum["YoutubeComment"] = "youtube:comment";
})(GetWorkspaceSlugActivitiesActivityTypeEnum = exports.GetWorkspaceSlugActivitiesActivityTypeEnum || (exports.GetWorkspaceSlugActivitiesActivityTypeEnum = {}));
var GetWorkspaceSlugActivitiesAffiliationEnum;
(function (GetWorkspaceSlugActivitiesAffiliationEnum) {
    GetWorkspaceSlugActivitiesAffiliationEnum["Member"] = "member";
    GetWorkspaceSlugActivitiesAffiliationEnum["Teammate"] = "teammate";
})(GetWorkspaceSlugActivitiesAffiliationEnum = exports.GetWorkspaceSlugActivitiesAffiliationEnum || (exports.GetWorkspaceSlugActivitiesAffiliationEnum = {}));
var GetWorkspaceSlugActivitiesDirectionEnum;
(function (GetWorkspaceSlugActivitiesDirectionEnum) {
    GetWorkspaceSlugActivitiesDirectionEnum["Asc"] = "ASC";
    GetWorkspaceSlugActivitiesDirectionEnum["Desc"] = "DESC";
})(GetWorkspaceSlugActivitiesDirectionEnum = exports.GetWorkspaceSlugActivitiesDirectionEnum || (exports.GetWorkspaceSlugActivitiesDirectionEnum = {}));
var GetWorkspaceSlugActivitiesIdentityEnum;
(function (GetWorkspaceSlugActivitiesIdentityEnum) {
    GetWorkspaceSlugActivitiesIdentityEnum["Github"] = "github";
    GetWorkspaceSlugActivitiesIdentityEnum["Twitter"] = "twitter";
    GetWorkspaceSlugActivitiesIdentityEnum["Email"] = "email";
    GetWorkspaceSlugActivitiesIdentityEnum["Discourse"] = "discourse";
    GetWorkspaceSlugActivitiesIdentityEnum["Linkedin"] = "linkedin";
    GetWorkspaceSlugActivitiesIdentityEnum["Devto"] = "devto";
    GetWorkspaceSlugActivitiesIdentityEnum["Slack"] = "slack";
    GetWorkspaceSlugActivitiesIdentityEnum["Discord"] = "discord";
})(GetWorkspaceSlugActivitiesIdentityEnum = exports.GetWorkspaceSlugActivitiesIdentityEnum || (exports.GetWorkspaceSlugActivitiesIdentityEnum = {}));
var GetWorkspaceSlugActivitiesItemsEnum;
(function (GetWorkspaceSlugActivitiesItemsEnum) {
    GetWorkspaceSlugActivitiesItemsEnum["Ten"] = "10";
    GetWorkspaceSlugActivitiesItemsEnum["Fifty"] = "50";
    GetWorkspaceSlugActivitiesItemsEnum["OneHundred"] = "100";
})(GetWorkspaceSlugActivitiesItemsEnum = exports.GetWorkspaceSlugActivitiesItemsEnum || (exports.GetWorkspaceSlugActivitiesItemsEnum = {}));
var GetWorkspaceSlugActivitiesSortEnum;
(function (GetWorkspaceSlugActivitiesSortEnum) {
    GetWorkspaceSlugActivitiesSortEnum["OccurredAt"] = "occurred_at";
    GetWorkspaceSlugActivitiesSortEnum["Member"] = "member";
})(GetWorkspaceSlugActivitiesSortEnum = exports.GetWorkspaceSlugActivitiesSortEnum || (exports.GetWorkspaceSlugActivitiesSortEnum = {}));
var GetWorkspaceSlugActivitiesRequest = /** @class */ (function (_super) {
    __extends(GetWorkspaceSlugActivitiesRequest, _super);
    function GetWorkspaceSlugActivitiesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=activity_type",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "activityType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=affiliation",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "affiliation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=cities[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "cities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=company[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "company", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=countries[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "countries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=direction",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "direction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=end_date",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "endDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=identity",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "identity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=items" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "items", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=member_tags",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "memberTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=orbit" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "orbit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=page" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "page", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=regions[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "regions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=relative",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "relative", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=sort" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "sort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=start_date",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "startDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=title[]",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=type" }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=workspace_slug",
        }),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesRequest.prototype, "workspaceSlug", void 0);
    return GetWorkspaceSlugActivitiesRequest;
}(utils_1.SpeakeasyBase));
exports.GetWorkspaceSlugActivitiesRequest = GetWorkspaceSlugActivitiesRequest;
var GetWorkspaceSlugActivitiesResponse = /** @class */ (function (_super) {
    __extends(GetWorkspaceSlugActivitiesResponse, _super);
    function GetWorkspaceSlugActivitiesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetWorkspaceSlugActivitiesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetWorkspaceSlugActivitiesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetWorkspaceSlugActivitiesResponse.prototype, "rawResponse", void 0);
    return GetWorkspaceSlugActivitiesResponse;
}(utils_1.SpeakeasyBase));
exports.GetWorkspaceSlugActivitiesResponse = GetWorkspaceSlugActivitiesResponse;
