"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conformancepackcompliancetype_enum as shared_conformancepackcompliancetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConformancePackRuleCompliance:
    r"""Compliance information of one or more Config rules within a conformance pack. You can filter using Config rule names and compliance types."""
    
    compliance_type: Optional[shared_conformancepackcompliancetype_enum.ConformancePackComplianceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComplianceType'), 'exclude': lambda f: f is None }})  
    config_rule_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigRuleName'), 'exclude': lambda f: f is None }})  
    controls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Controls'), 'exclude': lambda f: f is None }})  
    