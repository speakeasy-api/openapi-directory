// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateFileUploadRequestClassificationEnum - Classification ID:
//
// * `1` - public
//
// * `2` - internal
//
// * `3` - confidential
//
// * `4` - strictly confidential
//
// (default: classification from parent room)
type CreateFileUploadRequestClassificationEnum int

const (
	CreateFileUploadRequestClassificationEnumOne   CreateFileUploadRequestClassificationEnum = 1
	CreateFileUploadRequestClassificationEnumTwo   CreateFileUploadRequestClassificationEnum = 2
	CreateFileUploadRequestClassificationEnumThree CreateFileUploadRequestClassificationEnum = 3
	CreateFileUploadRequestClassificationEnumFour  CreateFileUploadRequestClassificationEnum = 4
)

func (e CreateFileUploadRequestClassificationEnum) ToPointer() *CreateFileUploadRequestClassificationEnum {
	return &e
}

func (e *CreateFileUploadRequestClassificationEnum) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		*e = CreateFileUploadRequestClassificationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFileUploadRequestClassificationEnum: %v", v)
	}
}

// CreateFileUploadRequest - Request model for creating an upload channel
type CreateFileUploadRequest struct {
	// Classification ID:
	//
	// * `1` - public
	//
	// * `2` - internal
	//
	// * `3` - confidential
	//
	// * `4` - strictly confidential
	//
	//
	//
	// (default: classification from parent room)
	Classification *CreateFileUploadRequestClassificationEnum `json:"classification,omitempty"`
	// &#128640; Since v4.15.0
	//
	// Upload direct to S3
	DirectS3Upload *bool `json:"directS3Upload,omitempty"`
	// Expiration information
	Expiration *ObjectExpiration `json:"expiration,omitempty"`
	// File name
	Name string `json:"name"`
	// User notes
	//
	// Use empty string to remove.
	Notes *string `json:"notes,omitempty"`
	// Parent node ID (room or folder)
	ParentID int64 `json:"parentId"`
	// File size in byte
	Size *int64 `json:"size,omitempty"`
	// &#128640; Since v4.22.0
	//
	// Time the node was created on external file system
	//
	// (default: current server datetime in UTC format)
	TimestampCreation *time.Time `json:"timestampCreation,omitempty"`
	// &#128640; Since v4.22.0
	//
	// Time the content of a node was last modified on external file system
	//
	// (default: current server datetime in UTC format)
	TimestampModification *time.Time `json:"timestampModification,omitempty"`
}
