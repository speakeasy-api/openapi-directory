/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class QueryInterpretation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interpretationType")
    public QueryInterpretationInterpretationTypeEnum interpretationType;

    public QueryInterpretation withInterpretationType(QueryInterpretationInterpretationTypeEnum interpretationType) {
        this.interpretationType = interpretationType;
        return this;
    }
    
    /**
     * The interpretation of the query used in search. For example, queries with natural language intent like "email from john" will be interpreted as "from:john source:mail". This field will not be filled when the reason is NOT_ENOUGH_RESULTS_FOUND_FOR_USER_QUERY.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interpretedQuery")
    public String interpretedQuery;

    public QueryInterpretation withInterpretedQuery(String interpretedQuery) {
        this.interpretedQuery = interpretedQuery;
        return this;
    }
    
    /**
     * The reason for interpretation of the query. This field will not be UNSPECIFIED if the interpretation type is not NONE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public QueryInterpretationReasonEnum reason;

    public QueryInterpretation withReason(QueryInterpretationReasonEnum reason) {
        this.reason = reason;
        return this;
    }
    
    public QueryInterpretation(){}
}
