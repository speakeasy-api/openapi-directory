// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateRecordingConfigurationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateRecordingConfigurationRequestBodyDestinationConfiguration - A complex type that describes a location where recorded videos will be stored. Each member represents a type of destination configuration. For recording, you define one and only one type of destination configuration.
type CreateRecordingConfigurationRequestBodyDestinationConfiguration struct {
	S3 *shared.S3DestinationConfiguration `json:"s3,omitempty"`
}

// CreateRecordingConfigurationRequestBodyThumbnailConfiguration - An object representing a configuration of thumbnails for recorded video.
type CreateRecordingConfigurationRequestBodyThumbnailConfiguration struct {
	RecordingMode         *shared.RecordingModeEnum `json:"recordingMode,omitempty"`
	TargetIntervalSeconds *int64                    `json:"targetIntervalSeconds,omitempty"`
}

type CreateRecordingConfigurationRequestBody struct {
	// A complex type that describes a location where recorded videos will be stored. Each member represents a type of destination configuration. For recording, you define one and only one type of destination configuration.
	DestinationConfiguration CreateRecordingConfigurationRequestBodyDestinationConfiguration `json:"destinationConfiguration"`
	// Recording-configuration name. The value does not need to be unique.
	Name *string `json:"name,omitempty"`
	// If a broadcast disconnects and then reconnects within the specified interval, the multiple streams will be considered a single broadcast and merged together. Default: 0.
	RecordingReconnectWindowSeconds *int64 `json:"recordingReconnectWindowSeconds,omitempty"`
	// Array of 1-50 maps, each of the form <code>string:string (key:value)</code>. See <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services Resources</a> for more information, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS has no service-specific constraints beyond what is documented there.
	Tags map[string]string `json:"tags,omitempty"`
	// An object representing a configuration of thumbnails for recorded video.
	ThumbnailConfiguration *CreateRecordingConfigurationRequestBodyThumbnailConfiguration `json:"thumbnailConfiguration,omitempty"`
}

type CreateRecordingConfigurationRequest struct {
	Headers CreateRecordingConfigurationHeaders
	Request CreateRecordingConfigurationRequestBody `request:"mediaType=application/json"`
}

type CreateRecordingConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateRecordingConfigurationResponse *shared.CreateRecordingConfigurationResponse
	// InternalServerException
	InternalServerException interface{}
	// PendingVerification
	PendingVerification interface{}
	StatusCode          int
	RawResponse         *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ValidationException
	ValidationException interface{}
}
