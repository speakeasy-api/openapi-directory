/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CertificateDescription - A CertificateDescription describes an X.509 certificate or CSR that has been issued, as an alternative to using ASN.1 / X.509.
 */
public class CertificateDescription {
    /**
     * Describes lists of issuer CA certificate URLs that appear in the "Authority Information Access" extension in the certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aiaIssuingCertificateUrls")
    public String[] aiaIssuingCertificateUrls;
    public CertificateDescription withAiaIssuingCertificateUrls(String[] aiaIssuingCertificateUrls) {
        this.aiaIssuingCertificateUrls = aiaIssuingCertificateUrls;
        return this;
    }
    
    /**
     * A KeyId identifies a specific public key, usually by hashing the public key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorityKeyId")
    public KeyId authorityKeyId;
    public CertificateDescription withAuthorityKeyId(KeyId authorityKeyId) {
        this.authorityKeyId = authorityKeyId;
        return this;
    }
    
    /**
     * A group of fingerprints for the x509 certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certFingerprint")
    public CertificateFingerprint certFingerprint;
    public CertificateDescription withCertFingerprint(CertificateFingerprint certFingerprint) {
        this.certFingerprint = certFingerprint;
        return this;
    }
    
    /**
     * Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("crlDistributionPoints")
    public String[] crlDistributionPoints;
    public CertificateDescription withCrlDistributionPoints(String[] crlDistributionPoints) {
        this.crlDistributionPoints = crlDistributionPoints;
        return this;
    }
    
    /**
     * A PublicKey describes a public key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publicKey")
    public PublicKey publicKey;
    public CertificateDescription withPublicKey(PublicKey publicKey) {
        this.publicKey = publicKey;
        return this;
    }
    
    /**
     * These values describe fields in an issued X.509 certificate such as the distinguished name, subject alternative names, serial number, and lifetime.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjectDescription")
    public SubjectDescription subjectDescription;
    public CertificateDescription withSubjectDescription(SubjectDescription subjectDescription) {
        this.subjectDescription = subjectDescription;
        return this;
    }
    
    /**
     * A KeyId identifies a specific public key, usually by hashing the public key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjectKeyId")
    public KeyId subjectKeyId;
    public CertificateDescription withSubjectKeyId(KeyId subjectKeyId) {
        this.subjectKeyId = subjectKeyId;
        return this;
    }
    
    /**
     * An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("x509Description")
    public X509Parameters x509Description;
    public CertificateDescription withX509Description(X509Parameters x509Description) {
        this.x509Description = x509Description;
        return this;
    }
    
}
