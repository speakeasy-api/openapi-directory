<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * PreprintsCreatePreprintAttributesInput - The properties of the preprint entity.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class PreprintsCreatePreprintAttributesInput
{
    /**
     * The DOI of the associated journal article, as entered by the user, if the preprint is published.
     * 
     * @var ?string $doi
     */
	#[\JMS\Serializer\Annotation\SerializedName('doi')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $doi = null;
    
    /**
     * The metadata (copyright year and holder) associated with a license, required for certain licenses.
     * 
     * @var ?string $licenseRecord
     */
	#[\JMS\Serializer\Annotation\SerializedName('license_record')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $licenseRecord = null;
    
    /**
     * A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
     * 
     * @var ?array<string> $subjects
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjects')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subjects = null;
    
	public function __construct()
	{
		$this->doi = null;
		$this->licenseRecord = null;
		$this->subjects = null;
	}
}
