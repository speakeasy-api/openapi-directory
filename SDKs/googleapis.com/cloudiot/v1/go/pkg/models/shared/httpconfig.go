// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HTTPConfigHTTPEnabledStateEnum - If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry.
type HTTPConfigHTTPEnabledStateEnum string

const (
	HTTPConfigHTTPEnabledStateEnumHTTPStateUnspecified HTTPConfigHTTPEnabledStateEnum = "HTTP_STATE_UNSPECIFIED"
	HTTPConfigHTTPEnabledStateEnumHTTPEnabled          HTTPConfigHTTPEnabledStateEnum = "HTTP_ENABLED"
	HTTPConfigHTTPEnabledStateEnumHTTPDisabled         HTTPConfigHTTPEnabledStateEnum = "HTTP_DISABLED"
)

func (e *HTTPConfigHTTPEnabledStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HTTP_STATE_UNSPECIFIED":
		fallthrough
	case "HTTP_ENABLED":
		fallthrough
	case "HTTP_DISABLED":
		*e = HTTPConfigHTTPEnabledStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HTTPConfigHTTPEnabledStateEnum: %s", s)
	}
}

// HTTPConfig - The configuration of the HTTP bridge for a device registry.
type HTTPConfig struct {
	// If enabled, allows devices to use DeviceService via the HTTP protocol. Otherwise, any requests to DeviceService will fail for this registry.
	HTTPEnabledState *HTTPConfigHTTPEnabledStateEnum `json:"httpEnabledState,omitempty"`
}
