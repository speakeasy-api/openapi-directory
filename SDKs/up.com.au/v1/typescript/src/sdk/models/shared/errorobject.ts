/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * If applicable, location in the request that this error relates to. This
 *
 * @remarks
 * may be a parameter in the query string, or a an attribute in the
 * request body.
 *
 */
export class ErrorObjectSource extends SpeakeasyBase {
  /**
   * If this error relates to a query parameter, the name of the
   *
   * @remarks
   * parameter.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;

  /**
   * If this error relates to an attribute in the request body, a
   *
   * @remarks
   * rfc-6901 JSON pointer to the attribute.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pointer" })
  pointer?: string;
}

/**
 * Provides information about an error processing a request.
 *
 * @remarks
 *
 */
export class ErrorObject extends SpeakeasyBase {
  /**
   * A detailed description of this error. This should be considered unique
   *
   * @remarks
   * to individual occurrences of an error and subject to change. It is
   * useful for debugging purposes.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  /**
   * If applicable, location in the request that this error relates to. This
   *
   * @remarks
   * may be a parameter in the query string, or a an attribute in the
   * request body.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => ErrorObjectSource)
  source?: ErrorObjectSource;

  /**
   * The HTTP status code associated with this error. This can also be
   *
   * @remarks
   * obtained from the response headers. The status indicates the broad type
   * of error according to HTTP semantics.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * A short description of this error. This should be stable across
   *
   * @remarks
   * multiple occurrences of this type of error and typically expands on the
   * reason for the status code.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}
