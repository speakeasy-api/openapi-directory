// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteTaskXAmzTargetEnum
type DeleteTaskXAmzTargetEnum string

const (
	DeleteTaskXAmzTargetEnumFmrsServiceDeleteTask DeleteTaskXAmzTargetEnum = "FmrsService.DeleteTask"
)

func (e DeleteTaskXAmzTargetEnum) ToPointer() *DeleteTaskXAmzTargetEnum {
	return &e
}

func (e *DeleteTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FmrsService.DeleteTask":
		*e = DeleteTaskXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTaskXAmzTargetEnum: %v", v)
	}
}

type DeleteTaskRequest struct {
	DeleteTaskRequest shared.DeleteTaskRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteTaskResponse struct {
	ContentType string
	// Success
	DeleteTaskResponse map[string]interface{}
	// InternalException
	InternalException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
