/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BalancingStrategyEnum } from "./balancingstrategyenum";
import { GameServerGroupActionEnum } from "./gameservergroupactionenum";
import { GameServerGroupStatusEnum } from "./gameservergroupstatusenum";
import { GameServerProtectionPolicyEnum } from "./gameserverprotectionpolicyenum";
import { InstanceDefinition } from "./instancedefinition";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>Properties that describe a game server group resource. A game server group manages certain properties related to a corresponding Amazon EC2 Auto Scaling group. </p> <p>A game server group is created by a successful call to <code>CreateGameServerGroup</code> and deleted by calling <code>DeleteGameServerGroup</code>. Game server group activity can be temporarily suspended and resumed by calling <code>SuspendGameServerGroup</code> and <code>ResumeGameServerGroup</code>, respectively. </p>
 */
export class GameServerGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AutoScalingGroupArn" })
  autoScalingGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BalancingStrategy" })
  balancingStrategy?: BalancingStrategyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "GameServerGroupArn" })
  gameServerGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GameServerGroupName" })
  gameServerGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GameServerProtectionPolicy" })
  gameServerProtectionPolicy?: GameServerProtectionPolicyEnum;

  @SpeakeasyMetadata({ elemType: InstanceDefinition })
  @Expose({ name: "InstanceDefinitions" })
  @Type(() => InstanceDefinition)
  instanceDefinitions?: InstanceDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: GameServerGroupStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SuspendedActions" })
  suspendedActions?: GameServerGroupActionEnum[];
}
