/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleFirebaseAppdistroV1Release - A release of a Firebase app.
 */
public class GoogleFirebaseAppdistroV1Release {
    /**
     * Output only. A signed link (which expires in one hour) to directly download the app binary (IPA/APK/AAB) file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("binaryDownloadUri")
    public String binaryDownloadUri;
    public GoogleFirebaseAppdistroV1Release withBinaryDownloadUri(String binaryDownloadUri) {
        this.binaryDownloadUri = binaryDownloadUri;
        return this;
    }
    
    /**
     * Output only. Build version of the release. For an Android release, the build version is the `versionCode`. For an iOS release, the build version is the `CFBundleVersion`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildVersion")
    public String buildVersion;
    public GoogleFirebaseAppdistroV1Release withBuildVersion(String buildVersion) {
        this.buildVersion = buildVersion;
        return this;
    }
    
    /**
     * Output only. The time the release was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public GoogleFirebaseAppdistroV1Release withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. Display version of the release. For an Android release, the display version is the `versionName`. For an iOS release, the display version is the `CFBundleShortVersionString`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayVersion")
    public String displayVersion;
    public GoogleFirebaseAppdistroV1Release withDisplayVersion(String displayVersion) {
        this.displayVersion = displayVersion;
        return this;
    }
    
    /**
     * Output only. A link to the Firebase console displaying a single release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firebaseConsoleUri")
    public String firebaseConsoleUri;
    public GoogleFirebaseAppdistroV1Release withFirebaseConsoleUri(String firebaseConsoleUri) {
        this.firebaseConsoleUri = firebaseConsoleUri;
        return this;
    }
    
    /**
     * The name of the release resource. Format: `projects/{project_number}/apps/{app_id}/releases/{release_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleFirebaseAppdistroV1Release withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Notes that belong to a release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releaseNotes")
    public GoogleFirebaseAppdistroV1ReleaseNotes releaseNotes;
    public GoogleFirebaseAppdistroV1Release withReleaseNotes(GoogleFirebaseAppdistroV1ReleaseNotes releaseNotes) {
        this.releaseNotes = releaseNotes;
        return this;
    }
    
    /**
     * Output only. A link to the release in the tester web clip or Android app that lets testers (which were granted access to the app) view release notes and install the app onto their devices.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testingUri")
    public String testingUri;
    public GoogleFirebaseAppdistroV1Release withTestingUri(String testingUri) {
        this.testingUri = testingUri;
        return this;
    }
    
}
