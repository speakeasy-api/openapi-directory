/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MovedColumnInProjectIssueEvent - Moved Column in Project Issue Event
 */
public class MovedColumnInProjectIssueEvent {
    /**
     * Simple User
     */
    @JsonProperty("actor")
    public SimpleUser actor;

    public MovedColumnInProjectIssueEvent withActor(SimpleUser actor) {
        this.actor = actor;
        return this;
    }
    
    @JsonProperty("commit_id")
    public String commitId;

    public MovedColumnInProjectIssueEvent withCommitId(String commitId) {
        this.commitId = commitId;
        return this;
    }
    
    @JsonProperty("commit_url")
    public String commitUrl;

    public MovedColumnInProjectIssueEvent withCommitUrl(String commitUrl) {
        this.commitUrl = commitUrl;
        return this;
    }
    
    @JsonProperty("created_at")
    public String createdAt;

    public MovedColumnInProjectIssueEvent withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("event")
    public String event;

    public MovedColumnInProjectIssueEvent withEvent(String event) {
        this.event = event;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public MovedColumnInProjectIssueEvent withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;

    public MovedColumnInProjectIssueEvent withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
     */
    @JsonProperty("performed_via_github_app")
    public NullableIntegration performedViaGithubApp;

    public MovedColumnInProjectIssueEvent withPerformedViaGithubApp(NullableIntegration performedViaGithubApp) {
        this.performedViaGithubApp = performedViaGithubApp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project_card")
    public MovedColumnInProjectIssueEventProjectCard projectCard;

    public MovedColumnInProjectIssueEvent withProjectCard(MovedColumnInProjectIssueEventProjectCard projectCard) {
        this.projectCard = projectCard;
        return this;
    }
    
    @JsonProperty("url")
    public String url;

    public MovedColumnInProjectIssueEvent withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public MovedColumnInProjectIssueEvent(@JsonProperty("actor") SimpleUser actor, @JsonProperty("commit_id") String commitId, @JsonProperty("commit_url") String commitUrl, @JsonProperty("created_at") String createdAt, @JsonProperty("event") String event, @JsonProperty("id") Long id, @JsonProperty("node_id") String nodeId, @JsonProperty("performed_via_github_app") NullableIntegration performedViaGithubApp, @JsonProperty("url") String url) {
        this.actor = actor;
        this.commitId = commitId;
        this.commitUrl = commitUrl;
        this.createdAt = createdAt;
        this.event = event;
        this.id = id;
        this.nodeId = nodeId;
        this.performedViaGithubApp = performedViaGithubApp;
        this.url = url;
  }
}
