/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EcKeyType } from "./eckeytype";
import { RsaKeyType } from "./rsakeytype";
import { Expose, Type } from "class-transformer";

/**
 * Describes a "type" of key that may be used in a Certificate issued from a CaPool. Note that a single AllowedKeyType may refer to either a fully-qualified key algorithm, such as RSA 4096, or a family of key algorithms, such as any RSA key.
 */
export class AllowedKeyType extends SpeakeasyBase {
  /**
   * Describes an Elliptic Curve key that may be used in a Certificate issued from a CaPool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ellipticCurve" })
  @Type(() => EcKeyType)
  ellipticCurve?: EcKeyType;

  /**
   * Describes an RSA key that may be used in a Certificate issued from a CaPool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rsa" })
  @Type(() => RsaKeyType)
  rsa?: RsaKeyType;
}
