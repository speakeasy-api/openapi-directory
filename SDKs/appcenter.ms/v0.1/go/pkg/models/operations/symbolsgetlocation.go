// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SymbolsGetLocationSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type SymbolsGetLocationRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the symbol (uuid of the symbol)
	SymbolID string `pathParam:"style=simple,explode=false,name=symbol_id"`
}

// SymbolsGetLocation500ApplicationJSON - Internal error
type SymbolsGetLocation500ApplicationJSON struct {
	Message string `json:"message"`
}

// SymbolsGetLocation404ApplicationJSON - Not found
type SymbolsGetLocation404ApplicationJSON struct {
	Message string `json:"message"`
}

// SymbolsGetLocation403ApplicationJSON - Unauthorized
type SymbolsGetLocation403ApplicationJSON struct {
	Message string `json:"message"`
}

// SymbolsGetLocation200ApplicationJSON - Location for downloading symbol
type SymbolsGetLocation200ApplicationJSON struct {
	URI string `json:"uri"`
}

type SymbolsGetLocationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	SymbolsGetLocation200ApplicationJSONObject *SymbolsGetLocation200ApplicationJSON
	// Unauthorized
	SymbolsGetLocation403ApplicationJSONObject *SymbolsGetLocation403ApplicationJSON
	// Not found
	SymbolsGetLocation404ApplicationJSONObject *SymbolsGetLocation404ApplicationJSON
	// Internal error
	SymbolsGetLocation500ApplicationJSONObject *SymbolsGetLocation500ApplicationJSON
}
