"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentData:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentDataConsumer:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentDataProvider:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentPermissionDateRange:
    
    from_: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"""  
    to: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentPermissionFrequency:
    
    repeats: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repeats') }})  
    unit: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit') }})  
    value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentPermission:
    
    access: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access') }})  
    date_range: ConsentArtifactSchemaConsentPermissionDateRange = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateRange') }})  
    frequency: ConsentArtifactSchemaConsentPermissionFrequency = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequency') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentPurpose:
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsentUser:
    
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})  
    id_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idNumber') }})  
    id_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idType') }})  
    mobile: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobile') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaConsent:
    
    consent_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consentId') }})
    r"""A unique consent id in UUID format."""  
    data: ConsentArtifactSchemaConsentData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})  
    data_consumer: ConsentArtifactSchemaConsentDataConsumer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataConsumer') }})  
    data_provider: ConsentArtifactSchemaConsentDataProvider = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataProvider') }})  
    permission: ConsentArtifactSchemaConsentPermission = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permission') }})  
    purpose: ConsentArtifactSchemaConsentPurpose = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purpose') }})  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"""  
    user: ConsentArtifactSchemaConsentUser = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchemaSignature:
    
    signature: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signature') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentArtifactSchema:
    
    consent: ConsentArtifactSchemaConsent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consent') }})  
    signature: ConsentArtifactSchemaSignature = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signature') }})  
    