/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RestServiceError - Bad Request - a problem reading or understanding the request.
 */
public class RestServiceError {
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    @JsonProperty("detail")
    public String detail;
    public RestServiceError withDetail(String detail) {
        this.detail = detail;
        return this;
    }
    
    /**
     * A code that identifies the problem type.
     */
    @JsonProperty("errorCode")
    public String errorCode;
    public RestServiceError withErrorCode(String errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    /**
     * A unique URI that identifies the specific occurrence of the problem.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instance")
    public String instance;
    public RestServiceError withInstance(String instance) {
        this.instance = instance;
        return this;
    }
    
    /**
     * Detailed explanation of each validation error, when applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidFields")
    public InvalidField[] invalidFields;
    public RestServiceError withInvalidFields(InvalidField[] invalidFields) {
        this.invalidFields = invalidFields;
        return this;
    }
    
    /**
     * A unique reference for the request, essentially the same as `pspReference`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestId")
    public String requestId;
    public RestServiceError withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("response")
    public JSONObject response;
    public RestServiceError withResponse(JSONObject response) {
        this.response = response;
        return this;
    }
    
    /**
     * The HTTP status code.
     */
    @JsonProperty("status")
    public Integer status;
    public RestServiceError withStatus(Integer status) {
        this.status = status;
        return this;
    }
    
    /**
     * A short, human-readable summary of the problem type.
     */
    @JsonProperty("title")
    public String title;
    public RestServiceError withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * A URI that identifies the problem type, pointing to human-readable documentation on this problem type.
     */
    @JsonProperty("type")
    public String type;
    public RestServiceError withType(String type) {
        this.type = type;
        return this;
    }
    
}
