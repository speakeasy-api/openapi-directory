/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DeviceDetailsOutput - OK
 */
public class DeviceDetailsOutput {
    /**
     * Optional trusted client identifier for the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;

    public DeviceDetailsOutput withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Secret value for the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceSecret")
    public String deviceSecret;

    public DeviceDetailsOutput withDeviceSecret(String deviceSecret) {
        this.deviceSecret = deviceSecret;
        return this;
    }
    
    /**
     * Form factor of the push device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formFactor")
    public DeviceDetailsFormFactorEnum formFactor;

    public DeviceDetailsOutput withFormFactor(DeviceDetailsFormFactorEnum formFactor) {
        this.formFactor = formFactor;
        return this;
    }
    
    /**
     * Unique identifier for the device generated by the device itself.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public DeviceDetailsOutput withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Optional metadata object for this device. The metadata for a device may only be set by clients with push-admin privileges and will be used more extensively in the future with smart notifications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;

    public DeviceDetailsOutput withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Platform of the push device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public DeviceDetailsPlatformEnum platform;

    public DeviceDetailsOutput withPlatform(DeviceDetailsPlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * Push recipient details for a device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push.recipient")
    public RecipientOutput pushRecipient;

    public DeviceDetailsOutput withPushRecipient(RecipientOutput pushRecipient) {
        this.pushRecipient = pushRecipient;
        return this;
    }
    
    /**
     * the current state of the push device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push.state")
    public DeviceDetailsPushStateEnum pushState;

    public DeviceDetailsOutput withPushState(DeviceDetailsPushStateEnum pushState) {
        this.pushState = pushState;
        return this;
    }
    
    public DeviceDetailsOutput(){}
}
