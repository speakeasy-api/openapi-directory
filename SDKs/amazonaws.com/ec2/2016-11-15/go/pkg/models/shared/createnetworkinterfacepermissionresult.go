// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum - The type of permission.
type CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum string

const (
	CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnumInstanceAttach CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum = "INSTANCE-ATTACH"
	CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnumEipAssociate   CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum = "EIP-ASSOCIATE"
)

func (e *CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INSTANCE-ATTACH":
		fallthrough
	case "EIP-ASSOCIATE":
		*e = CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum: %s", s)
	}
}

// CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum - The state of the permission.
type CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum string

const (
	CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnumPending  CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum = "pending"
	CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnumGranted  CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum = "granted"
	CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnumRevoking CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum = "revoking"
	CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnumRevoked  CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum = "revoked"
)

func (e *CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "granted":
		fallthrough
	case "revoking":
		fallthrough
	case "revoked":
		*e = CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum: %s", s)
	}
}

// CreateNetworkInterfacePermissionResultInterfacePermissionPermissionState - Information about the state of the permission.
type CreateNetworkInterfacePermissionResultInterfacePermissionPermissionState struct {
	State         *CreateNetworkInterfacePermissionResultInterfacePermissionPermissionStateStateEnum
	StatusMessage *string
}

// CreateNetworkInterfacePermissionResultInterfacePermission - Information about the permission for the network interface.
type CreateNetworkInterfacePermissionResultInterfacePermission struct {
	AwsAccountID                 *string
	AwsService                   *string
	NetworkInterfaceID           *string
	NetworkInterfacePermissionID *string
	Permission                   *CreateNetworkInterfacePermissionResultInterfacePermissionPermissionEnum
	PermissionState              *CreateNetworkInterfacePermissionResultInterfacePermissionPermissionState
}

// CreateNetworkInterfacePermissionResult - Contains the output of CreateNetworkInterfacePermission.
type CreateNetworkInterfacePermissionResult struct {
	InterfacePermission *CreateNetworkInterfacePermissionResultInterfacePermission
}
