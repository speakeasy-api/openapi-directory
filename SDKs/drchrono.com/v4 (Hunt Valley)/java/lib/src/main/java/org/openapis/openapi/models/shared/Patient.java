/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Patient - Created
 */
public class Patient {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;
    public Patient withAddress(String address) {
        this.address = address;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auto_accident_insurance")
    public PatientAutoAccidentInsurance autoAccidentInsurance;
    public Patient withAutoAccidentInsurance(PatientAutoAccidentInsurance autoAccidentInsurance) {
        this.autoAccidentInsurance = autoAccidentInsurance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cell_phone")
    public String cellPhone;
    public Patient withCellPhone(String cellPhone) {
        this.cellPhone = cellPhone;
        return this;
    }
    
    /**
     * Automatically set using first &amp; last name if absent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chart_id")
    public String chartId;
    public Patient withChartId(String chartId) {
        this.chartId = chartId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public Patient withCity(String city) {
        this.city = city;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("copay")
    public String copay;
    public Patient withCopay(String copay) {
        this.copay = copay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_demographics")
    public PatientCustomPatientFieldValue[] customDemographics;
    public Patient withCustomDemographics(PatientCustomPatientFieldValue[] customDemographics) {
        this.customDemographics = customDemographics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_of_birth")
    public String dateOfBirth;
    public Patient withDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }
    
    /**
     * Date of first patient visit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_of_first_appointment")
    public String dateOfFirstAppointment;
    public Patient withDateOfFirstAppointment(String dateOfFirstAppointment) {
        this.dateOfFirstAppointment = dateOfFirstAppointment;
        return this;
    }
    
    /**
     * Date of previous patient visit
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_of_last_appointment")
    public String dateOfLastAppointment;
    public Patient withDateOfLastAppointment(String dateOfLastAppointment) {
        this.dateOfLastAppointment = dateOfLastAppointment;
        return this;
    }
    
    /**
     * ncpdp id of patient's default pharmacy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_pharmacy")
    public String defaultPharmacy;
    public Patient withDefaultPharmacy(String defaultPharmacy) {
        this.defaultPharmacy = defaultPharmacy;
        return this;
    }
    
    /**
     * If True, suppress SMS/Txt messages to this patient even if we have a cell phone # for them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disable_sms_messages")
    public Boolean disableSmsMessages;
    public Patient withDisableSmsMessages(Boolean disableSmsMessages) {
        this.disableSmsMessages = disableSmsMessages;
        return this;
    }
    
    @JsonProperty("doctor")
    public Long doctor;
    public Patient withDoctor(Long doctor) {
        this.doctor = doctor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public Patient withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emergency_contact_name")
    public String emergencyContactName;
    public Patient withEmergencyContactName(String emergencyContactName) {
        this.emergencyContactName = emergencyContactName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emergency_contact_phone")
    public String emergencyContactPhone;
    public Patient withEmergencyContactPhone(String emergencyContactPhone) {
        this.emergencyContactPhone = emergencyContactPhone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emergency_contact_relation")
    public String emergencyContactRelation;
    public Patient withEmergencyContactRelation(String emergencyContactRelation) {
        this.emergencyContactRelation = emergencyContactRelation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employer")
    public String employer;
    public Patient withEmployer(String employer) {
        this.employer = employer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employer_address")
    public String employerAddress;
    public Patient withEmployerAddress(String employerAddress) {
        this.employerAddress = employerAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employer_city")
    public String employerCity;
    public Patient withEmployerCity(String employerCity) {
        this.employerCity = employerCity;
        return this;
    }
    
    /**
     * Two-letter abbreviation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employer_state")
    public String employerState;
    public Patient withEmployerState(String employerState) {
        this.employerState = employerState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employer_zip_code")
    public String employerZipCode;
    public Patient withEmployerZipCode(String employerZipCode) {
        this.employerZipCode = employerZipCode;
        return this;
    }
    
    /**
     * One of `"blank"`, `"hispanic"`, `"not_hispanic"` or `"declined"`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethnicity")
    public PatientEthnicityEnum ethnicity;
    public Patient withEthnicity(PatientEthnicityEnum ethnicity) {
        this.ethnicity = ethnicity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    public String firstName;
    public Patient withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * One of `"Male"`, `"Female"`, or `"Other"`
     */
    @JsonProperty("gender")
    public PatientGenderEnum gender;
    public Patient withGender(PatientGenderEnum gender) {
        this.gender = gender;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("home_phone")
    public String homePhone;
    public Patient withHomePhone(String homePhone) {
        this.homePhone = homePhone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public Patient withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    public String lastName;
    public Patient withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middle_name")
    public String middleName;
    public Patient withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    /**
     * Common name for patient, should be used instead of first name if supplied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nick_name")
    public String nickName;
    public Patient withNickName(String nickName) {
        this.nickName = nickName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("office_phone")
    public String officePhone;
    public Patient withOfficePhone(String officePhone) {
        this.officePhone = officePhone;
        return this;
    }
    
    /**
     * IDs of every office this patient has been to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offices")
    public Long[] offices;
    public Patient withOffices(Long[] offices) {
        this.offices = offices;
        return this;
    }
    
    /**
     * Possible patient flag type that can be attached to the patient
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patient_flags")
    public PatientPatientFlagType[] patientFlags;
    public Patient withPatientFlags(PatientPatientFlagType[] patientFlags) {
        this.patientFlags = patientFlags;
        return this;
    }
    
    /**
     * Patient flags attached to the patient
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patient_flags_attached")
    public PatientPatientFlag[] patientFlagsAttached;
    public Patient withPatientFlagsAttached(PatientPatientFlag[] patientFlagsAttached) {
        this.patientFlagsAttached = patientFlagsAttached;
        return this;
    }
    
    /**
     * One of `""`, `"Cash"`, `"Insurance"`, `"Insurance Out of Network"`, `"Auto Accident"` or `"Worker's Comp"`.&lt;br&gt;**Note:** Patient must already have either `primary_insurance` or `secondary_insurance` or new `primary_insurance` or `secondary_insurance` is passed in request if `Insurance`, `Auto Accident` or `Worker's Comp` payment profiles are chosen.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patient_payment_profile")
    public PatientPatientPaymentProfileEnum patientPaymentProfile;
    public Patient withPatientPaymentProfile(PatientPatientPaymentProfileEnum patientPaymentProfile) {
        this.patientPaymentProfile = patientPaymentProfile;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patient_photo")
    public String patientPhoto;
    public Patient withPatientPhoto(String patientPhoto) {
        this.patientPhoto = patientPhoto;
        return this;
    }
    
    /**
     * Cannot be passed without `patient_photo`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patient_photo_date")
    public String patientPhotoDate;
    public Patient withPatientPhotoDate(String patientPhotoDate) {
        this.patientPhotoDate = patientPhotoDate;
        return this;
    }
    
    /**
     * One of `"A"` (active), `"I"` (inactive), `"D"` (inactive-deceased)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patient_status")
    public PatientPatientStatusEnum patientStatus;
    public Patient withPatientStatus(PatientPatientStatusEnum patientStatus) {
        this.patientStatus = patientStatus;
        return this;
    }
    
    /**
     * Use ISO 639 alpha-3 codes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferred_language")
    public PatientPreferredLanguageEnum preferredLanguage;
    public Patient withPreferredLanguage(PatientPreferredLanguageEnum preferredLanguage) {
        this.preferredLanguage = preferredLanguage;
        return this;
    }
    
    /**
     * Referring doctor for this patient
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primary_care_physician")
    public String primaryCarePhysician;
    public Patient withPrimaryCarePhysician(String primaryCarePhysician) {
        this.primaryCarePhysician = primaryCarePhysician;
        return this;
    }
    
    /**
     * **Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primary_insurance")
    public PatientPrimaryInsurance primaryInsurance;
    public Patient withPrimaryInsurance(PatientPrimaryInsurance primaryInsurance) {
        this.primaryInsurance = primaryInsurance;
        return this;
    }
    
    /**
     * One of `"blank"`, `"indian"`, `"asian"`, `"black"`, `"hawaiian"`, `"white"` or `"declined"`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("race")
    public PatientRaceEnum race;
    public Patient withRace(PatientRaceEnum race) {
        this.race = race;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("referring_doctor")
    public PatientPatient referringDoctor;
    public Patient withReferringDoctor(PatientPatient referringDoctor) {
        this.referringDoctor = referringDoctor;
        return this;
    }
    
    /**
     * Referring source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("referring_source")
    public String referringSource;
    public Patient withReferringSource(String referringSource) {
        this.referringSource = referringSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responsible_party_email")
    public String responsiblePartyEmail;
    public Patient withResponsiblePartyEmail(String responsiblePartyEmail) {
        this.responsiblePartyEmail = responsiblePartyEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responsible_party_name")
    public String responsiblePartyName;
    public Patient withResponsiblePartyName(String responsiblePartyName) {
        this.responsiblePartyName = responsiblePartyName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responsible_party_phone")
    public String responsiblePartyPhone;
    public Patient withResponsiblePartyPhone(String responsiblePartyPhone) {
        this.responsiblePartyPhone = responsiblePartyPhone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responsible_party_relation")
    public String responsiblePartyRelation;
    public Patient withResponsiblePartyRelation(String responsiblePartyRelation) {
        this.responsiblePartyRelation = responsiblePartyRelation;
        return this;
    }
    
    /**
     * **Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondary_insurance")
    public PatientSecondaryInsurance secondaryInsurance;
    public Patient withSecondaryInsurance(PatientSecondaryInsurance secondaryInsurance) {
        this.secondaryInsurance = secondaryInsurance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("social_security_number")
    public String socialSecurityNumber;
    public Patient withSocialSecurityNumber(String socialSecurityNumber) {
        this.socialSecurityNumber = socialSecurityNumber;
        return this;
    }
    
    /**
     * Two-letter abbreviation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public Patient withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * **Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tertiary_insurance")
    public PatientTertiaryInsurance tertiaryInsurance;
    public Patient withTertiaryInsurance(PatientTertiaryInsurance tertiaryInsurance) {
        this.tertiaryInsurance = tertiaryInsurance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;
    public Patient withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workers_comp_insurance")
    public PatientWorkerCompInsurance workersCompInsurance;
    public Patient withWorkersCompInsurance(PatientWorkerCompInsurance workersCompInsurance) {
        this.workersCompInsurance = workersCompInsurance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zip_code")
    public String zipCode;
    public Patient withZipCode(String zipCode) {
        this.zipCode = zipCode;
        return this;
    }
    
}
