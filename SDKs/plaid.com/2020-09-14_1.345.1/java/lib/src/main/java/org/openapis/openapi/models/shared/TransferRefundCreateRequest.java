/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransferRefundCreateRequest - Defines the request schema for `/transfer/refund/create`
 */
public class TransferRefundCreateRequest {
    /**
     * The amount of the refund (decimal string with two digits of precision e.g. "10.00").
     */
    @JsonProperty("amount")
    public String amount;

    public TransferRefundCreateRequest withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public TransferRefundCreateRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * A random key provided by the client, per unique refund. Maximum of 50 characters.
     * 
     * The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a refund fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single refund is created.
     */
    @JsonProperty("idempotency_key")
    public String idempotencyKey;

    public TransferRefundCreateRequest withIdempotencyKey(String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public TransferRefundCreateRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * The ID of the transfer to refund.
     */
    @JsonProperty("transfer_id")
    public String transferId;

    public TransferRefundCreateRequest withTransferId(String transferId) {
        this.transferId = transferId;
        return this;
    }
    
    public TransferRefundCreateRequest(@JsonProperty("amount") String amount, @JsonProperty("idempotency_key") String idempotencyKey, @JsonProperty("transfer_id") String transferId) {
        this.amount = amount;
        this.idempotencyKey = idempotencyKey;
        this.transferId = transferId;
  }
}
