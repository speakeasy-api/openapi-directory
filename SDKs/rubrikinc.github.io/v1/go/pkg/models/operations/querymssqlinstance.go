// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryMssqlInstanceSnappableStatusEnum - Determines whether SQL Server instances are fetched with additional privilege checks.
type QueryMssqlInstanceSnappableStatusEnum string

const (
	QueryMssqlInstanceSnappableStatusEnumProtectable QueryMssqlInstanceSnappableStatusEnum = "Protectable"
)

func (e QueryMssqlInstanceSnappableStatusEnum) ToPointer() *QueryMssqlInstanceSnappableStatusEnum {
	return &e
}

func (e *QueryMssqlInstanceSnappableStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Protectable":
		*e = QueryMssqlInstanceSnappableStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryMssqlInstanceSnappableStatusEnum: %v", v)
	}
}

type QueryMssqlInstanceRequest struct {
	// Limits the instances returned within one cluster specified by primary_cluster_id.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Include only instances that belong to this root.
	RootID *string `queryParam:"style=form,explode=true,name=root_id"`
	// Determines whether SQL Server instances are fetched with additional privilege checks.
	SnappableStatus *QueryMssqlInstanceSnappableStatusEnum `queryParam:"style=form,explode=true,name=snappable_status"`
}

type QueryMssqlInstanceResponse struct {
	ContentType string
	// Returned if the query was successful.
	MssqlInstanceSummaryListResponse *shared.MssqlInstanceSummaryListResponse
	StatusCode                       int
	RawResponse                      *http.Response
}
