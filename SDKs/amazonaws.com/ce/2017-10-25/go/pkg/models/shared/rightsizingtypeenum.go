// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RightsizingTypeEnum string

const (
	RightsizingTypeEnumTerminate RightsizingTypeEnum = "TERMINATE"
	RightsizingTypeEnumModify    RightsizingTypeEnum = "MODIFY"
)

func (e RightsizingTypeEnum) ToPointer() *RightsizingTypeEnum {
	return &e
}

func (e *RightsizingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TERMINATE":
		fallthrough
	case "MODIFY":
		*e = RightsizingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RightsizingTypeEnum: %v", v)
	}
}
