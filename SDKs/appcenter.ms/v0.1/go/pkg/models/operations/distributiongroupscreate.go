// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DistributionGroupsCreateSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type DistributionGroupsCreatePathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// DistributionGroupsCreateRequestBody - The attributes to update for the distribution group
type DistributionGroupsCreateRequestBody struct {
	// The display name of the distribution group. If not specified, the name will be used.
	DisplayName *string `json:"display_name,omitempty"`
	// The name of the distribution group
	Name string `json:"name"`
}

type DistributionGroupsCreateRequest struct {
	PathParams DistributionGroupsCreatePathParams
	// The attributes to update for the distribution group
	Request  DistributionGroupsCreateRequestBody `request:"mediaType=application/json"`
	Security DistributionGroupsCreateSecurity
}

type DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum string

const (
	DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnumBadRequest          DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnumConflict            DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnumNotAcceptable       DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnumNotFound            DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnumInternalServerError DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnumUnauthorized        DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnumTooManyRequests     DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DistributionGroupsCreateDefaultApplicationJSONError struct {
	Code    DistributionGroupsCreateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                      `json:"message"`
}

// DistributionGroupsCreateDefaultApplicationJSON - Error
type DistributionGroupsCreateDefaultApplicationJSON struct {
	Error DistributionGroupsCreateDefaultApplicationJSONError `json:"error"`
}

// DistributionGroupsCreate201ApplicationJSONOriginEnum - The creation origin of this distribution group
type DistributionGroupsCreate201ApplicationJSONOriginEnum string

const (
	DistributionGroupsCreate201ApplicationJSONOriginEnumAppcenter DistributionGroupsCreate201ApplicationJSONOriginEnum = "appcenter"
	DistributionGroupsCreate201ApplicationJSONOriginEnumHockeyapp DistributionGroupsCreate201ApplicationJSONOriginEnum = "hockeyapp"
)

func (e *DistributionGroupsCreate201ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		*e = DistributionGroupsCreate201ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsCreate201ApplicationJSONOriginEnum: %s", s)
	}
}

// DistributionGroupsCreate201ApplicationJSON - Success
type DistributionGroupsCreate201ApplicationJSON struct {
	// The name of the distribution group
	DisplayName *string `json:"display_name,omitempty"`
	// The unique ID of the distribution group
	ID string `json:"id"`
	// Whether the distribution group is public
	IsPublic bool `json:"is_public"`
	// The name of the distribution group used in URLs
	Name string `json:"name"`
	// The creation origin of this distribution group
	Origin DistributionGroupsCreate201ApplicationJSONOriginEnum `json:"origin"`
}

type DistributionGroupsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	DistributionGroupsCreate201ApplicationJSONObject *DistributionGroupsCreate201ApplicationJSON
	// Error
	DistributionGroupsCreateDefaultApplicationJSONObject *DistributionGroupsCreateDefaultApplicationJSON
}
