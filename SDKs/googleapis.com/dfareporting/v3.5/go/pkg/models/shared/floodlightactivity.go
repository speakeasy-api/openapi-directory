// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FloodlightActivityCacheBustingTypeEnum - Code type used for cache busting in the generated tag. Applicable only when floodlightActivityGroupType is COUNTER and countingMethod is STANDARD_COUNTING or UNIQUE_COUNTING.
type FloodlightActivityCacheBustingTypeEnum string

const (
	FloodlightActivityCacheBustingTypeEnumJavascript       FloodlightActivityCacheBustingTypeEnum = "JAVASCRIPT"
	FloodlightActivityCacheBustingTypeEnumActiveServerPage FloodlightActivityCacheBustingTypeEnum = "ACTIVE_SERVER_PAGE"
	FloodlightActivityCacheBustingTypeEnumJsp              FloodlightActivityCacheBustingTypeEnum = "JSP"
	FloodlightActivityCacheBustingTypeEnumPhp              FloodlightActivityCacheBustingTypeEnum = "PHP"
	FloodlightActivityCacheBustingTypeEnumColdFusion       FloodlightActivityCacheBustingTypeEnum = "COLD_FUSION"
)

func (e FloodlightActivityCacheBustingTypeEnum) ToPointer() *FloodlightActivityCacheBustingTypeEnum {
	return &e
}

func (e *FloodlightActivityCacheBustingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JAVASCRIPT":
		fallthrough
	case "ACTIVE_SERVER_PAGE":
		fallthrough
	case "JSP":
		fallthrough
	case "PHP":
		fallthrough
	case "COLD_FUSION":
		*e = FloodlightActivityCacheBustingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FloodlightActivityCacheBustingTypeEnum: %v", v)
	}
}

// FloodlightActivityCountingMethodEnum - Counting method for conversions for this floodlight activity. This is a required field.
type FloodlightActivityCountingMethodEnum string

const (
	FloodlightActivityCountingMethodEnumStandardCounting     FloodlightActivityCountingMethodEnum = "STANDARD_COUNTING"
	FloodlightActivityCountingMethodEnumUniqueCounting       FloodlightActivityCountingMethodEnum = "UNIQUE_COUNTING"
	FloodlightActivityCountingMethodEnumSessionCounting      FloodlightActivityCountingMethodEnum = "SESSION_COUNTING"
	FloodlightActivityCountingMethodEnumTransactionsCounting FloodlightActivityCountingMethodEnum = "TRANSACTIONS_COUNTING"
	FloodlightActivityCountingMethodEnumItemsSoldCounting    FloodlightActivityCountingMethodEnum = "ITEMS_SOLD_COUNTING"
)

func (e FloodlightActivityCountingMethodEnum) ToPointer() *FloodlightActivityCountingMethodEnum {
	return &e
}

func (e *FloodlightActivityCountingMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STANDARD_COUNTING":
		fallthrough
	case "UNIQUE_COUNTING":
		fallthrough
	case "SESSION_COUNTING":
		fallthrough
	case "TRANSACTIONS_COUNTING":
		fallthrough
	case "ITEMS_SOLD_COUNTING":
		*e = FloodlightActivityCountingMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FloodlightActivityCountingMethodEnum: %v", v)
	}
}

// FloodlightActivityFloodlightActivityGroupTypeEnum - Type of the associated floodlight activity group. This is a read-only field.
type FloodlightActivityFloodlightActivityGroupTypeEnum string

const (
	FloodlightActivityFloodlightActivityGroupTypeEnumCounter FloodlightActivityFloodlightActivityGroupTypeEnum = "COUNTER"
	FloodlightActivityFloodlightActivityGroupTypeEnumSale    FloodlightActivityFloodlightActivityGroupTypeEnum = "SALE"
)

func (e FloodlightActivityFloodlightActivityGroupTypeEnum) ToPointer() *FloodlightActivityFloodlightActivityGroupTypeEnum {
	return &e
}

func (e *FloodlightActivityFloodlightActivityGroupTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COUNTER":
		fallthrough
	case "SALE":
		*e = FloodlightActivityFloodlightActivityGroupTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FloodlightActivityFloodlightActivityGroupTypeEnum: %v", v)
	}
}

// FloodlightActivityFloodlightTagTypeEnum - The type of Floodlight tag this activity will generate. This is a required field.
type FloodlightActivityFloodlightTagTypeEnum string

const (
	FloodlightActivityFloodlightTagTypeEnumIframe        FloodlightActivityFloodlightTagTypeEnum = "IFRAME"
	FloodlightActivityFloodlightTagTypeEnumImage         FloodlightActivityFloodlightTagTypeEnum = "IMAGE"
	FloodlightActivityFloodlightTagTypeEnumGlobalSiteTag FloodlightActivityFloodlightTagTypeEnum = "GLOBAL_SITE_TAG"
)

func (e FloodlightActivityFloodlightTagTypeEnum) ToPointer() *FloodlightActivityFloodlightTagTypeEnum {
	return &e
}

func (e *FloodlightActivityFloodlightTagTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IFRAME":
		fallthrough
	case "IMAGE":
		fallthrough
	case "GLOBAL_SITE_TAG":
		*e = FloodlightActivityFloodlightTagTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FloodlightActivityFloodlightTagTypeEnum: %v", v)
	}
}

// FloodlightActivityStatusEnum - The status of the activity. This can only be set to ACTIVE or ARCHIVED_AND_DISABLED. The ARCHIVED status is no longer supported and cannot be set for Floodlight activities. The DISABLED_POLICY status indicates that a Floodlight activity is violating Google policy. Contact your account manager for more information.
type FloodlightActivityStatusEnum string

const (
	FloodlightActivityStatusEnumActive              FloodlightActivityStatusEnum = "ACTIVE"
	FloodlightActivityStatusEnumArchivedAndDisabled FloodlightActivityStatusEnum = "ARCHIVED_AND_DISABLED"
	FloodlightActivityStatusEnumArchived            FloodlightActivityStatusEnum = "ARCHIVED"
	FloodlightActivityStatusEnumDisabledPolicy      FloodlightActivityStatusEnum = "DISABLED_POLICY"
)

func (e FloodlightActivityStatusEnum) ToPointer() *FloodlightActivityStatusEnum {
	return &e
}

func (e *FloodlightActivityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "ARCHIVED_AND_DISABLED":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "DISABLED_POLICY":
		*e = FloodlightActivityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FloodlightActivityStatusEnum: %v", v)
	}
}

// FloodlightActivityTagFormatEnum - Tag format type for the floodlight activity. If left blank, the tag format will default to HTML.
type FloodlightActivityTagFormatEnum string

const (
	FloodlightActivityTagFormatEnumHTML  FloodlightActivityTagFormatEnum = "HTML"
	FloodlightActivityTagFormatEnumXhtml FloodlightActivityTagFormatEnum = "XHTML"
)

func (e FloodlightActivityTagFormatEnum) ToPointer() *FloodlightActivityTagFormatEnum {
	return &e
}

func (e *FloodlightActivityTagFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HTML":
		fallthrough
	case "XHTML":
		*e = FloodlightActivityTagFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FloodlightActivityTagFormatEnum: %v", v)
	}
}

type FloodlightActivityUserDefinedVariableTypesEnum string

const (
	FloodlightActivityUserDefinedVariableTypesEnumU1   FloodlightActivityUserDefinedVariableTypesEnum = "U1"
	FloodlightActivityUserDefinedVariableTypesEnumU2   FloodlightActivityUserDefinedVariableTypesEnum = "U2"
	FloodlightActivityUserDefinedVariableTypesEnumU3   FloodlightActivityUserDefinedVariableTypesEnum = "U3"
	FloodlightActivityUserDefinedVariableTypesEnumU4   FloodlightActivityUserDefinedVariableTypesEnum = "U4"
	FloodlightActivityUserDefinedVariableTypesEnumU5   FloodlightActivityUserDefinedVariableTypesEnum = "U5"
	FloodlightActivityUserDefinedVariableTypesEnumU6   FloodlightActivityUserDefinedVariableTypesEnum = "U6"
	FloodlightActivityUserDefinedVariableTypesEnumU7   FloodlightActivityUserDefinedVariableTypesEnum = "U7"
	FloodlightActivityUserDefinedVariableTypesEnumU8   FloodlightActivityUserDefinedVariableTypesEnum = "U8"
	FloodlightActivityUserDefinedVariableTypesEnumU9   FloodlightActivityUserDefinedVariableTypesEnum = "U9"
	FloodlightActivityUserDefinedVariableTypesEnumU10  FloodlightActivityUserDefinedVariableTypesEnum = "U10"
	FloodlightActivityUserDefinedVariableTypesEnumU11  FloodlightActivityUserDefinedVariableTypesEnum = "U11"
	FloodlightActivityUserDefinedVariableTypesEnumU12  FloodlightActivityUserDefinedVariableTypesEnum = "U12"
	FloodlightActivityUserDefinedVariableTypesEnumU13  FloodlightActivityUserDefinedVariableTypesEnum = "U13"
	FloodlightActivityUserDefinedVariableTypesEnumU14  FloodlightActivityUserDefinedVariableTypesEnum = "U14"
	FloodlightActivityUserDefinedVariableTypesEnumU15  FloodlightActivityUserDefinedVariableTypesEnum = "U15"
	FloodlightActivityUserDefinedVariableTypesEnumU16  FloodlightActivityUserDefinedVariableTypesEnum = "U16"
	FloodlightActivityUserDefinedVariableTypesEnumU17  FloodlightActivityUserDefinedVariableTypesEnum = "U17"
	FloodlightActivityUserDefinedVariableTypesEnumU18  FloodlightActivityUserDefinedVariableTypesEnum = "U18"
	FloodlightActivityUserDefinedVariableTypesEnumU19  FloodlightActivityUserDefinedVariableTypesEnum = "U19"
	FloodlightActivityUserDefinedVariableTypesEnumU20  FloodlightActivityUserDefinedVariableTypesEnum = "U20"
	FloodlightActivityUserDefinedVariableTypesEnumU21  FloodlightActivityUserDefinedVariableTypesEnum = "U21"
	FloodlightActivityUserDefinedVariableTypesEnumU22  FloodlightActivityUserDefinedVariableTypesEnum = "U22"
	FloodlightActivityUserDefinedVariableTypesEnumU23  FloodlightActivityUserDefinedVariableTypesEnum = "U23"
	FloodlightActivityUserDefinedVariableTypesEnumU24  FloodlightActivityUserDefinedVariableTypesEnum = "U24"
	FloodlightActivityUserDefinedVariableTypesEnumU25  FloodlightActivityUserDefinedVariableTypesEnum = "U25"
	FloodlightActivityUserDefinedVariableTypesEnumU26  FloodlightActivityUserDefinedVariableTypesEnum = "U26"
	FloodlightActivityUserDefinedVariableTypesEnumU27  FloodlightActivityUserDefinedVariableTypesEnum = "U27"
	FloodlightActivityUserDefinedVariableTypesEnumU28  FloodlightActivityUserDefinedVariableTypesEnum = "U28"
	FloodlightActivityUserDefinedVariableTypesEnumU29  FloodlightActivityUserDefinedVariableTypesEnum = "U29"
	FloodlightActivityUserDefinedVariableTypesEnumU30  FloodlightActivityUserDefinedVariableTypesEnum = "U30"
	FloodlightActivityUserDefinedVariableTypesEnumU31  FloodlightActivityUserDefinedVariableTypesEnum = "U31"
	FloodlightActivityUserDefinedVariableTypesEnumU32  FloodlightActivityUserDefinedVariableTypesEnum = "U32"
	FloodlightActivityUserDefinedVariableTypesEnumU33  FloodlightActivityUserDefinedVariableTypesEnum = "U33"
	FloodlightActivityUserDefinedVariableTypesEnumU34  FloodlightActivityUserDefinedVariableTypesEnum = "U34"
	FloodlightActivityUserDefinedVariableTypesEnumU35  FloodlightActivityUserDefinedVariableTypesEnum = "U35"
	FloodlightActivityUserDefinedVariableTypesEnumU36  FloodlightActivityUserDefinedVariableTypesEnum = "U36"
	FloodlightActivityUserDefinedVariableTypesEnumU37  FloodlightActivityUserDefinedVariableTypesEnum = "U37"
	FloodlightActivityUserDefinedVariableTypesEnumU38  FloodlightActivityUserDefinedVariableTypesEnum = "U38"
	FloodlightActivityUserDefinedVariableTypesEnumU39  FloodlightActivityUserDefinedVariableTypesEnum = "U39"
	FloodlightActivityUserDefinedVariableTypesEnumU40  FloodlightActivityUserDefinedVariableTypesEnum = "U40"
	FloodlightActivityUserDefinedVariableTypesEnumU41  FloodlightActivityUserDefinedVariableTypesEnum = "U41"
	FloodlightActivityUserDefinedVariableTypesEnumU42  FloodlightActivityUserDefinedVariableTypesEnum = "U42"
	FloodlightActivityUserDefinedVariableTypesEnumU43  FloodlightActivityUserDefinedVariableTypesEnum = "U43"
	FloodlightActivityUserDefinedVariableTypesEnumU44  FloodlightActivityUserDefinedVariableTypesEnum = "U44"
	FloodlightActivityUserDefinedVariableTypesEnumU45  FloodlightActivityUserDefinedVariableTypesEnum = "U45"
	FloodlightActivityUserDefinedVariableTypesEnumU46  FloodlightActivityUserDefinedVariableTypesEnum = "U46"
	FloodlightActivityUserDefinedVariableTypesEnumU47  FloodlightActivityUserDefinedVariableTypesEnum = "U47"
	FloodlightActivityUserDefinedVariableTypesEnumU48  FloodlightActivityUserDefinedVariableTypesEnum = "U48"
	FloodlightActivityUserDefinedVariableTypesEnumU49  FloodlightActivityUserDefinedVariableTypesEnum = "U49"
	FloodlightActivityUserDefinedVariableTypesEnumU50  FloodlightActivityUserDefinedVariableTypesEnum = "U50"
	FloodlightActivityUserDefinedVariableTypesEnumU51  FloodlightActivityUserDefinedVariableTypesEnum = "U51"
	FloodlightActivityUserDefinedVariableTypesEnumU52  FloodlightActivityUserDefinedVariableTypesEnum = "U52"
	FloodlightActivityUserDefinedVariableTypesEnumU53  FloodlightActivityUserDefinedVariableTypesEnum = "U53"
	FloodlightActivityUserDefinedVariableTypesEnumU54  FloodlightActivityUserDefinedVariableTypesEnum = "U54"
	FloodlightActivityUserDefinedVariableTypesEnumU55  FloodlightActivityUserDefinedVariableTypesEnum = "U55"
	FloodlightActivityUserDefinedVariableTypesEnumU56  FloodlightActivityUserDefinedVariableTypesEnum = "U56"
	FloodlightActivityUserDefinedVariableTypesEnumU57  FloodlightActivityUserDefinedVariableTypesEnum = "U57"
	FloodlightActivityUserDefinedVariableTypesEnumU58  FloodlightActivityUserDefinedVariableTypesEnum = "U58"
	FloodlightActivityUserDefinedVariableTypesEnumU59  FloodlightActivityUserDefinedVariableTypesEnum = "U59"
	FloodlightActivityUserDefinedVariableTypesEnumU60  FloodlightActivityUserDefinedVariableTypesEnum = "U60"
	FloodlightActivityUserDefinedVariableTypesEnumU61  FloodlightActivityUserDefinedVariableTypesEnum = "U61"
	FloodlightActivityUserDefinedVariableTypesEnumU62  FloodlightActivityUserDefinedVariableTypesEnum = "U62"
	FloodlightActivityUserDefinedVariableTypesEnumU63  FloodlightActivityUserDefinedVariableTypesEnum = "U63"
	FloodlightActivityUserDefinedVariableTypesEnumU64  FloodlightActivityUserDefinedVariableTypesEnum = "U64"
	FloodlightActivityUserDefinedVariableTypesEnumU65  FloodlightActivityUserDefinedVariableTypesEnum = "U65"
	FloodlightActivityUserDefinedVariableTypesEnumU66  FloodlightActivityUserDefinedVariableTypesEnum = "U66"
	FloodlightActivityUserDefinedVariableTypesEnumU67  FloodlightActivityUserDefinedVariableTypesEnum = "U67"
	FloodlightActivityUserDefinedVariableTypesEnumU68  FloodlightActivityUserDefinedVariableTypesEnum = "U68"
	FloodlightActivityUserDefinedVariableTypesEnumU69  FloodlightActivityUserDefinedVariableTypesEnum = "U69"
	FloodlightActivityUserDefinedVariableTypesEnumU70  FloodlightActivityUserDefinedVariableTypesEnum = "U70"
	FloodlightActivityUserDefinedVariableTypesEnumU71  FloodlightActivityUserDefinedVariableTypesEnum = "U71"
	FloodlightActivityUserDefinedVariableTypesEnumU72  FloodlightActivityUserDefinedVariableTypesEnum = "U72"
	FloodlightActivityUserDefinedVariableTypesEnumU73  FloodlightActivityUserDefinedVariableTypesEnum = "U73"
	FloodlightActivityUserDefinedVariableTypesEnumU74  FloodlightActivityUserDefinedVariableTypesEnum = "U74"
	FloodlightActivityUserDefinedVariableTypesEnumU75  FloodlightActivityUserDefinedVariableTypesEnum = "U75"
	FloodlightActivityUserDefinedVariableTypesEnumU76  FloodlightActivityUserDefinedVariableTypesEnum = "U76"
	FloodlightActivityUserDefinedVariableTypesEnumU77  FloodlightActivityUserDefinedVariableTypesEnum = "U77"
	FloodlightActivityUserDefinedVariableTypesEnumU78  FloodlightActivityUserDefinedVariableTypesEnum = "U78"
	FloodlightActivityUserDefinedVariableTypesEnumU79  FloodlightActivityUserDefinedVariableTypesEnum = "U79"
	FloodlightActivityUserDefinedVariableTypesEnumU80  FloodlightActivityUserDefinedVariableTypesEnum = "U80"
	FloodlightActivityUserDefinedVariableTypesEnumU81  FloodlightActivityUserDefinedVariableTypesEnum = "U81"
	FloodlightActivityUserDefinedVariableTypesEnumU82  FloodlightActivityUserDefinedVariableTypesEnum = "U82"
	FloodlightActivityUserDefinedVariableTypesEnumU83  FloodlightActivityUserDefinedVariableTypesEnum = "U83"
	FloodlightActivityUserDefinedVariableTypesEnumU84  FloodlightActivityUserDefinedVariableTypesEnum = "U84"
	FloodlightActivityUserDefinedVariableTypesEnumU85  FloodlightActivityUserDefinedVariableTypesEnum = "U85"
	FloodlightActivityUserDefinedVariableTypesEnumU86  FloodlightActivityUserDefinedVariableTypesEnum = "U86"
	FloodlightActivityUserDefinedVariableTypesEnumU87  FloodlightActivityUserDefinedVariableTypesEnum = "U87"
	FloodlightActivityUserDefinedVariableTypesEnumU88  FloodlightActivityUserDefinedVariableTypesEnum = "U88"
	FloodlightActivityUserDefinedVariableTypesEnumU89  FloodlightActivityUserDefinedVariableTypesEnum = "U89"
	FloodlightActivityUserDefinedVariableTypesEnumU90  FloodlightActivityUserDefinedVariableTypesEnum = "U90"
	FloodlightActivityUserDefinedVariableTypesEnumU91  FloodlightActivityUserDefinedVariableTypesEnum = "U91"
	FloodlightActivityUserDefinedVariableTypesEnumU92  FloodlightActivityUserDefinedVariableTypesEnum = "U92"
	FloodlightActivityUserDefinedVariableTypesEnumU93  FloodlightActivityUserDefinedVariableTypesEnum = "U93"
	FloodlightActivityUserDefinedVariableTypesEnumU94  FloodlightActivityUserDefinedVariableTypesEnum = "U94"
	FloodlightActivityUserDefinedVariableTypesEnumU95  FloodlightActivityUserDefinedVariableTypesEnum = "U95"
	FloodlightActivityUserDefinedVariableTypesEnumU96  FloodlightActivityUserDefinedVariableTypesEnum = "U96"
	FloodlightActivityUserDefinedVariableTypesEnumU97  FloodlightActivityUserDefinedVariableTypesEnum = "U97"
	FloodlightActivityUserDefinedVariableTypesEnumU98  FloodlightActivityUserDefinedVariableTypesEnum = "U98"
	FloodlightActivityUserDefinedVariableTypesEnumU99  FloodlightActivityUserDefinedVariableTypesEnum = "U99"
	FloodlightActivityUserDefinedVariableTypesEnumU100 FloodlightActivityUserDefinedVariableTypesEnum = "U100"
)

func (e FloodlightActivityUserDefinedVariableTypesEnum) ToPointer() *FloodlightActivityUserDefinedVariableTypesEnum {
	return &e
}

func (e *FloodlightActivityUserDefinedVariableTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "U1":
		fallthrough
	case "U2":
		fallthrough
	case "U3":
		fallthrough
	case "U4":
		fallthrough
	case "U5":
		fallthrough
	case "U6":
		fallthrough
	case "U7":
		fallthrough
	case "U8":
		fallthrough
	case "U9":
		fallthrough
	case "U10":
		fallthrough
	case "U11":
		fallthrough
	case "U12":
		fallthrough
	case "U13":
		fallthrough
	case "U14":
		fallthrough
	case "U15":
		fallthrough
	case "U16":
		fallthrough
	case "U17":
		fallthrough
	case "U18":
		fallthrough
	case "U19":
		fallthrough
	case "U20":
		fallthrough
	case "U21":
		fallthrough
	case "U22":
		fallthrough
	case "U23":
		fallthrough
	case "U24":
		fallthrough
	case "U25":
		fallthrough
	case "U26":
		fallthrough
	case "U27":
		fallthrough
	case "U28":
		fallthrough
	case "U29":
		fallthrough
	case "U30":
		fallthrough
	case "U31":
		fallthrough
	case "U32":
		fallthrough
	case "U33":
		fallthrough
	case "U34":
		fallthrough
	case "U35":
		fallthrough
	case "U36":
		fallthrough
	case "U37":
		fallthrough
	case "U38":
		fallthrough
	case "U39":
		fallthrough
	case "U40":
		fallthrough
	case "U41":
		fallthrough
	case "U42":
		fallthrough
	case "U43":
		fallthrough
	case "U44":
		fallthrough
	case "U45":
		fallthrough
	case "U46":
		fallthrough
	case "U47":
		fallthrough
	case "U48":
		fallthrough
	case "U49":
		fallthrough
	case "U50":
		fallthrough
	case "U51":
		fallthrough
	case "U52":
		fallthrough
	case "U53":
		fallthrough
	case "U54":
		fallthrough
	case "U55":
		fallthrough
	case "U56":
		fallthrough
	case "U57":
		fallthrough
	case "U58":
		fallthrough
	case "U59":
		fallthrough
	case "U60":
		fallthrough
	case "U61":
		fallthrough
	case "U62":
		fallthrough
	case "U63":
		fallthrough
	case "U64":
		fallthrough
	case "U65":
		fallthrough
	case "U66":
		fallthrough
	case "U67":
		fallthrough
	case "U68":
		fallthrough
	case "U69":
		fallthrough
	case "U70":
		fallthrough
	case "U71":
		fallthrough
	case "U72":
		fallthrough
	case "U73":
		fallthrough
	case "U74":
		fallthrough
	case "U75":
		fallthrough
	case "U76":
		fallthrough
	case "U77":
		fallthrough
	case "U78":
		fallthrough
	case "U79":
		fallthrough
	case "U80":
		fallthrough
	case "U81":
		fallthrough
	case "U82":
		fallthrough
	case "U83":
		fallthrough
	case "U84":
		fallthrough
	case "U85":
		fallthrough
	case "U86":
		fallthrough
	case "U87":
		fallthrough
	case "U88":
		fallthrough
	case "U89":
		fallthrough
	case "U90":
		fallthrough
	case "U91":
		fallthrough
	case "U92":
		fallthrough
	case "U93":
		fallthrough
	case "U94":
		fallthrough
	case "U95":
		fallthrough
	case "U96":
		fallthrough
	case "U97":
		fallthrough
	case "U98":
		fallthrough
	case "U99":
		fallthrough
	case "U100":
		*e = FloodlightActivityUserDefinedVariableTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FloodlightActivityUserDefinedVariableTypesEnum: %v", v)
	}
}

// FloodlightActivity - Contains properties of a Floodlight activity.
type FloodlightActivity struct {
	// Account ID of this floodlight activity. This is a read-only field that can be left blank.
	AccountID *string `json:"accountId,omitempty"`
	// Advertiser ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's advertiser or the existing activity's advertiser.
	AdvertiserID *string `json:"advertiserId,omitempty"`
	// Represents a DimensionValue resource.
	AdvertiserIDDimensionValue *DimensionValue `json:"advertiserIdDimensionValue,omitempty"`
	// Whether the activity is enabled for attribution.
	AttributionEnabled *bool `json:"attributionEnabled,omitempty"`
	// Code type used for cache busting in the generated tag. Applicable only when floodlightActivityGroupType is COUNTER and countingMethod is STANDARD_COUNTING or UNIQUE_COUNTING.
	CacheBustingType *FloodlightActivityCacheBustingTypeEnum `json:"cacheBustingType,omitempty"`
	// Counting method for conversions for this floodlight activity. This is a required field.
	CountingMethod *FloodlightActivityCountingMethodEnum `json:"countingMethod,omitempty"`
	// Dynamic floodlight tags.
	DefaultTags []FloodlightActivityDynamicTag `json:"defaultTags,omitempty"`
	// URL where this tag will be deployed. If specified, must be less than 256 characters long.
	ExpectedURL *string `json:"expectedUrl,omitempty"`
	// Floodlight activity group ID of this floodlight activity. This is a required field.
	FloodlightActivityGroupID *string `json:"floodlightActivityGroupId,omitempty"`
	// Name of the associated floodlight activity group. This is a read-only field.
	FloodlightActivityGroupName *string `json:"floodlightActivityGroupName,omitempty"`
	// Tag string of the associated floodlight activity group. This is a read-only field.
	FloodlightActivityGroupTagString *string `json:"floodlightActivityGroupTagString,omitempty"`
	// Type of the associated floodlight activity group. This is a read-only field.
	FloodlightActivityGroupType *FloodlightActivityFloodlightActivityGroupTypeEnum `json:"floodlightActivityGroupType,omitempty"`
	// Floodlight configuration ID of this floodlight activity. If this field is left blank, the value will be copied over either from the activity group's floodlight configuration or from the existing activity's floodlight configuration.
	FloodlightConfigurationID *string `json:"floodlightConfigurationId,omitempty"`
	// Represents a DimensionValue resource.
	FloodlightConfigurationIDDimensionValue *DimensionValue `json:"floodlightConfigurationIdDimensionValue,omitempty"`
	// The type of Floodlight tag this activity will generate. This is a required field.
	FloodlightTagType *FloodlightActivityFloodlightTagTypeEnum `json:"floodlightTagType,omitempty"`
	// ID of this floodlight activity. This is a read-only, auto-generated field.
	ID *string `json:"id,omitempty"`
	// Represents a DimensionValue resource.
	IDDimensionValue *DimensionValue `json:"idDimensionValue,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivity".
	Kind *string `json:"kind,omitempty"`
	// Name of this floodlight activity. This is a required field. Must be less than 129 characters long and cannot contain quotes.
	Name *string `json:"name,omitempty"`
	// General notes or implementation instructions for the tag.
	Notes *string `json:"notes,omitempty"`
	// Publisher dynamic floodlight tags.
	PublisherTags []FloodlightActivityPublisherDynamicTag `json:"publisherTags,omitempty"`
	// Whether this tag should use SSL.
	Secure *bool `json:"secure,omitempty"`
	// Whether the floodlight activity is SSL-compliant. This is a read-only field, its value detected by the system from the floodlight tags.
	SslCompliant *bool `json:"sslCompliant,omitempty"`
	// Whether this floodlight activity must be SSL-compliant.
	SslRequired *bool `json:"sslRequired,omitempty"`
	// The status of the activity. This can only be set to ACTIVE or ARCHIVED_AND_DISABLED. The ARCHIVED status is no longer supported and cannot be set for Floodlight activities. The DISABLED_POLICY status indicates that a Floodlight activity is violating Google policy. Contact your account manager for more information.
	Status *FloodlightActivityStatusEnum `json:"status,omitempty"`
	// Subaccount ID of this floodlight activity. This is a read-only field that can be left blank.
	SubaccountID *string `json:"subaccountId,omitempty"`
	// Tag format type for the floodlight activity. If left blank, the tag format will default to HTML.
	TagFormat *FloodlightActivityTagFormatEnum `json:"tagFormat,omitempty"`
	// Value of the cat= parameter in the floodlight tag, which the ad servers use to identify the activity. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activities of the same activity group. This field is read-only after insertion.
	TagString *string `json:"tagString,omitempty"`
	// List of the user-defined variables used by this conversion tag. These map to the "u[1-100]=" in the tags. Each of these can have a user defined type. Acceptable values are U1 to U100, inclusive.
	UserDefinedVariableTypes []FloodlightActivityUserDefinedVariableTypesEnum `json:"userDefinedVariableTypes,omitempty"`
}
