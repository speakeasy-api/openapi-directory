/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProductPurchase - A ProductPurchase resource indicates the status of a user's inapp product purchase.
 */
public class ProductPurchase {
    /**
     * The acknowledgement state of the inapp product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acknowledgementState")
    public Integer acknowledgementState;
    public ProductPurchase withAcknowledgementState(Integer acknowledgementState) {
        this.acknowledgementState = acknowledgementState;
        return this;
    }
    
    /**
     * The consumption state of the inapp product. Possible values are: 0. Yet to be consumed 1. Consumed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumptionState")
    public Integer consumptionState;
    public ProductPurchase withConsumptionState(Integer consumptionState) {
        this.consumptionState = consumptionState;
        return this;
    }
    
    /**
     * A developer-specified string that contains supplemental information about an order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("developerPayload")
    public String developerPayload;
    public ProductPurchase withDeveloperPayload(String developerPayload) {
        this.developerPayload = developerPayload;
        return this;
    }
    
    /**
     * This kind represents an inappPurchase object in the androidpublisher service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public ProductPurchase withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * An obfuscated version of the id that is uniquely associated with the user's account in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("obfuscatedExternalAccountId")
    public String obfuscatedExternalAccountId;
    public ProductPurchase withObfuscatedExternalAccountId(String obfuscatedExternalAccountId) {
        this.obfuscatedExternalAccountId = obfuscatedExternalAccountId;
        return this;
    }
    
    /**
     * An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("obfuscatedExternalProfileId")
    public String obfuscatedExternalProfileId;
    public ProductPurchase withObfuscatedExternalProfileId(String obfuscatedExternalProfileId) {
        this.obfuscatedExternalProfileId = obfuscatedExternalProfileId;
        return this;
    }
    
    /**
     * The order id associated with the purchase of the inapp product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderId")
    public String orderId;
    public ProductPurchase withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * The inapp product SKU. May not be present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productId")
    public String productId;
    public ProductPurchase withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * The purchase state of the order. Possible values are: 0. Purchased 1. Canceled 2. Pending
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseState")
    public Integer purchaseState;
    public ProductPurchase withPurchaseState(Integer purchaseState) {
        this.purchaseState = purchaseState;
        return this;
    }
    
    /**
     * The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseTimeMillis")
    public String purchaseTimeMillis;
    public ProductPurchase withPurchaseTimeMillis(String purchaseTimeMillis) {
        this.purchaseTimeMillis = purchaseTimeMillis;
        return this;
    }
    
    /**
     * The purchase token generated to identify this purchase. May not be present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseToken")
    public String purchaseToken;
    public ProductPurchase withPurchaseToken(String purchaseToken) {
        this.purchaseToken = purchaseToken;
        return this;
    }
    
    /**
     * The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code) 2. Rewarded (i.e. from watching a video ad instead of paying)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseType")
    public Integer purchaseType;
    public ProductPurchase withPurchaseType(Integer purchaseType) {
        this.purchaseType = purchaseType;
        return this;
    }
    
    /**
     * The quantity associated with the purchase of the inapp product. If not present, the quantity is 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Integer quantity;
    public ProductPurchase withQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * ISO 3166-1 alpha-2 billing region code of the user at the time the product was granted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionCode")
    public String regionCode;
    public ProductPurchase withRegionCode(String regionCode) {
        this.regionCode = regionCode;
        return this;
    }
    
}
