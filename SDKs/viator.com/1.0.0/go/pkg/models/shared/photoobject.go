// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// PhotoObject - **object** detailing a single photo from a user
type PhotoObject struct {
	// **HTML-formatted caption** for *this* photograph
	// - may contain basic HTML mark-up - e.g., br, li, b, u, p, i, ul and ol
	//
	Caption *string `json:"caption,omitempty"`
	// **indicator**: `true` if *this* photograph has been tagged as an *editor's pick*; i.e., can be given preference for display
	EditorsPick *bool `json:"editorsPick,omitempty"`
	// **URL** for the avatar image of the user that submitted *this* photograph
	OwnerAvatarURL *string `json:"ownerAvatarURL,omitempty"`
	// **country** in which the owner of *this* photograph is located
	OwnerCountry *string `json:"ownerCountry,omitempty"`
	// **unique numeric identifier** of the user that owns the photograph
	OwnerID *int64 `json:"ownerId,omitempty"`
	// **handle** of the user that submitted *this* photograph; e.g., 'Husker1k'
	OwnerName *string `json:"ownerName,omitempty"`
	// **URL** of the high-resolution version of *this* photograph
	PhotoHiResURL *string `json:"photoHiResURL,omitempty"`
	// **unique numeric identifier** of *this* photograph
	PhotoID *int64 `json:"photoId,omitempty"`
	// **URL** of the medium-resolution version of *this* photograph
	PhotoMediumResURL *string `json:"photoMediumResURL,omitempty"`
	// **URL** for the standard-resolution version of *this* photograph
	PhotoURL *string `json:"photoURL,omitempty"`
	// **product code** for the product that *this* photograph is of
	ProductCode *string `json:"productCode,omitempty"`
	// **natural-language title** of the product associated with *this* photograph; e.g., 'Sydney and Bondi Hop-on Hop-off Tour'
	ProductTitle *string `json:"productTitle,omitempty"`
	// **URL-formatted title** of the product associated with *this* photograph; e.g., `Sydney-and-Bondi-Hop-on-Hop-off-Tour`
	ProductURLName *string `json:"productUrlName,omitempty"`
	// **sort order** for *this* photograph; e.g., `3`
	SortOrder *int64 `json:"sortOrder,omitempty"`
	// ignore (Viator only)
	SslSupported *bool `json:"sslSupported,omitempty"`
	// **URL** of *this* product's thumbnail image
	ThumbnailURL *string `json:"thumbnailURL,omitempty"`
	// **date** on which *this* photograph was submitted
	TimeUploaded *string `json:"timeUploaded,omitempty"`
	// **title** of *this* photograph
	Title *string `json:"title,omitempty"`
}
