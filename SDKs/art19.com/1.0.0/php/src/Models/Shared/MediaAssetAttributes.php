<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class MediaAssetAttributes
{
    /**
     * This will be replaced by the relationship `attachment` in a future update.<br/>
     * 
     * The ID of the entity this media asset is attached to
     * 
     * 
     * @var ?string $attachmentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachment_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $attachmentId = null;
    
    /**
     * This will be replaced by the relationship `attachment` in a future update.<br/>
     * 
     * The type of the entity this media asset is attached to
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MediaAssetAttributesAttachmentTypeEnum $attachmentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachment_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MediaAssetAttributesAttachmentTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MediaAssetAttributesAttachmentTypeEnum $attachmentType = null;
    
    /**
     * The CDN-URL where the media asset is available
     * 
     * @var ?string $cdnUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('cdn_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cdnUrl = null;
    
    /**
     * The MIME type of the media asset
     * 
     * @var ?string $contentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('content_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contentType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The filename of the media asset without any path components.
     * 
     * 
     * 
     * @var ?string $fileName
     */
	#[\JMS\Serializer\Annotation\SerializedName('file_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fileName = null;
    
    /**
     * The size in bytes of the media asset
     * 
     * @var ?int $fileSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('file_size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fileSize = null;
    
    /**
     * The height in pixels of the media asset, if the media asset is an image
     * 
     * @var ?int $sizeHeight
     */
	#[\JMS\Serializer\Annotation\SerializedName('size_height')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sizeHeight = null;
    
    /**
     * The width in pixels of the media asset, if the media asset is an image
     * 
     * @var ?int $sizeWidth
     */
	#[\JMS\Serializer\Annotation\SerializedName('size_width')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sizeWidth = null;
    
    /**
     * The style of the media asset. A media asset is part of a collection of related media files,
     * 
     * for example an image or an episode (audio). Images usually have differently sized versions,
     * and episodes can have different audio formats.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MediaAssetAttributesStyleEnum $style
     */
	#[\JMS\Serializer\Annotation\SerializedName('style')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MediaAssetAttributesStyleEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MediaAssetAttributesStyleEnum $style = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->attachmentId = null;
		$this->attachmentType = null;
		$this->cdnUrl = null;
		$this->contentType = null;
		$this->createdAt = null;
		$this->fileName = null;
		$this->fileSize = null;
		$this->sizeHeight = null;
		$this->sizeWidth = null;
		$this->style = null;
		$this->updatedAt = null;
	}
}
