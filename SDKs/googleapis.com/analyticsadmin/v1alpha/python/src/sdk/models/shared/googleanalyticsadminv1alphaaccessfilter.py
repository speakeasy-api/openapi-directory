"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleanalyticsadminv1alphaaccessbetweenfilter as shared_googleanalyticsadminv1alphaaccessbetweenfilter
from ..shared import googleanalyticsadminv1alphaaccessinlistfilter as shared_googleanalyticsadminv1alphaaccessinlistfilter
from ..shared import googleanalyticsadminv1alphaaccessnumericfilter as shared_googleanalyticsadminv1alphaaccessnumericfilter
from ..shared import googleanalyticsadminv1alphaaccessstringfilter as shared_googleanalyticsadminv1alphaaccessstringfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaAccessFilter:
    r"""An expression to filter dimension or metric values."""
    
    between_filter: Optional[shared_googleanalyticsadminv1alphaaccessbetweenfilter.GoogleAnalyticsAdminV1alphaAccessBetweenFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('betweenFilter'), 'exclude': lambda f: f is None }})
    r"""To express that the result needs to be between two numbers (inclusive)."""  
    field_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldName'), 'exclude': lambda f: f is None }})
    r"""The dimension name or metric name."""  
    in_list_filter: Optional[shared_googleanalyticsadminv1alphaaccessinlistfilter.GoogleAnalyticsAdminV1alphaAccessInListFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inListFilter'), 'exclude': lambda f: f is None }})
    r"""The result needs to be in a list of string values."""  
    numeric_filter: Optional[shared_googleanalyticsadminv1alphaaccessnumericfilter.GoogleAnalyticsAdminV1alphaAccessNumericFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numericFilter'), 'exclude': lambda f: f is None }})
    r"""Filters for numeric or date values."""  
    string_filter: Optional[shared_googleanalyticsadminv1alphaaccessstringfilter.GoogleAnalyticsAdminV1alphaAccessStringFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringFilter'), 'exclude': lambda f: f is None }})
    r"""The filter for strings."""  
    