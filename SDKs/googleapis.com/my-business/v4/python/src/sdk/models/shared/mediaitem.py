"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attribution as shared_attribution
from ..shared import dimensions as shared_dimensions
from ..shared import locationassociation as shared_locationassociation
from ..shared import mediainsights as shared_mediainsights
from ..shared import mediaitemdataref as shared_mediaitemdataref
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MediaItemMediaFormatEnum(str, Enum):
    r"""The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated."""
    MEDIA_FORMAT_UNSPECIFIED = 'MEDIA_FORMAT_UNSPECIFIED'
    PHOTO = 'PHOTO'
    VIDEO = 'VIDEO'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MediaItem:
    r"""A single media item."""
    
    attribution: Optional[shared_attribution.Attribution] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attribution'), 'exclude': lambda f: f is None }})
    r"""Attribution information for customer media items, such as the contributor's name and profile picture."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Creation time of this media item."""  
    data_ref: Optional[shared_mediaitemdataref.MediaItemDataRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataRef'), 'exclude': lambda f: f is None }})
    r"""Reference to the photo binary data of a `MediaItem` uploaded through the Google My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description for this media item. Descriptions cannot be modified through the Google My Business API, but can be set when creating a new media item that is not a cover photo."""  
    dimensions: Optional[shared_dimensions.Dimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""Dimensions of the media item."""  
    google_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('googleUrl'), 'exclude': lambda f: f is None }})
    r"""Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon."""  
    insights: Optional[shared_mediainsights.MediaInsights] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insights'), 'exclude': lambda f: f is None }})
    r"""Insights and statistics for the media item."""  
    location_association: Optional[shared_locationassociation.LocationAssociation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationAssociation'), 'exclude': lambda f: f is None }})
    r"""How the media item is associated with its location."""  
    media_format: Optional[MediaItemMediaFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mediaFormat'), 'exclude': lambda f: f is None }})
    r"""The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`"""  
    source_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceUrl'), 'exclude': lambda f: f is None }})
    r"""A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated."""  
    thumbnail_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnailUrl'), 'exclude': lambda f: f is None }})
    r"""Output only. Where provided, the URL of a thumbnail image for this media item."""  
    