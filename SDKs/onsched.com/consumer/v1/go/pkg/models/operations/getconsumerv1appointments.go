// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetConsumerV1AppointmentsRequest struct {
	// Filter by the email of who booked
	BookedBy *string `queryParam:"style=form,explode=true,name=bookedBy"`
	// Filter by calendar
	CalendarID *string `queryParam:"style=form,explode=true,name=calendarId"`
	// Filter by customer
	CustomerID *string `queryParam:"style=form,explode=true,name=customerId"`
	// Filter by email address
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// Format YYYY-MM-DD. Filter on/before endDate
	EndDate *time.Time `queryParam:"style=form,explode=true,name=endDate"`
	// Filter by lastname or part of it
	Lastname *string `queryParam:"style=form,explode=true,name=lastname"`
	// Page limit, default 20, max 100
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// id of business location
	LocationID *string `queryParam:"style=form,explode=true,name=locationId"`
	// Starting row of page, default 0
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter by phone number or part of it
	Phone *string `queryParam:"style=form,explode=true,name=phone"`
	// Filter by resource
	ResourceID *string `queryParam:"style=form,explode=true,name=resourceId"`
	// Filter by service allocation
	ServiceAllocationID *string `queryParam:"style=form,explode=true,name=serviceAllocationId"`
	// Filter by service
	ServiceID *string `queryParam:"style=form,explode=true,name=serviceId"`
	// Format YYYY-MM-DD. Filter by on/after startDate
	StartDate *time.Time `queryParam:"style=form,explode=true,name=startDate"`
	// Filter by status: IN, BK, CN, RE, RS
	Status *string `queryParam:"style=form,explode=true,name=status"`
}

type GetConsumerV1AppointmentsResponse struct {
	// Success
	AppointmentListViewModel *shared.AppointmentListViewModel
	ContentType              string
	StatusCode               int
	RawResponse              *http.Response
}
