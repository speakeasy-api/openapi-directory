// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FirelensConfigurationTypeEnum string

const (
	FirelensConfigurationTypeEnumFluentd   FirelensConfigurationTypeEnum = "fluentd"
	FirelensConfigurationTypeEnumFluentbit FirelensConfigurationTypeEnum = "fluentbit"
)

func (e FirelensConfigurationTypeEnum) ToPointer() *FirelensConfigurationTypeEnum {
	return &e
}

func (e *FirelensConfigurationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fluentd":
		fallthrough
	case "fluentbit":
		*e = FirelensConfigurationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FirelensConfigurationTypeEnum: %v", v)
	}
}
