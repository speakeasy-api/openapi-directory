"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum(str, Enum):
    r"""The type of the scope."""
    PUBLIC = 'public'
    PRIVATE = 'private'

class DescribeIpamScopesResultIpamScopesStateEnum(str, Enum):
    r"""The state of the IPAM scope."""
    CREATE_IN_PROGRESS = 'create-in-progress'
    CREATE_COMPLETE = 'create-complete'
    CREATE_FAILED = 'create-failed'
    MODIFY_IN_PROGRESS = 'modify-in-progress'
    MODIFY_COMPLETE = 'modify-complete'
    MODIFY_FAILED = 'modify-failed'
    DELETE_IN_PROGRESS = 'delete-in-progress'
    DELETE_COMPLETE = 'delete-complete'
    DELETE_FAILED = 'delete-failed'
    ISOLATE_IN_PROGRESS = 'isolate-in-progress'
    ISOLATE_COMPLETE = 'isolate-complete'
    RESTORE_IN_PROGRESS = 'restore-in-progress'


@dataclasses.dataclass
class DescribeIpamScopesResultIpamScopesTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeIpamScopesResultIpamScopes:
    r"""<p>In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.</p> <p>For more information, see <a href=\\"https://docs.aws.amazon.com/vpc/latest/ipam/how-it-works-ipam.html\\">How IPAM works</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>"""
    
    description: Optional[str] = dataclasses.field(default=None)  
    ipam_arn: Optional[str] = dataclasses.field(default=None)  
    ipam_region: Optional[str] = dataclasses.field(default=None)  
    ipam_scope_arn: Optional[str] = dataclasses.field(default=None)  
    ipam_scope_id: Optional[str] = dataclasses.field(default=None)  
    ipam_scope_type: Optional[DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum] = dataclasses.field(default=None)  
    is_default: Optional[bool] = dataclasses.field(default=None)  
    owner_id: Optional[str] = dataclasses.field(default=None)  
    pool_count: Optional[int] = dataclasses.field(default=None)  
    state: Optional[DescribeIpamScopesResultIpamScopesStateEnum] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeIpamScopesResultIpamScopesTags]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeIpamScopesResult:
    r"""Success"""
    
    ipam_scopes: Optional[list[DescribeIpamScopesResultIpamScopes]] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    