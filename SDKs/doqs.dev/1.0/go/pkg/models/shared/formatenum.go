// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FormatEnum - An enumeration.
type FormatEnum string

const (
	FormatEnumA0 FormatEnum = "a0"
	FormatEnumA1 FormatEnum = "a1"
	FormatEnumA2 FormatEnum = "a2"
	FormatEnumA3 FormatEnum = "a3"
	FormatEnumA4 FormatEnum = "a4"
	FormatEnumA5 FormatEnum = "a5"
	FormatEnumA6 FormatEnum = "a6"
)

func (e FormatEnum) ToPointer() *FormatEnum {
	return &e
}

func (e *FormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "a0":
		fallthrough
	case "a1":
		fallthrough
	case "a2":
		fallthrough
	case "a3":
		fallthrough
	case "a4":
		fallthrough
	case "a5":
		fallthrough
	case "a6":
		*e = FormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FormatEnum: %v", v)
	}
}
