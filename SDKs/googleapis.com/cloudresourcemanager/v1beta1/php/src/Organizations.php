<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Organizations 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Fetches an Organization resource identified by the specified resource name.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetResponse
     */
	public function cloudresourcemanagerOrganizationsGet(
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->organization = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Organization', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets the access control policy for an Organization resource. May be empty if no such policy or resource exists. The `resource` field should be the organization's resource name, e.g. "organizations/123".
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicyRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicySecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicyResponse
     */
	public function cloudresourcemanagerOrganizationsGetIamPolicy(
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicyRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicySecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/{resource}:getIamPolicy', \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicyRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "getIamPolicyRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicyRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsGetIamPolicyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->policy = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Policy', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists Organization resources that are visible to the user and satisfy the specified filter. This method returns Organizations in an unspecified order. New Organizations do not necessarily appear at the end of the list.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListResponse
     */
	public function cloudresourcemanagerOrganizationsList(
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/organizations');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listOrganizationsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListOrganizationsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Sets the access control policy on an Organization resource. Replaces any existing policy. The `resource` field should be the organization's resource name, e.g. "organizations/123".
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicyRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicySecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicyResponse
     */
	public function cloudresourcemanagerOrganizationsSetIamPolicy(
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicyRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicySecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/{resource}:setIamPolicy', \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicyRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "setIamPolicyRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicyRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsSetIamPolicyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->policy = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Policy', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Returns permissions that a caller has on the specified Organization. The `resource` field should be the organization's resource name, e.g. "organizations/123".
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsResponse
     */
	public function cloudresourcemanagerOrganizationsTestIamPermissions(
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/{resource}:testIamPermissions', \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "testIamPermissionsRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsTestIamPermissionsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->testIamPermissionsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\TestIamPermissionsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates an Organization resource identified by the specified resource name.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateResponse
     */
	public function cloudresourcemanagerOrganizationsUpdate(
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "organization", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudresourcemanagerOrganizationsUpdateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->organization = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Organization', 'json');
            }
        }

        return $response;
    }
}