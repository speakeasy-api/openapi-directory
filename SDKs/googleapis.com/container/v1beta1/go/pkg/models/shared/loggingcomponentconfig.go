// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoggingComponentConfigEnableComponentsEnum string

const (
	LoggingComponentConfigEnableComponentsEnumComponentUnspecified LoggingComponentConfigEnableComponentsEnum = "COMPONENT_UNSPECIFIED"
	LoggingComponentConfigEnableComponentsEnumSystemComponents     LoggingComponentConfigEnableComponentsEnum = "SYSTEM_COMPONENTS"
	LoggingComponentConfigEnableComponentsEnumWorkloads            LoggingComponentConfigEnableComponentsEnum = "WORKLOADS"
	LoggingComponentConfigEnableComponentsEnumApiserver            LoggingComponentConfigEnableComponentsEnum = "APISERVER"
	LoggingComponentConfigEnableComponentsEnumScheduler            LoggingComponentConfigEnableComponentsEnum = "SCHEDULER"
	LoggingComponentConfigEnableComponentsEnumControllerManager    LoggingComponentConfigEnableComponentsEnum = "CONTROLLER_MANAGER"
)

func (e LoggingComponentConfigEnableComponentsEnum) ToPointer() *LoggingComponentConfigEnableComponentsEnum {
	return &e
}

func (e *LoggingComponentConfigEnableComponentsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPONENT_UNSPECIFIED":
		fallthrough
	case "SYSTEM_COMPONENTS":
		fallthrough
	case "WORKLOADS":
		fallthrough
	case "APISERVER":
		fallthrough
	case "SCHEDULER":
		fallthrough
	case "CONTROLLER_MANAGER":
		*e = LoggingComponentConfigEnableComponentsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoggingComponentConfigEnableComponentsEnum: %v", v)
	}
}

// LoggingComponentConfig - LoggingComponentConfig is cluster logging component configuration.
type LoggingComponentConfig struct {
	// Select components to collect logs. An empty set would disable all logging.
	EnableComponents []LoggingComponentConfigEnableComponentsEnum `json:"enableComponents,omitempty"`
}
