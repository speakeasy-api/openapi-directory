"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TableRowStyle:
    r"""Styles that apply to a table row."""
    
    min_row_height: Optional[shared_dimension.Dimension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minRowHeight'), 'exclude': lambda f: f is None }})
    r"""A magnitude in a single direction in the specified units."""  
    prevent_overflow: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preventOverflow'), 'exclude': lambda f: f is None }})
    r"""Whether the row cannot overflow across page or column boundaries."""  
    table_header: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableHeader'), 'exclude': lambda f: f is None }})
    r"""Whether the row is a table header."""  
    