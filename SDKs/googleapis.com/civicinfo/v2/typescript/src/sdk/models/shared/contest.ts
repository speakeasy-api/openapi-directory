/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Candidate } from "./candidate";
import { ElectoralDistrict } from "./electoraldistrict";
import { Source } from "./source";
import { Expose, Type } from "class-transformer";

export enum ContestLevelEnum {
  International = "international",
  Country = "country",
  AdministrativeArea1 = "administrativeArea1",
  Regional = "regional",
  AdministrativeArea2 = "administrativeArea2",
  Locality = "locality",
  SubLocality1 = "subLocality1",
  SubLocality2 = "subLocality2",
  Special = "special",
}

export enum ContestRolesEnum {
  HeadOfState = "headOfState",
  HeadOfGovernment = "headOfGovernment",
  DeputyHeadOfGovernment = "deputyHeadOfGovernment",
  GovernmentOfficer = "governmentOfficer",
  ExecutiveCouncil = "executiveCouncil",
  LegislatorUpperBody = "legislatorUpperBody",
  LegislatorLowerBody = "legislatorLowerBody",
  HighestCourtJudge = "highestCourtJudge",
  Judge = "judge",
  SchoolBoard = "schoolBoard",
  SpecialPurposeOfficer = "specialPurposeOfficer",
  OtherRole = "otherRole",
}

/**
 * Information about a contest that appears on a voter's ballot.
 */
export class Contest extends SpeakeasyBase {
  /**
   * A number specifying the position of this contest on the voter's ballot.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ballotPlacement" })
  ballotPlacement?: string;

  /**
   * The official title on the ballot for this contest, only where available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ballotTitle" })
  ballotTitle?: string;

  /**
   * The candidate choices for this contest.
   */
  @SpeakeasyMetadata({ elemType: Candidate })
  @Expose({ name: "candidates" })
  @Type(() => Candidate)
  candidates?: Candidate[];

  /**
   * Describes the geographic scope of a contest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "district" })
  @Type(() => ElectoralDistrict)
  district?: ElectoralDistrict;

  /**
   * A description of any additional eligibility requirements for voting in this contest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "electorateSpecifications" })
  electorateSpecifications?: string;

  /**
   * The levels of government of the office for this contest. There may be more than one in cases where a jurisdiction effectively acts at two different levels of government; for example, the mayor of the District of Columbia acts at "locality" level, but also effectively at both "administrative-area-2" and "administrative-area-1".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "level" })
  level?: ContestLevelEnum[];

  /**
   * The number of candidates that will be elected to office in this contest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numberElected" })
  numberElected?: string;

  /**
   * The number of candidates that a voter may vote for in this contest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numberVotingFor" })
  numberVotingFor?: string;

  /**
   * The name of the office for this contest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "office" })
  office?: string;

  /**
   * If this is a partisan election, the name of the party/parties it is for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primaryParties" })
  primaryParties?: string[];

  /**
   * The set of ballot responses for the referendum. A ballot response represents a line on the ballot. Common examples might include "yes" or "no" for referenda. This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumBallotResponses" })
  referendumBallotResponses?: string[];

  /**
   * Specifies a short summary of the referendum that is typically on the ballot below the title but above the text. This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumBrief" })
  referendumBrief?: string;

  /**
   * A statement in opposition to the referendum. It does not necessarily appear on the ballot. This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumConStatement" })
  referendumConStatement?: string;

  /**
   * Specifies what effect abstaining (not voting) on the proposition will have (i.e. whether abstaining is considered a vote against it). This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumEffectOfAbstain" })
  referendumEffectOfAbstain?: string;

  /**
   * The threshold of votes that the referendum needs in order to pass, e.g. "two-thirds". This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumPassageThreshold" })
  referendumPassageThreshold?: string;

  /**
   * A statement in favor of the referendum. It does not necessarily appear on the ballot. This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumProStatement" })
  referendumProStatement?: string;

  /**
   * A brief description of the referendum. This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumSubtitle" })
  referendumSubtitle?: string;

  /**
   * The full text of the referendum. This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumText" })
  referendumText?: string;

  /**
   * The title of the referendum (e.g. 'Proposition 42'). This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumTitle" })
  referendumTitle?: string;

  /**
   * A link to the referendum. This field is only populated for contests of type 'Referendum'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referendumUrl" })
  referendumUrl?: string;

  /**
   * The roles which this office fulfills.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roles" })
  roles?: ContestRolesEnum[];

  /**
   * A list of sources for this contest. If multiple sources are listed, the data has been aggregated from those sources.
   */
  @SpeakeasyMetadata({ elemType: Source })
  @Expose({ name: "sources" })
  @Type(() => Source)
  sources?: Source[];

  /**
   * "Yes" or "No" depending on whether this a contest being held outside the normal election cycle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "special" })
  special?: string;

  /**
   * The type of contest. Usually this will be 'General', 'Primary', or 'Run-off' for contests with candidates. For referenda this will be 'Referendum'. For Retention contests this will typically be 'Retention'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
