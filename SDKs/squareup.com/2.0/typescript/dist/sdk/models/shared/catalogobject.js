"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogObject = void 0;
var utils_1 = require("../../../internal/utils");
var catalogcategory_1 = require("./catalogcategory");
var catalogcustomattributedefinition_1 = require("./catalogcustomattributedefinition");
var catalogcustomattributevalue_1 = require("./catalogcustomattributevalue");
var catalogdiscount_1 = require("./catalogdiscount");
var catalogimage_1 = require("./catalogimage");
var catalogitem_1 = require("./catalogitem");
var catalogitemoption_1 = require("./catalogitemoption");
var catalogitemoptionvalue_1 = require("./catalogitemoptionvalue");
var catalogitemvariation_1 = require("./catalogitemvariation");
var catalogmeasurementunit_1 = require("./catalogmeasurementunit");
var catalogmodifier_1 = require("./catalogmodifier");
var catalogmodifierlist_1 = require("./catalogmodifierlist");
var catalogpricingrule_1 = require("./catalogpricingrule");
var catalogproductset_1 = require("./catalogproductset");
var catalogquickamountssettings_1 = require("./catalogquickamountssettings");
var catalogsubscriptionplan_1 = require("./catalogsubscriptionplan");
var catalogtax_1 = require("./catalogtax");
var catalogtimeperiod_1 = require("./catalogtimeperiod");
var catalogv1id_1 = require("./catalogv1id");
var class_transformer_1 = require("class-transformer");
/**
 * The wrapper object for the Catalog entries of a given object type.
 *
 * @remarks
 *
 * The type of a particular `CatalogObject` is determined by the value of the
 * `type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.
 * For example, the following list shows some instances of `CatalogObject` of a given `type` and
 * their corresponding data attribute that can be set:
 * - For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.
 * - For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.
 * - For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.
 * - For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.
 * - For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.
 * - For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.
 * - For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.
 * - For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.
 * - For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.
 * - For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.
 * - For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.
 * - For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.
 * - For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.
 *
 *
 * For a more detailed discussion of the Catalog data model, please see the
 * [Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog) guide.
 */
var CatalogObject = /** @class */ (function (_super) {
    __extends(CatalogObject, _super);
    function CatalogObject() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "absent_at_location_ids" }),
        __metadata("design:type", Array)
    ], CatalogObject.prototype, "absentAtLocationIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: catalogv1id_1.CatalogV1Id }),
        (0, class_transformer_1.Expose)({ name: "catalog_v1_ids" }),
        (0, class_transformer_1.Type)(function () { return catalogv1id_1.CatalogV1Id; }),
        __metadata("design:type", Array)
    ], CatalogObject.prototype, "catalogV1Ids", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category_data" }),
        (0, class_transformer_1.Type)(function () { return catalogcategory_1.CatalogCategory; }),
        __metadata("design:type", catalogcategory_1.CatalogCategory)
    ], CatalogObject.prototype, "categoryData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_attribute_definition_data" }),
        (0, class_transformer_1.Type)(function () { return catalogcustomattributedefinition_1.CatalogCustomAttributeDefinition; }),
        __metadata("design:type", catalogcustomattributedefinition_1.CatalogCustomAttributeDefinition)
    ], CatalogObject.prototype, "customAttributeDefinitionData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: catalogcustomattributevalue_1.CatalogCustomAttributeValue }),
        (0, class_transformer_1.Expose)({ name: "custom_attribute_values" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], catalogcustomattributevalue_1.CatalogCustomAttributeValue);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], CatalogObject.prototype, "customAttributeValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "discount_data" }),
        (0, class_transformer_1.Type)(function () { return catalogdiscount_1.CatalogDiscount; }),
        __metadata("design:type", catalogdiscount_1.CatalogDiscount)
    ], CatalogObject.prototype, "discountData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], CatalogObject.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image_data" }),
        (0, class_transformer_1.Type)(function () { return catalogimage_1.CatalogImage; }),
        __metadata("design:type", catalogimage_1.CatalogImage)
    ], CatalogObject.prototype, "imageData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image_id" }),
        __metadata("design:type", String)
    ], CatalogObject.prototype, "imageId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_deleted" }),
        __metadata("design:type", Boolean)
    ], CatalogObject.prototype, "isDeleted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "item_data" }),
        (0, class_transformer_1.Type)(function () { return catalogitem_1.CatalogItem; }),
        __metadata("design:type", catalogitem_1.CatalogItem)
    ], CatalogObject.prototype, "itemData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "item_option_data" }),
        (0, class_transformer_1.Type)(function () { return catalogitemoption_1.CatalogItemOption; }),
        __metadata("design:type", catalogitemoption_1.CatalogItemOption)
    ], CatalogObject.prototype, "itemOptionData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "item_option_value_data" }),
        (0, class_transformer_1.Type)(function () { return catalogitemoptionvalue_1.CatalogItemOptionValue; }),
        __metadata("design:type", catalogitemoptionvalue_1.CatalogItemOptionValue)
    ], CatalogObject.prototype, "itemOptionValueData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "item_variation_data" }),
        (0, class_transformer_1.Type)(function () { return catalogitemvariation_1.CatalogItemVariation; }),
        __metadata("design:type", catalogitemvariation_1.CatalogItemVariation)
    ], CatalogObject.prototype, "itemVariationData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "measurement_unit_data" }),
        (0, class_transformer_1.Type)(function () { return catalogmeasurementunit_1.CatalogMeasurementUnit; }),
        __metadata("design:type", catalogmeasurementunit_1.CatalogMeasurementUnit)
    ], CatalogObject.prototype, "measurementUnitData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "modifier_data" }),
        (0, class_transformer_1.Type)(function () { return catalogmodifier_1.CatalogModifier; }),
        __metadata("design:type", catalogmodifier_1.CatalogModifier)
    ], CatalogObject.prototype, "modifierData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "modifier_list_data" }),
        (0, class_transformer_1.Type)(function () { return catalogmodifierlist_1.CatalogModifierList; }),
        __metadata("design:type", catalogmodifierlist_1.CatalogModifierList)
    ], CatalogObject.prototype, "modifierListData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "present_at_all_locations" }),
        __metadata("design:type", Boolean)
    ], CatalogObject.prototype, "presentAtAllLocations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "present_at_location_ids" }),
        __metadata("design:type", Array)
    ], CatalogObject.prototype, "presentAtLocationIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pricing_rule_data" }),
        (0, class_transformer_1.Type)(function () { return catalogpricingrule_1.CatalogPricingRule; }),
        __metadata("design:type", catalogpricingrule_1.CatalogPricingRule)
    ], CatalogObject.prototype, "pricingRuleData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "product_set_data" }),
        (0, class_transformer_1.Type)(function () { return catalogproductset_1.CatalogProductSet; }),
        __metadata("design:type", catalogproductset_1.CatalogProductSet)
    ], CatalogObject.prototype, "productSetData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quick_amounts_settings_data" }),
        (0, class_transformer_1.Type)(function () { return catalogquickamountssettings_1.CatalogQuickAmountsSettings; }),
        __metadata("design:type", catalogquickamountssettings_1.CatalogQuickAmountsSettings)
    ], CatalogObject.prototype, "quickAmountsSettingsData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscription_plan_data" }),
        (0, class_transformer_1.Type)(function () { return catalogsubscriptionplan_1.CatalogSubscriptionPlan; }),
        __metadata("design:type", catalogsubscriptionplan_1.CatalogSubscriptionPlan)
    ], CatalogObject.prototype, "subscriptionPlanData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tax_data" }),
        (0, class_transformer_1.Type)(function () { return catalogtax_1.CatalogTax; }),
        __metadata("design:type", catalogtax_1.CatalogTax)
    ], CatalogObject.prototype, "taxData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "time_period_data" }),
        (0, class_transformer_1.Type)(function () { return catalogtimeperiod_1.CatalogTimePeriod; }),
        __metadata("design:type", catalogtimeperiod_1.CatalogTimePeriod)
    ], CatalogObject.prototype, "timePeriodData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], CatalogObject.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated_at" }),
        __metadata("design:type", String)
    ], CatalogObject.prototype, "updatedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version" }),
        __metadata("design:type", Number)
    ], CatalogObject.prototype, "version", void 0);
    return CatalogObject;
}(utils_1.SpeakeasyBase));
exports.CatalogObject = CatalogObject;
