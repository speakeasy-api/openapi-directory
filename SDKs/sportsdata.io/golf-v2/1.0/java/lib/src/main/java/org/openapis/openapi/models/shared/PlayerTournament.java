/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayerTournament {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Birdies")
    public Double birdies;
    public PlayerTournament withBirdies(Double birdies) {
        this.birdies = birdies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BogeyFreeRounds")
    public Double bogeyFreeRounds;
    public PlayerTournament withBogeyFreeRounds(Double bogeyFreeRounds) {
        this.bogeyFreeRounds = bogeyFreeRounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Bogeys")
    public Double bogeys;
    public PlayerTournament withBogeys(Double bogeys) {
        this.bogeys = bogeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BounceBackCount")
    public Double bounceBackCount;
    public PlayerTournament withBounceBackCount(Double bounceBackCount) {
        this.bounceBackCount = bounceBackCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConsecutiveBirdieOrBetterCount")
    public Double consecutiveBirdieOrBetterCount;
    public PlayerTournament withConsecutiveBirdieOrBetterCount(Double consecutiveBirdieOrBetterCount) {
        this.consecutiveBirdieOrBetterCount = consecutiveBirdieOrBetterCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Country")
    public String country;
    public PlayerTournament withCountry(String country) {
        this.country = country;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DoubleBogeys")
    public Double doubleBogeys;
    public PlayerTournament withDoubleBogeys(Double doubleBogeys) {
        this.doubleBogeys = doubleBogeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DoubleEagles")
    public Double doubleEagles;
    public PlayerTournament withDoubleEagles(Double doubleEagles) {
        this.doubleEagles = doubleEagles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsSalary")
    public Long draftKingsSalary;
    public PlayerTournament withDraftKingsSalary(Long draftKingsSalary) {
        this.draftKingsSalary = draftKingsSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Eagles")
    public Double eagles;
    public PlayerTournament withEagles(Double eagles) {
        this.eagles = eagles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Earnings")
    public Double earnings;
    public PlayerTournament withEarnings(Double earnings) {
        this.earnings = earnings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelSalary")
    public Long fanDuelSalary;
    public PlayerTournament withFanDuelSalary(Long fanDuelSalary) {
        this.fanDuelSalary = fanDuelSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftSalary")
    public Long fantasyDraftSalary;
    public PlayerTournament withFantasyDraftSalary(Long fantasyDraftSalary) {
        this.fantasyDraftSalary = fantasyDraftSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;
    public PlayerTournament withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;
    public PlayerTournament withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;
    public PlayerTournament withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFantasyDraft")
    public Double fantasyPointsFantasyDraft;
    public PlayerTournament withFantasyPointsFantasyDraft(Double fantasyPointsFantasyDraft) {
        this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;
    public PlayerTournament withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FedExPoints")
    public Long fedExPoints;
    public PlayerTournament withFedExPoints(Long fedExPoints) {
        this.fedExPoints = fedExPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HoleInOnes")
    public Double holeInOnes;
    public PlayerTournament withHoleInOnes(Double holeInOnes) {
        this.holeInOnes = holeInOnes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsAlternate")
    public Boolean isAlternate;
    public PlayerTournament withIsAlternate(Boolean isAlternate) {
        this.isAlternate = isAlternate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsWithdrawn")
    public Boolean isWithdrawn;
    public PlayerTournament withIsWithdrawn(Boolean isWithdrawn) {
        this.isWithdrawn = isWithdrawn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MadeCut")
    public Double madeCut;
    public PlayerTournament withMadeCut(Double madeCut) {
        this.madeCut = madeCut;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MadeCutDidNotFinish")
    public Boolean madeCutDidNotFinish;
    public PlayerTournament withMadeCutDidNotFinish(Boolean madeCutDidNotFinish) {
        this.madeCutDidNotFinish = madeCutDidNotFinish;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public PlayerTournament withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OddsToWin")
    public Double oddsToWin;
    public PlayerTournament withOddsToWin(Double oddsToWin) {
        this.oddsToWin = oddsToWin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OddsToWinDescription")
    public String oddsToWinDescription;
    public PlayerTournament withOddsToWinDescription(String oddsToWinDescription) {
        this.oddsToWinDescription = oddsToWinDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Pars")
    public Double pars;
    public PlayerTournament withPars(Double pars) {
        this.pars = pars;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;
    public PlayerTournament withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerTournamentID")
    public Long playerTournamentID;
    public PlayerTournament withPlayerTournamentID(Long playerTournamentID) {
        this.playerTournamentID = playerTournamentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Rank")
    public Long rank;
    public PlayerTournament withRank(Long rank) {
        this.rank = rank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Rounds")
    public PlayerRound[] rounds;
    public PlayerTournament withRounds(PlayerRound[] rounds) {
        this.rounds = rounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoundsUnderSeventy")
    public Double roundsUnderSeventy;
    public PlayerTournament withRoundsUnderSeventy(Double roundsUnderSeventy) {
        this.roundsUnderSeventy = roundsUnderSeventy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoundsWithFiveOrMoreBirdiesOrBetter")
    public Double roundsWithFiveOrMoreBirdiesOrBetter;
    public PlayerTournament withRoundsWithFiveOrMoreBirdiesOrBetter(Double roundsWithFiveOrMoreBirdiesOrBetter) {
        this.roundsWithFiveOrMoreBirdiesOrBetter = roundsWithFiveOrMoreBirdiesOrBetter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreaksOfFiveBirdiesOrBetter")
    public Double streaksOfFiveBirdiesOrBetter;
    public PlayerTournament withStreaksOfFiveBirdiesOrBetter(Double streaksOfFiveBirdiesOrBetter) {
        this.streaksOfFiveBirdiesOrBetter = streaksOfFiveBirdiesOrBetter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreaksOfFourBirdiesOrBetter")
    public Double streaksOfFourBirdiesOrBetter;
    public PlayerTournament withStreaksOfFourBirdiesOrBetter(Double streaksOfFourBirdiesOrBetter) {
        this.streaksOfFourBirdiesOrBetter = streaksOfFourBirdiesOrBetter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreaksOfSixBirdiesOrBetter")
    public Double streaksOfSixBirdiesOrBetter;
    public PlayerTournament withStreaksOfSixBirdiesOrBetter(Double streaksOfSixBirdiesOrBetter) {
        this.streaksOfSixBirdiesOrBetter = streaksOfSixBirdiesOrBetter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreaksOfThreeBirdiesOrBetter")
    public Double streaksOfThreeBirdiesOrBetter;
    public PlayerTournament withStreaksOfThreeBirdiesOrBetter(Double streaksOfThreeBirdiesOrBetter) {
        this.streaksOfThreeBirdiesOrBetter = streaksOfThreeBirdiesOrBetter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeeTime")
    public String teeTime;
    public PlayerTournament withTeeTime(String teeTime) {
        this.teeTime = teeTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalScore")
    public Double totalScore;
    public PlayerTournament withTotalScore(Double totalScore) {
        this.totalScore = totalScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalStrokes")
    public Double totalStrokes;
    public PlayerTournament withTotalStrokes(Double totalStrokes) {
        this.totalStrokes = totalStrokes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalThrough")
    public Long totalThrough;
    public PlayerTournament withTotalThrough(Long totalThrough) {
        this.totalThrough = totalThrough;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TournamentID")
    public Long tournamentID;
    public PlayerTournament withTournamentID(Long tournamentID) {
        this.tournamentID = tournamentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TournamentStatus")
    public String tournamentStatus;
    public PlayerTournament withTournamentStatus(String tournamentStatus) {
        this.tournamentStatus = tournamentStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TripleBogeys")
    public Double tripleBogeys;
    public PlayerTournament withTripleBogeys(Double tripleBogeys) {
        this.tripleBogeys = tripleBogeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Win")
    public Double win;
    public PlayerTournament withWin(Double win) {
        this.win = win;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorseThanDoubleBogey")
    public Double worseThanDoubleBogey;
    public PlayerTournament withWorseThanDoubleBogey(Double worseThanDoubleBogey) {
        this.worseThanDoubleBogey = worseThanDoubleBogey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorseThanTripleBogey")
    public Double worseThanTripleBogey;
    public PlayerTournament withWorseThanTripleBogey(Double worseThanTripleBogey) {
        this.worseThanTripleBogey = worseThanTripleBogey;
        return this;
    }
    
}
