"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import adjustmentconditions as shared_adjustmentconditions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RateAdjustmentTypeEnum(str, Enum):
    r"""The adjustment type."""
    PERCENTAGE = 'PERCENTAGE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RateAdjustment:
    
    amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    r"""The percentage discount between 0 and 100."""  
    conditions: list[shared_adjustmentconditions.AdjustmentConditions] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conditions') }})
    r"""A list of conditions for the adjustment to apply."""  
    type: RateAdjustmentTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The adjustment type."""  
    adjustment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustmentId'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of this rate adjustment."""  
    