/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETPaidInvoicesType } from "./getpaidinvoicestype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Container for custom fields of a Payment object.
 *
 * @remarks
 *
 */
export class GETPaymentType extends SpeakeasyBase {
  /**
   * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationId__NS" })
  integrationIdNS?: string;

  /**
   * Status of the payment's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationStatus__NS" })
  integrationStatusNS?: string;

  /**
   * Origin of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Origin__NS" })
  originNS?: string;

  /**
   * Date when the payment was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SyncDate__NS" })
  syncDateNS?: string;

  /**
   * Related transaction in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Transaction__NS" })
  transactionNS?: string;

  /**
   * Customer account ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountID" })
  accountID?: string;

  /**
   * Customer account name.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountName" })
  accountName?: string;

  /**
   * Customer account number.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountNumber" })
  accountNumber?: string;

  /**
   * Payment amount.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: string;

  /**
   * Effective payment date as _yyyy-mm-dd_.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * Transaction ID from payment gateway.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gatewayTransactionNumber" })
  gatewayTransactionNumber?: string;

  /**
   * PaymentID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Information about one or more invoices to which this payment was applied:
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETPaidInvoicesType })
  @Expose({ name: "paidInvoices" })
  @Type(() => GETPaidInvoicesType)
  paidInvoices?: GETPaidInvoicesType[];

  /**
   * Payment method.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMethodID" })
  paymentMethodID?: string;

  /**
   * Unique payment number.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentNumber" })
  paymentNumber?: string;

  /**
   * Possible values are: `Draft`, `Processing`, `Processed`, `Error`, `Voided`, `Canceled`, `Posted.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Possible values are: `External`, `Electronic`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
