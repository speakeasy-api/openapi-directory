/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class InvoiceItemInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public InvoiceItemInput withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("asset_account")
    public LinkedLedgerAccountInput assetAccount;

    public InvoiceItemInput withAssetAccount(LinkedLedgerAccountInput assetAccount) {
        this.assetAccount = assetAccount;
        return this;
    }
    
    /**
     * User defined item code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;

    public InvoiceItemInput withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * A short description of the item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public InvoiceItemInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expense_account")
    public LinkedLedgerAccountInput expenseAccount;

    public InvoiceItemInput withExpenseAccount(LinkedLedgerAccountInput expenseAccount) {
        this.expenseAccount = expenseAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("income_account")
    public LinkedLedgerAccountInput incomeAccount;

    public InvoiceItemInput withIncomeAccount(LinkedLedgerAccountInput incomeAccount) {
        this.incomeAccount = incomeAccount;
        return this;
    }
    
    /**
     * The date of opening balance if inventory item is tracked - YYYY-MM-DD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("inventory_date")
    public LocalDate inventoryDate;

    public InvoiceItemInput withInventoryDate(LocalDate inventoryDate) {
        this.inventoryDate = inventoryDate;
        return this;
    }
    
    /**
     * Item name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public InvoiceItemInput withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchase_details")
    public InvoiceItemPurchaseDetailsInput purchaseDetails;

    public InvoiceItemInput withPurchaseDetails(InvoiceItemPurchaseDetailsInput purchaseDetails) {
        this.purchaseDetails = purchaseDetails;
        return this;
    }
    
    /**
     * Item is available for purchase transactions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchased")
    public Boolean purchased;

    public InvoiceItemInput withPurchased(Boolean purchased) {
        this.purchased = purchased;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;

    public InvoiceItemInput withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;

    public InvoiceItemInput withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sales_details")
    public InvoiceItemSalesDetailsInput salesDetails;

    public InvoiceItemInput withSalesDetails(InvoiceItemSalesDetailsInput salesDetails) {
        this.salesDetails = salesDetails;
        return this;
    }
    
    /**
     * Item will be available on sales transactions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sold")
    public Boolean sold;

    public InvoiceItemInput withSold(Boolean sold) {
        this.sold = sold;
        return this;
    }
    
    /**
     * If true, transactions for this item are taxable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxable")
    public Boolean taxable;

    public InvoiceItemInput withTaxable(Boolean taxable) {
        this.taxable = taxable;
        return this;
    }
    
    /**
     * Item is inventoried
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracked")
    public Boolean tracked;

    public InvoiceItemInput withTracked(Boolean tracked) {
        this.tracked = tracked;
        return this;
    }
    
    /**
     * Item type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public InvoiceItemTypeEnum type;

    public InvoiceItemInput withType(InvoiceItemTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_price")
    public Double unitPrice;

    public InvoiceItemInput withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    public InvoiceItemInput(){}
}
