/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * OrganisationInput - The Organisation resource.
 */
public class OrganisationInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addresses")
    public OrganisationAddressInput[] addresses;

    public OrganisationInput withAddresses(OrganisationAddressInput[] addresses) {
        this.addresses = addresses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("electronicAddresses")
    public ElectronicAddressInput[] electronicAddresses;

    public OrganisationInput withElectronicAddresses(ElectronicAddressInput[] electronicAddresses) {
        this.electronicAddresses = electronicAddresses;
        return this;
    }
    
    /**
     * The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("establishmentDate")
    public LocalDate establishmentDate;

    public OrganisationInput withEstablishmentDate(LocalDate establishmentDate) {
        this.establishmentDate = establishmentDate;
        return this;
    }
    
    /**
     * The organisation's legal entity type.
     */
    @JsonProperty("legalEntityType")
    public OrganisationLegalEntityTypeEnum legalEntityType;

    public OrganisationInput withLegalEntityType(OrganisationLegalEntityTypeEnum legalEntityType) {
        this.legalEntityType = legalEntityType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("names")
    public OrganisationNameInput[] names;

    public OrganisationInput withNames(OrganisationNameInput[] names) {
        this.names = names;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registeredIdentifiers")
    public RegisteredIdentifierInput[] registeredIdentifiers;

    public OrganisationInput withRegisteredIdentifiers(RegisteredIdentifierInput[] registeredIdentifiers) {
        this.registeredIdentifiers = registeredIdentifiers;
        return this;
    }
    
    public OrganisationInput(@JsonProperty("establishmentDate") LocalDate establishmentDate, @JsonProperty("legalEntityType") OrganisationLegalEntityTypeEnum legalEntityType) {
        this.establishmentDate = establishmentDate;
        this.legalEntityType = legalEntityType;
  }
}
