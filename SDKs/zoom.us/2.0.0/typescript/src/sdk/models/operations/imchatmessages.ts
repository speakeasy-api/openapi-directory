/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ImChatMessagesRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * IM chat session ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=sessionId",
  })
  sessionId: string;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;
}

export class ImChatMessages200ApplicationXMLMessages extends SpeakeasyBase {
  /**
   * IM chat message action.
   */
  @SpeakeasyMetadata()
  action?: string;

  /**
   * Action time.
   */
  @SpeakeasyMetadata()
  actionTime?: Date;

  /**
   * IM chat message sent time.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  /**
   * IM chat message content.
   */
  @SpeakeasyMetadata()
  message?: string;

  /**
   * IM chat message sender.
   */
  @SpeakeasyMetadata()
  sender?: string;
}

/**
 * Pagination object.
 */
export class ImChatMessages200ApplicationXML extends SpeakeasyBase {
  /**
   * Start date.
   */
  @SpeakeasyMetadata()
  from?: Date;

  /**
   * Array of session objects.
   */
  @SpeakeasyMetadata({ elemType: ImChatMessages200ApplicationXMLMessages })
  messages?: ImChatMessages200ApplicationXMLMessages[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The amount of records returns within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * IM chat session ID.
   */
  @SpeakeasyMetadata()
  sessionId?: string;

  /**
   * End date.
   */
  @SpeakeasyMetadata()
  to?: Date;
}

export class ImChatMessages200ApplicationJSONMessages extends SpeakeasyBase {
  /**
   * IM chat message action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: string;

  /**
   * Action time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  actionTime?: Date;

  /**
   * IM chat message sent time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  /**
   * IM chat message content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * IM chat message sender.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sender" })
  sender?: string;
}

/**
 * Pagination object.
 */
export class ImChatMessages200ApplicationJSON extends SpeakeasyBase {
  /**
   * Start date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  /**
   * Array of session objects.
   */
  @SpeakeasyMetadata({ elemType: ImChatMessages200ApplicationJSONMessages })
  @Expose({ name: "messages" })
  @Type(() => ImChatMessages200ApplicationJSONMessages)
  messages?: ImChatMessages200ApplicationJSONMessages[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The amount of records returns within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * IM chat session ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "session_id" })
  sessionId?: string;

  /**
   * End date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;
}

export class ImChatMessagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` <br>
   *
   * @remarks
   * Archived IM chat messages returned.
   */
  @SpeakeasyMetadata()
  imChatMessages200ApplicationJSONObject?: ImChatMessages200ApplicationJSON;
}
