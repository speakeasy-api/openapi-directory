<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetDirectDebitByUuidDirectDebit - Retrieve all details of a single direct debit collection/payment
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetDirectDebitByUuidDirectDebit
{
    /**
     * Value of the payment
     * 
     * @var ?int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $amount = null;
    
    /**
     * The currency.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitCurrency $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitCurrency')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetDirectDebitByUuidDirectDebitCurrency $currency = null;
    
    /**
     * Date the direct debit was created. Milliseconds since the epoch (1970).
     * 
     * @var ?\DateTime $dateCreated
     */
	#[\JMS\Serializer\Annotation\SerializedName('dateCreated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $dateCreated = null;
    
    /**
     * The direct debit reference.
     * 
     * @var ?string $directDebitReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('directDebitReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $directDebitReference = null;
    
    /**
     * The UUID for the direct debit payment
     * 
     * @var ?string $directDebitUuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('directDebitUuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $directDebitUuid = null;
    
    /**
     * DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.
     * 
     * @var ?bool $isDDIC
     */
	#[\JMS\Serializer\Annotation\SerializedName('isDDIC')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isDDIC = null;
    
    /**
     * Date the direct debit was last updated. Milliseconds since the epoch (1970).
     * 
     * @var ?\DateTime $lastUpdated
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastUpdated = null;
    
    /**
     * The UUID for the mandate
     * 
     * @var ?string $mandateUUid
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateUUid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandateUUid = null;
    
    /**
     * The Alias of the party who sets up the direct debit.
     * 
     * @var ?string $originatorAlias
     */
	#[\JMS\Serializer\Annotation\SerializedName('originatorAlias')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originatorAlias = null;
    
    /**
     * The creator of the party who sets up the direct debit.
     * 
     * @var ?string $originatorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('originatorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originatorName = null;
    
    /**
     * Set by party who sets up the direct debit.
     * 
     * @var ?string $originatorReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('originatorReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originatorReference = null;
    
    /**
     * Reason why rejected
     * 
     * @var ?string $schemeRejectReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('schemeRejectReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schemeRejectReason = null;
    
    /**
     * The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitSchemeRejectReasonCodeEnum $schemeRejectReasonCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('schemeRejectReasonCode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitSchemeRejectReasonCodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetDirectDebitByUuidDirectDebitSchemeRejectReasonCodeEnum $schemeRejectReasonCode = null;
    
    /**
     * The statuses of the direct debit payments associated with the mandate.
     * 
     * * 'RECIEVED' - Direct Debit has been recieved
     * * 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it
     * * 'REJECT_READY_FOR_PROCESSING' 
     * * 'REJECT_RECORD_IN_PROGRESS'
     * * 'REJECT_RECORDED'
     * * 'REJECT_FILE_CREATED'
     * * 'REJECT_FILE_SENT'
     * * 'COLLECTED' - Direct debit collected
     * * 'REFUND_REQUESTED' - Refund requested on direct debit
     * * 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit
     * * 'REFUND_RECORDED'
     * * 'REFUND_FILE_CREATED'
     * * 'REFUND_FILE_SENT' 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetDirectDebitByUuidDirectDebitStatusEnum $status = null;
    
    /**
     * The ican of your fire account that the money was taken from
     * 
     * @var ?int $targetIcan
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetIcan')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $targetIcan = null;
    
    /**
     * The payee that was created when the DD was processed
     * 
     * @var ?int $targetPayeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetPayeeId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $targetPayeeId = null;
    
    /**
     * The type of the direct debit.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetDirectDebitByUuidDirectDebitTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetDirectDebitByUuidDirectDebitTypeEnum $type = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->currency = null;
		$this->dateCreated = null;
		$this->directDebitReference = null;
		$this->directDebitUuid = null;
		$this->isDDIC = null;
		$this->lastUpdated = null;
		$this->mandateUUid = null;
		$this->originatorAlias = null;
		$this->originatorName = null;
		$this->originatorReference = null;
		$this->schemeRejectReason = null;
		$this->schemeRejectReasonCode = null;
		$this->status = null;
		$this->targetIcan = null;
		$this->targetPayeeId = null;
		$this->type = null;
	}
}
