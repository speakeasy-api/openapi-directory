// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListOnPremisesInstancesXAmzTargetEnum
type ListOnPremisesInstancesXAmzTargetEnum string

const (
	ListOnPremisesInstancesXAmzTargetEnumCodeDeploy20141006ListOnPremisesInstances ListOnPremisesInstancesXAmzTargetEnum = "CodeDeploy_20141006.ListOnPremisesInstances"
)

func (e *ListOnPremisesInstancesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeDeploy_20141006.ListOnPremisesInstances":
		*e = ListOnPremisesInstancesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListOnPremisesInstancesXAmzTargetEnum: %s", s)
	}
}

type ListOnPremisesInstancesHeaders struct {
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListOnPremisesInstancesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListOnPremisesInstancesRequest struct {
	Headers ListOnPremisesInstancesHeaders
	Request shared.ListOnPremisesInstancesInput `request:"mediaType=application/json"`
}

type ListOnPremisesInstancesResponse struct {
	ContentType string
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// InvalidRegistrationStatusException
	InvalidRegistrationStatusException interface{}
	// InvalidTagFilterException
	InvalidTagFilterException interface{}
	// Success
	ListOnPremisesInstancesOutput *shared.ListOnPremisesInstancesOutput
	StatusCode                    int
	RawResponse                   *http.Response
}
