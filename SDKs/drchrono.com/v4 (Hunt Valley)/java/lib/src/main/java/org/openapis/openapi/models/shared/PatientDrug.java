/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PatientDrug - Created
 */
public class PatientDrug {
    /**
     * Appointment ID corresponding to the initial prescription
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appointment")
    public Long appointment;
    public PatientDrug withAppointment(Long appointment) {
        this.appointment = appointment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_prescribed")
    public String datePrescribed;
    public PatientDrug withDatePrescribed(String datePrescribed) {
        this.datePrescribed = datePrescribed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_started_taking")
    public String dateStartedTaking;
    public PatientDrug withDateStartedTaking(String dateStartedTaking) {
        this.dateStartedTaking = dateStartedTaking;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_stopped_taking")
    public String dateStoppedTaking;
    public PatientDrug withDateStoppedTaking(String dateStoppedTaking) {
        this.dateStoppedTaking = dateStoppedTaking;
        return this;
    }
    
    /**
     * If true, the prescription should be dispensed as written and not substituted
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("daw")
    public Boolean daw;
    public PatientDrug withDaw(Boolean daw) {
        this.daw = daw;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dispense_quantity")
    public Double dispenseQuantity;
    public PatientDrug withDispenseQuantity(Double dispenseQuantity) {
        this.dispenseQuantity = dispenseQuantity;
        return this;
    }
    
    /**
     * Prescribing doctor ID
     */
    @JsonProperty("doctor")
    public Long doctor;
    public PatientDrug withDoctor(Long doctor) {
        this.doctor = doctor;
        return this;
    }
    
    /**
     * Please note, this used to be an decimal field, you can still pass decimal value to it. Or you can pass in some formatted string if needed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dosage_quantity")
    public String dosageQuantity;
    public PatientDrug withDosageQuantity(String dosageQuantity) {
        this.dosageQuantity = dosageQuantity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dosage_units")
    public String dosageUnits;
    public PatientDrug withDosageUnits(String dosageUnits) {
        this.dosageUnits = dosageUnits;
        return this;
    }
    
    /**
     * Frequency pf administration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequency")
    public String frequency;
    public PatientDrug withFrequency(String frequency) {
        this.frequency = frequency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public PatientDrug withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indication")
    public String indication;
    public PatientDrug withIndication(String indication) {
        this.indication = indication;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PatientDrug withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ndc")
    public String ndc;
    public PatientDrug withNdc(String ndc) {
        this.ndc = ndc;
        return this;
    }
    
    /**
     * Any additional notes from the provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public PatientDrug withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number_refills")
    public Long numberRefills;
    public PatientDrug withNumberRefills(Long numberRefills) {
        this.numberRefills = numberRefills;
        return this;
    }
    
    /**
     * One of `""`, `"Ordered"`, `"Administered during visit"`, `"Electronic eRx Sent"`, `"Phoned into Pharmacy"`, `"Faxed to Pharmacy"`, `"Paper Rx"`, `"Prescription Printed"`, `"Discontinued"`, `"Prescribed by other Dr"` or `"Over the Counter"`. If omitted in writing, default to `""`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_status")
    public PatientDrugOrderStatusEnum orderStatus;
    public PatientDrug withOrderStatus(PatientDrugOrderStatusEnum orderStatus) {
        this.orderStatus = orderStatus;
        return this;
    }
    
    @JsonProperty("patient")
    public Long patient;
    public PatientDrug withPatient(Long patient) {
        this.patient = patient;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pharmacy_note")
    public String pharmacyNote;
    public PatientDrug withPharmacyNote(String pharmacyNote) {
        this.pharmacyNote = pharmacyNote;
        return this;
    }
    
    /**
     * If `True`, the medication should be taken when necessary
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prn")
    public Boolean prn;
    public PatientDrug withPrn(Boolean prn) {
        this.prn = prn;
        return this;
    }
    
    /**
     * Route of administration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("route")
    public String route;
    public PatientDrug withRoute(String route) {
        this.route = route;
        return this;
    }
    
    /**
     * RxNorm code for the medication
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rxnorm")
    public String rxnorm;
    public PatientDrug withRxnorm(String rxnorm) {
        this.rxnorm = rxnorm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signature_note")
    public String signatureNote;
    public PatientDrug withSignatureNote(String signatureNote) {
        this.signatureNote = signatureNote;
        return this;
    }
    
    /**
     * If present, one of `"active"` or `"inactive"`. If omitted in writing, default to `"active"`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PatientDrugStatusEnum status;
    public PatientDrug withStatus(PatientDrugStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
