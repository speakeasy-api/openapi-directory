// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListCheckTransfersRequest struct {
	AccountID           *string    `queryParam:"style=form,explode=true,name=account_id"`
	CreatedAtAfter      *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string    `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64     `queryParam:"style=form,explode=true,name=limit"`
}

type ListCheckTransfersDefaultApplicationJSON13StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListCheckTransfersDefaultApplicationJSON13StatusEnum = 429
)

func (e ListCheckTransfersDefaultApplicationJSON13StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListCheckTransfersDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON13TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON13TypeEnumRateLimitedError ListCheckTransfersDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListCheckTransfersDefaultApplicationJSON13TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListCheckTransfersDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON13 struct {
	Detail     string                                               `json:"detail"`
	RetryAfter *int64                                               `json:"retry_after,omitempty"`
	Status     ListCheckTransfersDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                               `json:"title"`
	Type       ListCheckTransfersDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON12StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON12StatusEnumFourHundredAndThree ListCheckTransfersDefaultApplicationJSON12StatusEnum = 403
)

func (e ListCheckTransfersDefaultApplicationJSON12StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListCheckTransfersDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON12TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON12TypeEnumPrivateFeatureError ListCheckTransfersDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListCheckTransfersDefaultApplicationJSON12TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListCheckTransfersDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON12 struct {
	Detail string                                               `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON11StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON11StatusEnumFourHundredAndFour ListCheckTransfersDefaultApplicationJSON11StatusEnum = 404
)

func (e ListCheckTransfersDefaultApplicationJSON11StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListCheckTransfersDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON11TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON11TypeEnumObjectNotFoundError ListCheckTransfersDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListCheckTransfersDefaultApplicationJSON11TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListCheckTransfersDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON11 struct {
	Detail string                                               `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON10StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON10StatusEnumFourHundred ListCheckTransfersDefaultApplicationJSON10StatusEnum = 400
)

func (e ListCheckTransfersDefaultApplicationJSON10StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListCheckTransfersDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON10TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON10TypeEnumMalformedRequestError ListCheckTransfersDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListCheckTransfersDefaultApplicationJSON10TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListCheckTransfersDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON10 struct {
	Detail string                                               `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON9StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON9StatusEnumFourHundred ListCheckTransfersDefaultApplicationJSON9StatusEnum = 400
)

func (e ListCheckTransfersDefaultApplicationJSON9StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListCheckTransfersDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON9TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON9TypeEnumInvalidParametersError ListCheckTransfersDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListCheckTransfersDefaultApplicationJSON9TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListCheckTransfersDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                            `json:"errors"`
	Status ListCheckTransfersDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON8StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON8StatusEnumFourHundredAndNine ListCheckTransfersDefaultApplicationJSON8StatusEnum = 409
)

func (e ListCheckTransfersDefaultApplicationJSON8StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListCheckTransfersDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON8TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON8TypeEnumInvalidOperationError ListCheckTransfersDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListCheckTransfersDefaultApplicationJSON8TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListCheckTransfersDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON8 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON7StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON7StatusEnumFourHundredAndOne ListCheckTransfersDefaultApplicationJSON7StatusEnum = 401
)

func (e ListCheckTransfersDefaultApplicationJSON7StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListCheckTransfersDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON7TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListCheckTransfersDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListCheckTransfersDefaultApplicationJSON7TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListCheckTransfersDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON7 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON6StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON6StatusEnumFiveHundred ListCheckTransfersDefaultApplicationJSON6StatusEnum = 500
)

func (e ListCheckTransfersDefaultApplicationJSON6StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListCheckTransfersDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON6TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON6TypeEnumInternalServerError ListCheckTransfersDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListCheckTransfersDefaultApplicationJSON6TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListCheckTransfersDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON6 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON5StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON5StatusEnumFourHundredAndThree ListCheckTransfersDefaultApplicationJSON5StatusEnum = 403
)

func (e ListCheckTransfersDefaultApplicationJSON5StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListCheckTransfersDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON5TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListCheckTransfersDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListCheckTransfersDefaultApplicationJSON5TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListCheckTransfersDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON5 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON4StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListCheckTransfersDefaultApplicationJSON4StatusEnum = 422
)

func (e ListCheckTransfersDefaultApplicationJSON4StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListCheckTransfersDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON4TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListCheckTransfersDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListCheckTransfersDefaultApplicationJSON4TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListCheckTransfersDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON4 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON3StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON3StatusEnumFourHundredAndNine ListCheckTransfersDefaultApplicationJSON3StatusEnum = 409
)

func (e ListCheckTransfersDefaultApplicationJSON3StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListCheckTransfersDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON3TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListCheckTransfersDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListCheckTransfersDefaultApplicationJSON3TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListCheckTransfersDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON3 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON2StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON2StatusEnumFourHundredAndThree ListCheckTransfersDefaultApplicationJSON2StatusEnum = 403
)

func (e ListCheckTransfersDefaultApplicationJSON2StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListCheckTransfersDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON2TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListCheckTransfersDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListCheckTransfersDefaultApplicationJSON2TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListCheckTransfersDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON2 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListCheckTransfersDefaultApplicationJSON1StatusEnum int64

const (
	ListCheckTransfersDefaultApplicationJSON1StatusEnumFourHundredAndFour ListCheckTransfersDefaultApplicationJSON1StatusEnum = 404
)

func (e ListCheckTransfersDefaultApplicationJSON1StatusEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListCheckTransfersDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON1TypeEnum string

const (
	ListCheckTransfersDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListCheckTransfersDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListCheckTransfersDefaultApplicationJSON1TypeEnum) ToPointer() *ListCheckTransfersDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListCheckTransfersDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListCheckTransfersDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckTransfersDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListCheckTransfersDefaultApplicationJSON1 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckTransfersDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckTransfersDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListCheckTransfersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Transfer List
	CheckTransferList *shared.CheckTransferList
	// Error
	Error interface{}
}
