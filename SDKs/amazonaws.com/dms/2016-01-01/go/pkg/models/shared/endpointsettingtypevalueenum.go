// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EndpointSettingTypeValueEnum string

const (
	EndpointSettingTypeValueEnumString  EndpointSettingTypeValueEnum = "string"
	EndpointSettingTypeValueEnumBoolean EndpointSettingTypeValueEnum = "boolean"
	EndpointSettingTypeValueEnumInteger EndpointSettingTypeValueEnum = "integer"
	EndpointSettingTypeValueEnumEnum    EndpointSettingTypeValueEnum = "enum"
)

func (e EndpointSettingTypeValueEnum) ToPointer() *EndpointSettingTypeValueEnum {
	return &e
}

func (e *EndpointSettingTypeValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "string":
		fallthrough
	case "boolean":
		fallthrough
	case "integer":
		fallthrough
	case "enum":
		*e = EndpointSettingTypeValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EndpointSettingTypeValueEnum: %v", v)
	}
}
