// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateConfiguredTablePathParams struct {
	// The identifier for the configured table to update. Currently accepts the configured table ID.
	ConfiguredTableIdentifier string `pathParam:"style=simple,explode=false,name=configuredTableIdentifier"`
}

type UpdateConfiguredTableHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateConfiguredTableRequestBody struct {
	// A new description for the configured table.
	Description *string `json:"description,omitempty"`
	// A new name for the configured table.
	Name *string `json:"name,omitempty"`
}

type UpdateConfiguredTableRequest struct {
	PathParams UpdateConfiguredTablePathParams
	Headers    UpdateConfiguredTableHeaders
	Request    UpdateConfiguredTableRequestBody `request:"mediaType=application/json"`
}

type UpdateConfiguredTableResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateConfiguredTableOutput *shared.UpdateConfiguredTableOutput
	// ValidationException
	ValidationException interface{}
}
