/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AbortConfig } from "./abortconfig";
import { JobExecutionsRetryConfig } from "./jobexecutionsretryconfig";
import { JobExecutionsRolloutConfig } from "./jobexecutionsrolloutconfig";
import { JobProcessDetails } from "./jobprocessdetails";
import { JobStatusEnum } from "./jobstatusenum";
import { PresignedUrlConfig } from "./presignedurlconfig";
import { ScheduledJobRollout } from "./scheduledjobrollout";
import { SchedulingConfig } from "./schedulingconfig";
import { TargetSelectionEnum } from "./targetselectionenum";
import { TimeoutConfig } from "./timeoutconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The <code>Job</code> object contains details about a job.
 */
export class Job extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "abortConfig" })
  @Type(() => AbortConfig)
  abortConfig?: AbortConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "completedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "documentParameters" })
  documentParameters?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "forceCanceled" })
  forceCanceled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isConcurrent" })
  isConcurrent?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "jobArn" })
  jobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jobExecutionsRetryConfig" })
  @Type(() => JobExecutionsRetryConfig)
  jobExecutionsRetryConfig?: JobExecutionsRetryConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "jobExecutionsRolloutConfig" })
  @Type(() => JobExecutionsRolloutConfig)
  jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "jobId" })
  jobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jobProcessDetails" })
  @Type(() => JobProcessDetails)
  jobProcessDetails?: JobProcessDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "jobTemplateArn" })
  jobTemplateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "namespaceId" })
  namespaceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "presignedUrlConfig" })
  @Type(() => PresignedUrlConfig)
  presignedUrlConfig?: PresignedUrlConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "reasonCode" })
  reasonCode?: string;

  @SpeakeasyMetadata({ elemType: ScheduledJobRollout })
  @Expose({ name: "scheduledJobRollouts" })
  @Type(() => ScheduledJobRollout)
  scheduledJobRollouts?: ScheduledJobRollout[];

  @SpeakeasyMetadata()
  @Expose({ name: "schedulingConfig" })
  @Type(() => SchedulingConfig)
  schedulingConfig?: SchedulingConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: JobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "targetSelection" })
  targetSelection?: TargetSelectionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "targets" })
  targets?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutConfig" })
  @Type(() => TimeoutConfig)
  timeoutConfig?: TimeoutConfig;
}
