/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateInviteServerList = ["https://chat.twilio.com"] as const;

export class CreateInviteSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateInviteCreateInviteRequest extends SpeakeasyBase {
  /**
   * The `identity` value that uniquely identifies the new resource's [User](https://www.twilio.com/docs/chat/rest/user-resource) within the [Service](https://www.twilio.com/docs/chat/rest/service-resource). See [access tokens](https://www.twilio.com/docs/chat/create-tokens) for more info.
   */
  @SpeakeasyMetadata({ data: "form, name=Identity" })
  identity: string;

  /**
   * The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) assigned to the new member.
   */
  @SpeakeasyMetadata({ data: "form, name=RoleSid" })
  roleSid?: string;
}

export class CreateInviteRequest extends SpeakeasyBase {
  /**
   * The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the new Invite resource belongs to. This value can be the Channel resource's `sid` or `unique_name`.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ChannelSid",
  })
  channelSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateInviteCreateInviteRequest;

  /**
   * The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to create the Invite resource under.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class CreateInviteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  chatV2ServiceChannelInvite?: shared.ChatV2ServiceChannelInvite;
}
