"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bias as shared_bias
from ..shared import explainability as shared_explainability
from ..shared import modeldataquality as shared_modeldataquality
from ..shared import modelquality as shared_modelquality
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ModelMetrics:
    r"""Contains metrics captured from a model."""
    
    bias: Optional[shared_bias.Bias] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Bias'), 'exclude': lambda f: f is None }})  
    explainability: Optional[shared_explainability.Explainability] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Explainability'), 'exclude': lambda f: f is None }})  
    model_data_quality: Optional[shared_modeldataquality.ModelDataQuality] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelDataQuality'), 'exclude': lambda f: f is None }})  
    model_quality: Optional[shared_modelquality.ModelQuality] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelQuality'), 'exclude': lambda f: f is None }})  
    