<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Balance - A single balance element.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Balance
{
	#[\JMS\Serializer\Annotation\SerializedName('balanceAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $balanceAmount;
    
    /**
     * The following balance types are defined:
     * 
     *   - "closingBooked":
     *     Balance of the account at the end of the pre-agreed account reporting period.
     *     It is the sum of the opening booked balance at the beginning of the period and all entries booked
     *     to the account during the pre-agreed account reporting period.
     * 
     *     For card-accounts, this is composed of
     * 
     *       - invoiced, but not yet paid entries
     * 
     *   - "expected":
     *     Balance composed of booked entries and pending items known at the time of calculation,
     *     which projects the end of day balance if everything is booked on the account and no other entry is posted.
     *     
     *     For card accounts, this is composed of:
     *       - invoiced, but not yet paid entries
     *       - not yet invoiced but already booked entries and
     *       - pending items (not yet booked)
     *     
     *     For card-accounts:
     * 
     *     "money to spend with the value of a pre-approved credit limit on the card account"
     * 
     *   - "openingBooked":
     *     Book balance of the account at the beginning of the account reporting period.
     *     It always equals the closing book balance from the previous report.
     *   - "interimAvailable":
     *     Available balance calculated in the course of the account ?servicer?s business day,
     *     at the time specified, and subject to further changes during the business day.
     *     The interim balance is calculated on the basis of booked credit and debit items during the calculation
     *     time/period specified.
     *     
     *     For card-accounts, this is composed of:
     *       - invoiced, but not yet paid entries
     *       - not yet invoiced but already booked entries
     *   - "interimBooked":
     *     Balance calculated in the course of the account servicer's business day, at the time specified,
     *     and subject to further changes during the business day.
     *     The interim balance is calculated on the basis of booked credit and debit items during the calculation time/period
     *     specified.
     *   - "forwardAvailable":
     *     Forward available balance of money that is at the disposal of the account owner on the date specified.
     *   - "nonInvoiced":
     *     Only for card accounts, to be checked yet.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BalanceTypeEnum $balanceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('balanceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BalanceTypeEnum>')]
    public BalanceTypeEnum $balanceType;
    
    /**
     * A flag indicating if the credit limit of the corresponding account
     * 
     * is included in the calculation of the balance, where applicable.
     * 
     * 
     * @var ?bool $creditLimitIncluded
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditLimitIncluded')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $creditLimitIncluded = null;
    
    /**
     * This data element might be used to indicate e.g. with the expected or booked balance that no action is known
     * 
     * on the account, which is not yet booked.
     * 
     * 
     * @var ?\DateTime $lastChangeDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastChangeDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastChangeDateTime = null;
    
    /**
     * "entryReference" of the last commited transaction to support the TPP in identifying whether all
     * 
     * PSU transactions are already known.
     * 
     * 
     * @var ?string $lastCommittedTransaction
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastCommittedTransaction')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastCommittedTransaction = null;
    
    /**
     * Indicates the date of the balance.
     * 
     * @var ?\DateTime $referenceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('referenceDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $referenceDate = null;
    
	public function __construct()
	{
		$this->balanceAmount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->balanceType = \OpenAPI\OpenAPI\Models\Shared\BalanceTypeEnum::CLOSING_BOOKED;
		$this->creditLimitIncluded = null;
		$this->lastChangeDateTime = null;
		$this->lastCommittedTransaction = null;
		$this->referenceDate = null;
	}
}
