"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateDeviceWirelessRadioSettingsRequestBodyFiveGhzSettingsChannelEnum(str, Enum):
    r"""Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel."""
    THIRTY_SIX = '36'
    FORTY = '40'
    FORTY_FOUR = '44'
    FORTY_EIGHT = '48'
    FIFTY_TWO = '52'
    FIFTY_SIX = '56'
    SIXTY = '60'
    SIXTY_FOUR = '64'
    ONE_HUNDRED = '100'
    ONE_HUNDRED_AND_FOUR = '104'
    ONE_HUNDRED_AND_EIGHT = '108'
    ONE_HUNDRED_AND_TWELVE = '112'
    ONE_HUNDRED_AND_SIXTEEN = '116'
    ONE_HUNDRED_AND_TWENTY = '120'
    ONE_HUNDRED_AND_TWENTY_FOUR = '124'
    ONE_HUNDRED_AND_TWENTY_EIGHT = '128'
    ONE_HUNDRED_AND_THIRTY_TWO = '132'
    ONE_HUNDRED_AND_THIRTY_SIX = '136'
    ONE_HUNDRED_AND_FORTY = '140'
    ONE_HUNDRED_AND_FORTY_FOUR = '144'
    ONE_HUNDRED_AND_FORTY_NINE = '149'
    ONE_HUNDRED_AND_FIFTY_THREE = '153'
    ONE_HUNDRED_AND_FIFTY_SEVEN = '157'
    ONE_HUNDRED_AND_SIXTY_ONE = '161'
    ONE_HUNDRED_AND_SIXTY_FIVE = '165'
    ONE_HUNDRED_AND_SIXTY_NINE = '169'
    ONE_HUNDRED_AND_SEVENTY_THREE = '173'
    ONE_HUNDRED_AND_SEVENTY_SEVEN = '177'

class UpdateDeviceWirelessRadioSettingsRequestBodyFiveGhzSettingsChannelWidthEnum(str, Enum):
    r"""Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width."""
    ZERO = '0'
    TWENTY = '20'
    FORTY = '40'
    EIGHTY = '80'
    ONE_HUNDRED_AND_SIXTY = '160'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceWirelessRadioSettingsRequestBodyFiveGhzSettings:
    r"""Manual radio settings for 5 GHz."""
    
    channel: Optional[UpdateDeviceWirelessRadioSettingsRequestBodyFiveGhzSettingsChannelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel'), 'exclude': lambda f: f is None }})
    r"""Sets a manual channel for 5 GHz. Can be '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161', '165', '169', '173' or '177' or null for using auto channel."""  
    channel_width: Optional[UpdateDeviceWirelessRadioSettingsRequestBodyFiveGhzSettingsChannelWidthEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelWidth'), 'exclude': lambda f: f is None }})
    r"""Sets a manual channel for 5 GHz. Can be '0', '20', '40', '80' or '160' or null for using auto channel width."""  
    target_power: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetPower'), 'exclude': lambda f: f is None }})
    r"""Set a manual target power for 5 GHz. Can be between '8' or '30' or null for using auto power range."""  
    
class UpdateDeviceWirelessRadioSettingsRequestBodyTwoFourGhzSettingsChannelEnum(str, Enum):
    r"""Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel."""
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'
    ELEVEN = '11'
    TWELVE = '12'
    THIRTEEN = '13'
    FOURTEEN = '14'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceWirelessRadioSettingsRequestBodyTwoFourGhzSettings:
    r"""Manual radio settings for 2.4 GHz."""
    
    channel: Optional[UpdateDeviceWirelessRadioSettingsRequestBodyTwoFourGhzSettingsChannelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel'), 'exclude': lambda f: f is None }})
    r"""Sets a manual channel for 2.4 GHz. Can be '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13' or '14' or null for using auto channel."""  
    target_power: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetPower'), 'exclude': lambda f: f is None }})
    r"""Set a manual target power for 2.4 GHz. Can be between '5' or '30' or null for using auto power range."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceWirelessRadioSettingsRequestBody:
    
    five_ghz_settings: Optional[UpdateDeviceWirelessRadioSettingsRequestBodyFiveGhzSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fiveGhzSettings'), 'exclude': lambda f: f is None }})
    r"""Manual radio settings for 5 GHz."""  
    rf_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rfProfileId'), 'exclude': lambda f: f is None }})
    r"""The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides on the device (channel width, channel, power)."""  
    two_four_ghz_settings: Optional[UpdateDeviceWirelessRadioSettingsRequestBodyTwoFourGhzSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('twoFourGhzSettings'), 'exclude': lambda f: f is None }})
    r"""Manual radio settings for 2.4 GHz."""  
    

@dataclasses.dataclass
class UpdateDeviceWirelessRadioSettingsRequest:
    
    serial: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serial', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateDeviceWirelessRadioSettingsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateDeviceWirelessRadioSettingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_device_wireless_radio_settings_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    