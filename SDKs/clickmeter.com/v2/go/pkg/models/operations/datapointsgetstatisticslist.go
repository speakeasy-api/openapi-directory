// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DataPointsGetStatisticsListGroupByEnum - The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
type DataPointsGetStatisticsListGroupByEnum string

const (
	DataPointsGetStatisticsListGroupByEnumWeek  DataPointsGetStatisticsListGroupByEnum = "week"
	DataPointsGetStatisticsListGroupByEnumMonth DataPointsGetStatisticsListGroupByEnum = "month"
)

func (e DataPointsGetStatisticsListGroupByEnum) ToPointer() *DataPointsGetStatisticsListGroupByEnum {
	return &e
}

func (e *DataPointsGetStatisticsListGroupByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "week":
		fallthrough
	case "month":
		*e = DataPointsGetStatisticsListGroupByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataPointsGetStatisticsListGroupByEnum: %v", v)
	}
}

// DataPointsGetStatisticsListTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type DataPointsGetStatisticsListTimeFrameEnum string

const (
	DataPointsGetStatisticsListTimeFrameEnumToday         DataPointsGetStatisticsListTimeFrameEnum = "today"
	DataPointsGetStatisticsListTimeFrameEnumYesterday     DataPointsGetStatisticsListTimeFrameEnum = "yesterday"
	DataPointsGetStatisticsListTimeFrameEnumLast7         DataPointsGetStatisticsListTimeFrameEnum = "last7"
	DataPointsGetStatisticsListTimeFrameEnumLast30        DataPointsGetStatisticsListTimeFrameEnum = "last30"
	DataPointsGetStatisticsListTimeFrameEnumLastmonth     DataPointsGetStatisticsListTimeFrameEnum = "lastmonth"
	DataPointsGetStatisticsListTimeFrameEnumCurrentmonth  DataPointsGetStatisticsListTimeFrameEnum = "currentmonth"
	DataPointsGetStatisticsListTimeFrameEnumPreviousmonth DataPointsGetStatisticsListTimeFrameEnum = "previousmonth"
	DataPointsGetStatisticsListTimeFrameEnumLast90        DataPointsGetStatisticsListTimeFrameEnum = "last90"
	DataPointsGetStatisticsListTimeFrameEnumLast120       DataPointsGetStatisticsListTimeFrameEnum = "last120"
	DataPointsGetStatisticsListTimeFrameEnumLast180       DataPointsGetStatisticsListTimeFrameEnum = "last180"
	DataPointsGetStatisticsListTimeFrameEnumLast12months  DataPointsGetStatisticsListTimeFrameEnum = "last12months"
	DataPointsGetStatisticsListTimeFrameEnumLastyear      DataPointsGetStatisticsListTimeFrameEnum = "lastyear"
	DataPointsGetStatisticsListTimeFrameEnumCurrentyear   DataPointsGetStatisticsListTimeFrameEnum = "currentyear"
	DataPointsGetStatisticsListTimeFrameEnumBeginning     DataPointsGetStatisticsListTimeFrameEnum = "beginning"
	DataPointsGetStatisticsListTimeFrameEnumCustom        DataPointsGetStatisticsListTimeFrameEnum = "custom"
)

func (e DataPointsGetStatisticsListTimeFrameEnum) ToPointer() *DataPointsGetStatisticsListTimeFrameEnum {
	return &e
}

func (e *DataPointsGetStatisticsListTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = DataPointsGetStatisticsListTimeFrameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataPointsGetStatisticsListTimeFrameEnum: %v", v)
	}
}

type DataPointsGetStatisticsListRequest struct {
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
	GroupBy *DataPointsGetStatisticsListGroupByEnum `queryParam:"style=form,explode=true,name=groupBy"`
	// Id of the datapoint
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame DataPointsGetStatisticsListTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type DataPointsGetStatisticsListResponse struct {
	APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult *shared.APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
