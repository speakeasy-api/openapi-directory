// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScanStatusReasonEnum string

const (
	ScanStatusReasonEnumPendingInitialScan      ScanStatusReasonEnum = "PENDING_INITIAL_SCAN"
	ScanStatusReasonEnumAccessDenied            ScanStatusReasonEnum = "ACCESS_DENIED"
	ScanStatusReasonEnumInternalError           ScanStatusReasonEnum = "INTERNAL_ERROR"
	ScanStatusReasonEnumUnmanagedEc2Instance    ScanStatusReasonEnum = "UNMANAGED_EC2_INSTANCE"
	ScanStatusReasonEnumUnsupportedOs           ScanStatusReasonEnum = "UNSUPPORTED_OS"
	ScanStatusReasonEnumScanEligibilityExpired  ScanStatusReasonEnum = "SCAN_ELIGIBILITY_EXPIRED"
	ScanStatusReasonEnumResourceTerminated      ScanStatusReasonEnum = "RESOURCE_TERMINATED"
	ScanStatusReasonEnumSuccessful              ScanStatusReasonEnum = "SUCCESSFUL"
	ScanStatusReasonEnumNoResourcesFound        ScanStatusReasonEnum = "NO_RESOURCES_FOUND"
	ScanStatusReasonEnumImageSizeExceeded       ScanStatusReasonEnum = "IMAGE_SIZE_EXCEEDED"
	ScanStatusReasonEnumScanFrequencyManual     ScanStatusReasonEnum = "SCAN_FREQUENCY_MANUAL"
	ScanStatusReasonEnumScanFrequencyScanOnPush ScanStatusReasonEnum = "SCAN_FREQUENCY_SCAN_ON_PUSH"
	ScanStatusReasonEnumEc2InstanceStopped      ScanStatusReasonEnum = "EC2_INSTANCE_STOPPED"
	ScanStatusReasonEnumPendingDisable          ScanStatusReasonEnum = "PENDING_DISABLE"
	ScanStatusReasonEnumNoInventory             ScanStatusReasonEnum = "NO_INVENTORY"
	ScanStatusReasonEnumStaleInventory          ScanStatusReasonEnum = "STALE_INVENTORY"
	ScanStatusReasonEnumExcludedByTag           ScanStatusReasonEnum = "EXCLUDED_BY_TAG"
	ScanStatusReasonEnumUnsupportedRuntime      ScanStatusReasonEnum = "UNSUPPORTED_RUNTIME"
)

func (e *ScanStatusReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING_INITIAL_SCAN":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "UNMANAGED_EC2_INSTANCE":
		fallthrough
	case "UNSUPPORTED_OS":
		fallthrough
	case "SCAN_ELIGIBILITY_EXPIRED":
		fallthrough
	case "RESOURCE_TERMINATED":
		fallthrough
	case "SUCCESSFUL":
		fallthrough
	case "NO_RESOURCES_FOUND":
		fallthrough
	case "IMAGE_SIZE_EXCEEDED":
		fallthrough
	case "SCAN_FREQUENCY_MANUAL":
		fallthrough
	case "SCAN_FREQUENCY_SCAN_ON_PUSH":
		fallthrough
	case "EC2_INSTANCE_STOPPED":
		fallthrough
	case "PENDING_DISABLE":
		fallthrough
	case "NO_INVENTORY":
		fallthrough
	case "STALE_INVENTORY":
		fallthrough
	case "EXCLUDED_BY_TAG":
		fallthrough
	case "UNSUPPORTED_RUNTIME":
		*e = ScanStatusReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanStatusReasonEnum: %s", s)
	}
}
