// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// JobPreparationTaskExecutionInformationStateEnum - Gets or sets the current running state of the Job Preparation task on the compute node.
type JobPreparationTaskExecutionInformationStateEnum string

const (
	JobPreparationTaskExecutionInformationStateEnumRunning   JobPreparationTaskExecutionInformationStateEnum = "running"
	JobPreparationTaskExecutionInformationStateEnumCompleted JobPreparationTaskExecutionInformationStateEnum = "completed"
)

func (e JobPreparationTaskExecutionInformationStateEnum) ToPointer() *JobPreparationTaskExecutionInformationStateEnum {
	return &e
}

func (e *JobPreparationTaskExecutionInformationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "running":
		fallthrough
	case "completed":
		*e = JobPreparationTaskExecutionInformationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobPreparationTaskExecutionInformationStateEnum: %v", v)
	}
}

// JobPreparationTaskExecutionInformation - Contains information about the execution of a Job Preparation task on a compute node.
type JobPreparationTaskExecutionInformation struct {
	// Gets or sets the time at which the Job Preparation task completed. This property is set only if the task is in the Completed state.
	EndTime *time.Time `json:"endTime,omitempty"`
	// Gets or sets the exit code of the Job Preparation task. This property is set only if the task is in the Completed state.
	ExitCode *int `json:"exitCode,omitempty"`
	// Gets or sets the most recent time at which a retry of the Job Preparation task started running. This property is set only if the task was retried (i.e. retryCount is nonzero).
	LastRetryTime *time.Time `json:"lastRetryTime,omitempty"`
	// Gets or sets the number of times the Job Preparation task has been retried by the Batch service.
	RetryCount int `json:"retryCount"`
	// Information about an error when scheduling a task.
	SchedulingError *TaskSchedulingError `json:"schedulingError,omitempty"`
	// Gets or sets the time at which the Job Preparation task started running.
	StartTime time.Time `json:"startTime"`
	// Gets or sets the current running state of the Job Preparation task on the compute node.
	State JobPreparationTaskExecutionInformationStateEnum `json:"state"`
	// Gets or sets the root directory of the Job Preparation task on the compute node.
	TaskRootDirectory *string `json:"taskRootDirectory,omitempty"`
	// Gets or sets the URL to the root directory of the Job Preparation task on the compute node.
	TaskRootDirectoryURL *string `json:"taskRootDirectoryUrl,omitempty"`
}
