<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CollectdPayload - A collection of data points sent from a collectd-based plugin. See the collectd documentation for more information.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CollectdPayload
{
    /**
     * The end time of the interval.
     * 
     * @var ?string $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endTime = null;
    
    /**
     * The measurement metadata. Example: "process_id" -> 12345
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\TypedValue> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\TypedValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * The name of the plugin. Example: "disk".
     * 
     * @var ?string $plugin
     */
	#[\JMS\Serializer\Annotation\SerializedName('plugin')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $plugin = null;
    
    /**
     * The instance name of the plugin Example: "hdcl".
     * 
     * @var ?string $pluginInstance
     */
	#[\JMS\Serializer\Annotation\SerializedName('pluginInstance')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pluginInstance = null;
    
    /**
     * The start time of the interval.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
    /**
     * The measurement type. Example: "memory".
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * The measurement type instance. Example: "used".
     * 
     * @var ?string $typeInstance
     */
	#[\JMS\Serializer\Annotation\SerializedName('typeInstance')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $typeInstance = null;
    
    /**
     * The measured values during this time interval. Each value must have a different data_source_name.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CollectdValue> $values
     */
	#[\JMS\Serializer\Annotation\SerializedName('values')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CollectdValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $values = null;
    
	public function __construct()
	{
		$this->endTime = null;
		$this->metadata = null;
		$this->plugin = null;
		$this->pluginInstance = null;
		$this->startTime = null;
		$this->type = null;
		$this->typeInstance = null;
		$this->values = null;
	}
}
