// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterDeviceRequestBodyPlatformEnum - The SNS platform type (e.g. GCM, SDM, APNS, APNS_SANDBOX).
type RegisterDeviceRequestBodyPlatformEnum string

const (
	RegisterDeviceRequestBodyPlatformEnumApns        RegisterDeviceRequestBodyPlatformEnum = "APNS"
	RegisterDeviceRequestBodyPlatformEnumApnsSandbox RegisterDeviceRequestBodyPlatformEnum = "APNS_SANDBOX"
	RegisterDeviceRequestBodyPlatformEnumGcm         RegisterDeviceRequestBodyPlatformEnum = "GCM"
	RegisterDeviceRequestBodyPlatformEnumAdm         RegisterDeviceRequestBodyPlatformEnum = "ADM"
)

func (e RegisterDeviceRequestBodyPlatformEnum) ToPointer() *RegisterDeviceRequestBodyPlatformEnum {
	return &e
}

func (e *RegisterDeviceRequestBodyPlatformEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APNS":
		fallthrough
	case "APNS_SANDBOX":
		fallthrough
	case "GCM":
		fallthrough
	case "ADM":
		*e = RegisterDeviceRequestBodyPlatformEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterDeviceRequestBodyPlatformEnum: %v", v)
	}
}

type RegisterDeviceRequestBody struct {
	// The SNS platform type (e.g. GCM, SDM, APNS, APNS_SANDBOX).
	Platform RegisterDeviceRequestBodyPlatformEnum `json:"Platform"`
	// The push token.
	Token string `json:"Token"`
}

type RegisterDeviceRequest struct {
	// The unique ID for this identity.
	IdentityID string `pathParam:"style=simple,explode=false,name=IdentityId"`
	// A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. Here, the ID of the pool that the identity belongs to.
	IdentityPoolID    string                    `pathParam:"style=simple,explode=false,name=IdentityPoolId"`
	RequestBody       RegisterDeviceRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type RegisterDeviceResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidConfigurationException
	InvalidConfigurationException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// Success
	RegisterDeviceResponse *shared.RegisterDeviceResponse
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
