/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class SearchGroupsQueryParams {
    /**
     * Find groups in the given country where country is a 2 letter country code for the country (see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 ).
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=country")
    public String country;
    public SearchGroupsQueryParams withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * When latitude and longitude are passed, distance can optionally be passed to only return groups within a certain distance (in kilometers) from the point specified by the latitude and longitude.  The distance must be &gt; 0 and &lt;= 150 and will default to 100.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=distance")
    public Double distance;
    public SearchGroupsQueryParams withDistance(Double distance) {
        this.distance = distance;
        return this;
    }
    
    /**
     * Find groups near the given latitude and longitude.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=latitude")
    public Double latitude;
    public SearchGroupsQueryParams withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * Find groups near the given latitude and longitude.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=longitude")
    public Double longitude;
    public SearchGroupsQueryParams withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * Find groups that have the given text somewhere in their name (case insensitive).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;
    public SearchGroupsQueryParams withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The page of groups to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public SearchGroupsQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of groups to return per page (must be &gt;= 1 and &lt;= 100).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;
    public SearchGroupsQueryParams withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Find groups in the given postal code.  Only a few countries support postal code searches (US, CA, AU, GB).  The country parameter must be passed when the postal_code parameter is set. &lt;br /&gt;&lt;br /&gt; NOTE: The region and postal_code parameters cannot be used at the same time and if both are passed then the postal_code will take priority.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=postal_code")
    public String postalCode;
    public SearchGroupsQueryParams withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * For countries with regions (AU, CA, GB, US), search groups in a specific region as specified by the region abbreviation.  The supported regions and their abbreviations are listed below. &lt;br /&gt;&lt;br /&gt; NOTE: The region and postal_code parameters cannot be used at the same time and if both are passed then the postal_code will take priority. &lt;br /&gt;&lt;br /&gt; --- &lt;br /&gt;&lt;br /&gt; **AU**&lt;br /&gt; - QLD: Queensland&lt;br /&gt; - SA: South Australia&lt;br /&gt; - TAS: Tasmania&lt;br /&gt; - VIC: Victoria&lt;br /&gt; - WA: Western Australia&lt;br /&gt; - NT: Northern Territory&lt;br /&gt; - NSW: New South Wales - ACT&lt;br /&gt; &lt;br /&gt; **CA**&lt;br /&gt; - AB: Alberta&lt;br /&gt; - BC: British Columbia&lt;br /&gt; - MB: Manitoba&lt;br /&gt; - NB: New Brunswick&lt;br /&gt; - NL: Newfoundland and Labrador&lt;br /&gt; - NS: Nova Scotia&lt;br /&gt; - ON: Ontario&lt;br /&gt; - QC: Quebec&lt;br /&gt; - SK: Saskatchewan&lt;br /&gt; - PE: Prince Edward Island&lt;br /&gt; &lt;br /&gt; **GB**&lt;br /&gt; - E: East&lt;br /&gt; - EM: East Midlands&lt;br /&gt; - LDN: London&lt;br /&gt; - NE: North East&lt;br /&gt; - NW: North West&lt;br /&gt; - NI: Northern Ireland&lt;br /&gt; - SC: Scotland&lt;br /&gt; - SE: South East&lt;br /&gt; - SW: South West&lt;br /&gt; - WA: Wales&lt;br /&gt; - WM: West Midlands&lt;br /&gt; - YH: Yorkshire and the Humber&lt;br /&gt; &lt;br /&gt; **US**&lt;br /&gt; All 50 states and the District of Columbia are supported.  For the abbreviations, see: https://github.com/jasonong/List-of-US-States/blob/master/states.csv
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=region")
    public String region;
    public SearchGroupsQueryParams withRegion(String region) {
        this.region = region;
        return this;
    }
    
}
