<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateSoftwareUpdateJobRequestBody
{
    /**
     * The IAM Role that Greengrass will use to create pre-signed URLs pointing towards the update artifact.
     * 
     * @var string $s3UrlSignerRole
     */
	#[\JMS\Serializer\Annotation\SerializedName('S3UrlSignerRole')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $s3UrlSignerRole;
    
    /**
     * The piece of software on the Greengrass core that will be updated.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodySoftwareToUpdateEnum $softwareToUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('SoftwareToUpdate')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodySoftwareToUpdateEnum>')]
    public CreateSoftwareUpdateJobRequestBodySoftwareToUpdateEnum $softwareToUpdate;
    
    /**
     * The minimum level of log statements that should be logged by the OTA Agent during an update.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateAgentLogLevelEnum $updateAgentLogLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdateAgentLogLevel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateAgentLogLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateSoftwareUpdateJobRequestBodyUpdateAgentLogLevelEnum $updateAgentLogLevel = null;
    
    /**
     * The ARNs of the targets (IoT things or IoT thing groups) that this update will be applied to.
     * 
     * @var array<string> $updateTargets
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdateTargets')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $updateTargets;
    
    /**
     * The architecture of the cores which are the targets of an update.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateTargetsArchitectureEnum $updateTargetsArchitecture
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdateTargetsArchitecture')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateTargetsArchitectureEnum>')]
    public CreateSoftwareUpdateJobRequestBodyUpdateTargetsArchitectureEnum $updateTargetsArchitecture;
    
    /**
     * The operating system of the cores which are the targets of an update.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateTargetsOperatingSystemEnum $updateTargetsOperatingSystem
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdateTargetsOperatingSystem')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateTargetsOperatingSystemEnum>')]
    public CreateSoftwareUpdateJobRequestBodyUpdateTargetsOperatingSystemEnum $updateTargetsOperatingSystem;
    
	public function __construct()
	{
		$this->s3UrlSignerRole = "";
		$this->softwareToUpdate = \OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodySoftwareToUpdateEnum::CORE;
		$this->updateAgentLogLevel = null;
		$this->updateTargets = [];
		$this->updateTargetsArchitecture = \OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateTargetsArchitectureEnum::ARMV6L;
		$this->updateTargetsOperatingSystem = \OpenAPI\OpenAPI\Models\Operations\CreateSoftwareUpdateJobRequestBodyUpdateTargetsOperatingSystemEnum::UBUNTU;
	}
}
