<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DiskEntry - Single disk entry.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DiskEntry
{
    /**
     * Disk label.
     * 
     * @var ?string $diskLabel
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskLabel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskLabel = null;
    
    /**
     * Disk label type (e.g. BIOS/GPT)
     * 
     * @var ?string $diskLabelType
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskLabelType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskLabelType = null;
    
    /**
     * Disk hardware address (e.g. 0:1 for SCSI).
     * 
     * @var ?string $hwAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('hwAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hwAddress = null;
    
    /**
     * Disks interface type (e.g. SATA/SCSI)
     * 
     * @var ?string $interfaceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('interfaceType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $interfaceType = null;
    
    /**
     * Disk partition list.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DiskPartitionList $partitions
     */
	#[\JMS\Serializer\Annotation\SerializedName('partitions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DiskPartitionList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiskPartitionList $partitions = null;
    
    /**
     * Disk status (e.g. online).
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * Disk capacity.
     * 
     * @var ?string $totalCapacityBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalCapacityBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalCapacityBytes = null;
    
    /**
     * Disk free space.
     * 
     * @var ?string $totalFreeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalFreeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalFreeBytes = null;
    
    /**
     * VMware disk config details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VmwareDiskConfig $vmwareConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmwareConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VmwareDiskConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmwareDiskConfig $vmwareConfig = null;
    
	public function __construct()
	{
		$this->diskLabel = null;
		$this->diskLabelType = null;
		$this->hwAddress = null;
		$this->interfaceType = null;
		$this->partitions = null;
		$this->status = null;
		$this->totalCapacityBytes = null;
		$this->totalFreeBytes = null;
		$this->vmwareConfig = null;
	}
}
