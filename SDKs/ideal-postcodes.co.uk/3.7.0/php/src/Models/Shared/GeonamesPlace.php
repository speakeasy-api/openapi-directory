<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GeonamesPlace - Full GeoNames place specification
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GeonamesPlace
{
    /**
     * Fipscode (subject to change to iso code)
     * 
     * @var string $admin1Code
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin1_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $admin1Code;
    
    /**
     * GeoName ID for first administrative area
     * 
     * @var int $admin1Geonameid
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin1_geonameid')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $admin1Geonameid;
    
    /**
     * Name of first administrative area
     * 
     * @var string $admin1Name
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin1_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $admin1Name;
    
    /**
     * Code for the second administrative division
     * 
     * @var string $admin2Code
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin2_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $admin2Code;
    
    /**
     * GeoName ID for second administrative area
     * 
     * @var int $admin2Geonameid
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin2_geonameid')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $admin2Geonameid;
    
    /**
     * Name of second administrative area
     * 
     * @var string $admin2Name
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin2_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $admin2Name;
    
    /**
     * Code for third level administrative division
     * 
     * @var string $admin3Code
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin3_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $admin3Code;
    
    /**
     * Code for fourth level administrative division
     * 
     * @var string $admin4Code
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin4_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $admin4Code;
    
    /**
     * List of alternate ASCII names
     * 
     * @var array<mixed> $alternatenames
     */
	#[\JMS\Serializer\Annotation\SerializedName('alternatenames')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $alternatenames;
    
    /**
     * Place Name (ASCII)
     * 
     * @var string $asciiname
     */
	#[\JMS\Serializer\Annotation\SerializedName('asciiname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $asciiname;
    
    /**
     * List of other countries codes mapping to this place
     * 
     * @var array<mixed> $cc2
     */
	#[\JMS\Serializer\Annotation\SerializedName('cc2')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $cc2;
    
    /**
     * 2 Letter ISO country code
     * 
     * @var string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('country_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $countryCode;
    
	#[\JMS\Serializer\Annotation\SerializedName('dataset')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GeonamesPlaceDatasetEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GeonamesPlaceDatasetEnum $dataset = null;
    
    /**
     * Digital elevation model
     * 
     * @var int $dem
     */
	#[\JMS\Serializer\Annotation\SerializedName('dem')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $dem;
    
    /**
     * Elevation in meters
     * 
     * @var int $elevation
     */
	#[\JMS\Serializer\Annotation\SerializedName('elevation')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $elevation;
    
    /**
     * GeoNames single letter feature code
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GeonamesPlaceFeatureClassEnum $featureClass
     */
	#[\JMS\Serializer\Annotation\SerializedName('feature_class')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GeonamesPlaceFeatureClassEnum>')]
    public GeonamesPlaceFeatureClassEnum $featureClass;
    
    /**
     * Full GeoNames feature code (http://www.geonames.org/export/codes.html)
     * 
     * @var string $featureCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('feature_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $featureCode;
    
    /**
     * Unique identifier for GeoNames place
     * 
     * @var int $geonameid
     */
	#[\JMS\Serializer\Annotation\SerializedName('geonameid')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $geonameid;
    
    /**
     * Unique place ID
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The latitude of the postcode (WGS84/ETRS89).
     * 
     * 
     * Can be a positive or negative decimal. E.g. `51.5083983`.
     * 
     * Returns an empty string if no location data is available. 
     * 
     * @var mixed $latitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('latitude')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $latitude;
    
    /**
     * The longitude of the postcode (WGS84/ETRS89).
     * 
     * 
     * Can be a positive or negative decimal. E.g. -0.1283983
     * 
     * Returns an empty string if no location data is available. 
     * 
     * @var mixed $longitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('longitude')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $longitude;
    
    /**
     * Datetime format
     * 
     * @var string $modificationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('modification_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $modificationDate;
    
    /**
     * Place name (UTF8)
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Population at place. Represented as string as it could be a larger than a 32bit integer
     * 
     * @var string $population
     */
	#[\JMS\Serializer\Annotation\SerializedName('population')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $population;
    
    /**
     * The IANA timezone ID
     * 
     * @var string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $timezone;
    
	public function __construct()
	{
		$this->admin1Code = "";
		$this->admin1Geonameid = 0;
		$this->admin1Name = "";
		$this->admin2Code = "";
		$this->admin2Geonameid = 0;
		$this->admin2Name = "";
		$this->admin3Code = "";
		$this->admin4Code = "";
		$this->alternatenames = [];
		$this->asciiname = "";
		$this->cc2 = [];
		$this->countryCode = "";
		$this->dataset = null;
		$this->dem = 0;
		$this->elevation = 0;
		$this->featureClass = \OpenAPI\OpenAPI\Models\Shared\GeonamesPlaceFeatureClassEnum::A;
		$this->featureCode = "";
		$this->geonameid = 0;
		$this->id = null;
		$this->latitude = null;
		$this->longitude = null;
		$this->modificationDate = "";
		$this->name = "";
		$this->population = "";
		$this->timezone = "";
	}
}
