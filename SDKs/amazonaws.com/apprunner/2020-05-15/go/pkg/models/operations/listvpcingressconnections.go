// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListVpcIngressConnectionsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListVpcIngressConnectionsXAmzTargetEnum
type ListVpcIngressConnectionsXAmzTargetEnum string

const (
	ListVpcIngressConnectionsXAmzTargetEnumAppRunnerListVpcIngressConnections ListVpcIngressConnectionsXAmzTargetEnum = "AppRunner.ListVpcIngressConnections"
)

func (e *ListVpcIngressConnectionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AppRunner.ListVpcIngressConnections":
		*e = ListVpcIngressConnectionsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListVpcIngressConnectionsXAmzTargetEnum: %s", s)
	}
}

type ListVpcIngressConnectionsHeaders struct {
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListVpcIngressConnectionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListVpcIngressConnectionsRequest struct {
	QueryParams ListVpcIngressConnectionsQueryParams
	Headers     ListVpcIngressConnectionsHeaders
	Request     shared.ListVpcIngressConnectionsRequest `request:"mediaType=application/json"`
}

type ListVpcIngressConnectionsResponse struct {
	ContentType string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListVpcIngressConnectionsResponse *shared.ListVpcIngressConnectionsResponse
	StatusCode                        int
	RawResponse                       *http.Response
}
