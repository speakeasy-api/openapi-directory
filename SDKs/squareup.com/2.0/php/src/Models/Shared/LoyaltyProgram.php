<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LoyaltyProgram - Represents a Square loyalty program. Loyalty programs define how buyers can earn points and redeem points for rewards. 
 * 
 * Square sellers can have only one loyalty program, which is created and managed from the Seller Dashboard. 
 * For more information, see [Loyalty Program Overview](https://developer.squareup.com/docs/loyalty/overview).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LoyaltyProgram
{
    /**
     * Defines how buyers can earn loyalty points.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramAccrualRule> $accrualRules
     */
	#[\JMS\Serializer\Annotation\SerializedName('accrual_rules')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramAccrualRule>')]
    public array $accrualRules;
    
    /**
     * The timestamp when the program was created, in RFC 3339 format.
     * 
     * @var string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdAt;
    
    /**
     * Describes when the loyalty program expires.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramExpirationPolicy $expirationPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiration_policy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramExpirationPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoyaltyProgramExpirationPolicy $expirationPolicy = null;
    
    /**
     * The Square-assigned ID of the loyalty program. Updates to 
     * 
     * the loyalty program do not modify the identifier.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The [locations](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) at which the program is active.
     * 
     * @var array<string> $locationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $locationIds;
    
    /**
     * The list of rewards for buyers, sorted by ascending points.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramRewardTier> $rewardTiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('reward_tiers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramRewardTier>')]
    public array $rewardTiers;
    
    /**
     * Whether the program is currently active.
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
    /**
     * Represents the naming used for loyalty points.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramTerminology $terminology
     */
	#[\JMS\Serializer\Annotation\SerializedName('terminology')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramTerminology')]
    public LoyaltyProgramTerminology $terminology;
    
    /**
     * The timestamp when the reward was last updated, in RFC 3339 format.
     * 
     * @var string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $updatedAt;
    
	public function __construct()
	{
		$this->accrualRules = [];
		$this->createdAt = "";
		$this->expirationPolicy = null;
		$this->id = "";
		$this->locationIds = [];
		$this->rewardTiers = [];
		$this->status = "";
		$this->terminology = new \OpenAPI\OpenAPI\Models\Shared\LoyaltyProgramTerminology();
		$this->updatedAt = "";
	}
}
