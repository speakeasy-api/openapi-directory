<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Achievements 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Resets the achievement with the given ID for the currently authenticated player. This method is only accessible to whitelisted tester accounts for your application.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetResponse
     */
	public function gamesManagementAchievementsReset(
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/games/v1management/achievements/{achievementId}/reset', \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->achievementResetResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\AchievementResetResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Resets all achievements for the currently authenticated player for your application. This method is only accessible to whitelisted tester accounts for your application.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllResponse
     */
	public function gamesManagementAchievementsResetAll(
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/games/v1management/achievements/reset');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->achievementResetAllResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\AchievementResetAllResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Resets all draft achievements for all players. This method is only available to user accounts for your developer console.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersResponse
     */
	public function gamesManagementAchievementsResetAllForAllPlayers(
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/games/v1management/achievements/resetAllForAllPlayers');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetAllForAllPlayersResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Resets the achievement with the given ID for all players. This method is only available to user accounts for your developer console. Only draft achievements can be reset.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersResponse
     */
	public function gamesManagementAchievementsResetForAllPlayers(
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/games/v1management/achievements/{achievementId}/resetForAllPlayers', \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetForAllPlayersResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Resets achievements with the given IDs for all players. This method is only available to user accounts for your developer console. Only draft achievements may be reset.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersResponse
     */
	public function gamesManagementAchievementsResetMultipleForAllPlayers(
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/games/v1management/achievements/resetMultipleForAllPlayers');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "achievementResetMultipleForAllRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GamesManagementAchievementsResetMultipleForAllPlayersResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
}