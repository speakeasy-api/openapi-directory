// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum - The video player size. Output only in v1. Required in v2.
type VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum string

const (
	VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeUnspecified VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_UNSPECIFIED"
	VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeSmall       VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_SMALL"
	VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeLarge       VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_LARGE"
	VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeHd          VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_HD"
	VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeUnknown     VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_UNKNOWN"
)

func (e VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum) ToPointer() *VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum {
	return &e
}

func (e *VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VIDEO_PLAYER_SIZE_UNSPECIFIED":
		fallthrough
	case "VIDEO_PLAYER_SIZE_SMALL":
		fallthrough
	case "VIDEO_PLAYER_SIZE_LARGE":
		fallthrough
	case "VIDEO_PLAYER_SIZE_HD":
		fallthrough
	case "VIDEO_PLAYER_SIZE_UNKNOWN":
		*e = VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum: %v", v)
	}
}

// VideoPlayerSizeAssignedTargetingOptionDetails - Video player size targeting option details. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`. Explicitly targeting all options is not supported. Remove all video player size targeting options to achieve this effect.
type VideoPlayerSizeAssignedTargetingOptionDetails struct {
	// The video player size. Output only in v1. Required in v2.
	VideoPlayerSize *VideoPlayerSizeAssignedTargetingOptionDetailsVideoPlayerSizeEnum `json:"videoPlayerSize,omitempty"`
}
