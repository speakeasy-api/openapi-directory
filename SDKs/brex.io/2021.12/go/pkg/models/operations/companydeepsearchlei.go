// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CompanyDeepsearchLEISecurity struct {
	UserKey shared.SchemeUserKey `security:"scheme,type=apiKey,subtype=header"`
}

type CompanyDeepsearchLEIPathParams struct {
	// lei number
	Number string `pathParam:"style=simple,explode=false,name=number"`
}

type CompanyDeepsearchLEIQueryParams struct {
	// Pagination for the ISIN number results (1000 numbers per page)
	Page *int `queryParam:"style=form,explode=true,name=page"`
}

type CompanyDeepsearchLEIRequest struct {
	PathParams  CompanyDeepsearchLEIPathParams
	QueryParams CompanyDeepsearchLEIQueryParams
	Security    CompanyDeepsearchLEISecurity
}

// CompanyDeepsearchLEIDefaultApplicationJSON - Detailed information about the error
type CompanyDeepsearchLEIDefaultApplicationJSON struct {
	Code    int     `json:"code"`
	Fault   *string `json:"fault,omitempty"`
	Message string  `json:"message"`
	Tag     string  `json:"tag"`
}

type CompanyDeepsearchLEI200ApplicationJSONCompany struct {
	Address             []string               `json:"address,omitempty"`
	Country             string                 `json:"country"`
	DateOfIncorporation *string                `json:"dateOfIncorporation,omitempty"`
	ExtraData           map[string]interface{} `json:"extraData,omitempty"`
	FormattedAddress    []string               `json:"formattedAddress,omitempty"`
	ID                  string                 `json:"id"`
	LegalForm           *string                `json:"legalForm,omitempty"`
	ManagingDirectors   []string               `json:"managingDirectors,omitempty"`
	Name                string                 `json:"name"`
	RegistrationNumber  string                 `json:"registrationNumber"`
	RequestTime         *int64                 `json:"requestTime,omitempty"`
	Secretaries         []string               `json:"secretaries,omitempty"`
	SicNaceCodes        []string               `json:"sicNaceCodes,omitempty"`
	Status              *string                `json:"status,omitempty"`
}

// CompanyDeepsearchLEI200ApplicationJSON - Result of a lookup by LEI number
type CompanyDeepsearchLEI200ApplicationJSON struct {
	Company       *CompanyDeepsearchLEI200ApplicationJSONCompany `json:"company,omitempty"`
	CurrentPage   *int                                           `json:"current_page,omitempty"`
	Isins         []string                                       `json:"isins,omitempty"`
	LastPage      *int                                           `json:"last_page,omitempty"`
	Lei           *string                                        `json:"lei,omitempty"`
	NextPage      *string                                        `json:"next_page,omitempty"`
	TotalNumIsins *int                                           `json:"total_num_isins,omitempty"`
	ValidLei      *bool                                          `json:"validLei,omitempty"`
}

type CompanyDeepsearchLEIResponse struct {
	// Result of a lookup by LEI number
	CompanyDeepsearchLEI200ApplicationJSONObject *CompanyDeepsearchLEI200ApplicationJSON
	// Detailed information about the error
	CompanyDeepsearchLEIDefaultApplicationJSONObject *CompanyDeepsearchLEIDefaultApplicationJSON
	ContentType                                      string
	StatusCode                                       int
	RawResponse                                      *http.Response
}
