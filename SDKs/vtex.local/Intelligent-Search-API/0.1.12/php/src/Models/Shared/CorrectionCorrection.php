<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CorrectionCorrection - Object that indicates if the term was misspelled and suggests a possible correction.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CorrectionCorrection
{
    /**
     * Whether the API was able to suggest a correction (`true`) or not (`false`).
     * 
     * @var ?bool $correction
     */
	#[\JMS\Serializer\Annotation\SerializedName('correction')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $correction = null;
    
    /**
     * The same as `text`, but it highlights the corrected word. Useful when there is more than one word.
     * 
     * @var ?string $highlighted
     */
	#[\JMS\Serializer\Annotation\SerializedName('highlighted')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $highlighted = null;
    
    /**
     * Whether the term was misspelled (`true`) or not (`false`).
     * 
     * @var ?bool $misspelled
     */
	#[\JMS\Serializer\Annotation\SerializedName('misspelled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $misspelled = null;
    
    /**
     * The corrected term. If the API was not able to correct the term, it will show the original search term.
     * 
     * @var ?string $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $text = null;
    
	public function __construct()
	{
		$this->correction = null;
		$this->highlighted = null;
		$this->misspelled = null;
		$this->text = null;
	}
}
