/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClientLibrarySettings } from "./clientlibrarysettings";
import { MethodSettings } from "./methodsettings";
import { Expose, Type } from "class-transformer";

/**
 * For whom the client library is being published.
 */
export enum PublishingOrganizationEnum {
  ClientLibraryOrganizationUnspecified = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED",
  Cloud = "CLOUD",
  Ads = "ADS",
  Photos = "PHOTOS",
  StreetView = "STREET_VIEW",
}

/**
 * This message configures the settings for publishing [Google Cloud Client libraries](https://cloud.google.com/apis/docs/cloud-client-libraries) generated from the service config.
 */
export class Publishing extends SpeakeasyBase {
  /**
   * Used as a tracking tag when collecting data about the APIs developer relations artifacts like docs, packages delivered to package managers, etc. Example: "speech".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiShortName" })
  apiShortName?: string;

  /**
   * GitHub teams to be added to CODEOWNERS in the directory in GitHub containing source code for the client libraries for this API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codeownerGithubTeams" })
  codeownerGithubTeams?: string[];

  /**
   * A prefix used in sample code when demarking regions to be included in documentation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "docTagPrefix" })
  docTagPrefix?: string;

  /**
   * Link to product home page. Example: https://cloud.google.com/asset-inventory/docs/overview
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documentationUri" })
  documentationUri?: string;

  /**
   * GitHub label to apply to issues and pull requests opened for this API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "githubLabel" })
  githubLabel?: string;

  /**
   * Client library settings. If the same version string appears multiple times in this list, then the last one wins. Settings from earlier settings with the same version string are discarded.
   */
  @SpeakeasyMetadata({ elemType: ClientLibrarySettings })
  @Expose({ name: "librarySettings" })
  @Type(() => ClientLibrarySettings)
  librarySettings?: ClientLibrarySettings[];

  /**
   * A list of API method settings, e.g. the behavior for methods that use the long-running operation pattern.
   */
  @SpeakeasyMetadata({ elemType: MethodSettings })
  @Expose({ name: "methodSettings" })
  @Type(() => MethodSettings)
  methodSettings?: MethodSettings[];

  /**
   * Link to a place that API users can report issues. Example: https://issuetracker.google.com/issues/new?component=190865&template=1161103
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newIssueUri" })
  newIssueUri?: string;

  /**
   * For whom the client library is being published.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization?: PublishingOrganizationEnum;

  /**
   * Optional link to proto reference documentation. Example: https://cloud.google.com/pubsub/lite/docs/reference/rpc
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protoReferenceDocumentationUri" })
  protoReferenceDocumentationUri?: string;
}
