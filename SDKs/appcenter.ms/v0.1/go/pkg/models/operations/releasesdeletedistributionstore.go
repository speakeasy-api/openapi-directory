// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ReleasesDeleteDistributionStoreSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ReleasesDeleteDistributionStoreRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the release
	ReleaseID int64 `pathParam:"style=simple,explode=false,name=release_id"`
	// The id of the distribution store
	StoreID string `pathParam:"style=simple,explode=false,name=store_id"`
}

type ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum string

const (
	ReleasesDeleteDistributionStore404ApplicationJSONCodeEnumBadRequest          ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum = "BadRequest"
	ReleasesDeleteDistributionStore404ApplicationJSONCodeEnumConflict            ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum = "Conflict"
	ReleasesDeleteDistributionStore404ApplicationJSONCodeEnumNotAcceptable       ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum = "NotAcceptable"
	ReleasesDeleteDistributionStore404ApplicationJSONCodeEnumNotFound            ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum = "NotFound"
	ReleasesDeleteDistributionStore404ApplicationJSONCodeEnumInternalServerError ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum = "InternalServerError"
	ReleasesDeleteDistributionStore404ApplicationJSONCodeEnumUnauthorized        ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum = "Unauthorized"
	ReleasesDeleteDistributionStore404ApplicationJSONCodeEnumTooManyRequests     ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum: %s", s)
	}
}

// ReleasesDeleteDistributionStore404ApplicationJSON - Distribution store destination can't be found.
type ReleasesDeleteDistributionStore404ApplicationJSON struct {
	Code    ReleasesDeleteDistributionStore404ApplicationJSONCodeEnum `json:"code"`
	Message string                                                    `json:"message"`
}

type ReleasesDeleteDistributionStoreResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Distribution store destination can't be found.
	//
	ReleasesDeleteDistributionStore404ApplicationJSONObject *ReleasesDeleteDistributionStore404ApplicationJSON
}
