/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListLaunchProfilesQueryParams {
    /**
     * The max number of results to return in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListLaunchProfilesQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token for the next set of results, or null if there are no more results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListLaunchProfilesQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * The principal ID. This currently supports a IAM Identity Center UserId. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=principalId")
    public String principalId;
    public ListLaunchProfilesQueryParams withPrincipalId(String principalId) {
        this.principalId = principalId;
        return this;
    }
    
    /**
     * Filter this request to launch profiles in any of the given states.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=states")
    public org.openapis.openapi.models.shared.LaunchProfileStateEnum[] states;
    public ListLaunchProfilesQueryParams withStates(org.openapis.openapi.models.shared.LaunchProfileStateEnum[] states) {
        this.states = states;
        return this;
    }
    
}
