/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImportResourceTypeEnum } from "./importresourcetypeenum";
import { ImportStatusEnum } from "./importstatusenum";
import { MergeStrategyEnum } from "./mergestrategyenum";
import { Expose, Transform } from "class-transformer";

/**
 * Provides summary information about an import in an import list.
 */
export class ImportSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "importId" })
  importId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "importStatus" })
  importStatus?: ImportStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "importedResourceId" })
  importedResourceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "importedResourceName" })
  importedResourceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "importedResourceType" })
  importedResourceType?: ImportResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "mergeStrategy" })
  mergeStrategy?: MergeStrategyEnum;
}
