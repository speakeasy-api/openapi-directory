<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CustomNotification
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $amount = null;
    
    /**
     * The event that caused the notification to be sent.Currently supported values:
     * 
     * * **AUTHORISATION**
     * * **CANCELLATION**
     * * **REFUND**
     * * **CAPTURE**
     * * **DEACTIVATE_RECURRING**
     * * **REPORT_AVAILABLE**
     * * **CHARGEBACK**
     * * **REQUEST_FOR_INFORMATION**
     * * **NOTIFICATION_OF_CHARGEBACK**
     * * **NOTIFICATIONTEST**
     * * **ORDER_OPENED**
     * * **ORDER_CLOSED**
     * * **CHARGEBACK_REVERSED**
     * * **REFUNDED_REVERSED**
     * * **REFUND_WITH_DATA**
     * 
     * @var ?string $eventCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventCode = null;
    
    /**
     * The time of the event. Format: [ISO 8601](http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDThh:mm:ssTZD.
     * 
     * @var ?\DateTime $eventDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $eventDate = null;
    
    /**
     * Your reference for the custom test notification.
     * 
     * @var ?string $merchantReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantReference = null;
    
    /**
     * The payment method for the payment that the notification is about. Possible values:
     * 
     * * **amex**
     * * **visa**
     * * **mc**
     * * **maestro**
     * * **bcmc**
     * * **paypal**
     *  * **sms**
     *  * **bankTransfer_NL**
     * * **bankTransfer_DE**
     * * **bankTransfer_BE**
     * * **ideal**
     * * **elv**
     * * **sepadirectdebit**
     * 
     * 
     * @var ?string $paymentMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentMethod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMethod = null;
    
    /**
     * A descripton of what caused the notification.
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
    /**
     * The outcome of the event which the notification is about. Set to either **true** or **false**. 
     * 
     * @var ?bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $success = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->eventCode = null;
		$this->eventDate = null;
		$this->merchantReference = null;
		$this->paymentMethod = null;
		$this->reason = null;
		$this->success = null;
	}
}
