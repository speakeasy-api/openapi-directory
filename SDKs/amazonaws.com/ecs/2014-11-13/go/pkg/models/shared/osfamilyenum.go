// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OSFamilyEnum string

const (
	OSFamilyEnumWindowsServer2019Full OSFamilyEnum = "WINDOWS_SERVER_2019_FULL"
	OSFamilyEnumWindowsServer2019Core OSFamilyEnum = "WINDOWS_SERVER_2019_CORE"
	OSFamilyEnumWindowsServer2016Full OSFamilyEnum = "WINDOWS_SERVER_2016_FULL"
	OSFamilyEnumWindowsServer2004Core OSFamilyEnum = "WINDOWS_SERVER_2004_CORE"
	OSFamilyEnumWindowsServer2022Core OSFamilyEnum = "WINDOWS_SERVER_2022_CORE"
	OSFamilyEnumWindowsServer2022Full OSFamilyEnum = "WINDOWS_SERVER_2022_FULL"
	OSFamilyEnumWindowsServer20H2Core OSFamilyEnum = "WINDOWS_SERVER_20H2_CORE"
	OSFamilyEnumLinux                 OSFamilyEnum = "LINUX"
)

func (e OSFamilyEnum) ToPointer() *OSFamilyEnum {
	return &e
}

func (e *OSFamilyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WINDOWS_SERVER_2019_FULL":
		fallthrough
	case "WINDOWS_SERVER_2019_CORE":
		fallthrough
	case "WINDOWS_SERVER_2016_FULL":
		fallthrough
	case "WINDOWS_SERVER_2004_CORE":
		fallthrough
	case "WINDOWS_SERVER_2022_CORE":
		fallthrough
	case "WINDOWS_SERVER_2022_FULL":
		fallthrough
	case "WINDOWS_SERVER_20H2_CORE":
		fallthrough
	case "LINUX":
		*e = OSFamilyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OSFamilyEnum: %v", v)
	}
}
