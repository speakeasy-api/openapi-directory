/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ListingDetail - This type defines the fields that describe a listing that is in a promotion.
 */
public class ListingDetail {
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentPrice")
    public Amount currentPrice;
    public ListingDetail withCurrentPrice(Amount currentPrice) {
        this.currentPrice = currentPrice;
        return this;
    }
    
    /**
     * If set to &lt;code&gt;true&lt;/code&gt;, the seller pays for the shipping (or that the item is marked for local pickup only) In this case, the listing does not have an associated shipping cost for the first listed domestic-shipping option (even if the first domestic-shipping option specifies a flat-rate or calculated shipping option). If &lt;code&gt;false&lt;/code&gt;, the buyer is required to pay for a flat-rate or calculated cost shipping service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("freeShipping")
    public Boolean freeShipping;
    public ListingDetail withFreeShipping(Boolean freeShipping) {
        this.freeShipping = freeShipping;
        return this;
    }
    
    /**
     * The seller's inventory reference ID for a listing. Also known as the "SKU" or "custom label," an inventory reference ID is either the ID of the listing or, if the listing has variations (such as a shirt that's available in multiple sizes and colors), the ID of the parent listing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventoryReferenceId")
    public String inventoryReferenceId;
    public ListingDetail withInventoryReferenceId(String inventoryReferenceId) {
        this.inventoryReferenceId = inventoryReferenceId;
        return this;
    }
    
    /**
     * Indicates the type of the &lt;b&gt;inventoryReferenceId&lt;/b&gt;, which can be either a single-SKU or a multi-SKU listing (&lt;code&gt;INVENTORY_ITEM&lt;/code&gt; and &lt;code&gt;INVENTORY_ITEM_GROUP&lt;/code&gt;, respectively).  &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; This value is not currently returned in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventoryReferenceType")
    public String inventoryReferenceType;
    public ListingDetail withInventoryReferenceType(String inventoryReferenceType) {
        this.inventoryReferenceType = inventoryReferenceType;
        return this;
    }
    
    /**
     * The ID of the category that listing belongs to. The ID is a numeric and unique identifier for the category that is assigned by eBay.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingCategoryId")
    public String listingCategoryId;
    public ListingDetail withListingCategoryId(String listingCategoryId) {
        this.listingCategoryId = listingCategoryId;
        return this;
    }
    
    /**
     * An eBay-assigned value that indicates condition of the associated item. For more information, see &lt;a href="/api-docs/sell/static/metadata/condition-id-values.html"&gt;Item condition ID and name values&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingCondition")
    public String listingCondition;
    public ListingDetail withListingCondition(String listingCondition) {
        this.listingCondition = listingCondition;
        return this;
    }
    
    /**
     * The ID of the condition associated with the item. For more information, see &lt;a href="/api-docs/sell/static/metadata/condition-id-values.html"&gt;Item condition ID and name values&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note: &lt;/b&gt; This value is not currently returned in the response.&lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingConditionId")
    public String listingConditionId;
    public ListingDetail withListingConditionId(String listingConditionId) {
        this.listingConditionId = listingConditionId;
        return this;
    }
    
    /**
     * A unique eBay-assigned ID that is generated when the item is listed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingId")
    public String listingId;
    public ListingDetail withListingId(String listingId) {
        this.listingId = listingId;
        return this;
    }
    
    /**
     * A list of the status values assigned to the item and the date that each new status was assigned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingPromotionStatuses")
    public ItemMarkdownStatus[] listingPromotionStatuses;
    public ListingDetail withListingPromotionStatuses(ItemMarkdownStatus[] listingPromotionStatuses) {
        this.listingPromotionStatuses = listingPromotionStatuses;
        return this;
    }
    
    /**
     * The number of items being sold in the listing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Integer quantity;
    public ListingDetail withQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Store CategoryId (if any) that to which the listing belongs. This field is blank if there is no seller Store category ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeCategoryId")
    public String storeCategoryId;
    public ListingDetail withStoreCategoryId(String storeCategoryId) {
        this.storeCategoryId = storeCategoryId;
        return this;
    }
    
    /**
     * The seller-defined title of the listing that a seller can use to identify the item.  This label is not displayed in end-user flows.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public ListingDetail withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
