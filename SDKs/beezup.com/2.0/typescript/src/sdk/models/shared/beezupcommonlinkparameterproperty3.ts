/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BeezUPCommonLOVLink3 } from "./beezupcommonlovlink3";
import { BeezUPCommonParameterTypeEnum } from "./beezupcommonparametertypeenum";
import { Expose, Type } from "class-transformer";

export class BeezUPCommonLinkParameterProperty3 extends SpeakeasyBase {
  /**
   * description of the parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The label corresponding to the link parameter property. This label is automatically translated based on the Accept-Language http header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * Describe the way you have to follow to get access to the LOV
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lovLink" })
  @Type(() => BeezUPCommonLOVLink3)
  lovLink?: BeezUPCommonLOVLink3;

  /**
   * If true, you MUST use indicate a value from the list of values otherwise it's a freetext
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lovRequired" })
  lovRequired?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  /**
   * schema of the parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schema" })
  schema?: string;

  /**
   * The value type of the parameter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: BeezUPCommonParameterTypeEnum;

  /**
   * The value of the parameter. It can be an integer a string or an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: Record<string, any>;
}
