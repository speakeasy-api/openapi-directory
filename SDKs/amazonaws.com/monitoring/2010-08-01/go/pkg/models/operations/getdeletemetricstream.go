// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteMetricStreamActionEnum
type GETDeleteMetricStreamActionEnum string

const (
	GETDeleteMetricStreamActionEnumDeleteMetricStream GETDeleteMetricStreamActionEnum = "DeleteMetricStream"
)

func (e *GETDeleteMetricStreamActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteMetricStream":
		*e = GETDeleteMetricStreamActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteMetricStreamActionEnum: %s", s)
	}
}

// GETDeleteMetricStreamVersionEnum
type GETDeleteMetricStreamVersionEnum string

const (
	GETDeleteMetricStreamVersionEnumTwoThousandAndTen0801 GETDeleteMetricStreamVersionEnum = "2010-08-01"
)

func (e *GETDeleteMetricStreamVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-08-01":
		*e = GETDeleteMetricStreamVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteMetricStreamVersionEnum: %s", s)
	}
}

type GETDeleteMetricStreamQueryParams struct {
	Action GETDeleteMetricStreamActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the metric stream to delete.
	Name    string                           `queryParam:"style=form,explode=true,name=Name"`
	Version GETDeleteMetricStreamVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteMetricStreamHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteMetricStreamRequest struct {
	QueryParams GETDeleteMetricStreamQueryParams
	Headers     GETDeleteMetricStreamHeaders
}

type GETDeleteMetricStreamResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
