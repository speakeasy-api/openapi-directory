// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CheckSQSResponseStatusEnum - Validation result
type CheckSQSResponseStatusEnum string

const (
	CheckSQSResponseStatusEnumOk    CheckSQSResponseStatusEnum = "ok"
	CheckSQSResponseStatusEnumError CheckSQSResponseStatusEnum = "error"
)

func (e *CheckSQSResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ok":
		fallthrough
	case "error":
		*e = CheckSQSResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckSQSResponseStatusEnum: %s", s)
	}
}

// CheckSQSResponse - Successful response
type CheckSQSResponse struct {
	// Error data
	Data     map[string]interface{} `json:"data,omitempty"`
	Duration string                 `json:"duration"`
	// Error text
	Error *string `json:"error,omitempty"`
	// Validation result
	Status CheckSQSResponseStatusEnum `json:"status"`
}
