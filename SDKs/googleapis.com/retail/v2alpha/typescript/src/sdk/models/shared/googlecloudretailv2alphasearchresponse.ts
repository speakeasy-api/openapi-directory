/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudRetailV2alphaExperimentInfo } from "./googlecloudretailv2alphaexperimentinfo";
import { GoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec } from "./googlecloudretailv2alphasearchrequestboostspecconditionboostspec";
import { GoogleCloudRetailV2alphaSearchResponseFacet } from "./googlecloudretailv2alphasearchresponsefacet";
import { GoogleCloudRetailV2alphaSearchResponseQueryExpansionInfo } from "./googlecloudretailv2alphasearchresponsequeryexpansioninfo";
import { GoogleCloudRetailV2alphaSearchResponseSearchResult } from "./googlecloudretailv2alphasearchresponsesearchresult";
import { Expose, Type } from "class-transformer";

/**
 * Response message for SearchService.Search method.
 */
export class GoogleCloudRetailV2alphaSearchResponse extends SpeakeasyBase {
  /**
   * The fully qualified resource name of applied [controls](https://cloud.google.com/retail/docs/serving-control-rules).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appliedControls" })
  appliedControls?: string[];

  /**
   * A unique search token. This should be included in the UserEvent logs resulting from this search, which enables accurate attribution of search model performance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributionToken" })
  attributionToken?: string;

  /**
   * Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search results are based on corrected_query. Otherwise the original query is used for search.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "correctedQuery" })
  correctedQuery?: string;

  /**
   * Metadata related to A/B testing Experiment associated with this response. Only exists when an experiment is triggered.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudRetailV2alphaExperimentInfo })
  @Expose({ name: "experimentInfo" })
  @Type(() => GoogleCloudRetailV2alphaExperimentInfo)
  experimentInfo?: GoogleCloudRetailV2alphaExperimentInfo[];

  /**
   * Results of facets requested by user.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudRetailV2alphaSearchResponseFacet })
  @Expose({ name: "facets" })
  @Type(() => GoogleCloudRetailV2alphaSearchResponseFacet)
  facets?: GoogleCloudRetailV2alphaSearchResponseFacet[];

  /**
   * The invalid SearchRequest.BoostSpec.condition_boost_specs that are not applied during serving.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec,
  })
  @Expose({ name: "invalidConditionBoostSpecs" })
  @Type(() => GoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec)
  invalidConditionBoostSpecs?: GoogleCloudRetailV2alphaSearchRequestBoostSpecConditionBoostSpec[];

  /**
   * A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Information describing query expansion including whether expansion has occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryExpansionInfo" })
  @Type(() => GoogleCloudRetailV2alphaSearchResponseQueryExpansionInfo)
  queryExpansionInfo?: GoogleCloudRetailV2alphaSearchResponseQueryExpansionInfo;

  /**
   * The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and only redirect_uri and attribution_token are set in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redirectUri" })
  redirectUri?: string;

  /**
   * A list of matched items. The order represents the ranking.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudRetailV2alphaSearchResponseSearchResult,
  })
  @Expose({ name: "results" })
  @Type(() => GoogleCloudRetailV2alphaSearchResponseSearchResult)
  results?: GoogleCloudRetailV2alphaSearchResponseSearchResult[];

  /**
   * The estimated total count of matched items irrespective of pagination. The count of results returned by pagination may be less than the total_size that matches.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
