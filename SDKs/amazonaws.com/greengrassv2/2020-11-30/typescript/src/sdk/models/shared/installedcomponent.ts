/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstalledComponentLifecycleStateEnum } from "./installedcomponentlifecyclestateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about a component on a Greengrass core device.
 */
export class InstalledComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "componentName" })
  componentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "componentVersion" })
  componentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isRoot" })
  isRoot?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastInstallationSource" })
  lastInstallationSource?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastReportedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastReportedTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastStatusChangeTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastStatusChangeTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lifecycleState" })
  lifecycleState?: InstalledComponentLifecycleStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lifecycleStateDetails" })
  lifecycleStateDetails?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lifecycleStatusCodes" })
  lifecycleStatusCodes?: string[];
}
