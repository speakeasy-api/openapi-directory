/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ListOrders2RequestBody extends SpeakeasyBase {
  /**
   * Concatened value sufix {{creationDate}} and range date in Timestamp format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "f_creationDate" })
  fCreationDate: string;

  /**
   * Number of the page to be retrieved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  /**
   * Number of orders per page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage: number;

  /**
   * Full-text search for the orders.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "q" })
  q?: string;
}

export class ListOrders2Request extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ListOrders2RequestBody;

  /**
   * Filters list to return only orders with non `null` values for the `invoiceInput` field.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=f_hasInputInvoice",
  })
  fHasInputInvoice?: boolean;
}

export class ListOrders2Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listOrders?: shared.ListOrders;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
