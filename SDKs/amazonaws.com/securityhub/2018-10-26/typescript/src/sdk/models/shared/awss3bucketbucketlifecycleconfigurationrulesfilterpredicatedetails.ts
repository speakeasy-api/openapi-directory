/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails } from "./awss3bucketbucketlifecycleconfigurationrulesfilterpredicateoperandsdetails";
import { AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails } from "./awss3bucketbucketlifecycleconfigurationrulesfilterpredicatetagdetails";
import { Expose, Type } from "class-transformer";

/**
 * The configuration for the filter.
 */
export class AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails,
  })
  @Expose({ name: "Operands" })
  @Type(
    () =>
      AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails
  )
  operands?: AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "Prefix" })
  prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tag" })
  @Type(
    () => AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails
  )
  tag?: AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}
