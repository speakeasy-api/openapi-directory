/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * VM Agent Metadata.
 */
export class AgentMetadata extends SpeakeasyBase {
  /**
   * When the VM agent started. Use agent_startup_time instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  creationTime?: string;

  /**
   * Full name of the entity that created this vm. For MIG, this path is: projects/{project}/regions/{region}/InstanceGroupManagers/{igm} The value is retrieved from the vm metadata key of "created-by".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  creator?: string;

  /**
   * image version for the VM that this agent is installed on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageVersion" })
  imageVersion?: string;

  /**
   * GCP instance name (go/instance-name).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  /**
   * GCP instance ID (go/instance-id).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceId" })
  instanceId?: string;

  /**
   * If the GCP instance has received preemption notice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instancePreemptionNoticeReceived" })
  instancePreemptionNoticeReceived?: boolean;

  /**
   * parsed contents of /etc/os-release
   */
  @SpeakeasyMetadata()
  @Expose({ name: "osRelease" })
  osRelease?: Record<string, string>;

  /**
   * agent binary version running on VM
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;

  /**
   * Agent zone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zone" })
  zone?: string;
}
