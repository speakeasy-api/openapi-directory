// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GatewayAPIConfigChannelEnum - The Gateway API release channel to use for Gateway API.
type GatewayAPIConfigChannelEnum string

const (
	GatewayAPIConfigChannelEnumChannelUnspecified  GatewayAPIConfigChannelEnum = "CHANNEL_UNSPECIFIED"
	GatewayAPIConfigChannelEnumChannelDisabled     GatewayAPIConfigChannelEnum = "CHANNEL_DISABLED"
	GatewayAPIConfigChannelEnumChannelExperimental GatewayAPIConfigChannelEnum = "CHANNEL_EXPERIMENTAL"
	GatewayAPIConfigChannelEnumChannelStandard     GatewayAPIConfigChannelEnum = "CHANNEL_STANDARD"
)

func (e *GatewayAPIConfigChannelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CHANNEL_UNSPECIFIED":
		fallthrough
	case "CHANNEL_DISABLED":
		fallthrough
	case "CHANNEL_EXPERIMENTAL":
		fallthrough
	case "CHANNEL_STANDARD":
		*e = GatewayAPIConfigChannelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GatewayAPIConfigChannelEnum: %s", s)
	}
}

// GatewayAPIConfig - GatewayAPIConfig contains the desired config of Gateway API on this cluster.
type GatewayAPIConfig struct {
	// The Gateway API release channel to use for Gateway API.
	Channel *GatewayAPIConfigChannelEnum `json:"channel,omitempty"`
}
