// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetOrganizationActionBatchRequest struct {
	ActionBatchID  string `pathParam:"style=simple,explode=false,name=actionBatchId"`
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
}

type GetOrganizationActionBatch200ApplicationJSONActions struct {
	// The operation to be used by this action
	Operation string `json:"operation"`
	// Unique identifier for the resource to be acted on
	Resource string `json:"resource"`
}

type GetOrganizationActionBatch200ApplicationJSONStatusCreatedResources struct {
	// ID of the created resource
	ID *string `json:"id,omitempty"`
	// URI, not including base, of the created resource
	URI *string `json:"uri,omitempty"`
}

// GetOrganizationActionBatch200ApplicationJSONStatus - Status of action batch
type GetOrganizationActionBatch200ApplicationJSONStatus struct {
	// Flag describing whether all actions in the action batch have completed
	Completed *bool `json:"completed,omitempty"`
	// Resources created as a result of this action batch
	CreatedResources []GetOrganizationActionBatch200ApplicationJSONStatusCreatedResources `json:"createdResources"`
	// List of errors encountered when running actions in the action batch
	Errors []string `json:"errors,omitempty"`
	// Flag describing whether any actions in the action batch failed
	Failed *bool `json:"failed,omitempty"`
}

// GetOrganizationActionBatch200ApplicationJSON - Successful operation
type GetOrganizationActionBatch200ApplicationJSON struct {
	// A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
	Actions []GetOrganizationActionBatch200ApplicationJSONActions `json:"actions"`
	// Flag describing whether the action should be previewed before executing or not
	Confirmed *bool `json:"confirmed,omitempty"`
	// ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
	ID *string `json:"id,omitempty"`
	// ID of the organization this action batch belongs to
	OrganizationID *string `json:"organizationId,omitempty"`
	// Status of action batch
	Status *GetOrganizationActionBatch200ApplicationJSONStatus `json:"status,omitempty"`
	// Flag describing whether actions should run synchronously or asynchronously
	Synchronous *bool `json:"synchronous,omitempty"`
}

type GetOrganizationActionBatchResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationActionBatch200ApplicationJSONObject *GetOrganizationActionBatch200ApplicationJSON
}
