"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import conversations_v1_role as shared_conversations_v1_role
from ..shared import role_enum_role_type_enum as shared_role_enum_role_type_enum
from typing import Optional

CREATE_ROLE_SERVERS = [
	"https://conversations.twilio.com",
]


@dataclasses.dataclass
class CreateRoleSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateRoleCreateRoleRequest:
    
    friendly_name: str = dataclasses.field(metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the new resource. It can be up to 64 characters long."""  
    permission: list[str] = dataclasses.field(metadata={'form': { 'field_name': 'Permission' }})
    r"""A permission that you grant to the new role. Only one permission can be granted per parameter. To assign more than one permission, repeat this parameter for each permission value. The values for this parameter depend on the role's `type`."""  
    type: shared_role_enum_role_type_enum.RoleEnumRoleTypeEnum = dataclasses.field(metadata={'form': { 'field_name': 'Type' }})  
    

@dataclasses.dataclass
class CreateRoleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    conversations_v1_role: Optional[shared_conversations_v1_role.ConversationsV1Role] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    