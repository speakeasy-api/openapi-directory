/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`.
 */
export enum DrivelabelsLabelsListMinimumRoleEnum {
  LabelRoleUnspecified = "LABEL_ROLE_UNSPECIFIED",
  Reader = "READER",
  Applier = "APPLIER",
  Organizer = "ORGANIZER",
  Editor = "EDITOR",
}

/**
 * When specified, only certain fields belonging to the indicated view are returned.
 */
export enum DrivelabelsLabelsListViewEnum {
  LabelViewBasic = "LABEL_VIEW_BASIC",
  LabelViewFull = "LABEL_VIEW_FULL",
}

export class DrivelabelsLabelsListRequest extends SpeakeasyBase {
  /**
   * V1 error format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=$.xgafv",
  })
  dollarXgafv?: shared.XgafvEnum;

  /**
   * OAuth access token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=access_token",
  })
  accessToken?: string;

  /**
   * Data format for response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * JSONP
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * The customer to scope this list request to. For example: "customers/abcd1234". If unset, will return all labels within the current customer.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=customer",
  })
  customer?: string;

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=languageCode",
  })
  languageCode?: string;

  /**
   * Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minimumRole",
  })
  minimumRole?: DrivelabelsLabelsListMinimumRoleEnum;

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Maximum number of labels to return per page. Default: 50. Max: 200.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * The token of the page to return.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageToken",
  })
  pageToken?: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned label resource names don't reference a specific revision (`labels/{id}`).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=publishedOnly",
  })
  publishedOnly?: boolean;

  /**
   * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * Legacy upload protocol for media (e.g. "media", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=uploadType",
  })
  uploadType?: string;

  /**
   * Upload protocol for media (e.g. "raw", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=upload_protocol",
  })
  uploadProtocol?: string;

  /**
   * Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=useAdminAccess",
  })
  useAdminAccess?: boolean;

  /**
   * When specified, only certain fields belonging to the indicated view are returned.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=view" })
  view?: DrivelabelsLabelsListViewEnum;
}

export class DrivelabelsLabelsListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  googleAppsDriveLabelsV2ListLabelsResponse?: shared.GoogleAppsDriveLabelsV2ListLabelsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
