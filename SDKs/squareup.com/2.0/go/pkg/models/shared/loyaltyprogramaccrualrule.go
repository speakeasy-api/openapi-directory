// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// LoyaltyProgramAccrualRule - Defines an accrual rule, which is how buyers can earn points.
type LoyaltyProgramAccrualRule struct {
	// The type of the accrual rule that defines how buyers can earn points.
	AccrualType string `json:"accrual_type"`
	// When the accrual rule is item-based or category-based, this field specifies the ID
	// of the [catalog object](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) that buyers can purchase to earn points.
	// If `accrual_type` is `ITEM_VARIATION`, the object is an item variation.
	// If `accrual_type` is `CATEGORY`, the object is a category.
	CatalogObjectID *string `json:"catalog_object_id,omitempty"`
	// When the accrual rule is spend-based (`accrual_type` is `SPEND`), this field
	// lists the IDs of any `CATEGORY` catalog objects that are excluded from points accrual.
	//
	// You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects)
	// endpoint to retrieve information about the excluded categories.
	ExcludedCategoryIds []string `json:"excluded_category_ids,omitempty"`
	// When the accrual rule is spend-based (`accrual_type` is `SPEND`), this field
	// lists the IDs of any `ITEM_VARIATION` catalog objects that are excluded from points accrual.
	//
	// You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects)
	// endpoint to retrieve information about the excluded item variations.
	ExcludedItemVariationIds []string `json:"excluded_item_variation_ids,omitempty"`
	// The number of points that
	// buyers earn based on the `accrual_type`.
	Points *int64 `json:"points,omitempty"`
	// Represents an amount of money. `Money` fields can be signed or unsigned.
	// Fields that do not explicitly define whether they are signed or unsigned are
	// considered unsigned and can only hold positive amounts. For signed fields, the
	// sign of the value indicates the purpose of the money transfer. See
	// [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
	// for more information.
	SpendAmountMoney *Money `json:"spend_amount_money,omitempty"`
	// Represents an amount of money. `Money` fields can be signed or unsigned.
	// Fields that do not explicitly define whether they are signed or unsigned are
	// considered unsigned and can only hold positive amounts. For signed fields, the
	// sign of the value indicates the purpose of the money transfer. See
	// [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
	// for more information.
	VisitMinimumAmountMoney *Money `json:"visit_minimum_amount_money,omitempty"`
}
