"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegisterImageRequest = exports.RegisterImageRequestBlockDeviceMappings = exports.RegisterImageRequestBlockDeviceMappingsEbs = exports.RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum = exports.RegisterImageRequestArchitectureEnum = void 0;
var utils_1 = require("../../../internal/utils");
var bootmodevaluesenum_1 = require("./bootmodevaluesenum");
var imdssupportvaluesenum_1 = require("./imdssupportvaluesenum");
var tpmsupportvaluesenum_1 = require("./tpmsupportvaluesenum");
/**
 * <p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>
 */
var RegisterImageRequestArchitectureEnum;
(function (RegisterImageRequestArchitectureEnum) {
    RegisterImageRequestArchitectureEnum["I386"] = "i386";
    RegisterImageRequestArchitectureEnum["X8664"] = "x86_64";
    RegisterImageRequestArchitectureEnum["Arm64"] = "arm64";
    RegisterImageRequestArchitectureEnum["X8664Mac"] = "x86_64_mac";
    RegisterImageRequestArchitectureEnum["Arm64Mac"] = "arm64_mac";
})(RegisterImageRequestArchitectureEnum = exports.RegisterImageRequestArchitectureEnum || (exports.RegisterImageRequestArchitectureEnum = {}));
/**
 * The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>. If the volume type is <code>io1</code> or <code>io2</code>, you must specify the IOPS that the volume supports.
 */
var RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum;
(function (RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum) {
    RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum["Standard"] = "standard";
    RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum["Io1"] = "io1";
    RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum["Io2"] = "io2";
    RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum["Gp2"] = "gp2";
    RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum["Sc1"] = "sc1";
    RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum["St1"] = "st1";
    RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum["Gp3"] = "gp3";
})(RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum = exports.RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum || (exports.RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum = {}));
/**
 * Parameters used to automatically set up EBS volumes when the instance is launched.
 */
var RegisterImageRequestBlockDeviceMappingsEbs = /** @class */ (function (_super) {
    __extends(RegisterImageRequestBlockDeviceMappingsEbs, _super);
    function RegisterImageRequestBlockDeviceMappingsEbs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "encrypted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "iops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "kmsKeyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "outpostArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "snapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "throughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "volumeSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequestBlockDeviceMappingsEbs.prototype, "volumeType", void 0);
    return RegisterImageRequestBlockDeviceMappingsEbs;
}(utils_1.SpeakeasyBase));
exports.RegisterImageRequestBlockDeviceMappingsEbs = RegisterImageRequestBlockDeviceMappingsEbs;
/**
 * Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.
 */
var RegisterImageRequestBlockDeviceMappings = /** @class */ (function (_super) {
    __extends(RegisterImageRequestBlockDeviceMappings, _super);
    function RegisterImageRequestBlockDeviceMappings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequestBlockDeviceMappings.prototype, "deviceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RegisterImageRequestBlockDeviceMappingsEbs)
    ], RegisterImageRequestBlockDeviceMappings.prototype, "ebs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequestBlockDeviceMappings.prototype, "noDevice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequestBlockDeviceMappings.prototype, "virtualName", void 0);
    return RegisterImageRequestBlockDeviceMappings;
}(utils_1.SpeakeasyBase));
exports.RegisterImageRequestBlockDeviceMappings = RegisterImageRequestBlockDeviceMappings;
/**
 * Contains the parameters for RegisterImage.
 */
var RegisterImageRequest = /** @class */ (function (_super) {
    __extends(RegisterImageRequest, _super);
    function RegisterImageRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "architecture", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RegisterImageRequest.prototype, "billingProducts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: RegisterImageRequestBlockDeviceMappings }),
        __metadata("design:type", Array)
    ], RegisterImageRequest.prototype, "blockDeviceMappings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "bootMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegisterImageRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegisterImageRequest.prototype, "enaSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "imageLocation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "imdsSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "kernelId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "ramdiskId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "rootDeviceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "sriovNetSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "tpmSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "uefiData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegisterImageRequest.prototype, "virtualizationType", void 0);
    return RegisterImageRequest;
}(utils_1.SpeakeasyBase));
exports.RegisterImageRequest = RegisterImageRequest;
