/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer extends SpeakeasyBase {
  /**
   * If true, the string will be handled as html.
   */
  @SpeakeasyMetadata({ data: "form, name=IsHtml" })
  @Expose({ name: "IsHtml" })
  isHtml?: boolean;

  /**
   * The ISO 639-1 code of the target language. Using default if not set.
   */
  @SpeakeasyMetadata({ data: "form, name=Language" })
  @Expose({ name: "Language" })
  language?: string;

  /**
   * The text to parse and replace the placeholders in.
   */
  @SpeakeasyMetadata({ data: "form, name=TextToParse" })
  @Expose({ name: "TextToParse" })
  textToParse?: string;

  /**
   * If true, then the placeholder values are trimmed after usage.
   */
  @SpeakeasyMetadata({ data: "form, name=Trim" })
  @Expose({ name: "Trim" })
  trim?: boolean;
}
