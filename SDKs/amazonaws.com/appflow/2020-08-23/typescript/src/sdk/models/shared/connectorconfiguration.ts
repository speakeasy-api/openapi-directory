/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthenticationConfig } from "./authenticationconfig";
import { ConnectorMetadata } from "./connectormetadata";
import { ConnectorProvisioningConfig } from "./connectorprovisioningconfig";
import { ConnectorProvisioningTypeEnum } from "./connectorprovisioningtypeenum";
import { ConnectorRuntimeSetting } from "./connectorruntimesetting";
import { ConnectorTypeEnum } from "./connectortypeenum";
import { OperatorsEnum } from "./operatorsenum";
import { ScheduleFrequencyTypeEnum } from "./schedulefrequencytypeenum";
import { TriggerTypeEnum } from "./triggertypeenum";
import { WriteOperationTypeEnum } from "./writeoperationtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  The configuration settings related to a given connector.
 */
export class ConnectorConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authenticationConfig" })
  @Type(() => AuthenticationConfig)
  authenticationConfig?: AuthenticationConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "canUseAsDestination" })
  canUseAsDestination?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canUseAsSource" })
  canUseAsSource?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorArn" })
  connectorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorDescription" })
  connectorDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorLabel" })
  connectorLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorMetadata" })
  @Type(() => ConnectorMetadata)
  connectorMetadata?: ConnectorMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorModes" })
  connectorModes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "connectorName" })
  connectorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorOwner" })
  connectorOwner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorProvisioningConfig" })
  @Type(() => ConnectorProvisioningConfig)
  connectorProvisioningConfig?: ConnectorProvisioningConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorProvisioningType" })
  connectorProvisioningType?: ConnectorProvisioningTypeEnum;

  @SpeakeasyMetadata({ elemType: ConnectorRuntimeSetting })
  @Expose({ name: "connectorRuntimeSettings" })
  @Type(() => ConnectorRuntimeSetting)
  connectorRuntimeSettings?: ConnectorRuntimeSetting[];

  @SpeakeasyMetadata()
  @Expose({ name: "connectorType" })
  connectorType?: ConnectorTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorVersion" })
  connectorVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isPrivateLinkEnabled" })
  isPrivateLinkEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isPrivateLinkEndpointUrlRequired" })
  isPrivateLinkEndpointUrlRequired?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "logoURL" })
  logoURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  registeredAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredBy" })
  registeredBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "supportedApiVersions" })
  supportedApiVersions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportedDestinationConnectors" })
  supportedDestinationConnectors?: ConnectorTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportedOperators" })
  supportedOperators?: OperatorsEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportedSchedulingFrequencies" })
  supportedSchedulingFrequencies?: ScheduleFrequencyTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportedTriggerTypes" })
  supportedTriggerTypes?: TriggerTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportedWriteOperations" })
  supportedWriteOperations?: WriteOperationTypeEnum[];
}
