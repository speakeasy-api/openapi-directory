"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyBusinessHourSettingsCarrierBusinessHours:
    r"""Object containing business hour configuration."""
    
    closing_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closingTime') }})
    r"""Closing time."""  
    day_of_week: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeek') }})
    r"""Day of the week, from `0` (sunday) to `6` (saturday)."""  
    opening_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openingTime') }})
    r"""Opening time."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyBusinessHourSettings:
    r"""Business hour configuration."""
    
    carrier_business_hours: list[PostAPILogisticsPvtShippingPoliciesRequestBodyBusinessHourSettingsCarrierBusinessHours] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrierBusinessHours') }})
    r"""Array containing objects with business hour configurations."""  
    is_open_outside_business_hours: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isOpenOutsideBusinessHours') }})
    r"""Select whether the shipping policy allows deliveries outside business hours."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyCarrierSchedule:
    
    day_of_week: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeek'), 'exclude': lambda f: f is None }})
    r"""Day of the week, from `0` (sunday) to `6` (saturday)."""  
    time_limit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeLimit'), 'exclude': lambda f: f is None }})
    r"""Time limit."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyCubicWeightSettings:
    r"""Measure that accounts package's volume, and not only weight."""
    
    minimun_acceptable_volumetric_weight: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimunAcceptableVolumetricWeight') }})  
    volumetric_factor: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumetricFactor') }})
    r"""Factor that will be used on the cubic weight calculation."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRangesDeliveryCapacity:
    
    capacity_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capacityType') }})
    r"""Defines how the delivery capacity is measured for this reservation window, by maximum number of orders (`\\"ORDERS_QUANTITY\\"`) or SKUs (`\\"SKUS_QUANTITY\\"`)."""  
    max_value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxValue') }})
    r"""Maximum number of orders or SKUs that the store is capable of fulfilling."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRanges:
    
    end_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime') }})
    r"""End time for day of the week."""  
    list_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPrice') }})
    r"""List price for day of the week."""  
    start_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime') }})
    r"""Start time for day of the week."""  
    delivery_capacity: Optional[list[PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRangesDeliveryCapacity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryCapacity'), 'exclude': lambda f: f is None }})
    r"""Sets maximum delivery capacity for a given reservation window for scheduled delivery."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettingsDayOfWeekForDelivery:
    
    day_of_week: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeek') }})
    r"""Day of the week, from `0` (sunday) to `6` (saturday)."""  
    delivery_ranges: list[PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettingsDayOfWeekForDeliveryDeliveryRanges] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryRanges') }})
    r"""Reservation windows for scheduled delivery."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettings:
    r"""Settings for the Scheduled Delivery feature."""
    
    day_of_week_for_delivery: list[PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettingsDayOfWeekForDelivery] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeekForDelivery') }})
    r"""Select the chosen days for delivery. Values for each day of the week are: 0 = sunday, 1 = monday, 2 = tuesday, 3 = wednesday, 4 = thursday, 5 = friday, 6 = saturday. Make sure to add the available hours for the chosen days, following the example."""  
    max_range_delivery: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxRangeDelivery') }})
    r"""Range of days available within a delivery window, for the customer to choose the scheduled delivery. For example, if the configured maxRangeDelivery is equal 7, and the customer buys something on a Tuesday, the options for scheduled delivery will be shown until the following Tuesday (7 days from the purchase day). If no options are available within the maxRangeDelivery set, this shipping policy won't be shown on the checkout."""  
    use_delivery_schedule: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useDeliverySchedule') }})
    r"""Select the Scheduled Delivery configuration."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyMaxDimension:
    r"""Object containing attributes of maximum dimension permitted by the shipping policy (carrier)."""
    
    largest_measure: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('largestMeasure') }})
    r"""Largest measure of the package."""  
    max_measure_sum: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxMeasureSum') }})
    r"""Sum of all maximum measures of the package."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyModalSettings:
    r"""Configurations for the [modal](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125), which is the attachement of a specific product to a carrier specialized in delivering that type of product."""
    
    modals: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modals') }})
    r"""Type of special freight."""  
    use_only_items_with_defined_modal: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useOnlyItemsWithDefinedModal') }})
    r"""When set as `true`, the modal's configurations will apply only for items with a defined modal."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyPickupPointsSettings:
    r"""Configuration for Pickup Points."""
    
    pickup_point_ids: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupPointIds') }})
    r"""Insert the IDs for pickup points previously configured in your store."""  
    pickup_point_tags: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupPointTags') }})
    r"""Insert the tags for pickup points previously configured in your store."""  
    sellers: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellers') }})
    r"""Sellers that will be associated with the [pickup points](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) of the shipping policy being created."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBodyWeekendAndHolidays:
    r"""If the shipping policy includes deliveries on weekends and holidays."""
    
    holiday: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('holiday') }})
    r"""Does the shipping policy allow deliveries onholidays?"""  
    saturday: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('saturday') }})
    r"""Does the shipping policy allow deliveries on saturdays?"""  
    sunday: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sunday') }})
    r"""Does the shipping policy allow deliveries on sundays?"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequestBody:
    
    business_hour_settings: PostAPILogisticsPvtShippingPoliciesRequestBodyBusinessHourSettings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessHourSettings') }})
    r"""Business hour configuration."""  
    cubic_weight_settings: PostAPILogisticsPvtShippingPoliciesRequestBodyCubicWeightSettings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cubicWeightSettings') }})
    r"""Measure that accounts package's volume, and not only weight."""  
    delivery_schedule_settings: PostAPILogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryScheduleSettings') }})
    r"""Settings for the Scheduled Delivery feature."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the shipping policy."""  
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isActive') }})
    r"""Indicates whether shipping policy is active or not."""  
    max_dimension: PostAPILogisticsPvtShippingPoliciesRequestBodyMaxDimension = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxDimension') }})
    r"""Object containing attributes of maximum dimension permitted by the shipping policy (carrier)."""  
    maximum_value_aceptable: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maximumValueAceptable') }})
    r"""Maximum value accepted by the carrier, to realize the shipping."""  
    minimum_value_aceptable: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumValueAceptable') }})
    r"""Minimum value accepted by the carrier, to realize the shipping."""  
    modal_settings: PostAPILogisticsPvtShippingPoliciesRequestBodyModalSettings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modalSettings') }})
    r"""Configurations for the [modal](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125), which is the attachement of a specific product to a carrier specialized in delivering that type of product."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the shipping policy."""  
    number_of_items_per_shipment: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfItemsPerShipment') }})
    r"""Capacity of your store's logistics of shipment, determines number of items permitted per shipment."""  
    pickup_points_settings: PostAPILogisticsPvtShippingPoliciesRequestBodyPickupPointsSettings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupPointsSettings') }})
    r"""Configuration for Pickup Points."""  
    shipping_method: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingMethod') }})
    r"""Type of shipping available for this shipping policy (carrier). Options shown on freight simulation"""  
    weekend_and_holidays: PostAPILogisticsPvtShippingPoliciesRequestBodyWeekendAndHolidays = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weekendAndHolidays') }})
    r"""If the shipping policy includes deliveries on weekends and holidays."""  
    carrier_schedule: Optional[list[PostAPILogisticsPvtShippingPoliciesRequestBodyCarrierSchedule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrierSchedule'), 'exclude': lambda f: f is None }})
    r"""Schedule sent by the carrier, to configure Shipping policy"""  
    

@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    request_body: Optional[PostAPILogisticsPvtShippingPoliciesRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PostAPILogisticsPvtShippingPoliciesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    