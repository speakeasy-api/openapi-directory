// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// ListWorkflowsRequestBodyStatusEnum - Status of workflow execution.
type ListWorkflowsRequestBodyStatusEnum string

const (
	ListWorkflowsRequestBodyStatusEnumNotStarted ListWorkflowsRequestBodyStatusEnum = "NOT_STARTED"
	ListWorkflowsRequestBodyStatusEnumInProgress ListWorkflowsRequestBodyStatusEnum = "IN_PROGRESS"
	ListWorkflowsRequestBodyStatusEnumComplete   ListWorkflowsRequestBodyStatusEnum = "COMPLETE"
	ListWorkflowsRequestBodyStatusEnumFailed     ListWorkflowsRequestBodyStatusEnum = "FAILED"
	ListWorkflowsRequestBodyStatusEnumSplit      ListWorkflowsRequestBodyStatusEnum = "SPLIT"
	ListWorkflowsRequestBodyStatusEnumRetry      ListWorkflowsRequestBodyStatusEnum = "RETRY"
	ListWorkflowsRequestBodyStatusEnumCancelled  ListWorkflowsRequestBodyStatusEnum = "CANCELLED"
)

func (e ListWorkflowsRequestBodyStatusEnum) ToPointer() *ListWorkflowsRequestBodyStatusEnum {
	return &e
}

func (e *ListWorkflowsRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_STARTED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETE":
		fallthrough
	case "FAILED":
		fallthrough
	case "SPLIT":
		fallthrough
	case "RETRY":
		fallthrough
	case "CANCELLED":
		*e = ListWorkflowsRequestBodyStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListWorkflowsRequestBodyStatusEnum: %v", v)
	}
}

// ListWorkflowsRequestBodyWorkflowTypeEnum - The type of workflow. The only supported value is APPFLOW_INTEGRATION.
type ListWorkflowsRequestBodyWorkflowTypeEnum string

const (
	ListWorkflowsRequestBodyWorkflowTypeEnumAppflowIntegration ListWorkflowsRequestBodyWorkflowTypeEnum = "APPFLOW_INTEGRATION"
)

func (e ListWorkflowsRequestBodyWorkflowTypeEnum) ToPointer() *ListWorkflowsRequestBodyWorkflowTypeEnum {
	return &e
}

func (e *ListWorkflowsRequestBodyWorkflowTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APPFLOW_INTEGRATION":
		*e = ListWorkflowsRequestBodyWorkflowTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListWorkflowsRequestBodyWorkflowTypeEnum: %v", v)
	}
}

type ListWorkflowsRequestBody struct {
	// Retrieve workflows ended after timestamp.
	QueryEndDate *time.Time `json:"QueryEndDate,omitempty"`
	// Retrieve workflows started after timestamp.
	QueryStartDate *time.Time `json:"QueryStartDate,omitempty"`
	// Status of workflow execution.
	Status *ListWorkflowsRequestBodyStatusEnum `json:"Status,omitempty"`
	// The type of workflow. The only supported value is APPFLOW_INTEGRATION.
	WorkflowType *ListWorkflowsRequestBodyWorkflowTypeEnum `json:"WorkflowType,omitempty"`
}

type ListWorkflowsRequest struct {
	// The unique name of the domain.
	DomainName        string                   `pathParam:"style=simple,explode=false,name=DomainName"`
	RequestBody       ListWorkflowsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The maximum number of results to return per page.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=max-results"`
	// The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=next-token"`
}

type ListWorkflowsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListWorkflowsResponse *shared.ListWorkflowsResponse
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
