// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum - The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
type UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum string

const (
	UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnumMinimizeClientDowntime UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum = "minimizeClientDowntime"
	UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnumMinimizeUpgradeTime    UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum = "minimizeUpgradeTime"
)

func (e *UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minimizeClientDowntime":
		fallthrough
	case "minimizeUpgradeTime":
		*e = UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum: %s", s)
	}
}

type UpdateNetworkWirelessSettingsRequestBody struct {
	// Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)
	Ipv6BridgeEnabled *bool `json:"ipv6BridgeEnabled,omitempty"`
	// Toggle for enabling or disabling LED lights on all APs in the network (making them run dark)
	LedLightsOn *bool `json:"ledLightsOn,omitempty"`
	// Toggle for enabling or disabling location analytics for your network
	LocationAnalyticsEnabled *bool `json:"locationAnalyticsEnabled,omitempty"`
	// Toggle for enabling or disabling meshing in a network
	MeshingEnabled *bool `json:"meshingEnabled,omitempty"`
	// The upgrade strategy to apply to the network. Must be one of 'minimizeUpgradeTime' or 'minimizeClientDowntime'. Requires firmware version MR 26.8 or higher'
	UpgradeStrategy *UpdateNetworkWirelessSettingsRequestBodyUpgradeStrategyEnum `json:"upgradeStrategy,omitempty"`
}

type UpdateNetworkWirelessSettingsRequest struct {
	RequestBody *UpdateNetworkWirelessSettingsRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                    `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkWirelessSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkWirelessSettings200ApplicationJSONObject map[string]interface{}
}
