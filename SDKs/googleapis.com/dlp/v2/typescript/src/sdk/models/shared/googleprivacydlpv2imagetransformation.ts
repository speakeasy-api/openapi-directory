/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2Color } from "./googleprivacydlpv2color";
import { GooglePrivacyDlpV2SelectedInfoTypes } from "./googleprivacydlpv2selectedinfotypes";
import { Expose, Type } from "class-transformer";

/**
 * Configuration for determining how redaction of images should occur.
 */
export class GooglePrivacyDlpV2ImageTransformation extends SpeakeasyBase {
  /**
   * Apply transformation to all findings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allInfoTypes" })
  allInfoTypes?: Record<string, any>;

  /**
   * Apply to all text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allText" })
  allText?: Record<string, any>;

  /**
   * Represents a color in the RGB color space.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redactionColor" })
  @Type(() => GooglePrivacyDlpV2Color)
  redactionColor?: GooglePrivacyDlpV2Color;

  /**
   * Apply transformation to the selected info_types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedInfoTypes" })
  @Type(() => GooglePrivacyDlpV2SelectedInfoTypes)
  selectedInfoTypes?: GooglePrivacyDlpV2SelectedInfoTypes;
}
