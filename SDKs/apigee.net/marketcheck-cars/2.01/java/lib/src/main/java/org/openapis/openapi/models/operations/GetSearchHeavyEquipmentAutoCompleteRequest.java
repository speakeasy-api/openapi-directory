/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetSearchHeavyEquipmentAutoCompleteRequest {
    /**
     * The API Authentication Key. Mandatory with all API calls.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=api_key")
    public String apiKey;
    public GetSearchHeavyEquipmentAutoCompleteRequest withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * To filter listing on their body type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=body_type")
    public String bodyType;
    public GetSearchHeavyEquipmentAutoCompleteRequest withBodyType(String bodyType) {
        this.bodyType = bodyType;
        return this;
    }
    
    /**
     * To filter listing on City in which they are listed
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=city")
    public String city;
    public GetSearchHeavyEquipmentAutoCompleteRequest withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Color of the vehicle
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=color")
    public String color;
    public GetSearchHeavyEquipmentAutoCompleteRequest withColor(String color) {
        this.color = color;
        return this;
    }
    
    /**
     * To filter listing on their drivetrain
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=drivetrain")
    public String drivetrain;
    public GetSearchHeavyEquipmentAutoCompleteRequest withDrivetrain(String drivetrain) {
        this.drivetrain = drivetrain;
        return this;
    }
    
    /**
     * To filter listing on their engine
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=engine")
    public String engine;
    public GetSearchHeavyEquipmentAutoCompleteRequest withEngine(String engine) {
        this.engine = engine;
        return this;
    }
    
    /**
     * Provide minimum count value for facets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=facet_min_count")
    public Double facetMinCount;
    public GetSearchHeavyEquipmentAutoCompleteRequest withFacetMinCount(Double facetMinCount) {
        this.facetMinCount = facetMinCount;
        return this;
    }
    
    /**
     * Field name for which you want auto-completion
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=field")
    public GetSearchHeavyEquipmentAutoCompleteFieldEnum field;
    public GetSearchHeavyEquipmentAutoCompleteRequest withField(GetSearchHeavyEquipmentAutoCompleteFieldEnum field) {
        this.field = field;
        return this;
    }
    
    /**
     * To filter listing on their fuel type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fuel_type")
    public String fuelType;
    public GetSearchHeavyEquipmentAutoCompleteRequest withFuelType(String fuelType) {
        this.fuelType = fuelType;
        return this;
    }
    
    /**
     * Boolean variable to indicate ignore case of current input
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ignore_case")
    public Boolean ignoreCase;
    public GetSearchHeavyEquipmentAutoCompleteRequest withIgnoreCase(Boolean ignoreCase) {
        this.ignoreCase = ignoreCase;
        return this;
    }
    
    /**
     * Input entered so far
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=input")
    public String input;
    public GetSearchHeavyEquipmentAutoCompleteRequest withInput(String input) {
        this.input = input;
        return this;
    }
    
    /**
     * To filter listing on their condition. Either used or new
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=inventory_type")
    public org.openapis.openapi.models.shared.InventoryTypeEnum inventoryType;
    public GetSearchHeavyEquipmentAutoCompleteRequest withInventoryType(org.openapis.openapi.models.shared.InventoryTypeEnum inventoryType) {
        this.inventoryType = inventoryType;
        return this;
    }
    
    /**
     * To filter listings on their make
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=make")
    public String make;
    public GetSearchHeavyEquipmentAutoCompleteRequest withMake(String make) {
        this.make = make;
        return this;
    }
    
    /**
     * To filter listings on their model
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=model")
    public String model;
    public GetSearchHeavyEquipmentAutoCompleteRequest withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * Radius around the search location (Unit - Miles)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=radius")
    public Integer radius;
    public GetSearchHeavyEquipmentAutoCompleteRequest withRadius(Integer radius) {
        this.radius = radius;
        return this;
    }
    
    /**
     * seller type for autocomplete
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=seller_type")
    public String sellerType;
    public GetSearchHeavyEquipmentAutoCompleteRequest withSellerType(String sellerType) {
        this.sellerType = sellerType;
        return this;
    }
    
    /**
     * Sort the response, either by index or count(default)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public GetSearchHeavyEquipmentAutoCompleteSortByEnum sortBy;
    public GetSearchHeavyEquipmentAutoCompleteRequest withSortBy(GetSearchHeavyEquipmentAutoCompleteSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * To filter listing on State in which they are listed
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=state")
    public String state;
    public GetSearchHeavyEquipmentAutoCompleteRequest withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Boolean variable to indicate wheather to include term counts as well in response
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=term_counts")
    public Boolean termCounts;
    public GetSearchHeavyEquipmentAutoCompleteRequest withTermCounts(Boolean termCounts) {
        this.termCounts = termCounts;
        return this;
    }
    
    /**
     * To filter listing on their transmission
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=transmission")
    public String transmission;
    public GetSearchHeavyEquipmentAutoCompleteRequest withTransmission(String transmission) {
        this.transmission = transmission;
        return this;
    }
    
    /**
     * To filter listing on their trim
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=trim")
    public String trim;
    public GetSearchHeavyEquipmentAutoCompleteRequest withTrim(String trim) {
        this.trim = trim;
        return this;
    }
    
    /**
     * To filter listing on their vehicle type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=vehicle_type")
    public String vehicleType;
    public GetSearchHeavyEquipmentAutoCompleteRequest withVehicleType(String vehicleType) {
        this.vehicleType = vehicleType;
        return this;
    }
    
    /**
     * To filter listing on their year
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=year")
    public String year;
    public GetSearchHeavyEquipmentAutoCompleteRequest withYear(String year) {
        this.year = year;
        return this;
    }
    
    /**
     * To filter listing on ZIP around which they are listed
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=zip")
    public String zip;
    public GetSearchHeavyEquipmentAutoCompleteRequest withZip(String zip) {
        this.zip = zip;
        return this;
    }
    
}
