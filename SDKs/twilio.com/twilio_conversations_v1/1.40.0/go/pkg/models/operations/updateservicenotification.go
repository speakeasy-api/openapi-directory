// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateServiceNotificationServerList = []string{
	"https://conversations.twilio.com",
}

type UpdateServiceNotificationSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type UpdateServiceNotificationUpdateServiceNotificationRequest struct {
	// Whether to send a notification when a participant is added to a conversation. The default is `false`.
	AddedToConversationEnabled *bool `form:"name=AddedToConversation.Enabled"`
	// The name of the sound to play when a participant is added to a conversation and `added_to_conversation.enabled` is `true`.
	AddedToConversationSound *string `form:"name=AddedToConversation.Sound"`
	// The template to use to create the notification text displayed when a participant is added to a conversation and `added_to_conversation.enabled` is `true`.
	AddedToConversationTemplate *string `form:"name=AddedToConversation.Template"`
	// Weather the notification logging is enabled.
	LogEnabled *bool `form:"name=LogEnabled"`
	// Whether the new message badge is enabled. The default is `false`.
	NewMessageBadgeCountEnabled *bool `form:"name=NewMessage.BadgeCountEnabled"`
	// Whether to send a notification when a new message is added to a conversation. The default is `false`.
	NewMessageEnabled *bool `form:"name=NewMessage.Enabled"`
	// The name of the sound to play when a new message is added to a conversation and `new_message.enabled` is `true`.
	NewMessageSound *string `form:"name=NewMessage.Sound"`
	// The template to use to create the notification text displayed when a new message is added to a conversation and `new_message.enabled` is `true`.
	NewMessageTemplate *string `form:"name=NewMessage.Template"`
	// Whether to send a notification when a new message with media/file attachments is added to a conversation. The default is `false`.
	NewMessageWithMediaEnabled *bool `form:"name=NewMessage.WithMedia.Enabled"`
	// The template to use to create the notification text displayed when a new message with media/file attachments is added to a conversation and `new_message.attachments.enabled` is `true`.
	NewMessageWithMediaTemplate *string `form:"name=NewMessage.WithMedia.Template"`
	// Whether to send a notification to a user when they are removed from a conversation. The default is `false`.
	RemovedFromConversationEnabled *bool `form:"name=RemovedFromConversation.Enabled"`
	// The name of the sound to play to a user when they are removed from a conversation and `removed_from_conversation.enabled` is `true`.
	RemovedFromConversationSound *string `form:"name=RemovedFromConversation.Sound"`
	// The template to use to create the notification text displayed to a user when they are removed from a conversation and `removed_from_conversation.enabled` is `true`.
	RemovedFromConversationTemplate *string `form:"name=RemovedFromConversation.Template"`
}

type UpdateServiceNotificationRequest struct {
	// The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.
	ChatServiceSid string                                                     `pathParam:"style=simple,explode=false,name=ChatServiceSid"`
	RequestBody    *UpdateServiceNotificationUpdateServiceNotificationRequest `request:"mediaType=application/x-www-form-urlencoded"`
}

type UpdateServiceNotificationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ConversationsV1ServiceServiceConfigurationServiceNotification *shared.ConversationsV1ServiceServiceConfigurationServiceNotification
}
