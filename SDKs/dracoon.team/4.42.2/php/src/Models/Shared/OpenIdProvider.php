<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OpenIdProvider - OpenID Connect provider information
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OpenIdProvider
{
    /**
     * ID
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * Is available for all customers
     * 
     * @var bool $isGlobalAvailable
     */
	#[\JMS\Serializer\Annotation\SerializedName('isGlobalAvailable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isGlobalAvailable;
    
    /**
     * Issuer identifier of the IDP
     * 
     * 
     * The value is a case sensitive URL.
     * 
     * @var string $issuer
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issuer;
    
    /**
     * Name of the claim which is used for the user mapping.
     * 
     * @var string $mappingClaim
     */
	#[\JMS\Serializer\Annotation\SerializedName('mappingClaim')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $mappingClaim;
    
    /**
     * Name of the IDP
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * URL of the user management UI.
     * 
     * 
     * Use empty string to remove.
     * 
     * @var ?string $userManagementUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('userManagementUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userManagementUrl = null;
    
	public function __construct()
	{
		$this->id = 0;
		$this->isGlobalAvailable = false;
		$this->issuer = "";
		$this->mappingClaim = "";
		$this->name = "";
		$this->userManagementUrl = null;
	}
}
