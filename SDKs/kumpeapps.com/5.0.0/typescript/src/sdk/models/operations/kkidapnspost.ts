/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class KkidApnsPostSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Auth",
  })
  authKey: string;
}

/**
 * Notification section name (optional for send, default is active)
 */
export enum KkidApnsPostPriorityEnum {
  Passive = "passive",
  Active = "active",
  TimeSensitive = "time-sensitive",
  Critical = "critical",
}

/**
 * Notification section name (required for send/subscribe/unsubscribe)
 */
export enum KkidApnsPostSectionEnum {
  Chores = "Chores",
  ChoresNew = "Chores-New",
  ChoresReminders = "Chores-Reminders",
  Allowance = "Allowance",
  AllowanceNew = "Allowance-New",
  WishList = "WishList",
}

/**
 * tool you wish to talk to
 */
export enum KkidApnsPostToolEnum {
  Register = "register",
  Subscribe = "subscribe",
  Unsubscribe = "unsubscribe",
  Send = "send",
}

export class KkidApnsPostRequest extends SpeakeasyBase {
  /**
   * Number for badge icon (optional for send)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=badge" })
  badge?: number;

  /**
   * Name of device to associate to token (required for register)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=devicename",
  })
  devicename?: string;

  /**
   * userID of the kid
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=kidUserId",
  })
  kidUserId: number;

  /**
   * APNS message body (required for send)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=message",
  })
  message?: string;

  /**
   * Notification section name (optional for send, default is active)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=priority",
  })
  priority?: KkidApnsPostPriorityEnum;

  /**
   * Notification section name (required for send/subscribe/unsubscribe)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=section",
  })
  section?: KkidApnsPostSectionEnum;

  /**
   * Name of sound file to play for send notification (optional for send)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sound" })
  sound?: string;

  /**
   * title of APNS message (required for send)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=title" })
  title?: string;

  /**
   * device APNS token (required for register)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token?: string;

  /**
   * tool you wish to talk to
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tool" })
  tool: KkidApnsPostToolEnum;
}

export class KkidApnsPostResponse extends SpeakeasyBase {
  /**
   * Method Not Allowed- API user does not have access to use this method
   */
  @SpeakeasyMetadata()
  fourHundredAndFive?: shared.FourHundredAndFive;

  /**
   * API Access Denied! Your API key is invalid, expired, or not supplied!
   */
  @SpeakeasyMetadata()
  fourHundredAndTwelve?: shared.FourHundredAndTwelve;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * No Data Returned
   */
  @SpeakeasyMetadata()
  nodata?: shared.Nodata;

  /**
   * search results matching criteria
   */
  @SpeakeasyMetadata()
  success?: shared.Success;
}
