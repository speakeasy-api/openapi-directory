// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type YoutubeLiveChatMessagesListSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type YoutubeLiveChatMessagesListSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type YoutubeLiveChatMessagesListSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type YoutubeLiveChatMessagesListSecurity struct {
	Option1 *YoutubeLiveChatMessagesListSecurityOption1 `security:"option"`
	Option2 *YoutubeLiveChatMessagesListSecurityOption2 `security:"option"`
	Option3 *YoutubeLiveChatMessagesListSecurityOption3 `security:"option"`
}

type YoutubeLiveChatMessagesListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Specifies the localization language in which the system messages should be returned.
	Hl *string `queryParam:"style=form,explode=true,name=hl"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The id of the live chat for which comments should be returned.
	LiveChatID string `queryParam:"style=form,explode=true,name=liveChatId"`
	// The *maxResults* parameter specifies the maximum number of items that should be returned in the result set.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The *pageToken* parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identify other pages that could be retrieved.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// The *part* parameter specifies the liveChatComment resource parts that the API response will include. Supported values are id and snippet.
	Part []string `queryParam:"style=form,explode=true,name=part"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Specifies the size of the profile image that should be returned for each user.
	ProfileImageSize *int64 `queryParam:"style=form,explode=true,name=profileImageSize"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type YoutubeLiveChatMessagesListRequest struct {
	QueryParams YoutubeLiveChatMessagesListQueryParams
	Security    YoutubeLiveChatMessagesListSecurity
}

type YoutubeLiveChatMessagesListResponse struct {
	ContentType string
	// Successful response
	LiveChatMessageListResponse *shared.LiveChatMessageListResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
