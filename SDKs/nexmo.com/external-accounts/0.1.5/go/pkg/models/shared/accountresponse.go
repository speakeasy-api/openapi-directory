// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountResponseProviderEnum - The provider (will be one of `messenger, viber_service_msg, whatsapp`).
type AccountResponseProviderEnum string

const (
	AccountResponseProviderEnumMessenger       AccountResponseProviderEnum = "messenger"
	AccountResponseProviderEnumViberServiceMsg AccountResponseProviderEnum = "viber_service_msg"
	AccountResponseProviderEnumWhatsapp        AccountResponseProviderEnum = "whatsapp"
)

func (e *AccountResponseProviderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "messenger":
		fallthrough
	case "viber_service_msg":
		fallthrough
	case "whatsapp":
		*e = AccountResponseProviderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountResponseProviderEnum: %s", s)
	}
}

// AccountResponse - OK.
type AccountResponse struct {
	// The provider access token (only for `messenger`)
	AccessToken *string `json:"access_token,omitempty"`
	// The external api key for this account
	APIKey string `json:"api_key"`
	// The array of associated application ids
	Applications []string `json:"applications,omitempty"`
	// The external identifier for this account
	ExternalID string `json:"external_id"`
	// The account name
	Name *string `json:"name,omitempty"`
	// The provider (will be one of `messenger, viber_service_msg, whatsapp`).
	Provider AccountResponseProviderEnum `json:"provider"`
}
