"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListPastWebinarFilesSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListPastWebinarFilesRequest:
    
    webinar_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'webinarId', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class ListPastWebinarFiles200ApplicationXMLInMeetingFiles:
    
    download_url: Optional[str] = dataclasses.field(default=None)
    r"""URL to download the file."""  
    file_name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the file."""  
    file_size: Optional[int] = dataclasses.field(default=None)
    r"""Size of the file in bytes."""  
    

@dataclasses.dataclass
class ListPastWebinarFiles200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Files retrieved successfully.
    """
    
    in_meeting_files: Optional[list[ListPastWebinarFiles200ApplicationXMLInMeetingFiles]] = dataclasses.field(default=None)  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""The total number of files found."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPastWebinarFiles200ApplicationJSONInMeetingFiles:
    
    download_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_url'), 'exclude': lambda f: f is None }})
    r"""URL to download the file."""  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_name'), 'exclude': lambda f: f is None }})
    r"""Name of the file."""  
    file_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_size'), 'exclude': lambda f: f is None }})
    r"""Size of the file in bytes."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPastWebinarFiles200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Files retrieved successfully.
    """
    
    in_meeting_files: Optional[list[ListPastWebinarFiles200ApplicationJSONInMeetingFiles]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('in_meeting_files'), 'exclude': lambda f: f is None }})  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The total number of files found."""  
    

@dataclasses.dataclass
class ListPastWebinarFilesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_past_webinar_files_200_application_json_object: Optional[ListPastWebinarFiles200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Files retrieved successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    