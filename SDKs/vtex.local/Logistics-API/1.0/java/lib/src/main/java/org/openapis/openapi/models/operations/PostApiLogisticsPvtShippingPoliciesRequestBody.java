/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostApiLogisticsPvtShippingPoliciesRequestBody {
    /**
     * Business hour configuration.
     */
    @JsonProperty("businessHourSettings")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyBusinessHourSettings businessHourSettings;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withBusinessHourSettings(PostApiLogisticsPvtShippingPoliciesRequestBodyBusinessHourSettings businessHourSettings) {
        this.businessHourSettings = businessHourSettings;
        return this;
    }
    
    /**
     * Schedule sent by the carrier, to configure Shipping policy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrierSchedule")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyCarrierSchedule[] carrierSchedule;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withCarrierSchedule(PostApiLogisticsPvtShippingPoliciesRequestBodyCarrierSchedule[] carrierSchedule) {
        this.carrierSchedule = carrierSchedule;
        return this;
    }
    
    /**
     * Measure that accounts package's volume, and not only weight.
     */
    @JsonProperty("cubicWeightSettings")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyCubicWeightSettings cubicWeightSettings;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withCubicWeightSettings(PostApiLogisticsPvtShippingPoliciesRequestBodyCubicWeightSettings cubicWeightSettings) {
        this.cubicWeightSettings = cubicWeightSettings;
        return this;
    }
    
    /**
     * Settings for the Scheduled Delivery feature.
     */
    @JsonProperty("deliveryScheduleSettings")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettings deliveryScheduleSettings;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withDeliveryScheduleSettings(PostApiLogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettings deliveryScheduleSettings) {
        this.deliveryScheduleSettings = deliveryScheduleSettings;
        return this;
    }
    
    /**
     * ID of the shipping policy.
     */
    @JsonProperty("id")
    public String id;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates whether shipping policy is active or not.
     */
    @JsonProperty("isActive")
    public Boolean isActive;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * Object containing attributes of maximum dimension permitted by the shipping policy (carrier).
     */
    @JsonProperty("maxDimension")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyMaxDimension maxDimension;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withMaxDimension(PostApiLogisticsPvtShippingPoliciesRequestBodyMaxDimension maxDimension) {
        this.maxDimension = maxDimension;
        return this;
    }
    
    /**
     * Maximum value accepted by the carrier, to realize the shipping.
     */
    @JsonProperty("maximumValueAceptable")
    public Double maximumValueAceptable;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withMaximumValueAceptable(Double maximumValueAceptable) {
        this.maximumValueAceptable = maximumValueAceptable;
        return this;
    }
    
    /**
     * Minimum value accepted by the carrier, to realize the shipping.
     */
    @JsonProperty("minimumValueAceptable")
    public Double minimumValueAceptable;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withMinimumValueAceptable(Double minimumValueAceptable) {
        this.minimumValueAceptable = minimumValueAceptable;
        return this;
    }
    
    /**
     * Configurations for the [modal](https://help.vtex.com/en/tutorial/how-does-the-modal-work--tutorials_125), which is the attachement of a specific product to a carrier specialized in delivering that type of product.
     */
    @JsonProperty("modalSettings")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyModalSettings modalSettings;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withModalSettings(PostApiLogisticsPvtShippingPoliciesRequestBodyModalSettings modalSettings) {
        this.modalSettings = modalSettings;
        return this;
    }
    
    /**
     * Name of the shipping policy.
     */
    @JsonProperty("name")
    public String name;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Capacity of your store's logistics of shipment, determines number of items permitted per shipment.
     */
    @JsonProperty("numberOfItemsPerShipment")
    public Long numberOfItemsPerShipment;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withNumberOfItemsPerShipment(Long numberOfItemsPerShipment) {
        this.numberOfItemsPerShipment = numberOfItemsPerShipment;
        return this;
    }
    
    /**
     * Configuration for Pickup Points.
     */
    @JsonProperty("pickupPointsSettings")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyPickupPointsSettings pickupPointsSettings;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withPickupPointsSettings(PostApiLogisticsPvtShippingPoliciesRequestBodyPickupPointsSettings pickupPointsSettings) {
        this.pickupPointsSettings = pickupPointsSettings;
        return this;
    }
    
    /**
     * Type of shipping available for this shipping policy (carrier). Options shown on freight simulation
     */
    @JsonProperty("shippingMethod")
    public String shippingMethod;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withShippingMethod(String shippingMethod) {
        this.shippingMethod = shippingMethod;
        return this;
    }
    
    /**
     * If the shipping policy includes deliveries on weekends and holidays.
     */
    @JsonProperty("weekendAndHolidays")
    public PostApiLogisticsPvtShippingPoliciesRequestBodyWeekendAndHolidays weekendAndHolidays;

    public PostApiLogisticsPvtShippingPoliciesRequestBody withWeekendAndHolidays(PostApiLogisticsPvtShippingPoliciesRequestBodyWeekendAndHolidays weekendAndHolidays) {
        this.weekendAndHolidays = weekendAndHolidays;
        return this;
    }
    
    public PostApiLogisticsPvtShippingPoliciesRequestBody(@JsonProperty("businessHourSettings") PostApiLogisticsPvtShippingPoliciesRequestBodyBusinessHourSettings businessHourSettings, @JsonProperty("cubicWeightSettings") PostApiLogisticsPvtShippingPoliciesRequestBodyCubicWeightSettings cubicWeightSettings, @JsonProperty("deliveryScheduleSettings") PostApiLogisticsPvtShippingPoliciesRequestBodyDeliveryScheduleSettings deliveryScheduleSettings, @JsonProperty("id") String id, @JsonProperty("isActive") Boolean isActive, @JsonProperty("maxDimension") PostApiLogisticsPvtShippingPoliciesRequestBodyMaxDimension maxDimension, @JsonProperty("maximumValueAceptable") Double maximumValueAceptable, @JsonProperty("minimumValueAceptable") Double minimumValueAceptable, @JsonProperty("modalSettings") PostApiLogisticsPvtShippingPoliciesRequestBodyModalSettings modalSettings, @JsonProperty("name") String name, @JsonProperty("numberOfItemsPerShipment") Long numberOfItemsPerShipment, @JsonProperty("pickupPointsSettings") PostApiLogisticsPvtShippingPoliciesRequestBodyPickupPointsSettings pickupPointsSettings, @JsonProperty("shippingMethod") String shippingMethod, @JsonProperty("weekendAndHolidays") PostApiLogisticsPvtShippingPoliciesRequestBodyWeekendAndHolidays weekendAndHolidays) {
        this.businessHourSettings = businessHourSettings;
        this.cubicWeightSettings = cubicWeightSettings;
        this.deliveryScheduleSettings = deliveryScheduleSettings;
        this.id = id;
        this.isActive = isActive;
        this.maxDimension = maxDimension;
        this.maximumValueAceptable = maximumValueAceptable;
        this.minimumValueAceptable = minimumValueAceptable;
        this.modalSettings = modalSettings;
        this.name = name;
        this.numberOfItemsPerShipment = numberOfItemsPerShipment;
        this.pickupPointsSettings = pickupPointsSettings;
        this.shippingMethod = shippingMethod;
        this.weekendAndHolidays = weekendAndHolidays;
  }
}
