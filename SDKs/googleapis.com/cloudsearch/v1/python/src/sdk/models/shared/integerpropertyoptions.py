"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import integerfacetingoptions as shared_integerfacetingoptions
from ..shared import integeroperatoroptions as shared_integeroperatoroptions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class IntegerPropertyOptionsOrderedRankingEnum(str, Enum):
    r"""Used to specify the ordered ranking for the integer. Can only be used if isRepeatable is false."""
    NO_ORDER = 'NO_ORDER'
    ASCENDING = 'ASCENDING'
    DESCENDING = 'DESCENDING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IntegerPropertyOptions:
    r"""The options for integer properties."""
    
    integer_faceting_options: Optional[shared_integerfacetingoptions.IntegerFacetingOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integerFacetingOptions'), 'exclude': lambda f: f is None }})
    r"""Used to specify integer faceting options."""  
    maximum_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maximumValue'), 'exclude': lambda f: f is None }})
    r"""The maximum value of the property. The minimum and maximum values for the property are used to rank results according to the ordered ranking. Indexing requests with values greater than the maximum are accepted and ranked with the same weight as items indexed with the maximum value."""  
    minimum_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumValue'), 'exclude': lambda f: f is None }})
    r"""The minimum value of the property. The minimum and maximum values for the property are used to rank results according to the ordered ranking. Indexing requests with values less than the minimum are accepted and ranked with the same weight as items indexed with the minimum value."""  
    operator_options: Optional[shared_integeroperatoroptions.IntegerOperatorOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operatorOptions'), 'exclude': lambda f: f is None }})
    r"""Used to provide a search operator for integer properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched."""  
    ordered_ranking: Optional[IntegerPropertyOptionsOrderedRankingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderedRanking'), 'exclude': lambda f: f is None }})
    r"""Used to specify the ordered ranking for the integer. Can only be used if isRepeatable is false."""  
    