// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FirebaseAppInfoPlatformEnum - The platform of the Firebase App.
type FirebaseAppInfoPlatformEnum string

const (
	FirebaseAppInfoPlatformEnumPlatformUnspecified FirebaseAppInfoPlatformEnum = "PLATFORM_UNSPECIFIED"
	FirebaseAppInfoPlatformEnumIos                 FirebaseAppInfoPlatformEnum = "IOS"
	FirebaseAppInfoPlatformEnumAndroid             FirebaseAppInfoPlatformEnum = "ANDROID"
	FirebaseAppInfoPlatformEnumWeb                 FirebaseAppInfoPlatformEnum = "WEB"
)

func (e *FirebaseAppInfoPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLATFORM_UNSPECIFIED":
		fallthrough
	case "IOS":
		fallthrough
	case "ANDROID":
		fallthrough
	case "WEB":
		*e = FirebaseAppInfoPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FirebaseAppInfoPlatformEnum: %s", s)
	}
}

// FirebaseAppInfoStateEnum - Output only. The lifecycle state of the App.
type FirebaseAppInfoStateEnum string

const (
	FirebaseAppInfoStateEnumStateUnspecified FirebaseAppInfoStateEnum = "STATE_UNSPECIFIED"
	FirebaseAppInfoStateEnumActive           FirebaseAppInfoStateEnum = "ACTIVE"
	FirebaseAppInfoStateEnumDeleted          FirebaseAppInfoStateEnum = "DELETED"
)

func (e *FirebaseAppInfoStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETED":
		*e = FirebaseAppInfoStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FirebaseAppInfoStateEnum: %s", s)
	}
}

// FirebaseAppInfo - A high-level summary of an App.
type FirebaseAppInfo struct {
	// The globally unique, Google-assigned identifier (UID) for the Firebase API key associated with the App. Be aware that this value is the UID of the API key, _not_ the [`keyString`](https://cloud.google.com/api-keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key. The `keyString` is the value that can be found in the App's configuration artifact ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/getConfig) | [`IosApp`](../../rest/v1beta1/projects.iosApps/getConfig) | [`WebApp`](../../rest/v1beta1/projects.webApps/getConfig)). If `api_key_id` is not set in requests to create the App ([`AndroidApp`](../../rest/v1beta1/projects.androidApps/create) | [`IosApp`](../../rest/v1beta1/projects.iosApps/create) | [`WebApp`](../../rest/v1beta1/projects.webApps/create)), then Firebase automatically associates an `api_key_id` with the App. This auto-associated key may be an existing valid key or, if no valid key exists, a new one will be provisioned.
	APIKeyID *string `json:"apiKeyId,omitempty"`
	// Output only. Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`. This identifier should be treated as an opaque token, as the data format is not specified.
	AppID *string `json:"appId,omitempty"`
	// The user-assigned display name of the Firebase App.
	DisplayName *string `json:"displayName,omitempty"`
	// Output only. Timestamp of when the App will be considered expired and cannot be undeleted. This value is only provided if the App is in the `DELETED` state.
	ExpireTime *string `json:"expireTime,omitempty"`
	// The resource name of the Firebase App, in the format: projects/PROJECT_ID /iosApps/APP_ID or projects/PROJECT_ID/androidApps/APP_ID or projects/ PROJECT_ID/webApps/APP_ID
	Name *string `json:"name,omitempty"`
	// Output only. Immutable. The platform-specific identifier of the App. *Note:* For most use cases, use `appId`, which is the canonical, globally unique identifier for referencing an App. This string is derived from a native identifier for each platform: `packageName` for an `AndroidApp`, `bundleId` for an `IosApp`, and `webId` for a `WebApp`. Its contents should be treated as opaque, as the native identifier format may change as platforms evolve. This string is only unique within a `FirebaseProject` and its associated Apps.
	Namespace *string `json:"namespace,omitempty"`
	// The platform of the Firebase App.
	Platform *FirebaseAppInfoPlatformEnum `json:"platform,omitempty"`
	// Output only. The lifecycle state of the App.
	State *FirebaseAppInfoStateEnum `json:"state,omitempty"`
}
