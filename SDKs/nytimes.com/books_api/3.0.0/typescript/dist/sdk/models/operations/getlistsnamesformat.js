"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETListsNamesFormatResponse = exports.GETListsNamesFormat200ApplicationJSON = exports.GETListsNamesFormat200ApplicationJSONResults = exports.GETListsNamesFormatRequest = exports.GETListsNamesFormatFormatEnum = exports.GETListsNamesFormatSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GETListsNamesFormatSecurity = /** @class */ (function (_super) {
    __extends(GETListsNamesFormatSecurity, _super);
    function GETListsNamesFormatSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=query;name=api-key",
        }),
        __metadata("design:type", String)
    ], GETListsNamesFormatSecurity.prototype, "apiKey", void 0);
    return GETListsNamesFormatSecurity;
}(utils_1.SpeakeasyBase));
exports.GETListsNamesFormatSecurity = GETListsNamesFormatSecurity;
var GETListsNamesFormatFormatEnum;
(function (GETListsNamesFormatFormatEnum) {
    GETListsNamesFormatFormatEnum["Json"] = "json";
    GETListsNamesFormatFormatEnum["Jsonp"] = "jsonp";
})(GETListsNamesFormatFormatEnum = exports.GETListsNamesFormatFormatEnum || (exports.GETListsNamesFormatFormatEnum = {}));
var GETListsNamesFormatRequest = /** @class */ (function (_super) {
    __extends(GETListsNamesFormatRequest, _super);
    function GETListsNamesFormatRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=api-key",
        }),
        __metadata("design:type", String)
    ], GETListsNamesFormatRequest.prototype, "apiKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=format",
        }),
        __metadata("design:type", String)
    ], GETListsNamesFormatRequest.prototype, "format", void 0);
    return GETListsNamesFormatRequest;
}(utils_1.SpeakeasyBase));
exports.GETListsNamesFormatRequest = GETListsNamesFormatRequest;
var GETListsNamesFormat200ApplicationJSONResults = /** @class */ (function (_super) {
    __extends(GETListsNamesFormat200ApplicationJSONResults, _super);
    function GETListsNamesFormat200ApplicationJSONResults() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "display_name" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSONResults.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "list_name" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSONResults.prototype, "listName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "list_name_encoded" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSONResults.prototype, "listNameEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "newest_published_date" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSONResults.prototype, "newestPublishedDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "oldest_published_date" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSONResults.prototype, "oldestPublishedDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSONResults.prototype, "updated", void 0);
    return GETListsNamesFormat200ApplicationJSONResults;
}(utils_1.SpeakeasyBase));
exports.GETListsNamesFormat200ApplicationJSONResults = GETListsNamesFormat200ApplicationJSONResults;
var GETListsNamesFormat200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GETListsNamesFormat200ApplicationJSON, _super);
    function GETListsNamesFormat200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "copyright" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSON.prototype, "copyright", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "num_results" }),
        __metadata("design:type", Number)
    ], GETListsNamesFormat200ApplicationJSON.prototype, "numResults", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: GETListsNamesFormat200ApplicationJSONResults }),
        (0, class_transformer_1.Expose)({ name: "results" }),
        (0, class_transformer_1.Type)(function () { return GETListsNamesFormat200ApplicationJSONResults; }),
        __metadata("design:type", Array)
    ], GETListsNamesFormat200ApplicationJSON.prototype, "results", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GETListsNamesFormat200ApplicationJSON.prototype, "status", void 0);
    return GETListsNamesFormat200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GETListsNamesFormat200ApplicationJSON = GETListsNamesFormat200ApplicationJSON;
var GETListsNamesFormatResponse = /** @class */ (function (_super) {
    __extends(GETListsNamesFormatResponse, _super);
    function GETListsNamesFormatResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETListsNamesFormatResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GETListsNamesFormat200ApplicationJSON)
    ], GETListsNamesFormatResponse.prototype, "getListsNamesFormat200ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETListsNamesFormatResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETListsNamesFormatResponse.prototype, "rawResponse", void 0);
    return GETListsNamesFormatResponse;
}(utils_1.SpeakeasyBase));
exports.GETListsNamesFormatResponse = GETListsNamesFormatResponse;
