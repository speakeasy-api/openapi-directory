/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AcudfValueDto } from "./acudfvaluedto";
import { QuoteProductTransDto } from "./quoteproducttransdto";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information of Quote to create.
 */
export class QuoteDto extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "acCode" })
  acCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "closedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  closedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyId" })
  companyId?: number;

  @SpeakeasyMetadata({ elemType: AcudfValueDto })
  @Expose({ name: "customFields" })
  @Type(() => AcudfValueDto)
  customFields?: AcudfValueDto[];

  @SpeakeasyMetadata()
  @Expose({ name: "customerOwnerId" })
  customerOwnerId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "customerOwnerName" })
  customerOwnerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ddNumber" })
  ddNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deliveryList" })
  deliveryList?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deliveryTo" })
  deliveryTo?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "entryDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  entryDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "layoutType" })
  layoutType?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "poNumber" })
  poNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "procDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  procDate?: Date;

  @SpeakeasyMetadata({ elemType: QuoteProductTransDto })
  @Expose({ name: "productTrans" })
  @Type(() => QuoteProductTransDto)
  productTrans?: QuoteProductTransDto[];

  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "saleInvoiceId" })
  saleInvoiceId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "saleRepCode" })
  saleRepCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "saleRepId" })
  saleRepId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timeStamp" })
  timeStamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalNet" })
  totalNet?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalVat" })
  totalVat?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vatTypeId" })
  vatTypeId?: number;
}
