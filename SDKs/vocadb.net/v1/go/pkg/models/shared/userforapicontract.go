// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type UserForAPIContractGroupIDEnum string

const (
	UserForAPIContractGroupIDEnumNothing   UserForAPIContractGroupIDEnum = "Nothing"
	UserForAPIContractGroupIDEnumLimited   UserForAPIContractGroupIDEnum = "Limited"
	UserForAPIContractGroupIDEnumRegular   UserForAPIContractGroupIDEnum = "Regular"
	UserForAPIContractGroupIDEnumTrusted   UserForAPIContractGroupIDEnum = "Trusted"
	UserForAPIContractGroupIDEnumModerator UserForAPIContractGroupIDEnum = "Moderator"
	UserForAPIContractGroupIDEnumAdmin     UserForAPIContractGroupIDEnum = "Admin"
)

func (e *UserForAPIContractGroupIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Limited":
		fallthrough
	case "Regular":
		fallthrough
	case "Trusted":
		fallthrough
	case "Moderator":
		fallthrough
	case "Admin":
		*e = UserForAPIContractGroupIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserForAPIContractGroupIDEnum: %s", s)
	}
}

// UserForAPIContract - OK
type UserForAPIContract struct {
	Active         *bool                          `json:"active,omitempty"`
	GroupID        *UserForAPIContractGroupIDEnum `json:"groupId,omitempty"`
	ID             *int                           `json:"id,omitempty"`
	KnownLanguages []UserKnownLanguageContract    `json:"knownLanguages,omitempty"`
	MainPicture    *EntryThumbForAPIContract      `json:"mainPicture,omitempty"`
	MemberSince    *time.Time                     `json:"memberSince,omitempty"`
	Name           *string                        `json:"name,omitempty"`
	OldUsernames   []OldUsernameContract          `json:"oldUsernames,omitempty"`
	VerifiedArtist *bool                          `json:"verifiedArtist,omitempty"`
}
