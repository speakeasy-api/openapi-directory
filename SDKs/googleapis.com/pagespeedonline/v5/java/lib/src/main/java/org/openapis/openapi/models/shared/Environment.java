/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Environment - Message containing environment configuration for a Lighthouse run.
 */
public class Environment {
    /**
     * The benchmark index number that indicates rough device class.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("benchmarkIndex")
    public Double benchmarkIndex;

    public Environment withBenchmarkIndex(Double benchmarkIndex) {
        this.benchmarkIndex = benchmarkIndex;
        return this;
    }
    
    /**
     * The version of libraries with which these results were generated. Ex: axe-core.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credits")
    public java.util.Map<String, String> credits;

    public Environment withCredits(java.util.Map<String, String> credits) {
        this.credits = credits;
        return this;
    }
    
    /**
     * The user agent string of the version of Chrome used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostUserAgent")
    public String hostUserAgent;

    public Environment withHostUserAgent(String hostUserAgent) {
        this.hostUserAgent = hostUserAgent;
        return this;
    }
    
    /**
     * The user agent string that was sent over the network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkUserAgent")
    public String networkUserAgent;

    public Environment withNetworkUserAgent(String networkUserAgent) {
        this.networkUserAgent = networkUserAgent;
        return this;
    }
    
    public Environment(){}
}
