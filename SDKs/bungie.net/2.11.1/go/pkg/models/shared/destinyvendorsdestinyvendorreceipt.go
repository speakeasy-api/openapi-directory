// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// DestinyVendorsDestinyVendorReceiptItemReceived - Used in a number of Destiny contracts to return data about an item stack and its quantity. Can optionally return an itemInstanceId if the item is instanced - in which case, the quantity returned will be 1. If it's not... uh, let me know okay? Thanks.
type DestinyVendorsDestinyVendorReceiptItemReceived struct {
	// Indicates that this item quantity may be conditionally shown or hidden, based on various sources of state. For example: server flags, account state, or character progress.
	HasConditionalVisibility *bool
	// The hash identifier for the item in question. Use it to look up the item's DestinyInventoryItemDefinition.
	ItemHash *int64
	// If this quantity is referring to a specific instance of an item, this will have the item's instance ID. Normally, this will be null.
	ItemInstanceID *int64
	// The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used.
	Quantity *int
}

// DestinyVendorsDestinyVendorReceipt - If a character purchased an item that is refundable, a Vendor Receipt will be created on the user's Destiny Profile. These expire after a configurable period of time, but until then can be used to get refunds on items. BNet does not provide the ability to refund a purchase *yet*, but you know.
type DestinyVendorsDestinyVendorReceipt struct {
	// The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.
	CurrencyPaid []DestinyDestinyItemQuantity
	// The date at which this receipt is rendered invalid.
	ExpiresOn *time.Time
	// The item that was received, and its quantity.
	ItemReceived *DestinyVendorsDestinyVendorReceiptItemReceived
	// The unlock flag used to determine whether you still have the purchased item.
	LicenseUnlockHash *int64
	// The ID of the character who made the purchase.
	PurchasedByCharacterID *int64
	// Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details.
	RefundPolicy *int
	// The identifier of this receipt.
	SequenceNumber *int
	// The seconds since epoch at which this receipt is rendered invalid.
	TimeToExpiration *int64
}
