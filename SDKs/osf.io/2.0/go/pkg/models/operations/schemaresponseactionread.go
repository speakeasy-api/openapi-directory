// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type SchemaResponseActionReadRequest struct {
	// The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
	SchemaResponseID string `pathParam:"style=simple,explode=false,name=schema_response_id"`
}

// SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum - The name of the state of the Schema Response prior to the creation of the action.
type SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum string

const (
	SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnumInitial           SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum = "initial"
	SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnumInProgress        SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum = "in_progress"
	SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnumApproved          SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum = "approved"
	SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnumPendingModeration SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum = "pending_moderation"
)

func (e *SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initial":
		fallthrough
	case "in_progress":
		fallthrough
	case "approved":
		fallthrough
	case "pending_moderation":
		*e = SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum: %s", s)
	}
}

// SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum - The name of the state of the Schema Response after the creation of the action
type SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum string

const (
	SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnumInProgress        SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum = "in_progress"
	SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnumApproved          SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum = "approved"
	SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnumPendingModeration SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum = "pending_moderation"
)

func (e *SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "in_progress":
		fallthrough
	case "approved":
		fallthrough
	case "pending_moderation":
		*e = SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum: %s", s)
	}
}

// SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum - The name of the trigger that caused the action.
type SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum string

const (
	SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnumSubmit          SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum = "submit"
	SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnumApprove         SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum = "approve"
	SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnumAccept          SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum = "accept"
	SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnumAdminReject     SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum = "admin_reject"
	SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnumModeratorReject SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum = "moderator_reject"
)

func (e *SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "submit":
		fallthrough
	case "approve":
		fallthrough
	case "accept":
		fallthrough
	case "admin_reject":
		fallthrough
	case "moderator_reject":
		*e = SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum: %s", s)
	}
}

type SchemaResponseActionReadSchemaResponseActionsAttributes struct {
	// Bool of representing whether a user created the action.
	Auto *bool
	// A comment made explaining the reasoning of the action.
	Comment *string
	// The date the action was created.
	DateCreated *string
	// The name of the state of the Schema Response prior to the creation of the action.
	FromState *SchemaResponseActionReadSchemaResponseActionsAttributesFromStateEnum
	// The name of the state of the Schema Response after the creation of the action
	ToState *SchemaResponseActionReadSchemaResponseActionsAttributesToStateEnum
	// The name of the trigger that caused the action.
	Trigger *SchemaResponseActionReadSchemaResponseActionsAttributesTriggerEnum
	// Bool of representing whether the action is visible.
	Visible *bool
}

// SchemaResponseActionReadSchemaResponseActionsLinks - URLs to alternative representations of the Registration Schema entity.
type SchemaResponseActionReadSchemaResponseActionsLinks struct {
	// A link to the detail page for a Registration Schema.
	Self *string
}

// SchemaResponseActionReadSchemaResponseActionsRelationships - Links to other entities or entity collections that have a relationship to the Schema Response Action entity.
type SchemaResponseActionReadSchemaResponseActionsRelationships struct {
	// A link to the node the file is on.
	Creator *string
	// A link to the node the file is on.
	Target *string
}

// SchemaResponseActionReadSchemaResponseActions - OK
type SchemaResponseActionReadSchemaResponseActions struct {
	Attributes *SchemaResponseActionReadSchemaResponseActionsAttributes
	// The unique identifier of the Schema Response Action.
	ID *string
	// URLs to alternative representations of the Registration Schema entity.
	Links *SchemaResponseActionReadSchemaResponseActionsLinks
	// Links to other entities or entity collections that have a relationship to the Schema Response Action entity.
	Relationships *SchemaResponseActionReadSchemaResponseActionsRelationships
	// The type identifier of the Schema Response Action (`schema-response-actions`).
	Type *string
}

type SchemaResponseActionReadResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
