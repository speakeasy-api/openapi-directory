/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContainerSpec - Container Spec.
 */
public class ContainerSpec {
    /**
     * The environment values to be set at runtime for flex template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultEnvironment")
    public FlexTemplateRuntimeEnvironment defaultEnvironment;
    public ContainerSpec withDefaultEnvironment(FlexTemplateRuntimeEnvironment defaultEnvironment) {
        this.defaultEnvironment = defaultEnvironment;
        return this;
    }
    
    /**
     * Name of the docker container image. E.g., gcr.io/project/some-image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public String image;
    public ContainerSpec withImage(String image) {
        this.image = image;
        return this;
    }
    
    /**
     * Cloud Storage path to self-signed certificate of private registry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageRepositoryCertPath")
    public String imageRepositoryCertPath;
    public ContainerSpec withImageRepositoryCertPath(String imageRepositoryCertPath) {
        this.imageRepositoryCertPath = imageRepositoryCertPath;
        return this;
    }
    
    /**
     * Secret Manager secret id for password to authenticate to private registry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageRepositoryPasswordSecretId")
    public String imageRepositoryPasswordSecretId;
    public ContainerSpec withImageRepositoryPasswordSecretId(String imageRepositoryPasswordSecretId) {
        this.imageRepositoryPasswordSecretId = imageRepositoryPasswordSecretId;
        return this;
    }
    
    /**
     * Secret Manager secret id for username to authenticate to private registry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageRepositoryUsernameSecretId")
    public String imageRepositoryUsernameSecretId;
    public ContainerSpec withImageRepositoryUsernameSecretId(String imageRepositoryUsernameSecretId) {
        this.imageRepositoryUsernameSecretId = imageRepositoryUsernameSecretId;
        return this;
    }
    
    /**
     * Metadata describing a template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public TemplateMetadata metadata;
    public ContainerSpec withMetadata(TemplateMetadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * SDK Information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sdkInfo")
    public SDKInfo sdkInfo;
    public ContainerSpec withSDKInfo(SDKInfo sdkInfo) {
        this.sdkInfo = sdkInfo;
        return this;
    }
    
}
