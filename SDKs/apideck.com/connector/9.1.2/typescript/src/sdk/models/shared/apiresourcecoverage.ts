/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PaginationCoverage } from "./paginationcoverage";
import { ResourceStatusEnum } from "./resourcestatusenum";
import { SupportedProperty } from "./supportedproperty";
import { Expose, Type } from "class-transformer";

export class ApiResourceCoverageCoverage extends SpeakeasyBase {
  /**
   * ID of the resource in the Connector's API (downstream)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downstream_id" })
  downstreamId?: string;

  /**
   * Name of the resource in the Connector's API (downstream)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downstream_name" })
  downstreamName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => PaginationCoverage)
  pagination?: PaginationCoverage;

  /**
   * Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pagination_supported" })
  paginationSupported?: boolean;

  /**
   * Supported fields on the detail endpoint.
   */
  @SpeakeasyMetadata({ elemType: SupportedProperty })
  @Expose({ name: "supported_fields" })
  @Type(() => SupportedProperty)
  supportedFields?: SupportedProperty[];

  /**
   * Supported filters on the list endpoint of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supported_filters" })
  supportedFilters?: string[];

  /**
   * Supported fields on the list endpoint.
   */
  @SpeakeasyMetadata({ elemType: SupportedProperty })
  @Expose({ name: "supported_list_fields" })
  @Type(() => SupportedProperty)
  supportedListFields?: SupportedProperty[];

  /**
   * List of supported operations on the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supported_operations" })
  supportedOperations?: string[];

  /**
   * Supported sorting properties on the list endpoint of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supported_sort_by" })
  supportedSortBy?: string[];
}

export class ApiResourceCoverage extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ApiResourceCoverageCoverage })
  @Expose({ name: "coverage" })
  @Type(() => ApiResourceCoverageCoverage)
  coverage?: ApiResourceCoverageCoverage[];

  /**
   * ID of the resource, typically a lowercased version of name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the resource (plural)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Status of the resource. Resources with status live or beta are callable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ResourceStatusEnum;
}
