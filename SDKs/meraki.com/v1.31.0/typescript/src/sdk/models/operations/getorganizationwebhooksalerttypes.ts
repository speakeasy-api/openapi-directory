/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * Filter sample alerts to a specific product type
 */
export enum GetOrganizationWebhooksAlertTypesProductTypeEnum {
  Appliance = "appliance",
  Camera = "camera",
  CellularGateway = "cellularGateway",
  Health = "health",
  Platform = "platform",
  Sensor = "sensor",
  Sm = "sm",
  Switch = "switch",
  Wireless = "wireless",
}

export class GetOrganizationWebhooksAlertTypesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;

  /**
   * Filter sample alerts to a specific product type
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=productType",
  })
  productType?: GetOrganizationWebhooksAlertTypesProductTypeEnum;
}

export class GetOrganizationWebhooksAlertTypesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getOrganizationWebhooksAlertTypes200ApplicationJSONObjects?: Record<
    string,
    any
  >[];
}
