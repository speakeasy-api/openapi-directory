// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTAssociateTransitGatewayMulticastDomainActionEnum
type POSTAssociateTransitGatewayMulticastDomainActionEnum string

const (
	POSTAssociateTransitGatewayMulticastDomainActionEnumAssociateTransitGatewayMulticastDomain POSTAssociateTransitGatewayMulticastDomainActionEnum = "AssociateTransitGatewayMulticastDomain"
)

func (e POSTAssociateTransitGatewayMulticastDomainActionEnum) ToPointer() *POSTAssociateTransitGatewayMulticastDomainActionEnum {
	return &e
}

func (e *POSTAssociateTransitGatewayMulticastDomainActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AssociateTransitGatewayMulticastDomain":
		*e = POSTAssociateTransitGatewayMulticastDomainActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAssociateTransitGatewayMulticastDomainActionEnum: %v", v)
	}
}

// POSTAssociateTransitGatewayMulticastDomainVersionEnum
type POSTAssociateTransitGatewayMulticastDomainVersionEnum string

const (
	POSTAssociateTransitGatewayMulticastDomainVersionEnumTwoThousandAndSixteen1115 POSTAssociateTransitGatewayMulticastDomainVersionEnum = "2016-11-15"
)

func (e POSTAssociateTransitGatewayMulticastDomainVersionEnum) ToPointer() *POSTAssociateTransitGatewayMulticastDomainVersionEnum {
	return &e
}

func (e *POSTAssociateTransitGatewayMulticastDomainVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTAssociateTransitGatewayMulticastDomainVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAssociateTransitGatewayMulticastDomainVersionEnum: %v", v)
	}
}

type POSTAssociateTransitGatewayMulticastDomainRequest struct {
	Action            POSTAssociateTransitGatewayMulticastDomainActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                                `request:"mediaType=text/xml"`
	Version           POSTAssociateTransitGatewayMulticastDomainVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTAssociateTransitGatewayMulticastDomainResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
