/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LiveChatMessageAuthorDetails } from "./livechatmessageauthordetails";
import { LiveChatMessageSnippet } from "./livechatmessagesnippet";
import { Expose, Type } from "class-transformer";

/**
 * A *liveChatMessage* resource represents a chat message in a YouTube Live Chat.
 */
export class LiveChatMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authorDetails" })
  @Type(() => LiveChatMessageAuthorDetails)
  authorDetails?: LiveChatMessageAuthorDetails;

  /**
   * Etag of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The ID that YouTube assigns to uniquely identify the message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "youtube#liveChatMessage".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Next ID: 33
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snippet" })
  @Type(() => LiveChatMessageSnippet)
  snippet?: LiveChatMessageSnippet;
}
