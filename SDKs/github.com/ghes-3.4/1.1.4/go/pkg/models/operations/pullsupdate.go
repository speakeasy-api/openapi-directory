// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PullsUpdatePathParams struct {
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The number that identifies the pull request.
	PullNumber int64 `pathParam:"style=simple,explode=false,name=pull_number"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

// PullsUpdateRequestBodyStateEnum - State of this Pull Request. Either `open` or `closed`.
type PullsUpdateRequestBodyStateEnum string

const (
	PullsUpdateRequestBodyStateEnumOpen   PullsUpdateRequestBodyStateEnum = "open"
	PullsUpdateRequestBodyStateEnumClosed PullsUpdateRequestBodyStateEnum = "closed"
)

func (e *PullsUpdateRequestBodyStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "open":
		fallthrough
	case "closed":
		*e = PullsUpdateRequestBodyStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PullsUpdateRequestBodyStateEnum: %s", s)
	}
}

type PullsUpdateRequestBody struct {
	// The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.
	Base *string `json:"base,omitempty"`
	// The contents of the pull request.
	Body *string `json:"body,omitempty"`
	// Indicates whether [maintainers can modify](https://docs.github.com/enterprise-server@3.4/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
	MaintainerCanModify *bool `json:"maintainer_can_modify,omitempty"`
	// State of this Pull Request. Either `open` or `closed`.
	State *PullsUpdateRequestBodyStateEnum `json:"state,omitempty"`
	// The title of the pull request.
	Title *string `json:"title,omitempty"`
}

type PullsUpdateRequest struct {
	PathParams PullsUpdatePathParams
	Request    *PullsUpdateRequestBody `request:"mediaType=application/json"`
}

type PullsUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Forbidden
	BasicError *shared.BasicError
	// Response
	PullRequest *shared.PullRequest
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
