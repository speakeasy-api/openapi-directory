/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArrayValue } from "./arrayvalue";
import { Entity } from "./entity";
import { Key } from "./key";
import { LatLng } from "./latlng";
import { Expose, Type } from "class-transformer";

/**
 * A null value.
 */
export enum ValueNullValueEnum {
  NullValue = "NULL_VALUE",
}

/**
 * A message that can hold any of the supported value types and associated metadata.
 */
export class Value extends SpeakeasyBase {
  /**
   * An array value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "arrayValue" })
  @Type(() => ArrayValue)
  arrayValue?: ArrayValue;

  /**
   * A blob value. May have at most 1,000,000 bytes. When `exclude_from_indexes` is false, may have at most 1500 bytes. In JSON requests, must be base64-encoded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blobValue" })
  blobValue?: string;

  /**
   * A boolean value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "booleanValue" })
  booleanValue?: boolean;

  /**
   * A double value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doubleValue" })
  doubleValue?: number;

  /**
   * A Datastore data object. An entity is limited to 1 megabyte when stored. That _roughly_ corresponds to a limit of 1 megabyte for the serialized form of this message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityValue" })
  @Type(() => Entity)
  entityValue?: Entity;

  /**
   * If the value should be excluded from all indexes including those defined explicitly.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludeFromIndexes" })
  excludeFromIndexes?: boolean;

  /**
   * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoPointValue" })
  @Type(() => LatLng)
  geoPointValue?: LatLng;

  /**
   * An integer value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "integerValue" })
  integerValue?: string;

  /**
   * A unique identifier for an entity. If a key's partition ID or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keyValue" })
  @Type(() => Key)
  keyValue?: Key;

  /**
   * The `meaning` field should only be populated for backwards compatibility.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meaning" })
  meaning?: number;

  /**
   * A null value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nullValue" })
  nullValue?: ValueNullValueEnum;

  /**
   * A UTF-8 encoded string value. When `exclude_from_indexes` is false (it is indexed) , may have at most 1500 bytes. Otherwise, may be set to at most 1,000,000 bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;

  /**
   * A timestamp value. When stored in the Datastore, precise only to microseconds; any additional precision is rounded down.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampValue" })
  timestampValue?: string;
}
