"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aliascontext as shared_aliascontext
from ..shared import repoid as shared_repoid
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CloudRepoSourceContext:
    r"""A CloudRepoSourceContext denotes a particular revision in a cloud repo (a repo hosted by the Google Cloud Platform)."""
    
    alias_context: Optional[shared_aliascontext.AliasContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aliasContext'), 'exclude': lambda f: f is None }})
    r"""An alias to a repo revision."""  
    alias_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aliasName'), 'exclude': lambda f: f is None }})
    r"""The name of an alias (branch, tag, etc.)."""  
    repo_id: Optional[shared_repoid.RepoID] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repoId'), 'exclude': lambda f: f is None }})
    r"""A unique identifier for a cloud repo."""  
    revision_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revisionId'), 'exclude': lambda f: f is None }})
    r"""A revision ID."""  
    