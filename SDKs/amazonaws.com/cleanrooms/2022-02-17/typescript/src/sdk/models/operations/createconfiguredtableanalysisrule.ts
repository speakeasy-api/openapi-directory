/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Controls on the query specifications that can be run on a configured table.
 */
export class CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRulePolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "v1" })
  @Type(() => shared.ConfiguredTableAnalysisRulePolicyV1)
  v1?: shared.ConfiguredTableAnalysisRulePolicyV1;
}

/**
 * The type of analysis rule. Valid values are AGGREGATION and LIST.
 */
export enum CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum {
  Aggregation = "AGGREGATION",
  List = "LIST",
}

export class CreateConfiguredTableAnalysisRuleRequestBody extends SpeakeasyBase {
  /**
   * Controls on the query specifications that can be run on a configured table.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "analysisRulePolicy" })
  @Type(() => CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRulePolicy)
  analysisRulePolicy: CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRulePolicy;

  /**
   * The type of analysis rule. Valid values are AGGREGATION and LIST.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "analysisRuleType" })
  analysisRuleType: CreateConfiguredTableAnalysisRuleRequestBodyAnalysisRuleTypeEnum;
}

export class CreateConfiguredTableAnalysisRuleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateConfiguredTableAnalysisRuleRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The identifier for the configured table to create the analysis rule for. Currently accepts the configured table ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=configuredTableIdentifier",
  })
  configuredTableIdentifier: string;
}

export class CreateConfiguredTableAnalysisRuleResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createConfiguredTableAnalysisRuleOutput?: shared.CreateConfiguredTableAnalysisRuleOutput;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
