"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListInternalCalloutCountriesRequest:
    
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the account. To list Call-out enabled countries to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a sub account, provide the account ID of the sub account in the `accountId` path parameter. To list Call-out enabled countries of a master account, provide `me` as the value of the `accountId` path parameter."""  
    

@dataclasses.dataclass
class ListInternalCalloutCountries200ApplicationXMLCalloutCountries:
    
    code: Optional[str] = dataclasses.field(default=None)
    r"""Country code."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Two letter country Id."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the country."""  
    

@dataclasses.dataclass
class ListInternalCalloutCountries200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK** <br>
    List of Internal Callout Countries returned.
    """
    
    callout_countries: Optional[list[ListInternalCalloutCountries200ApplicationXMLCalloutCountries]] = dataclasses.field(default=None)  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""The total number of records returned."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListInternalCalloutCountries200ApplicationJSONCalloutCountries:
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Country code."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Two letter country Id."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the country."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListInternalCalloutCountries200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK** <br>
    List of Internal Callout Countries returned.
    """
    
    callout_countries: Optional[list[ListInternalCalloutCountries200ApplicationJSONCalloutCountries]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callout_countries'), 'exclude': lambda f: f is None }})  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The total number of records returned."""  
    

@dataclasses.dataclass
class ListInternalCalloutCountriesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_internal_callout_countries_200_application_json_object: Optional[ListInternalCalloutCountries200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK** <br>
    List of Internal Callout Countries returned.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    