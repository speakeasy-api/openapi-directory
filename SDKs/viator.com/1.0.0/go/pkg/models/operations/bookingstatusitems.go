// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BookingStatusItemsHeaders struct {
	// Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
	//
	AcceptLanguage string `header:"style=simple,explode=false,name=Accept-Language"`
}

// BookingStatusItemsRequestBody - **note**: all items are optional, but at least one needs to be included
type BookingStatusItemsRequestBody struct {
	// **earliest date** for when the booking(s) in question were made (must be in the future)
	BookingDateFrom *string `json:"bookingDateFrom,omitempty"`
	// **latest date** for when the booking(s) in question were made (must be in the future)
	BookingDateTo *string `json:"bookingDateTo,omitempty"`
	// **array** of partner-defined distributor item reference identifiers e.g. `['refItem1','refItem2','refItem3']`
	DistributorItemRefs []string `json:"distributorItemRefs,omitempty"`
	// **array** of partner-defined distributor reference identifiers
	DistributorRefs []string `json:"distributorRefs,omitempty"`
	// **array** of booking-reference numbers to check
	//
	//  `itemId` (booking-reference provided by Viator). For more information, see [Booking references](#section/Key-concepts/Booking-references)
	//
	ItemIds []int64 `json:"itemIds,omitempty"`
	// **first name** of the lead traveler
	LeadFirstName *string `json:"leadFirstName,omitempty"`
	// **surname** of the lead traveler
	LeadSurname *string `json:"leadSurname,omitempty"`
	// **specifier**:
	// - `true`: bypass the poll limit in the prelive environment only
	// - `false`: (default) make a *real* booking, not a test
	//
	Test *bool `json:"test,omitempty"`
}

type BookingStatusItemsRequest struct {
	Headers BookingStatusItemsHeaders
	Request *BookingStatusItemsRequestBody `request:"mediaType=application/json"`
}

type BookingStatusItems200ApplicationJSONData struct {
	// **object** containing item booking status information
	BookingStatus *shared.BookingStatusItem `json:"bookingStatus,omitempty"`
	// **partner-defined distributor item reference identifier**
	DistributorItemRef *string `json:"distributorItemRef,omitempty"`
	// Booking-reference number generated by Viator
	// - **Note**: For more information, see: [Booking references](#section/Key-concepts/Booking-references)
	//
	ItemID *int64 `json:"itemId,omitempty"`
}

// BookingStatusItems200ApplicationJSON - Success
type BookingStatusItems200ApplicationJSON struct {
	// **array** containing item ids and their associated booking status object
	Data []BookingStatusItems200ApplicationJSONData `json:"data,omitempty"`
	// **timestamp** of *this* response
	DateStamp *string `json:"dateStamp,omitempty"`
	// **array** of error codes pertaining to *this* error
	// - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
	//
	ErrorCodes []string `json:"errorCodes,omitempty"`
	// **array** of error message strings
	ErrorMessage []interface{} `json:"errorMessage,omitempty"`
	// **array** of error message strings in plain text
	ErrorMessageText *string `json:"errorMessageText,omitempty"`
	// **name** of *this* type of error
	ErrorName *string `json:"errorName,omitempty"`
	// **reference number** of *this* error
	ErrorReference *string `json:"errorReference,omitempty"`
	// **code** specifying the type of error
	ErrorType *string `json:"errorType,omitempty"`
	// ignore (Viator only)
	ExtraInfo map[string]interface{} `json:"extraInfo,omitempty"`
	// ignore (Viator only)
	ExtraObject map[string]interface{} `json:"extraObject,omitempty"`
	// **boolean indicator** of *this* request's outcome
	// - `true`: the request was successful with no errors
	// - `false`: an error was encountered
	//
	Success *bool `json:"success,omitempty"`
	// **number** of results available for *this* service
	//
	TotalCount *int64 `json:"totalCount,omitempty"`
	// **unique numeric id** of the server that processed *this* request
	Vmid *string `json:"vmid,omitempty"`
}

type BookingStatusItemsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	BookingStatusItems200ApplicationJSONObject *BookingStatusItems200ApplicationJSON
}
