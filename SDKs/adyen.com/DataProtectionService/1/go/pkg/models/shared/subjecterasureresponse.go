// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubjectErasureResponseResultEnum - The result of this operation.
type SubjectErasureResponseResultEnum string

const (
	SubjectErasureResponseResultEnumActiveRecurringTokenExists SubjectErasureResponseResultEnum = "ACTIVE_RECURRING_TOKEN_EXISTS"
	SubjectErasureResponseResultEnumAlreadyProcessed           SubjectErasureResponseResultEnum = "ALREADY_PROCESSED"
	SubjectErasureResponseResultEnumPaymentNotFound            SubjectErasureResponseResultEnum = "PAYMENT_NOT_FOUND"
	SubjectErasureResponseResultEnumSuccess                    SubjectErasureResponseResultEnum = "SUCCESS"
)

func (e *SubjectErasureResponseResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE_RECURRING_TOKEN_EXISTS":
		fallthrough
	case "ALREADY_PROCESSED":
		fallthrough
	case "PAYMENT_NOT_FOUND":
		fallthrough
	case "SUCCESS":
		*e = SubjectErasureResponseResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubjectErasureResponseResultEnum: %s", s)
	}
}

// SubjectErasureResponse - OK - the request has succeeded.
type SubjectErasureResponse struct {
	// The result of this operation.
	Result *SubjectErasureResponseResultEnum `json:"result,omitempty"`
}
