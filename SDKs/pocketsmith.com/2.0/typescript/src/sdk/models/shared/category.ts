/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * How the category's refunds or deductions should be reported on.
 */
export enum CategoryRefundBehaviourEnum {
  DebitsAreDeductions = "debits_are_deductions",
  CreditsAreRefunds = "credits_are_refunds",
  Null = "null",
}

/**
 * Success
 */
export class Category extends SpeakeasyBase {
  /**
   * The category's child categories.
   */
  @SpeakeasyMetadata({ elemType: Category })
  @Expose({ name: "children" })
  @Type(() => Category)
  children?: Category[];

  /**
   * The colour for the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "colour" })
  colour?: string;

  /**
   * When the category was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The unique identifier of the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Whether the category is a bill category. A bill category is when budgeted amounts are normally spent at once, instead of spread across a budgeting period. This category will be included in the bill reminder email when set to true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_bill" })
  isBill?: boolean;

  /**
   * Whether this category has been marked as a transfer category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_transfer" })
  isTransfer?: boolean;

  /**
   * The unique identifier of the parent category of this category, or null if this category has no parent (i.e. is a top-level category)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_id" })
  parentId?: number;

  /**
   * How the category's refunds or deductions should be reported on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refund_behaviour" })
  refundBehaviour?: CategoryRefundBehaviourEnum;

  /**
   * Whether the category's budget is rolled up into its parent category, if a parent category is present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roll_up" })
  rollUp?: boolean;

  /**
   * The title of the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * When the category was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
