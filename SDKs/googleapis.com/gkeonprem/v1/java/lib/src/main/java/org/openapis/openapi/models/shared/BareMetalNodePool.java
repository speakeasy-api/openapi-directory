/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BareMetalNodePool - Resource that represents a bare metal node pool.
 */
public class BareMetalNodePool {
    /**
     * Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public BareMetalNodePool withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Output only. The time at which this bare metal node pool was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public BareMetalNodePool withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. The time at which this bare metal node pool was deleted. If the resource is not deleted, this must be empty
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;

    public BareMetalNodePool withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * The display name for the bare metal node pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public BareMetalNodePool withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public BareMetalNodePool withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Immutable. The bare metal node pool resource name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public BareMetalNodePool withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodePoolConfig")
    public BareMetalNodePoolConfig nodePoolConfig;

    public BareMetalNodePool withNodePoolConfig(BareMetalNodePoolConfig nodePoolConfig) {
        this.nodePoolConfig = nodePoolConfig;
        return this;
    }
    
    /**
     * Output only. If set, there are currently changes in flight to the bare metal node pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reconciling")
    public Boolean reconciling;

    public BareMetalNodePool withReconciling(Boolean reconciling) {
        this.reconciling = reconciling;
        return this;
    }
    
    /**
     * Output only. The current state of the bare metal node pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public BareMetalNodePoolStateEnum state;

    public BareMetalNodePool withState(BareMetalNodePoolStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ResourceStatus status;

    public BareMetalNodePool withStatus(ResourceStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * Output only. The unique identifier of the bare metal node pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public BareMetalNodePool withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The time at which this bare metal node pool was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public BareMetalNodePool withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public BareMetalNodePool(){}
}
