import { SpeakeasyBase } from "../../../internal/utils";
/**
 * Whether the File was generated by Increase or by you and sent to Increase.
 */
export declare enum FileDirectionEnum {
    ToIncrease = "to_increase",
    FromIncrease = "from_increase"
}
/**
 * What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
 */
export declare enum FilePurposeEnum {
    CheckImageFront = "check_image_front",
    CheckImageBack = "check_image_back",
    Form1099Int = "form_1099_int",
    FormSs4 = "form_ss_4",
    IdentityDocument = "identity_document",
    IncreaseStatement = "increase_statement",
    Other = "other",
    TrustFormationDocument = "trust_formation_document",
    DigitalWalletArtwork = "digital_wallet_artwork",
    DigitalWalletAppIcon = "digital_wallet_app_icon",
    EntitySupplementalDocument = "entity_supplemental_document"
}
/**
 * A constant representing the object's type. For this resource it will always be `file`.
 */
export declare enum FileTypeEnum {
    File = "file"
}
/**
 * Files are objects that represent a file hosted on Increase's servers. The file may have been uploaded by you (for example, when uploading a check image) or it may have been created by Increase (for example, an autogenerated statement PDF).
 */
export declare class File extends SpeakeasyBase {
    /**
     * The time the File was created.
     */
    createdAt: Date;
    /**
     * A description of the File.
     */
    description: string;
    /**
     * Whether the File was generated by Increase or by you and sent to Increase.
     */
    direction: FileDirectionEnum;
    /**
     * A URL from where the File can be downloaded at this point in time. The location of this URL may change over time.
     */
    downloadUrl: string;
    /**
     * The filename that was provided upon upload or generated by Increase.
     */
    filename: string;
    /**
     * The File's identifier.
     */
    id: string;
    /**
     * What the File will be used for. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     */
    purpose: FilePurposeEnum;
    /**
     * A constant representing the object's type. For this resource it will always be `file`.
     */
    type: FileTypeEnum;
}
