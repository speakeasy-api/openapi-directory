"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIClassifierTaxonomyOut:
    r"""Available plans"""
    
    classifier_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classifierName'), 'exclude': lambda f: f is None }})
    r"""Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)"""  
    classifying_scripts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classifyingScripts'), 'exclude': lambda f: f is None }})
    r"""The scripts / alphabets this classifiers classifies to"""  
    taxonomy_classes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxonomyClasses'), 'exclude': lambda f: f is None }})
    r"""The taxonomy classes this classifier classifies to"""  
    