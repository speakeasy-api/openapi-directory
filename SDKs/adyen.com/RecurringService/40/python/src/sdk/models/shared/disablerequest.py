"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DisableRequest:
    
    merchant_account: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantAccount') }})
    r"""The merchant account identifier with which you want to process the transaction."""  
    shopper_reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shopperReference') }})
    r"""The ID that uniquely identifies the shopper.
    
    This `shopperReference` must be the same as the `shopperReference` used in the initial payment.
    """  
    contract: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contract'), 'exclude': lambda f: f is None }})
    r"""Specify the contract if you only want to disable a specific use.
    
    This field can be set to one of the following values, or to their combination (comma-separated):
    * ONECLICK
    * RECURRING
    * PAYOUT
    """  
    recurring_detail_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recurringDetailReference'), 'exclude': lambda f: f is None }})
    r"""The ID that uniquely identifies the recurring detail reference.
    
    If it is not provided, the whole recurring contract of the `shopperReference` will be disabled, which includes all recurring details.
    """  
    