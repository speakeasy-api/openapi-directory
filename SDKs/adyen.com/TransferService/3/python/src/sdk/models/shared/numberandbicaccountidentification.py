"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import additionalbankidentification as shared_additionalbankidentification
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NumberAndBicAccountIdentificationTypeEnum(str, Enum):
    r"""**numberAndBic**"""
    NUMBER_AND_BIC = 'numberAndBic'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NumberAndBicAccountIdentification:
    r"""Contains the bank account details. The fields required in this object depend on the country of the bank account and the currency of the transfer."""
    
    account_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountNumber') }})
    r"""The bank account number, without separators or whitespace. The length and format depends on the bank or country."""  
    bic: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bic') }})
    r"""The bank's 8- or 11-character BIC or SWIFT code."""  
    type: NumberAndBicAccountIdentificationTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""**numberAndBic**"""  
    additional_bank_identification: Optional[shared_additionalbankidentification.AdditionalBankIdentification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalBankIdentification'), 'exclude': lambda f: f is None }})  
    