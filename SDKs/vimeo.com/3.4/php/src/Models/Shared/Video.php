<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Video - The video belongs to the category.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Video
{
    /**
     * The categories to which this video belongs.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Category> $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Category>')]
    public array $categories;
    
    /**
     * The content ratings of this video.
     * 
     * @var array<string> $contentRating
     */
	#[\JMS\Serializer\Annotation\SerializedName('content_rating')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $contentRating;
    
    /**
     * The context of the video's subscription, if this video is part of a subscription.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoContext $context
     */
	#[\JMS\Serializer\Annotation\SerializedName('context')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoContext')]
    public VideoContext $context;
    
    /**
     * The time in ISO 8601 format when the video was created.
     * 
     * @var string $createdTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdTime;
    
    /**
     * A brief explanation of the video's content.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The video's duration in seconds.
     * 
     * @var float $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $duration;
    
    /**
     * Information about embedding this video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\EmbedSettings $embed
     */
	#[\JMS\Serializer\Annotation\SerializedName('embed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EmbedSettings')]
    public EmbedSettings $embed;
    
    /**
     * The video's height in pixels.
     * 
     * @var float $height
     */
	#[\JMS\Serializer\Annotation\SerializedName('height')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $height;
    
    /**
     * The video's primary language.
     * 
     * @var string $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $language;
    
    /**
     * The time in ISO 8601 format when the user last modified the video.
     * 
     * @var ?string $lastUserActionEventDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_user_action_event_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastUserActionEventDate = null;
    
    /**
     * The [Creative Commons](http://creativecommons.org/licenses/) license used for the video:
     * 
     * 
     * Option descriptions:
     *  * `by` - Attribution
     *  * `by-nc` - Attribution Non-Commercial
     *  * `by-nc-nd` - Attribution Non-Commercial No Derivatives
     *  * `by-nc-sa` - Attribution Non-Commercial Share Alike
     *  * `by-nd` - Attribution No Derivatives
     *  * `by-sa` - Attribution Share Alike
     *  * `cc0` - Public Domain Dedication
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoLicenseEnum $license
     */
	#[\JMS\Serializer\Annotation\SerializedName('license')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VideoLicenseEnum>')]
    public VideoLicenseEnum $license;
    
    /**
     * The link to the video.
     * 
     * @var string $link
     */
	#[\JMS\Serializer\Annotation\SerializedName('link')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $link;
    
    /**
     * The video's metadata.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadata')]
    public VideoMetadata $metadata;
    
    /**
     * The time in ISO 8601 format when the video metadata was last modified.
     * 
     * @var string $modifiedTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('modified_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $modifiedTime;
    
    /**
     * The video's title.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Information about the folder that contains this video.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VideoProject $parentFolder
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_folder')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoProject')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoProject $parentFolder = null;
    
    /**
     * The privacy-enabled password to watch this video. Only users can see their own video passwords. This data requires a bearer token with the `private` scope.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * The active picture for this video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Picture $pictures
     */
	#[\JMS\Serializer\Annotation\SerializedName('pictures')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Picture')]
    public Picture $pictures;
    
    /**
     * The video's privacy setting.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoPrivacy $privacy
     */
	#[\JMS\Serializer\Annotation\SerializedName('privacy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoPrivacy')]
    public VideoPrivacy $privacy;
    
    /**
     * The time in ISO 8601 format when the video was released.
     * 
     * @var string $releaseTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('release_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $releaseTime;
    
    /**
     * The resource key string of the video.
     * 
     * @var string $resourceKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $resourceKey;
    
    /**
     * 360 spatial data.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoSpatial $spatial
     */
	#[\JMS\Serializer\Annotation\SerializedName('spatial')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoSpatial')]
    public VideoSpatial $spatial;
    
    /**
     * A collection of stats associated with this video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoStats $stats
     */
	#[\JMS\Serializer\Annotation\SerializedName('stats')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoStats')]
    public VideoStats $stats;
    
    /**
     * The status code for the availability of the video. This field is deprecated in favor of `upload` and `transcode`.
     * 
     * 
     * Option descriptions:
     *  * `available` - The video is available.
     *  * `quota_exceeded` - The user's quota is exceeded with this video.
     *  * `total_cap_exceeded` - The user has exceeded their total cap with this video.
     *  * `transcode_starting` - Transcoding is beginning for the video.
     *  * `transcoding` - Transcoding is underway for the video.
     *  * `transcoding_error` - There was an error in transcoding the video.
     *  * `unavailable` - The video is unavailable.
     *  * `uploading` - The video is being uploaded.
     *  * `uploading_error` - There was an error in uploading the video.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VideoStatusEnum>')]
    public VideoStatusEnum $status;
    
    /**
     * An array of all tags assigned to this video.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    public array $tags;
    
    /**
     * The transcode information for a video upload.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoTranscode $transcode
     */
	#[\JMS\Serializer\Annotation\SerializedName('transcode')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoTranscode')]
    public VideoTranscode $transcode;
    
    /**
     * The upload information for this video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUpload $upload
     */
	#[\JMS\Serializer\Annotation\SerializedName('upload')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUpload')]
    public VideoUpload $upload;
    
    /**
     * The video's canonical relative URI.
     * 
     * @var string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uri;
    
    /**
     * The video owner.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUser $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUser')]
    public VideoUser $user;
    
    /**
     * The video's width in pixels.
     * 
     * @var float $width
     */
	#[\JMS\Serializer\Annotation\SerializedName('width')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $width;
    
	public function __construct()
	{
		$this->categories = [];
		$this->contentRating = [];
		$this->context = new \OpenAPI\OpenAPI\Models\Shared\VideoContext();
		$this->createdTime = "";
		$this->description = "";
		$this->duration = 0;
		$this->embed = new \OpenAPI\OpenAPI\Models\Shared\EmbedSettings();
		$this->height = 0;
		$this->language = "";
		$this->lastUserActionEventDate = null;
		$this->license = \OpenAPI\OpenAPI\Models\Shared\VideoLicenseEnum::BY;
		$this->link = "";
		$this->metadata = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadata();
		$this->modifiedTime = "";
		$this->name = "";
		$this->parentFolder = null;
		$this->password = null;
		$this->pictures = new \OpenAPI\OpenAPI\Models\Shared\Picture();
		$this->privacy = new \OpenAPI\OpenAPI\Models\Shared\VideoPrivacy();
		$this->releaseTime = "";
		$this->resourceKey = "";
		$this->spatial = new \OpenAPI\OpenAPI\Models\Shared\VideoSpatial();
		$this->stats = new \OpenAPI\OpenAPI\Models\Shared\VideoStats();
		$this->status = \OpenAPI\OpenAPI\Models\Shared\VideoStatusEnum::AVAILABLE;
		$this->tags = [];
		$this->transcode = new \OpenAPI\OpenAPI\Models\Shared\VideoTranscode();
		$this->upload = new \OpenAPI\OpenAPI\Models\Shared\VideoUpload();
		$this->uri = "";
		$this->user = new \OpenAPI\OpenAPI\Models\Shared\VideoUser();
		$this->width = 0;
	}
}
