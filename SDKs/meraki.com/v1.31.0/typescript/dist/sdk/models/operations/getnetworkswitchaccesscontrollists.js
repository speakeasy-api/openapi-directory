"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkSwitchAccessControlListsResponse = exports.GetNetworkSwitchAccessControlLists200ApplicationJSON = exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRules = exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum = exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum = exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum = exports.GetNetworkSwitchAccessControlListsRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkSwitchAccessControlListsRequest = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessControlListsRequest, _super);
    function GetNetworkSwitchAccessControlListsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlListsRequest.prototype, "networkId", void 0);
    return GetNetworkSwitchAccessControlListsRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessControlListsRequest = GetNetworkSwitchAccessControlListsRequest;
/**
 * IP address version
 */
var GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum;
(function (GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum) {
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum["Any"] = "any";
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum["Ipv4"] = "ipv4";
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum["Ipv6"] = "ipv6";
})(GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum = exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum || (exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum = {}));
/**
 * 'allow' or 'deny' traffic specified by this rule
 */
var GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum;
(function (GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum) {
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum["Allow"] = "allow";
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum["Deny"] = "deny";
})(GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum = exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum || (exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum = {}));
/**
 * The type of protocol
 */
var GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum;
(function (GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum) {
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum["Any"] = "any";
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum["Tcp"] = "tcp";
    GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum["Udp"] = "udp";
})(GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum = exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum || (exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum = {}));
var GetNetworkSwitchAccessControlLists200ApplicationJSONRules = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessControlLists200ApplicationJSONRules, _super);
    function GetNetworkSwitchAccessControlLists200ApplicationJSONRules() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dstCidr" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "dstCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dstPort" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "dstPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipVersion" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "ipVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "policy" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "policy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protocol" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "protocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "srcCidr" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "srcCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "srcPort" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "srcPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vlan" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSONRules.prototype, "vlan", void 0);
    return GetNetworkSwitchAccessControlLists200ApplicationJSONRules;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessControlLists200ApplicationJSONRules = GetNetworkSwitchAccessControlLists200ApplicationJSONRules;
/**
 * Successful operation
 */
var GetNetworkSwitchAccessControlLists200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessControlLists200ApplicationJSON, _super);
    function GetNetworkSwitchAccessControlLists200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSwitchAccessControlLists200ApplicationJSONRules,
        }),
        (0, class_transformer_1.Expose)({ name: "rules" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSwitchAccessControlLists200ApplicationJSONRules; }),
        __metadata("design:type", Array)
    ], GetNetworkSwitchAccessControlLists200ApplicationJSON.prototype, "rules", void 0);
    return GetNetworkSwitchAccessControlLists200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessControlLists200ApplicationJSON = GetNetworkSwitchAccessControlLists200ApplicationJSON;
var GetNetworkSwitchAccessControlListsResponse = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchAccessControlListsResponse, _super);
    function GetNetworkSwitchAccessControlListsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkSwitchAccessControlListsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkSwitchAccessControlListsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkSwitchAccessControlListsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetNetworkSwitchAccessControlLists200ApplicationJSON)
    ], GetNetworkSwitchAccessControlListsResponse.prototype, "getNetworkSwitchAccessControlLists200ApplicationJSONObject", void 0);
    return GetNetworkSwitchAccessControlListsResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchAccessControlListsResponse = GetNetworkSwitchAccessControlListsResponse;
