/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedCableInput } from "./nestedcable";
import { Expose, Type } from "class-transformer";

export enum WritableRearPortTypeEnum {
  Eightp8c = "8p8c",
  OneHundredAndTenPunch = "110-punch",
  Bnc = "bnc",
  Mrj21 = "mrj21",
  Fc = "fc",
  Lc = "lc",
  LcApc = "lc-apc",
  Lsh = "lsh",
  LshApc = "lsh-apc",
  Mpo = "mpo",
  Mtrj = "mtrj",
  Sc = "sc",
  ScApc = "sc-apc",
  St = "st",
}

export class WritableRearPortInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cable" })
  @Type(() => NestedCableInput)
  cable?: NestedCableInput;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "device" })
  device: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "positions" })
  positions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: WritableRearPortTypeEnum;
}
