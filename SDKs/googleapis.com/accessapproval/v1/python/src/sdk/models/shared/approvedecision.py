"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import signatureinfo as shared_signatureinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApproveDecision:
    r"""A decision that has been made to approve access to a resource."""
    
    approve_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approveTime'), 'exclude': lambda f: f is None }})
    r"""The time at which approval was granted."""  
    auto_approved: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoApproved'), 'exclude': lambda f: f is None }})
    r"""True when the request has been auto-approved."""  
    expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireTime'), 'exclude': lambda f: f is None }})
    r"""The time at which the approval expires."""  
    invalidate_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalidateTime'), 'exclude': lambda f: f is None }})
    r"""If set, denotes the timestamp at which the approval is invalidated."""  
    signature_info: Optional[shared_signatureinfo.SignatureInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signatureInfo'), 'exclude': lambda f: f is None }})
    r"""Information about the digital signature of the resource."""  
    