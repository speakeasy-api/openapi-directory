// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum string

const (
	PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnumConfidential PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum = "confidential"
	PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnumRegular      PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum = "regular"
	PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnumPublic       PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum = "public"
)

func (e *PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum: %s", s)
	}
}

// PatchSpacesSpaceIDFoldersIDProviderRequestBody - Provider to modify (except name, class and archivaldate)
type PatchSpacesSpaceIDFoldersIDProviderRequestBody struct {
	About          *string                                                  `json:"About,omitempty"`
	Comment        *string                                                  `json:"Comment,omitempty"`
	Designation    *string                                                  `json:"Designation,omitempty"`
	End            *string                                                  `json:"End,omitempty"`
	Home           *bool                                                    `json:"Home,omitempty"`
	Keywords       []string                                                 `json:"Keywords,omitempty"`
	Level          *PatchSpacesSpaceIDFoldersIDProviderRequestBodyLevelEnum `json:"Level,omitempty"`
	ProviderNumber *string                                                  `json:"ProviderNumber,omitempty"`
	Start          *string                                                  `json:"Start,omitempty"`
}

type PatchSpacesSpaceIDFoldersIDProviderRequest struct {
	// Provider to modify (except name, class and archivaldate)
	RequestBody PatchSpacesSpaceIDFoldersIDProviderRequestBody `request:"mediaType=application/json"`
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDFoldersIDProviderResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
