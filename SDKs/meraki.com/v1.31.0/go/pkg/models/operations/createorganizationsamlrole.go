// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateOrganizationSamlRolePathParams struct {
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
}

// CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum - The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admin'
type CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum string

const (
	CreateOrganizationSamlRoleRequestBodyNetworksAccessEnumFull            CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "full"
	CreateOrganizationSamlRoleRequestBodyNetworksAccessEnumGuestAmbassador CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "guest-ambassador"
	CreateOrganizationSamlRoleRequestBodyNetworksAccessEnumMonitorOnly     CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "monitor-only"
	CreateOrganizationSamlRoleRequestBodyNetworksAccessEnumReadOnly        CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "read-only"
	CreateOrganizationSamlRoleRequestBodyNetworksAccessEnumSsidAdmin       CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum = "ssid-admin"
)

func (e *CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "guest-ambassador":
		fallthrough
	case "monitor-only":
		fallthrough
	case "read-only":
		fallthrough
	case "ssid-admin":
		*e = CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum: %s", s)
	}
}

type CreateOrganizationSamlRoleRequestBodyNetworks struct {
	// The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admin'
	Access CreateOrganizationSamlRoleRequestBodyNetworksAccessEnum `json:"access"`
	// The network ID
	ID string `json:"id"`
}

// CreateOrganizationSamlRoleRequestBodyOrgAccessEnum - The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'
type CreateOrganizationSamlRoleRequestBodyOrgAccessEnum string

const (
	CreateOrganizationSamlRoleRequestBodyOrgAccessEnumEnterprise CreateOrganizationSamlRoleRequestBodyOrgAccessEnum = "enterprise"
	CreateOrganizationSamlRoleRequestBodyOrgAccessEnumFull       CreateOrganizationSamlRoleRequestBodyOrgAccessEnum = "full"
	CreateOrganizationSamlRoleRequestBodyOrgAccessEnumNone       CreateOrganizationSamlRoleRequestBodyOrgAccessEnum = "none"
	CreateOrganizationSamlRoleRequestBodyOrgAccessEnumReadOnly   CreateOrganizationSamlRoleRequestBodyOrgAccessEnum = "read-only"
)

func (e *CreateOrganizationSamlRoleRequestBodyOrgAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enterprise":
		fallthrough
	case "full":
		fallthrough
	case "none":
		fallthrough
	case "read-only":
		*e = CreateOrganizationSamlRoleRequestBodyOrgAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationSamlRoleRequestBodyOrgAccessEnum: %s", s)
	}
}

// CreateOrganizationSamlRoleRequestBodyTagsAccessEnum - The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
type CreateOrganizationSamlRoleRequestBodyTagsAccessEnum string

const (
	CreateOrganizationSamlRoleRequestBodyTagsAccessEnumFull            CreateOrganizationSamlRoleRequestBodyTagsAccessEnum = "full"
	CreateOrganizationSamlRoleRequestBodyTagsAccessEnumGuestAmbassador CreateOrganizationSamlRoleRequestBodyTagsAccessEnum = "guest-ambassador"
	CreateOrganizationSamlRoleRequestBodyTagsAccessEnumMonitorOnly     CreateOrganizationSamlRoleRequestBodyTagsAccessEnum = "monitor-only"
	CreateOrganizationSamlRoleRequestBodyTagsAccessEnumReadOnly        CreateOrganizationSamlRoleRequestBodyTagsAccessEnum = "read-only"
)

func (e *CreateOrganizationSamlRoleRequestBodyTagsAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "guest-ambassador":
		fallthrough
	case "monitor-only":
		fallthrough
	case "read-only":
		*e = CreateOrganizationSamlRoleRequestBodyTagsAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationSamlRoleRequestBodyTagsAccessEnum: %s", s)
	}
}

type CreateOrganizationSamlRoleRequestBodyTags struct {
	// The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
	Access CreateOrganizationSamlRoleRequestBodyTagsAccessEnum `json:"access"`
	// The name of the tag
	Tag string `json:"tag"`
}

type CreateOrganizationSamlRoleRequestBody struct {
	// The list of networks that the SAML administrator has privileges on
	Networks []CreateOrganizationSamlRoleRequestBodyNetworks `json:"networks,omitempty"`
	// The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'
	OrgAccess CreateOrganizationSamlRoleRequestBodyOrgAccessEnum `json:"orgAccess"`
	// The role of the SAML administrator
	Role string `json:"role"`
	// The list of tags that the SAML administrator has privleges on
	Tags []CreateOrganizationSamlRoleRequestBodyTags `json:"tags,omitempty"`
}

type CreateOrganizationSamlRoleRequest struct {
	PathParams CreateOrganizationSamlRolePathParams
	Request    CreateOrganizationSamlRoleRequestBody `request:"mediaType=application/json"`
}

type CreateOrganizationSamlRoleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateOrganizationSamlRole201ApplicationJSONObject map[string]interface{}
}
