"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CloudDlpInspection:
    r"""Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that produced the finding."""
    
    full_scan: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullScan'), 'exclude': lambda f: f is None }})
    r"""Whether Cloud DLP scanned the complete resource or a sampled subset."""  
    info_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infoType'), 'exclude': lambda f: f is None }})
    r"""The [type of information](https://cloud.google.com/dlp/docs/infotypes-reference) found, for example, `EMAIL_ADDRESS` or `STREET_ADDRESS`."""  
    info_type_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infoTypeCount'), 'exclude': lambda f: f is None }})
    r"""The number of times Cloud DLP found this infoType within this job and resource."""  
    inspect_job: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inspectJob'), 'exclude': lambda f: f is None }})
    r"""Name of the inspection job, for example, `projects/123/locations/europe/dlpJobs/i-8383929`."""  
    