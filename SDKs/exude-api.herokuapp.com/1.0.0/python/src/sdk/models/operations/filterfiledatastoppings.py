"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import exuderesponsebean as shared_exuderesponsebean
from typing import Optional


@dataclasses.dataclass
class FilterFileDataStoppingsRequestBodyFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclasses.dataclass
class FilterFileDataStoppingsRequestBody:
    r"""Filter the stopping words from the provided input file"""
    
    file: Optional[FilterFileDataStoppingsRequestBodyFile] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})  
    

@dataclasses.dataclass
class FilterFileDataStoppingsRequest:
    
    request_body: FilterFileDataStoppingsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})
    r"""Filter the stopping words from the provided input file"""  
    type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'type', 'style': 'simple', 'explode': False }})
    r"""provide the type of filtering required stopping/swear"""  
    

@dataclasses.dataclass
class FilterFileDataStoppingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    exude_response_bean: Optional[shared_exuderesponsebean.ExudeResponseBean] = dataclasses.field(default=None)
    r"""model response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    