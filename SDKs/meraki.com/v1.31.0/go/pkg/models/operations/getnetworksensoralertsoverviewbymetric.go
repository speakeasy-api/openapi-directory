// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type GetNetworkSensorAlertsOverviewByMetricRequest struct {
	// The time interval in seconds for returned data. The valid intervals are: 86400, 604800. The default is 604800.
	Interval  *int64 `queryParam:"style=form,explode=true,name=interval"`
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
	// The beginning of the timespan for the data. The maximum lookback period is 365 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
	T1 *string `queryParam:"style=form,explode=true,name=t1"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
}

// GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise - Object containing the number of sensor alerts that occurred due to noise readings
type GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise struct {
	// Number of sensor alerts that occurred due to ambient noise readings
	Ambient *int64 `json:"ambient,omitempty"`
}

// GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts - Counts of sensor alerts over the timespan, by reading metric
type GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts struct {
	// Number of sensor alerts that occurred due to an open door
	Door *int64 `json:"door,omitempty"`
	// Number of sensor alerts that occurred due to humidity readings
	Humidity *int64 `json:"humidity,omitempty"`
	// Number of sensor alerts that occurred due to indoor air quality readings
	IndoorAirQuality *int64 `json:"indoorAirQuality,omitempty"`
	// Object containing the number of sensor alerts that occurred due to noise readings
	Noise *GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise `json:"noise,omitempty"`
	// Number of sensor alerts that occurred due to PM2.5 readings
	Pm25 *int64 `json:"pm25,omitempty"`
	// Number of sensor alerts that occurred due to temperature readings
	Temperature *int64 `json:"temperature,omitempty"`
	// Number of sensor alerts that occurred due to TVOC readings
	Tvoc *int64 `json:"tvoc,omitempty"`
	// Number of sensor alerts that occurred due to the presence of water
	Water *int64 `json:"water,omitempty"`
}

type GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON struct {
	// Counts of sensor alerts over the timespan, by reading metric
	Counts *GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts `json:"counts,omitempty"`
	// End of the timespan over which sensor alerts are counted
	EndTs *time.Time `json:"endTs,omitempty"`
	// Start of the timespan over which sensor alerts are counted
	StartTs *time.Time `json:"startTs,omitempty"`
}

type GetNetworkSensorAlertsOverviewByMetricResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONObjects []GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON
}
