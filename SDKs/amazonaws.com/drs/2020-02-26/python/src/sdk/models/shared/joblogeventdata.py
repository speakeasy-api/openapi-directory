"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conversionproperties as shared_conversionproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobLogEventData:
    r"""Metadata associated with a Job log."""
    
    conversion_properties: Optional[shared_conversionproperties.ConversionProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversionProperties'), 'exclude': lambda f: f is None }})  
    conversion_server_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversionServerID'), 'exclude': lambda f: f is None }})  
    raw_error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rawError'), 'exclude': lambda f: f is None }})  
    source_server_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceServerID'), 'exclude': lambda f: f is None }})  
    target_instance_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetInstanceID'), 'exclude': lambda f: f is None }})  
    