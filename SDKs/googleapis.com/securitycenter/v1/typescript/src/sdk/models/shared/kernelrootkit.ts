/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Kernel mode rootkit signatures.
 */
export class KernelRootkit extends SpeakeasyBase {
  /**
   * Rootkit name when available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * True when unexpected modifications of kernel code memory are present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedCodeModification" })
  unexpectedCodeModification?: boolean;

  /**
   * True when `ftrace` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedFtraceHandler" })
  unexpectedFtraceHandler?: boolean;

  /**
   * True when interrupt handlers that are are not in the expected kernel or module code regions are present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedInterruptHandler" })
  unexpectedInterruptHandler?: boolean;

  /**
   * True when kernel code pages that are not in the expected kernel or module code regions are present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedKernelCodePages" })
  unexpectedKernelCodePages?: boolean;

  /**
   * True when `kprobe` points are present with callbacks pointing to regions that are not in the expected kernel or module code range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedKprobeHandler" })
  unexpectedKprobeHandler?: boolean;

  /**
   * True when unexpected processes in the scheduler run queue are present. Such processes are in the run queue, but not in the process task list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedProcessesInRunqueue" })
  unexpectedProcessesInRunqueue?: boolean;

  /**
   * True when unexpected modifications of kernel read-only data memory are present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedReadOnlyDataModification" })
  unexpectedReadOnlyDataModification?: boolean;

  /**
   * True when system call handlers that are are not in the expected kernel or module code regions are present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unexpectedSystemCallHandler" })
  unexpectedSystemCallHandler?: boolean;
}
