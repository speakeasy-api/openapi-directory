/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LogsConfig } from "./logsconfig";
import { ProjectArtifacts } from "./projectartifacts";
import { ProjectBuildBatchConfig } from "./projectbuildbatchconfig";
import { ProjectCache } from "./projectcache";
import { ProjectEnvironment } from "./projectenvironment";
import { ProjectFileSystemLocation } from "./projectfilesystemlocation";
import { ProjectSource } from "./projectsource";
import { ProjectSourceVersion } from "./projectsourceversion";
import { Tag } from "./tag";
import { VpcConfig } from "./vpcconfig";
import { Expose, Type } from "class-transformer";

export class CreateProjectInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "artifacts" })
  @Type(() => ProjectArtifacts)
  artifacts: ProjectArtifacts;

  @SpeakeasyMetadata()
  @Expose({ name: "badgeEnabled" })
  badgeEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "buildBatchConfig" })
  @Type(() => ProjectBuildBatchConfig)
  buildBatchConfig?: ProjectBuildBatchConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "cache" })
  @Type(() => ProjectCache)
  cache?: ProjectCache;

  @SpeakeasyMetadata()
  @Expose({ name: "concurrentBuildLimit" })
  concurrentBuildLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "encryptionKey" })
  encryptionKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  @Type(() => ProjectEnvironment)
  environment: ProjectEnvironment;

  @SpeakeasyMetadata({ elemType: ProjectFileSystemLocation })
  @Expose({ name: "fileSystemLocations" })
  @Type(() => ProjectFileSystemLocation)
  fileSystemLocations?: ProjectFileSystemLocation[];

  @SpeakeasyMetadata()
  @Expose({ name: "logsConfig" })
  @Type(() => LogsConfig)
  logsConfig?: LogsConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "queuedTimeoutInMinutes" })
  queuedTimeoutInMinutes?: number;

  @SpeakeasyMetadata({ elemType: ProjectArtifacts })
  @Expose({ name: "secondaryArtifacts" })
  @Type(() => ProjectArtifacts)
  secondaryArtifacts?: ProjectArtifacts[];

  @SpeakeasyMetadata({ elemType: ProjectSourceVersion })
  @Expose({ name: "secondarySourceVersions" })
  @Type(() => ProjectSourceVersion)
  secondarySourceVersions?: ProjectSourceVersion[];

  @SpeakeasyMetadata({ elemType: ProjectSource })
  @Expose({ name: "secondarySources" })
  @Type(() => ProjectSource)
  secondarySources?: ProjectSource[];

  @SpeakeasyMetadata()
  @Expose({ name: "serviceRole" })
  serviceRole: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => ProjectSource)
  source: ProjectSource;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceVersion" })
  sourceVersion?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutInMinutes" })
  timeoutInMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vpcConfig" })
  @Type(() => VpcConfig)
  vpcConfig?: VpcConfig;
}
