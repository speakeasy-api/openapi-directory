/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Provides summary information for aggregated utterances. The <code>ListAggregatedUtterances</code> operations combines all instances of the same utterance into a single aggregated summary.
 */
export class AggregatedUtterancesSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "containsDataFromDeletedResources" })
  containsDataFromDeletedResources?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "hitCount" })
  hitCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "missedCount" })
  missedCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "utterance" })
  utterance?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "utteranceFirstRecordedInAggregationDuration" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  utteranceFirstRecordedInAggregationDuration?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "utteranceLastRecordedInAggregationDuration" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  utteranceLastRecordedInAggregationDuration?: Date;
}
