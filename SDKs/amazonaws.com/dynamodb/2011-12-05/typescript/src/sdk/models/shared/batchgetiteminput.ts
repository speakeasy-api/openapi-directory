/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { KeysAndAttributes } from "./keysandattributes";
import { Expose, Transform } from "class-transformer";

export class BatchGetItemInput extends SpeakeasyBase {
  /**
   * A map of the table name and corresponding items to get by primary key. While requesting items, each table name can be invoked only once per operation.
   */
  @SpeakeasyMetadata({ elemType: KeysAndAttributes })
  @Expose({ name: "RequestItems" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, KeysAndAttributes> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], KeysAndAttributes);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  requestItems: Record<string, KeysAndAttributes>;
}
