/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClusterSelector } from "./clusterselector";
import { ManagedCluster, ManagedClusterInput } from "./managedcluster";
import { Expose, Type } from "class-transformer";

/**
 * Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
 */
export class WorkflowTemplatePlacementInput extends SpeakeasyBase {
  /**
   * A selector that chooses target cluster for jobs based on metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterSelector" })
  @Type(() => ClusterSelector)
  clusterSelector?: ClusterSelector;

  /**
   * Cluster that is managed by the workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "managedCluster" })
  @Type(() => ManagedClusterInput)
  managedCluster?: ManagedClusterInput;
}

/**
 * Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
 */
export class WorkflowTemplatePlacement extends SpeakeasyBase {
  /**
   * A selector that chooses target cluster for jobs based on metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterSelector" })
  @Type(() => ClusterSelector)
  clusterSelector?: ClusterSelector;

  /**
   * Cluster that is managed by the workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "managedCluster" })
  @Type(() => ManagedCluster)
  managedCluster?: ManagedCluster;
}
