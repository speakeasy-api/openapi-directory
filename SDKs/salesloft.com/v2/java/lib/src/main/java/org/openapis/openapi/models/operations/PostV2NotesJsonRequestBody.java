/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostV2NotesJsonRequestBody {
    /**
     * ID of the item with which the note is associated
     */
    @SpeakeasyMetadata("form:name=associated_with_id")
    public Long associatedWithId;
    public PostV2NotesJsonRequestBody withAssociatedWithId(Long associatedWithId) {
        this.associatedWithId = associatedWithId;
        return this;
    }
    
    /**
     * Case insensitive type of item with which the note is associated.  Value must be one of: person, account
     */
    @SpeakeasyMetadata("form:name=associated_with_type")
    public String associatedWithType;
    public PostV2NotesJsonRequestBody withAssociatedWithType(String associatedWithType) {
        this.associatedWithType = associatedWithType;
        return this;
    }
    
    /**
     * ID of the call with which the note is associated. The call cannot already have a note
     */
    @SpeakeasyMetadata("form:name=call_id")
    public Long callId;
    public PostV2NotesJsonRequestBody withCallId(Long callId) {
        this.callId = callId;
        return this;
    }
    
    /**
     * The content of the note
     */
    @SpeakeasyMetadata("form:name=content")
    public String content;
    public PostV2NotesJsonRequestBody withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * Boolean indicating if the CRM sync should be skipped.  No syncing will occur if true
     */
    @SpeakeasyMetadata("form:name=skip_crm_sync")
    public Boolean skipCrmSync;
    public PostV2NotesJsonRequestBody withSkipCrmSync(Boolean skipCrmSync) {
        this.skipCrmSync = skipCrmSync;
        return this;
    }
    
    /**
     * The subject of the note's crm activity, defaults to 'Note'
     */
    @SpeakeasyMetadata("form:name=subject")
    public String subject;
    public PostV2NotesJsonRequestBody withSubject(String subject) {
        this.subject = subject;
        return this;
    }
    
    /**
     * The user to create the note for. Only team admins may create notes on behalf of other users. Defaults to the requesting user
     */
    @SpeakeasyMetadata("form:name=user_guid")
    public String userGuid;
    public PostV2NotesJsonRequestBody withUserGuid(String userGuid) {
        this.userGuid = userGuid;
        return this;
    }
    
}
