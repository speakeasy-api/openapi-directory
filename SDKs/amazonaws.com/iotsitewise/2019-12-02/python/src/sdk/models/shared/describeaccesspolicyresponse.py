"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import identity as shared_identity
from ..shared import permission_enum as shared_permission_enum
from ..shared import resource as shared_resource
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeAccessPolicyResponse:
    r"""Success"""
    
    access_policy_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessPolicyArn') }})  
    access_policy_creation_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessPolicyCreationDate'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    access_policy_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessPolicyId') }})  
    access_policy_identity: shared_identity.Identity = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessPolicyIdentity') }})  
    access_policy_last_update_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessPolicyLastUpdateDate'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    access_policy_permission: shared_permission_enum.PermissionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessPolicyPermission') }})  
    access_policy_resource: shared_resource.Resource = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessPolicyResource') }})  
    