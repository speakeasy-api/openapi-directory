<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ServerLaunchConfiguration - Launch configuration for a server.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ServerLaunchConfiguration
{
	#[\JMS\Serializer\Annotation\SerializedName('associatePublicIpAddress')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $associatePublicIpAddress = null;
    
    /**
     * Location of an Amazon S3 object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\S3Location $configureScript
     */
	#[\JMS\Serializer\Annotation\SerializedName('configureScript')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\S3Location')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?S3Location $configureScript = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('configureScriptType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScriptTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScriptTypeEnum $configureScriptType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ec2KeyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ec2KeyName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('iamInstanceProfileName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iamInstanceProfileName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('instanceType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('logicalId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logicalId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('securityGroup')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $securityGroup = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('server')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Server')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Server $server = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('subnet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnet = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('userData')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserData $userData = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vpc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vpc = null;
    
	public function __construct()
	{
		$this->associatePublicIpAddress = null;
		$this->configureScript = null;
		$this->configureScriptType = null;
		$this->ec2KeyName = null;
		$this->iamInstanceProfileName = null;
		$this->instanceType = null;
		$this->logicalId = null;
		$this->securityGroup = null;
		$this->server = null;
		$this->subnet = null;
		$this->userData = null;
		$this->vpc = null;
	}
}
