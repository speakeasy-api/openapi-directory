"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeVpcsResult = exports.DescribeVpcsResultVpcs = exports.DescribeVpcsResultVpcsTags = exports.DescribeVpcsResultVpcsStateEnum = exports.DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet = exports.DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState = exports.DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = exports.DescribeVpcsResultVpcsInstanceTenancyEnum = exports.DescribeVpcsResultVpcsCidrBlockAssociationSet = exports.DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState = exports.DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The state of the CIDR block.
 */
var DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum;
(function (DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum) {
    DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum["Associating"] = "associating";
    DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum["Associated"] = "associated";
    DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum["Disassociating"] = "disassociating";
    DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum["Disassociated"] = "disassociated";
    DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum["Failing"] = "failing";
    DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum["Failed"] = "failed";
})(DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum = exports.DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum || (exports.DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockStateStateEnum = {}));
/**
 * Information about the state of the CIDR block.
 */
var DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState = /** @class */ (function (_super) {
    __extends(DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState, _super);
    function DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState.prototype, "statusMessage", void 0);
    return DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState;
}(utils_1.SpeakeasyBase));
exports.DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState = DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState;
/**
 * Describes an IPv4 CIDR block associated with a VPC.
 */
var DescribeVpcsResultVpcsCidrBlockAssociationSet = /** @class */ (function (_super) {
    __extends(DescribeVpcsResultVpcsCidrBlockAssociationSet, _super);
    function DescribeVpcsResultVpcsCidrBlockAssociationSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsCidrBlockAssociationSet.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsCidrBlockAssociationSet.prototype, "cidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeVpcsResultVpcsCidrBlockAssociationSetCidrBlockState)
    ], DescribeVpcsResultVpcsCidrBlockAssociationSet.prototype, "cidrBlockState", void 0);
    return DescribeVpcsResultVpcsCidrBlockAssociationSet;
}(utils_1.SpeakeasyBase));
exports.DescribeVpcsResultVpcsCidrBlockAssociationSet = DescribeVpcsResultVpcsCidrBlockAssociationSet;
/**
 * The allowed tenancy of instances launched into the VPC.
 */
var DescribeVpcsResultVpcsInstanceTenancyEnum;
(function (DescribeVpcsResultVpcsInstanceTenancyEnum) {
    DescribeVpcsResultVpcsInstanceTenancyEnum["Default"] = "default";
    DescribeVpcsResultVpcsInstanceTenancyEnum["Dedicated"] = "dedicated";
    DescribeVpcsResultVpcsInstanceTenancyEnum["Host"] = "host";
})(DescribeVpcsResultVpcsInstanceTenancyEnum = exports.DescribeVpcsResultVpcsInstanceTenancyEnum || (exports.DescribeVpcsResultVpcsInstanceTenancyEnum = {}));
/**
 * The state of the CIDR block.
 */
var DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum;
(function (DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum) {
    DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Associating"] = "associating";
    DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Associated"] = "associated";
    DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Disassociating"] = "disassociating";
    DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Disassociated"] = "disassociated";
    DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Failing"] = "failing";
    DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum["Failed"] = "failed";
})(DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = exports.DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum || (exports.DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum = {}));
/**
 * Information about the state of the CIDR block.
 */
var DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState = /** @class */ (function (_super) {
    __extends(DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState, _super);
    function DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState.prototype, "statusMessage", void 0);
    return DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState;
}(utils_1.SpeakeasyBase));
exports.DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState = DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState;
/**
 * Describes an IPv6 CIDR block associated with a VPC.
 */
var DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet = /** @class */ (function (_super) {
    __extends(DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet, _super);
    function DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet.prototype, "associationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet.prototype, "ipv6CidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeVpcsResultVpcsIpv6CidrBlockAssociationSetIpv6CidrBlockState)
    ], DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet.prototype, "ipv6CidrBlockState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet.prototype, "ipv6Pool", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet.prototype, "networkBorderGroup", void 0);
    return DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet;
}(utils_1.SpeakeasyBase));
exports.DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet = DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet;
/**
 * The current state of the VPC.
 */
var DescribeVpcsResultVpcsStateEnum;
(function (DescribeVpcsResultVpcsStateEnum) {
    DescribeVpcsResultVpcsStateEnum["Pending"] = "pending";
    DescribeVpcsResultVpcsStateEnum["Available"] = "available";
})(DescribeVpcsResultVpcsStateEnum = exports.DescribeVpcsResultVpcsStateEnum || (exports.DescribeVpcsResultVpcsStateEnum = {}));
/**
 * Describes a tag.
 */
var DescribeVpcsResultVpcsTags = /** @class */ (function (_super) {
    __extends(DescribeVpcsResultVpcsTags, _super);
    function DescribeVpcsResultVpcsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcsTags.prototype, "value", void 0);
    return DescribeVpcsResultVpcsTags;
}(utils_1.SpeakeasyBase));
exports.DescribeVpcsResultVpcsTags = DescribeVpcsResultVpcsTags;
/**
 * Describes a VPC.
 */
var DescribeVpcsResultVpcs = /** @class */ (function (_super) {
    __extends(DescribeVpcsResultVpcs, _super);
    function DescribeVpcsResultVpcs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcs.prototype, "cidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeVpcsResultVpcsCidrBlockAssociationSet,
        }),
        __metadata("design:type", Array)
    ], DescribeVpcsResultVpcs.prototype, "cidrBlockAssociationSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcs.prototype, "dhcpOptionsId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcs.prototype, "instanceTenancy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeVpcsResultVpcsIpv6CidrBlockAssociationSet,
        }),
        __metadata("design:type", Array)
    ], DescribeVpcsResultVpcs.prototype, "ipv6CidrBlockAssociationSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeVpcsResultVpcs.prototype, "isDefault", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcs.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcs.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeVpcsResultVpcsTags }),
        __metadata("design:type", Array)
    ], DescribeVpcsResultVpcs.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResultVpcs.prototype, "vpcId", void 0);
    return DescribeVpcsResultVpcs;
}(utils_1.SpeakeasyBase));
exports.DescribeVpcsResultVpcs = DescribeVpcsResultVpcs;
/**
 * Success
 */
var DescribeVpcsResult = /** @class */ (function (_super) {
    __extends(DescribeVpcsResult, _super);
    function DescribeVpcsResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeVpcsResult.prototype, "nextToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeVpcsResultVpcs }),
        __metadata("design:type", Array)
    ], DescribeVpcsResult.prototype, "vpcs", void 0);
    return DescribeVpcsResult;
}(utils_1.SpeakeasyBase));
exports.DescribeVpcsResult = DescribeVpcsResult;
