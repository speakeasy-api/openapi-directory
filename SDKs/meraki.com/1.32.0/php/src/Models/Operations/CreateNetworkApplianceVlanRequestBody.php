<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateNetworkApplianceVlanRequestBody
{
    /**
     * The local IP of the appliance on the VLAN
     * 
     * @var ?string $applianceIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('applianceIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $applianceIp = null;
    
    /**
     * CIDR of the pool of subnets. Applicable only for template network. Each network bound to the template will automatically pick a subnet from this pool to build its own VLAN.
     * 
     * @var ?string $cidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('cidr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cidr = null;
    
    /**
     * The id of the desired group policy to apply to the VLAN
     * 
     * @var ?string $groupPolicyId
     */
	#[\JMS\Serializer\Annotation\SerializedName('groupPolicyId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $groupPolicyId = null;
    
    /**
     * The VLAN ID of the new VLAN (must be between 1 and 4094)
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * IPv6 configuration on the VLAN
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkApplianceVlanRequestBodyIpv6 $ipv6
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv6')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateNetworkApplianceVlanRequestBodyIpv6')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkApplianceVlanRequestBodyIpv6 $ipv6 = null;
    
    /**
     * Mandatory DHCP will enforce that clients connecting to this VLAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkApplianceVlanRequestBodyMandatoryDhcp $mandatoryDhcp
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandatoryDhcp')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateNetworkApplianceVlanRequestBodyMandatoryDhcp')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkApplianceVlanRequestBodyMandatoryDhcp $mandatoryDhcp = null;
    
    /**
     * Mask used for the subnet of all bound to the template networks. Applicable only for template network.
     * 
     * @var ?int $mask
     */
	#[\JMS\Serializer\Annotation\SerializedName('mask')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $mask = null;
    
    /**
     * The name of the new VLAN
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The subnet of the VLAN
     * 
     * @var ?string $subnet
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnet = null;
    
    /**
     * Type of subnetting of the VLAN. Applicable only for template network.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkApplianceVlanRequestBodyTemplateVlanTypeEnum $templateVlanType
     */
	#[\JMS\Serializer\Annotation\SerializedName('templateVlanType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateNetworkApplianceVlanRequestBodyTemplateVlanTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkApplianceVlanRequestBodyTemplateVlanTypeEnum $templateVlanType = null;
    
	public function __construct()
	{
		$this->applianceIp = null;
		$this->cidr = null;
		$this->groupPolicyId = null;
		$this->id = "";
		$this->ipv6 = null;
		$this->mandatoryDhcp = null;
		$this->mask = null;
		$this->name = "";
		$this->subnet = null;
		$this->templateVlanType = null;
	}
}
