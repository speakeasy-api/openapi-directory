"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import pipetargetbatchjobparameters as shared_pipetargetbatchjobparameters
from ..shared import pipetargetcloudwatchlogsparameters as shared_pipetargetcloudwatchlogsparameters
from ..shared import pipetargetecstaskparameters as shared_pipetargetecstaskparameters
from ..shared import pipetargeteventbridgeeventbusparameters as shared_pipetargeteventbridgeeventbusparameters
from ..shared import pipetargethttpparameters as shared_pipetargethttpparameters
from ..shared import pipetargetkinesisstreamparameters as shared_pipetargetkinesisstreamparameters
from ..shared import pipetargetlambdafunctionparameters as shared_pipetargetlambdafunctionparameters
from ..shared import pipetargetredshiftdataparameters as shared_pipetargetredshiftdataparameters
from ..shared import pipetargetsagemakerpipelineparameters as shared_pipetargetsagemakerpipelineparameters
from ..shared import pipetargetsqsqueueparameters as shared_pipetargetsqsqueueparameters
from ..shared import pipetargetstatemachineparameters as shared_pipetargetstatemachineparameters
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PipeTargetParameters:
    r"""The parameters required to set up a target for your pipe."""
    
    batch_job_parameters: Optional[shared_pipetargetbatchjobparameters.PipeTargetBatchJobParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchJobParameters'), 'exclude': lambda f: f is None }})  
    cloud_watch_logs_parameters: Optional[shared_pipetargetcloudwatchlogsparameters.PipeTargetCloudWatchLogsParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudWatchLogsParameters'), 'exclude': lambda f: f is None }})  
    ecs_task_parameters: Optional[shared_pipetargetecstaskparameters.PipeTargetEcsTaskParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EcsTaskParameters'), 'exclude': lambda f: f is None }})  
    event_bridge_event_bus_parameters: Optional[shared_pipetargeteventbridgeeventbusparameters.PipeTargetEventBridgeEventBusParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EventBridgeEventBusParameters'), 'exclude': lambda f: f is None }})  
    http_parameters: Optional[shared_pipetargethttpparameters.PipeTargetHTTPParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpParameters'), 'exclude': lambda f: f is None }})  
    input_template: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputTemplate'), 'exclude': lambda f: f is None }})  
    kinesis_stream_parameters: Optional[shared_pipetargetkinesisstreamparameters.PipeTargetKinesisStreamParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisStreamParameters'), 'exclude': lambda f: f is None }})  
    lambda_function_parameters: Optional[shared_pipetargetlambdafunctionparameters.PipeTargetLambdaFunctionParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LambdaFunctionParameters'), 'exclude': lambda f: f is None }})  
    redshift_data_parameters: Optional[shared_pipetargetredshiftdataparameters.PipeTargetRedshiftDataParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RedshiftDataParameters'), 'exclude': lambda f: f is None }})  
    sage_maker_pipeline_parameters: Optional[shared_pipetargetsagemakerpipelineparameters.PipeTargetSageMakerPipelineParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SageMakerPipelineParameters'), 'exclude': lambda f: f is None }})  
    sqs_queue_parameters: Optional[shared_pipetargetsqsqueueparameters.PipeTargetSqsQueueParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqsQueueParameters'), 'exclude': lambda f: f is None }})  
    step_function_state_machine_parameters: Optional[shared_pipetargetstatemachineparameters.PipeTargetStateMachineParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StepFunctionStateMachineParameters'), 'exclude': lambda f: f is None }})  
    