"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class UsersUpdateOrgRoleSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    
class UsersUpdateOrgRoleRequestBodyRoleEnum(str, Enum):
    r"""The user's role in the organizatiion"""
    ADMIN = 'admin'
    COLLABORATOR = 'collaborator'
    MEMBER = 'member'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsersUpdateOrgRoleRequestBody:
    
    role: Optional[UsersUpdateOrgRoleRequestBodyRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""The user's role in the organizatiion"""  
    

@dataclasses.dataclass
class UsersUpdateOrgRoleRequest:
    
    org_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org_name', 'style': 'simple', 'explode': False }})
    r"""The organization's name"""  
    request_body: UsersUpdateOrgRoleRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    user_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'user_name', 'style': 'simple', 'explode': False }})
    r"""The slug name of the user"""  
    
class UsersUpdateOrgRoleDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsersUpdateOrgRoleDefaultApplicationJSONError:
    
    code: UsersUpdateOrgRoleDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsersUpdateOrgRoleDefaultApplicationJSON:
    r"""Error"""
    
    error: UsersUpdateOrgRoleDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsersUpdateOrgRole200ApplicationJSON:
    r"""Success"""
    
    display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name') }})
    r"""The full name of the user. Might for example be first and last name"""  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""The email address of the user"""  
    joined_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('joined_at') }})
    r"""The date when the user joined the organization"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The unique name that is used to identify the user."""  
    role: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role') }})
    r"""The role the user has within the organization"""  
    

@dataclasses.dataclass
class UsersUpdateOrgRoleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    users_update_org_role_200_application_json_object: Optional[UsersUpdateOrgRole200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    users_update_org_role_default_application_json_object: Optional[UsersUpdateOrgRoleDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    