"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SynonymEntity = exports.SynonymEntitySourceTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The type of the entity for which the synonym is being created (usually a table or a sequence).
 */
var SynonymEntitySourceTypeEnum;
(function (SynonymEntitySourceTypeEnum) {
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeUnspecified"] = "DATABASE_ENTITY_TYPE_UNSPECIFIED";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeSchema"] = "DATABASE_ENTITY_TYPE_SCHEMA";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeTable"] = "DATABASE_ENTITY_TYPE_TABLE";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeColumn"] = "DATABASE_ENTITY_TYPE_COLUMN";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeConstraint"] = "DATABASE_ENTITY_TYPE_CONSTRAINT";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeIndex"] = "DATABASE_ENTITY_TYPE_INDEX";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeTrigger"] = "DATABASE_ENTITY_TYPE_TRIGGER";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeView"] = "DATABASE_ENTITY_TYPE_VIEW";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeSequence"] = "DATABASE_ENTITY_TYPE_SEQUENCE";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeStoredProcedure"] = "DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeFunction"] = "DATABASE_ENTITY_TYPE_FUNCTION";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeSynonym"] = "DATABASE_ENTITY_TYPE_SYNONYM";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeDatabasePackage"] = "DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeUdt"] = "DATABASE_ENTITY_TYPE_UDT";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeMaterialView"] = "DATABASE_ENTITY_TYPE_MATERIAL_VIEW";
    SynonymEntitySourceTypeEnum["DatabaseEntityTypeDatabase"] = "DATABASE_ENTITY_TYPE_DATABASE";
})(SynonymEntitySourceTypeEnum = exports.SynonymEntitySourceTypeEnum || (exports.SynonymEntitySourceTypeEnum = {}));
/**
 * Synonym's parent is a schema.
 */
var SynonymEntity = /** @class */ (function (_super) {
    __extends(SynonymEntity, _super);
    function SynonymEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customFeatures" }),
        __metadata("design:type", Object)
    ], SynonymEntity.prototype, "customFeatures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceEntity" }),
        __metadata("design:type", String)
    ], SynonymEntity.prototype, "sourceEntity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceType" }),
        __metadata("design:type", String)
    ], SynonymEntity.prototype, "sourceType", void 0);
    return SynonymEntity;
}(utils_1.SpeakeasyBase));
exports.SynonymEntity = SynonymEntity;
