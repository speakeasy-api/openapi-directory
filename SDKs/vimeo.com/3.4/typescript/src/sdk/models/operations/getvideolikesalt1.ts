/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The sort direction of the results.
 */
export enum GetVideoLikesAlt1DirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * The way to sort the results.
 */
export enum GetVideoLikesAlt1SortEnum {
  Alphabetical = "alphabetical",
  Date = "date",
}

export class GetVideoLikesAlt1Request extends SpeakeasyBase {
  /**
   * The ID of the channel.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=channel_id",
  })
  channelId: number;

  /**
   * The sort direction of the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: GetVideoLikesAlt1DirectionEnum;

  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The way to sort the results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetVideoLikesAlt1SortEnum;

  /**
   * The ID of the video.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=video_id",
  })
  videoId: number;
}

export class GetVideoLikesAlt1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The users were returned.
   */
  @SpeakeasyMetadata({ elemType: shared.User })
  users?: shared.User[];
}
