// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceStateEnum - Output only. The current state of the instance.
type InstanceStateEnum string

const (
	InstanceStateEnumStateNotKnown InstanceStateEnum = "STATE_NOT_KNOWN"
	InstanceStateEnumReady         InstanceStateEnum = "READY"
	InstanceStateEnumCreating      InstanceStateEnum = "CREATING"
)

func (e *InstanceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_NOT_KNOWN":
		fallthrough
	case "READY":
		fallthrough
	case "CREATING":
		*e = InstanceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceStateEnum: %s", s)
	}
}

// InstanceTypeEnum - The type of the instance. Defaults to `PRODUCTION`.
type InstanceTypeEnum string

const (
	InstanceTypeEnumTypeUnspecified InstanceTypeEnum = "TYPE_UNSPECIFIED"
	InstanceTypeEnumProduction      InstanceTypeEnum = "PRODUCTION"
	InstanceTypeEnumDevelopment     InstanceTypeEnum = "DEVELOPMENT"
)

func (e *InstanceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "PRODUCTION":
		fallthrough
	case "DEVELOPMENT":
		*e = InstanceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceTypeEnum: %s", s)
	}
}

// Instance - A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.
type Instance struct {
	// Output only. A commit timestamp representing when this Instance was created. For instances created before this field was added (August 2021), this value is `seconds: 0, nanos: 1`.
	CreateTime *string `json:"createTime,omitempty"`
	// Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion.
	DisplayName *string `json:"displayName,omitempty"`
	// Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\p{Ll}\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.
	Labels map[string]string `json:"labels,omitempty"`
	// The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.
	Name *string `json:"name,omitempty"`
	// Output only. Reserved for future use.
	SatisfiesPzs *bool `json:"satisfiesPzs,omitempty"`
	// Output only. The current state of the instance.
	State *InstanceStateEnum `json:"state,omitempty"`
	// The type of the instance. Defaults to `PRODUCTION`.
	Type *InstanceTypeEnum `json:"type,omitempty"`
}

// InstanceInput - A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.
type InstanceInput struct {
	// Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion.
	DisplayName *string `json:"displayName,omitempty"`
	// Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\p{Ll}\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\p{Ll}\p{Lo}\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes.
	Labels map[string]string `json:"labels,omitempty"`
	// The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.
	Name *string `json:"name,omitempty"`
	// The type of the instance. Defaults to `PRODUCTION`.
	Type *InstanceTypeEnum `json:"type,omitempty"`
}
