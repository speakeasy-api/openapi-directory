/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class Streamingbuffer extends SpeakeasyBase {
  /**
   * [Output-only] A lower-bound estimate of the number of bytes currently in the streaming buffer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "estimatedBytes" })
  estimatedBytes?: string;

  /**
   * [Output-only] A lower-bound estimate of the number of rows currently in the streaming buffer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "estimatedRows" })
  estimatedRows?: string;

  /**
   * [Output-only] Contains the timestamp of the oldest entry in the streaming buffer, in milliseconds since the epoch, if the streaming buffer is available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oldestEntryTime" })
  oldestEntryTime?: string;
}
