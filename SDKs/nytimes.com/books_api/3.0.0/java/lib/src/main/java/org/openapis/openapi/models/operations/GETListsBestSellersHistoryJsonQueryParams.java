/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETListsBestSellersHistoryJsonQueryParams {
    /**
     * The target age group for the best seller.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=age-group")
    public String ageGroup;
    public GETListsBestSellersHistoryJsonQueryParams withAgeGroup(String ageGroup) {
        this.ageGroup = ageGroup;
        return this;
    }
    
    /**
     * The author of the best seller. The author field does not include additional contributors (see Data Structure for more details about the author and contributor fields).
     * 
     * When searching the author field, you can specify any combination of first, middle and last names.
     * 
     * When sort-by is set to author, the results will be sorted by author's first name. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=author")
    public String author;
    public GETListsBestSellersHistoryJsonQueryParams withAuthor(String author) {
        this.author = author;
        return this;
    }
    
    /**
     * The author of the best seller, as well as other contributors such as the illustrator (to search or sort by author name only, use author instead).
     * 
     * When searching, you can specify any combination of first, middle and last names of any of the contributors.
     * 
     * When sort-by is set to contributor, the results will be sorted by the first name of the first contributor listed. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=contributor")
    public String contributor;
    public GETListsBestSellersHistoryJsonQueryParams withContributor(String contributor) {
        this.contributor = contributor;
        return this;
    }
    
    /**
     * International Standard Book Number, 10 or 13 digits
     * 
     * A best seller may have both 10-digit and 13-digit ISBNs, and may have multiple ISBNs of each type. To search on multiple ISBNs, separate the ISBNs with semicolons (example: 9780446579933;0061374229).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=isbn")
    public String isbn;
    public GETListsBestSellersHistoryJsonQueryParams withIsbn(String isbn) {
        this.isbn = isbn;
        return this;
    }
    
    /**
     * The publisher's list price of the best seller, including decimal point
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=price")
    public String price;
    public GETListsBestSellersHistoryJsonQueryParams withPrice(String price) {
        this.price = price;
        return this;
    }
    
    /**
     * The standardized name of the publisher
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=publisher")
    public String publisher;
    public GETListsBestSellersHistoryJsonQueryParams withPublisher(String publisher) {
        this.publisher = publisher;
        return this;
    }
    
    /**
     * The title of the best seller
     * 
     * When searching, you can specify a portion of a title or a full title.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=title")
    public String title;
    public GETListsBestSellersHistoryJsonQueryParams withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
