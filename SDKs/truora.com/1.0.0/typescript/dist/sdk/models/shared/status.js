"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Status = exports.StatusStatusEnum = exports.StatusDataSetEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Background check dataset
 */
var StatusDataSetEnum;
(function (StatusDataSetEnum) {
    StatusDataSetEnum["AffiliationsAndInsurances"] = "affiliations_and_insurances";
    StatusDataSetEnum["AlertInMedia"] = "alert_in_media";
    StatusDataSetEnum["Behavior"] = "behavior";
    StatusDataSetEnum["BusinessBackground"] = "business_background";
    StatusDataSetEnum["CriminalRecord"] = "criminal_record";
    StatusDataSetEnum["DrivingLicenses"] = "driving_licenses";
    StatusDataSetEnum["InternationalBackground"] = "international_background";
    StatusDataSetEnum["LegalBackground"] = "legal_background";
    StatusDataSetEnum["PersonalIdentity"] = "personal_identity";
    StatusDataSetEnum["ProfessionalBackground"] = "professional_background";
    StatusDataSetEnum["TrafficFines"] = "traffic_fines";
    StatusDataSetEnum["VehicleInformation"] = "vehicle_information";
    StatusDataSetEnum["VehiclePermits"] = "vehicle_permits";
    StatusDataSetEnum["TaxesAndFinances"] = "taxes_and_finances";
})(StatusDataSetEnum = exports.StatusDataSetEnum || (exports.StatusDataSetEnum = {}));
/**
 * Result status of the background check. **Not_started** means the background check is still in queue, since there is a limit of background checks that can be processed simultaneously, **completed** means the search finished successfully, **error** means the search failed, **expired** means the search took too long to finish and therefore failed, **skipped** means the search failed because a wrong number or type of parameters was provided, **delayed** means the search is waiting for an additional requirement to be met and can last up to 3 days
 */
var StatusStatusEnum;
(function (StatusStatusEnum) {
    StatusStatusEnum["NotStarted"] = "not_started";
    StatusStatusEnum["Completed"] = "completed";
    StatusStatusEnum["Expired"] = "expired";
    StatusStatusEnum["Error"] = "error";
    StatusStatusEnum["Delayed"] = "delayed";
    StatusStatusEnum["Skipped"] = "skipped";
})(StatusStatusEnum = exports.StatusStatusEnum || (exports.StatusStatusEnum = {}));
/**
 * Represents the status of databases used to generate background checks
 */
var Status = /** @class */ (function (_super) {
    __extends(Status, _super);
    function Status() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data_set" }),
        __metadata("design:type", String)
    ], Status.prototype, "dataSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "database_id" }),
        __metadata("design:type", String)
    ], Status.prototype, "databaseId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "database_name" }),
        __metadata("design:type", String)
    ], Status.prototype, "databaseName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invalid_inputs" }),
        __metadata("design:type", Array)
    ], Status.prototype, "invalidInputs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Status.prototype, "status", void 0);
    return Status;
}(utils_1.SpeakeasyBase));
exports.Status = Status;
