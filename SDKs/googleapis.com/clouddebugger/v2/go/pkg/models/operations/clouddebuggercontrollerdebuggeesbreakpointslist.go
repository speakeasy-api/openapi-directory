// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ClouddebuggerControllerDebuggeesBreakpointsListSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ClouddebuggerControllerDebuggeesBreakpointsListSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ClouddebuggerControllerDebuggeesBreakpointsListSecurity struct {
	Option1 *ClouddebuggerControllerDebuggeesBreakpointsListSecurityOption1 `security:"option"`
	Option2 *ClouddebuggerControllerDebuggeesBreakpointsListSecurityOption2 `security:"option"`
}

type ClouddebuggerControllerDebuggeesBreakpointsListPathParams struct {
	// Required. Identifies the debuggee.
	DebuggeeID string `pathParam:"style=simple,explode=false,name=debuggeeId"`
}

type ClouddebuggerControllerDebuggeesBreakpointsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Identifies the agent. This is the ID returned in the RegisterDebuggee response.
	AgentID *string `queryParam:"style=form,explode=true,name=agentId"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// If set to `true` (recommended), returns `google.rpc.Code.OK` status and sets the `wait_expired` response field to `true` when the server-selected timeout has expired. If set to `false` (deprecated), returns `google.rpc.Code.ABORTED` status when the server-selected timeout has expired.
	SuccessOnTimeout *bool `queryParam:"style=form,explode=true,name=successOnTimeout"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// A token that, if specified, blocks the method call until the list of active breakpoints has changed, or a server-selected timeout has expired. The value should be set from the `next_wait_token` field in the last response. The initial value should be set to `"init"`.
	WaitToken *string `queryParam:"style=form,explode=true,name=waitToken"`
}

type ClouddebuggerControllerDebuggeesBreakpointsListRequest struct {
	PathParams  ClouddebuggerControllerDebuggeesBreakpointsListPathParams
	QueryParams ClouddebuggerControllerDebuggeesBreakpointsListQueryParams
	Security    ClouddebuggerControllerDebuggeesBreakpointsListSecurity
}

type ClouddebuggerControllerDebuggeesBreakpointsListResponse struct {
	ContentType string
	// Successful response
	ListActiveBreakpointsResponse *shared.ListActiveBreakpointsResponse
	StatusCode                    int
	RawResponse                   *http.Response
}
