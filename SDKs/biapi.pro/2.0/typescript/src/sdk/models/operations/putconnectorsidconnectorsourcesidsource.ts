/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PutConnectorsIdConnectorSourcesIdSourceRequestBody extends SpeakeasyBase {
  /**
   * the authentication mechanism to use for this connector source
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=auth_mechanism" })
  authMechanism?: string;

  /**
   * to enable or disable connector source
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=disabled" })
  disabled?: boolean;

  /**
   * list (json format) of capabilities this source will be disabled for
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=disabled_capabilities" })
  disabledCapabilities?: string;

  /**
   * to enable or disable the source (can only be edited by BI employees)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=unavailable" })
  unavailable?: boolean;

  /**
   * list (json format) of capabilities this source will be unavailable for
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=unavailable_capabilities" })
  unavailableCapabilities?: string;
}

export class PutConnectorsIdConnectorSourcesIdSourceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PutConnectorsIdConnectorSourcesIdSourceRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connector",
  })
  idConnector: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_source",
  })
  idSource: number;
}

export class PutConnectorsIdConnectorSourcesIdSourceResponse extends SpeakeasyBase {
  /**
   * Successful PUT on ConnectorSource resource
   */
  @SpeakeasyMetadata()
  connectorSource?: shared.ConnectorSource;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
