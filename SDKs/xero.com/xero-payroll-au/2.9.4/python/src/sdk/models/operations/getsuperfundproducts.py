"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apiexception as shared_apiexception
from ..shared import superfundproducts as shared_superfundproducts
from typing import Optional


@dataclasses.dataclass
class GetSuperfundProductsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetSuperfundProductsRequest:
    
    xero_tenant_id: str = dataclasses.field(metadata={'header': { 'field_name': 'Xero-Tenant-Id', 'style': 'simple', 'explode': False }})
    r"""Xero identifier for Tenant"""  
    abn: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ABN', 'style': 'form', 'explode': True }})
    r"""The ABN of the Regulated SuperFund"""  
    usi: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'USI', 'style': 'form', 'explode': True }})
    r"""The USI of the Regulated SuperFund"""  
    

@dataclasses.dataclass
class GetSuperfundProductsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_exception: Optional[shared_apiexception.APIException] = dataclasses.field(default=None)
    r"""validation error for a bad request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    super_fund_products: Optional[shared_superfundproducts.SuperFundProducts] = dataclasses.field(default=None)
    r"""search results matching criteria"""  
    