"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class GetNetworkBluetoothClientRequest:
    
    bluetooth_client_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'bluetoothClientId', 'style': 'simple', 'explode': False }})  
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    connectivity_history_timespan: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'connectivityHistoryTimespan', 'style': 'form', 'explode': True }})
    r"""The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."""  
    include_connectivity_history: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includeConnectivityHistory', 'style': 'form', 'explode': True }})
    r"""Include the connectivity history for this client"""  
    

@dataclasses.dataclass
class GetNetworkBluetoothClientResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_network_bluetooth_client_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    