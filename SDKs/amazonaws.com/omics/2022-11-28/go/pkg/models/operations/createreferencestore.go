// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateReferenceStoreRequestBodySseConfig - Server-side encryption (SSE) settings for a store.
type CreateReferenceStoreRequestBodySseConfig struct {
	KeyArn *string                    `json:"keyArn,omitempty"`
	Type   *shared.EncryptionTypeEnum `json:"type,omitempty"`
}

type CreateReferenceStoreRequestBody struct {
	// To ensure that requests don't run multiple times, specify a unique token for each request.
	ClientToken *string `json:"clientToken,omitempty"`
	// A description for the store.
	Description *string `json:"description,omitempty"`
	// A name for the store.
	Name string `json:"name"`
	// Server-side encryption (SSE) settings for a store.
	SseConfig *CreateReferenceStoreRequestBodySseConfig `json:"sseConfig,omitempty"`
	// Tags for the store.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateReferenceStoreRequest struct {
	RequestBody       CreateReferenceStoreRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateReferenceStoreResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateReferenceStoreResponse *shared.CreateReferenceStoreResponse
	// InternalServerException
	InternalServerException interface{}
	// RequestTimeoutException
	RequestTimeoutException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
