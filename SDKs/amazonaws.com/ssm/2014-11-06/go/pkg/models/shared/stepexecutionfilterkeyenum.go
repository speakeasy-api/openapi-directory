// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StepExecutionFilterKeyEnum string

const (
	StepExecutionFilterKeyEnumStartTimeBefore     StepExecutionFilterKeyEnum = "StartTimeBefore"
	StepExecutionFilterKeyEnumStartTimeAfter      StepExecutionFilterKeyEnum = "StartTimeAfter"
	StepExecutionFilterKeyEnumStepExecutionStatus StepExecutionFilterKeyEnum = "StepExecutionStatus"
	StepExecutionFilterKeyEnumStepExecutionID     StepExecutionFilterKeyEnum = "StepExecutionId"
	StepExecutionFilterKeyEnumStepName            StepExecutionFilterKeyEnum = "StepName"
	StepExecutionFilterKeyEnumAction              StepExecutionFilterKeyEnum = "Action"
)

func (e *StepExecutionFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "StartTimeBefore":
		fallthrough
	case "StartTimeAfter":
		fallthrough
	case "StepExecutionStatus":
		fallthrough
	case "StepExecutionId":
		fallthrough
	case "StepName":
		fallthrough
	case "Action":
		*e = StepExecutionFilterKeyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StepExecutionFilterKeyEnum: %s", s)
	}
}
