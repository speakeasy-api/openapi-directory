/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsWafRateBasedRuleMatchPredicate } from "./awswafratebasedrulematchpredicate";
import { Expose, Type } from "class-transformer";

/**
 * Details about a rate-based rule for global resources. A rate-based rule provides settings to indicate when to allow, block, or count a request. Rate-based rules include the number of requests that arrive over a specified period of time.
 */
export class AwsWafRateBasedRuleDetails extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AwsWafRateBasedRuleMatchPredicate })
  @Expose({ name: "MatchPredicates" })
  @Type(() => AwsWafRateBasedRuleMatchPredicate)
  matchPredicates?: AwsWafRateBasedRuleMatchPredicate[];

  @SpeakeasyMetadata()
  @Expose({ name: "MetricName" })
  metricName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RateKey" })
  rateKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RateLimit" })
  rateLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleId" })
  ruleId?: string;
}
