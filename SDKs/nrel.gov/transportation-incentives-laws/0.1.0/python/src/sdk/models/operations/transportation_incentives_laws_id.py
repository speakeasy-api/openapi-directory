"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class TransportationIncentivesLawsIDOutputFormatEnum(str, Enum):
    r"""Response format"""
    JSON = 'json'
    XML = 'xml'


@dataclasses.dataclass
class TransportationIncentivesLawsIDRequest:
    
    api_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""API Key"""  
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The id of the law that you are searching"""  
    output_format: TransportationIncentivesLawsIDOutputFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'output_format', 'style': 'simple', 'explode': False }})
    r"""Response format"""  
    expired: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expired', 'style': 'form', 'explode': True }})
    r"""The 'true' value returns a record no matter its status (current, expired, archived, or repealed). The default 'false' value returns only current laws and incentives."""  
    poc: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'poc', 'style': 'form', 'explode': True }})
    r"""Include points of contacts in the return value."""  
    

@dataclasses.dataclass
class TransportationIncentivesLawsIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    