/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateClientVpnRouteQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateClientVpnRouteActionEnum action;
    public GETCreateClientVpnRouteQueryParams withAction(GETCreateClientVpnRouteActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html"&gt;How to ensure idempotency&lt;/a&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientToken")
    public String clientToken;
    public GETCreateClientVpnRouteQueryParams withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The ID of the Client VPN endpoint to which to add the route.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientVpnEndpointId")
    public String clientVpnEndpointId;
    public GETCreateClientVpnRouteQueryParams withClientVpnEndpointId(String clientVpnEndpointId) {
        this.clientVpnEndpointId = clientVpnEndpointId;
        return this;
    }
    
    /**
     * A brief description of the route.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Description")
    public String description;
    public GETCreateClientVpnRouteQueryParams withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * &lt;p&gt;The IPv4 address range, in CIDR notation, of the route destination. For example:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;To add a route for Internet access, enter &lt;code&gt;0.0.0.0/0&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To add a route for a peered VPC, enter the peered VPC's IPv4 CIDR range&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To add a route for an on-premises network, enter the Amazon Web Services Site-to-Site VPN connection's IPv4 CIDR range&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To add a route for the local network, enter the client CIDR range&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DestinationCidrBlock")
    public String destinationCidrBlock;
    public GETCreateClientVpnRouteQueryParams withDestinationCidrBlock(String destinationCidrBlock) {
        this.destinationCidrBlock = destinationCidrBlock;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETCreateClientVpnRouteQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * &lt;p&gt;The ID of the subnet through which you want to route traffic. The specified subnet must be an existing target network of the Client VPN endpoint.&lt;/p&gt; &lt;p&gt;Alternatively, if you're adding a route for the local network, specify &lt;code&gt;local&lt;/code&gt;.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TargetVpcSubnetId")
    public String targetVpcSubnetId;
    public GETCreateClientVpnRouteQueryParams withTargetVpcSubnetId(String targetVpcSubnetId) {
        this.targetVpcSubnetId = targetVpcSubnetId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateClientVpnRouteVersionEnum version;
    public GETCreateClientVpnRouteQueryParams withVersion(GETCreateClientVpnRouteVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
