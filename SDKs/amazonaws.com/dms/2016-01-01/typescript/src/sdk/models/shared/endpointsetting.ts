/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EndpointSettingTypeValueEnum } from "./endpointsettingtypevalueenum";
import { Expose } from "class-transformer";

/**
 * Endpoint settings.
 */
export class EndpointSetting extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Applicability" })
  applicability?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultValue" })
  defaultValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EnumValues" })
  enumValues?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IntValueMax" })
  intValueMax?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "IntValueMin" })
  intValueMin?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Sensitive" })
  sensitive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: EndpointSettingTypeValueEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Units" })
  units?: string;
}
