/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Notification - Represents a notification of an event relevant to the user.
 * https://docs.joinmastodon.org/entities/notification/
 */
public class Notification {
    /**
     * Represents a user of Mastodon and their associated profile.
     * https://docs.joinmastodon.org/entities/account/
     */
    @JsonProperty("account")
    public Account account;

    public Notification withAccount(Account account) {
        this.account = account;
        return this;
    }
    
    /**
     * The timestamp of the notification. ISO 8601 Datetime.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public Notification withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The id of the notification in the database. Cast from an integer, but not guaranteed to be a number.
     */
    @JsonProperty("id")
    public String id;

    public Notification withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Represents a status posted by an account.
     * https://docs.joinmastodon.org/entities/status/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public Status status;

    public Notification withStatus(Status status) {
        this.status = status;
        return this;
    }
    
    /**
     * The type of event that resulted in the notification.
     */
    @JsonProperty("type")
    public NotificationTypeEnum type;

    public Notification withType(NotificationTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public Notification(@JsonProperty("account") Account account, @JsonProperty("created_at") OffsetDateTime createdAt, @JsonProperty("id") String id, @JsonProperty("type") NotificationTypeEnum type) {
        this.account = account;
        this.createdAt = createdAt;
        this.id = id;
        this.type = type;
  }
}
