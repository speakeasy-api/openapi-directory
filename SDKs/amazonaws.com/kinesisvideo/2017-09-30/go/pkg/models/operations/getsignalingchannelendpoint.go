// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSignalingChannelEndpointHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// GetSignalingChannelEndpointRequestBodySingleMasterChannelEndpointConfiguration - An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code> channel type.
type GetSignalingChannelEndpointRequestBodySingleMasterChannelEndpointConfiguration struct {
	Protocols []shared.ChannelProtocolEnum `json:"Protocols,omitempty"`
	Role      *shared.ChannelRoleEnum      `json:"Role,omitempty"`
}

type GetSignalingChannelEndpointRequestBody struct {
	// The Amazon Resource Name (ARN) of the signalling channel for which you want to get an endpoint.
	ChannelARN string `json:"ChannelARN"`
	// An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code> channel type.
	SingleMasterChannelEndpointConfiguration *GetSignalingChannelEndpointRequestBodySingleMasterChannelEndpointConfiguration `json:"SingleMasterChannelEndpointConfiguration,omitempty"`
}

type GetSignalingChannelEndpointRequest struct {
	Headers GetSignalingChannelEndpointHeaders
	Request GetSignalingChannelEndpointRequestBody `request:"mediaType=application/json"`
}

type GetSignalingChannelEndpointResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// Success
	GetSignalingChannelEndpointOutput *shared.GetSignalingChannelEndpointOutput
	// InvalidArgumentException
	InvalidArgumentException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
