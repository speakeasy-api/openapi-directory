/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetXpubV2Request {
    /**
     * Blockchain name
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=blockchain")
    public String blockchain;

    public GetXpubV2Request withBlockchain(String blockchain) {
        this.blockchain = blockchain;
        return this;
    }
    
    /**
     * specifies level of details returned by request
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=details")
    public org.openapis.openapi.models.shared.DetailsEnum details;

    public GetXpubV2Request withDetails(org.openapis.openapi.models.shared.DetailsEnum details) {
        this.details = details;
        return this;
    }
    
    /**
     * filter of the returned transactions from block height to block height (default no filter)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fromBlock")
    public Long fromBlock;

    public GetXpubV2Request withFromBlock(Long fromBlock) {
        this.fromBlock = fromBlock;
        return this;
    }
    
    /**
     * specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;

    public GetXpubV2Request withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * number of transactions returned by call (default and maximum 1000)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;

    public GetXpubV2Request withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * specifies secondary (fiat) currency in which the token and total balances are returned in addition to crypto values
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=secondary")
    public String secondary;

    public GetXpubV2Request withSecondary(String secondary) {
        this.secondary = secondary;
        return this;
    }
    
    /**
     * filter of the returned transactions from block height to block height (default no filter)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=toBlock")
    public Long toBlock;

    public GetXpubV2Request withToBlock(Long toBlock) {
        this.toBlock = toBlock;
        return this;
    }
    
    /**
     * specifies what tokens (xpub addresses) are returned by the request (default nonzero)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=tokens")
    public org.openapis.openapi.models.shared.TokensEnum tokens;

    public GetXpubV2Request withTokens(org.openapis.openapi.models.shared.TokensEnum tokens) {
        this.tokens = tokens;
        return this;
    }
    
    /**
     * xpub or output descriptor, applicable only for Bitcoin-type coins
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=xpub")
    public String xpub;

    public GetXpubV2Request withXpub(String xpub) {
        this.xpub = xpub;
        return this;
    }
    
    public GetXpubV2Request(@JsonProperty("blockchain") String blockchain, @JsonProperty("xpub") String xpub) {
        this.blockchain = blockchain;
        this.xpub = xpub;
  }
}
