/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The log level.
 */
export enum SetV2LoggingLevelRequestBodyLogLevelEnum {
  Debug = "DEBUG",
  Info = "INFO",
  Error = "ERROR",
  Warn = "WARN",
  Disabled = "DISABLED",
}

/**
 * A log target.
 */
export class SetV2LoggingLevelRequestBodyLogTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "targetName" })
  targetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetType" })
  targetType?: shared.LogTargetTypeEnum;
}

export class SetV2LoggingLevelRequestBody extends SpeakeasyBase {
  /**
   * The log level.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logLevel" })
  logLevel: SetV2LoggingLevelRequestBodyLogLevelEnum;

  /**
   * A log target.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logTarget" })
  @Type(() => SetV2LoggingLevelRequestBodyLogTarget)
  logTarget: SetV2LoggingLevelRequestBodyLogTarget;
}

export class SetV2LoggingLevelRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: SetV2LoggingLevelRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class SetV2LoggingLevelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalException
   */
  @SpeakeasyMetadata()
  internalException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  /**
   * NotConfiguredException
   */
  @SpeakeasyMetadata()
  notConfiguredException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;
}
