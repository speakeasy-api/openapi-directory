"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import actions_cache_usage_policy_for_repository as shared_actions_cache_usage_policy_for_repository
from typing import Optional


@dataclasses.dataclass
class ActionsSetActionsCacheUsagePolicyRequest:
    
    actions_cache_usage_policy_for_repository: shared_actions_cache_usage_policy_for_repository.ActionsCacheUsagePolicyForRepository = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    

@dataclasses.dataclass
class ActionsSetActionsCacheUsagePolicyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    