"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filemodetypeenum_enum as shared_filemodetypeenum_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutFileInput:
    
    branch_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branchName') }})  
    file_content: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileContent') }})  
    file_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filePath') }})  
    repository_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repositoryName') }})  
    commit_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitMessage'), 'exclude': lambda f: f is None }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})  
    file_mode: Optional[shared_filemodetypeenum_enum.FileModeTypeEnumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileMode'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    parent_commit_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentCommitId'), 'exclude': lambda f: f is None }})  
    