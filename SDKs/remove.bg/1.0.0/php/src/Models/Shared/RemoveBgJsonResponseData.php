<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class RemoveBgJsonResponseData
{
    /**
     * Height of the foreground image. In case the input image resolution is higher than the limit (> 25 megapixels) this value is expressed with respect to the input image resolution.
     * 
     * @var ?int $foregroundHeight
     */
	#[\JMS\Serializer\Annotation\SerializedName('foreground_height')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $foregroundHeight = null;
    
    /**
     * Left position of the foreground image along the horizontal axis. In case the input image resolution is higher than the limit (> 25 megapixels) this value is expressed with respect to the input image resolution.
     * 
     * @var ?int $foregroundLeft
     */
	#[\JMS\Serializer\Annotation\SerializedName('foreground_left')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $foregroundLeft = null;
    
    /**
     * Top position of the foreground image along the vertical axis. In case the input image resolution is higher than the limit (> 25 megapixels) this value is expressed with respect to the input image resolution.
     * 
     * @var ?int $foregroundTop
     */
	#[\JMS\Serializer\Annotation\SerializedName('foreground_top')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $foregroundTop = null;
    
    /**
     * Width of the foreground image. In case the input image resolution is higher than the limit (> 25 megapixels) this value is expressed with respect to the input image resolution.
     * 
     * @var ?int $foregroundWidth
     */
	#[\JMS\Serializer\Annotation\SerializedName('foreground_width')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $foregroundWidth = null;
    
    /**
     * Base64 encoded string of result image
     * 
     * @var ?string $resultB64
     */
	#[\JMS\Serializer\Annotation\SerializedName('result_b64')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resultB64 = null;
    
	public function __construct()
	{
		$this->foregroundHeight = null;
		$this->foregroundLeft = null;
		$this->foregroundTop = null;
		$this->foregroundWidth = null;
		$this->resultB64 = null;
	}
}
