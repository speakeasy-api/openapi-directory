/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MinimalRepository } from "./minimalrepository";
import { Expose, Type } from "class-transformer";

export class ThreadSubject extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "latest_comment_url" })
  latestCommentUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

/**
 * Thread
 */
export class Thread extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_read_at" })
  lastReadAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason: string;

  /**
   * Minimal Repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  @Type(() => MinimalRepository)
  repository: MinimalRepository;

  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  @Type(() => ThreadSubject)
  subject: ThreadSubject;

  @SpeakeasyMetadata()
  @Expose({ name: "subscription_url" })
  subscriptionUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unread" })
  unread: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
