import * as operations from "./models/operations";
import { AxiosInstance, AxiosRequestConfig } from "axios";
export declare class StripeGatewayProcessPaymentsAndRefunds {
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    _language: string;
    _sdkVersion: string;
    _genVersion: string;
    constructor(defaultClient: AxiosInstance, securityClient: AxiosInstance, serverURL: string, language: string, sdkVersion: string, genVersion: string);
    /**
     * Disconnects a developer's Stripe account
     *
     * @remarks
     *
     * - Results are returned for the market provided within the basic authentication credentials
     *
     */
    deleteStripeGatewayDeveloperDeveloperIdAccountsStripeId(req: operations.DeleteStripeGatewayDeveloperDeveloperIdAccountsStripeIdRequest, config?: AxiosRequestConfig): Promise<operations.DeleteStripeGatewayDeveloperDeveloperIdAccountsStripeIdResponse>;
    /**
     * Removes a credit card for a user
     */
    deleteStripeGatewayUserUserIdCardsCardId(req: operations.DeleteStripeGatewayUserUserIdCardsCardIdRequest, config?: AxiosRequestConfig): Promise<operations.DeleteStripeGatewayUserUserIdCardsCardIdResponse>;
    /**
     * Returns a developers connected Stripe accounts
     *
     * @remarks
     * - Results are returned for the market provided within the basic authentication credentials
     *
     */
    getStripeGatewayDeveloperDeveloperIdAccounts(req: operations.GetStripeGatewayDeveloperDeveloperIdAccountsRequest, config?: AxiosRequestConfig): Promise<operations.GetStripeGatewayDeveloperDeveloperIdAccountsResponse>;
    /**
     * Returns credit cards for this user
     *
     * @remarks
     * - Results are returned for the market provided within the basic authentication credentials
     *
     */
    getStripeGatewayUserUserIdCards(req: operations.GetStripeGatewayUserUserIdCardsRequest, config?: AxiosRequestConfig): Promise<operations.GetStripeGatewayUserUserIdCardsResponse>;
    /**
     * Generate a temporary URL to allow a developer to connect their Stripe account
     *
     * @remarks
     * - Results are returned for the market provided within the basic authentication credentials
     * - The URL generated by this method is only valid for 48 hours.
     *
     */
    postStripeGatewayDeveloperDeveloperIdAccounts(req: operations.PostStripeGatewayDeveloperDeveloperIdAccountsRequest, config?: AxiosRequestConfig): Promise<operations.PostStripeGatewayDeveloperDeveloperIdAccountsResponse>;
    /**
     * Adds credit card for this user
     *
     * @remarks
     * - Results are returned for the market provided within the basic authentication credentials
     *
     */
    postStripeGatewayUserUserIdCards(req: operations.PostStripeGatewayUserUserIdCardsRequest, config?: AxiosRequestConfig): Promise<operations.PostStripeGatewayUserUserIdCardsResponse>;
    /**
     * Updates a credit card for this user
     *
     * @remarks
     *
     * - Results are returned for the market provided within the basic authentication credentials
     *
     */
    postStripeGatewayUserUserIdCardsCardId(req: operations.PostStripeGatewayUserUserIdCardsCardIdRequest, config?: AxiosRequestConfig): Promise<operations.PostStripeGatewayUserUserIdCardsCardIdResponse>;
}
