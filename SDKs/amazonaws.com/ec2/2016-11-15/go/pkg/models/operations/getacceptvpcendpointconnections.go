// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAcceptVpcEndpointConnectionsActionEnum
type GETAcceptVpcEndpointConnectionsActionEnum string

const (
	GETAcceptVpcEndpointConnectionsActionEnumAcceptVpcEndpointConnections GETAcceptVpcEndpointConnectionsActionEnum = "AcceptVpcEndpointConnections"
)

func (e GETAcceptVpcEndpointConnectionsActionEnum) ToPointer() *GETAcceptVpcEndpointConnectionsActionEnum {
	return &e
}

func (e *GETAcceptVpcEndpointConnectionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AcceptVpcEndpointConnections":
		*e = GETAcceptVpcEndpointConnectionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAcceptVpcEndpointConnectionsActionEnum: %v", v)
	}
}

// GETAcceptVpcEndpointConnectionsVersionEnum
type GETAcceptVpcEndpointConnectionsVersionEnum string

const (
	GETAcceptVpcEndpointConnectionsVersionEnumTwoThousandAndSixteen1115 GETAcceptVpcEndpointConnectionsVersionEnum = "2016-11-15"
)

func (e GETAcceptVpcEndpointConnectionsVersionEnum) ToPointer() *GETAcceptVpcEndpointConnectionsVersionEnum {
	return &e
}

func (e *GETAcceptVpcEndpointConnectionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETAcceptVpcEndpointConnectionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAcceptVpcEndpointConnectionsVersionEnum: %v", v)
	}
}

type GETAcceptVpcEndpointConnectionsRequest struct {
	Action GETAcceptVpcEndpointConnectionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the VPC endpoint service.
	ServiceID string                                     `queryParam:"style=form,explode=true,name=ServiceId"`
	Version   GETAcceptVpcEndpointConnectionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The IDs of the interface VPC endpoints.
	VpcEndpointID     []string `queryParam:"style=form,explode=true,name=VpcEndpointId"`
	XAmzAlgorithm     *string  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAcceptVpcEndpointConnectionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
