/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BeezUPCommonCatalogCategoryFilter } from "./beezupcommoncatalogcategoryfilter";
import { BeezUPCommonChannelCategoryFilter } from "./beezupcommonchannelcategoryfilter";
import { ChannelCatalogProductFilters } from "./channelcatalogproductfilters";
import { ProductSetVisibilityCriteria } from "./productsetvisibilitycriteria";
import { Expose, Type } from "class-transformer";

/**
 * The channel catalog product list filter
 */
export class GetChannelCatalogProductInfoListRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "catalogCategoryFilter" })
  @Type(() => BeezUPCommonCatalogCategoryFilter)
  catalogCategoryFilter?: BeezUPCommonCatalogCategoryFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "channelCategoryFilter" })
  @Type(() => BeezUPCommonChannelCategoryFilter)
  channelCategoryFilter?: BeezUPCommonChannelCategoryFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "criteria" })
  @Type(() => ProductSetVisibilityCriteria)
  criteria: ProductSetVisibilityCriteria;

  /**
   * Search overridden products. If null the filter will not be taken in account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overridden" })
  overridden?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize: number;

  @SpeakeasyMetadata()
  @Expose({ name: "productFilters" })
  @Type(() => ChannelCatalogProductFilters)
  productFilters?: ChannelCatalogProductFilters;
}
