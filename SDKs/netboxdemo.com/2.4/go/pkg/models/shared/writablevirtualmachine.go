// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableVirtualMachineStatusEnum string

const (
	WritableVirtualMachineStatusEnumOne   WritableVirtualMachineStatusEnum = "1"
	WritableVirtualMachineStatusEnumZero  WritableVirtualMachineStatusEnum = "0"
	WritableVirtualMachineStatusEnumThree WritableVirtualMachineStatusEnum = "3"
)

func (e *WritableVirtualMachineStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "0":
		fallthrough
	case "3":
		*e = WritableVirtualMachineStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableVirtualMachineStatusEnum: %s", s)
	}
}

type WritableVirtualMachineInput struct {
	Cluster          int64                             `json:"cluster"`
	Comments         *string                           `json:"comments,omitempty"`
	CustomFields     map[string]interface{}            `json:"custom_fields,omitempty"`
	Disk             *int64                            `json:"disk,omitempty"`
	LocalContextData *string                           `json:"local_context_data,omitempty"`
	Memory           *int64                            `json:"memory,omitempty"`
	Name             string                            `json:"name"`
	Platform         *int64                            `json:"platform,omitempty"`
	PrimaryIp4       *int64                            `json:"primary_ip4,omitempty"`
	PrimaryIp6       *int64                            `json:"primary_ip6,omitempty"`
	Role             *int64                            `json:"role,omitempty"`
	Status           *WritableVirtualMachineStatusEnum `json:"status,omitempty"`
	Tags             []string                          `json:"tags,omitempty"`
	Tenant           *int64                            `json:"tenant,omitempty"`
	Vcpus            *int64                            `json:"vcpus,omitempty"`
}
