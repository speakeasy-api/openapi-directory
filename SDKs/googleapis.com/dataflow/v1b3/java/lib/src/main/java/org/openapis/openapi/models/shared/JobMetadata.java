/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobMetadata - Metadata available primarily for filtering jobs. Will be included in the ListJob response and Job SUMMARY view.
 */
public class JobMetadata {
    /**
     * Identification of a Cloud Bigtable source used in the Dataflow job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bigTableDetails")
    public BigTableIODetails[] bigTableDetails;
    public JobMetadata withBigTableDetails(BigTableIODetails[] bigTableDetails) {
        this.bigTableDetails = bigTableDetails;
        return this;
    }
    
    /**
     * Identification of a BigQuery source used in the Dataflow job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bigqueryDetails")
    public BigQueryIODetails[] bigqueryDetails;
    public JobMetadata withBigqueryDetails(BigQueryIODetails[] bigqueryDetails) {
        this.bigqueryDetails = bigqueryDetails;
        return this;
    }
    
    /**
     * Identification of a Datastore source used in the Dataflow job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datastoreDetails")
    public DatastoreIODetails[] datastoreDetails;
    public JobMetadata withDatastoreDetails(DatastoreIODetails[] datastoreDetails) {
        this.datastoreDetails = datastoreDetails;
        return this;
    }
    
    /**
     * Identification of a File source used in the Dataflow job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileDetails")
    public FileIODetails[] fileDetails;
    public JobMetadata withFileDetails(FileIODetails[] fileDetails) {
        this.fileDetails = fileDetails;
        return this;
    }
    
    /**
     * Identification of a Pub/Sub source used in the Dataflow job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pubsubDetails")
    public PubSubIODetails[] pubsubDetails;
    public JobMetadata withPubsubDetails(PubSubIODetails[] pubsubDetails) {
        this.pubsubDetails = pubsubDetails;
        return this;
    }
    
    /**
     * The version of the SDK used to run the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sdkVersion")
    public SDKVersion sdkVersion;
    public JobMetadata withSDKVersion(SDKVersion sdkVersion) {
        this.sdkVersion = sdkVersion;
        return this;
    }
    
    /**
     * Identification of a Spanner source used in the Dataflow job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spannerDetails")
    public SpannerIODetails[] spannerDetails;
    public JobMetadata withSpannerDetails(SpannerIODetails[] spannerDetails) {
        this.spannerDetails = spannerDetails;
        return this;
    }
    
    /**
     * List of display properties to help UI filter jobs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userDisplayProperties")
    public java.util.Map<String, String> userDisplayProperties;
    public JobMetadata withUserDisplayProperties(java.util.Map<String, String> userDisplayProperties) {
        this.userDisplayProperties = userDisplayProperties;
        return this;
    }
    
}
