/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EmailMessage - Specifies the default settings and content for a one-time email message that's sent directly to an endpoint.
 */
public class EmailMessage {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Body")
    public String body;

    public EmailMessage withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeedbackForwardingAddress")
    public String feedbackForwardingAddress;

    public EmailMessage withFeedbackForwardingAddress(String feedbackForwardingAddress) {
        this.feedbackForwardingAddress = feedbackForwardingAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FromAddress")
    public String fromAddress;

    public EmailMessage withFromAddress(String fromAddress) {
        this.fromAddress = fromAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RawEmail")
    public RawEmail rawEmail;

    public EmailMessage withRawEmail(RawEmail rawEmail) {
        this.rawEmail = rawEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReplyToAddresses")
    public String[] replyToAddresses;

    public EmailMessage withReplyToAddresses(String[] replyToAddresses) {
        this.replyToAddresses = replyToAddresses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SimpleEmail")
    public SimpleEmail simpleEmail;

    public EmailMessage withSimpleEmail(SimpleEmail simpleEmail) {
        this.simpleEmail = simpleEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Substitutions")
    public java.util.Map<String, String[]> substitutions;

    public EmailMessage withSubstitutions(java.util.Map<String, String[]> substitutions) {
        this.substitutions = substitutions;
        return this;
    }
    
    public EmailMessage(){}
}
