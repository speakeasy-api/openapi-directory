"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cputime as shared_cputime
from ..shared import meminfo as shared_meminfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceUtilizationReport:
    r"""Worker metrics exported from workers. This contains resource utilization metrics accumulated from a variety of sources. For more information, see go/df-resource-signals."""
    
    containers: Optional[dict[str, ResourceUtilizationReport]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containers'), 'exclude': lambda f: f is None }})
    r"""Per container information. Key: container name."""  
    cpu_time: Optional[list[shared_cputime.CPUTime]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpuTime'), 'exclude': lambda f: f is None }})
    r"""CPU utilization samples."""  
    memory_info: Optional[list[shared_meminfo.MemInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memoryInfo'), 'exclude': lambda f: f is None }})
    r"""Memory utilization samples."""  
    