/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListTaskQueueServerList = [
  "https://taskrouter.twilio.com",
] as const;

export class ListTaskQueueSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListTaskQueueRequest extends SpeakeasyBase {
  /**
   * The attributes of the Workers to read. Returns the TaskQueues with Workers that match the attributes specified in this parameter.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EvaluateWorkerAttributes",
  })
  evaluateWorkerAttributes?: string;

  /**
   * The `friendly_name` of the TaskQueue resources to read.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FriendlyName",
  })
  friendlyName?: string;

  /**
   * Sorting parameter for TaskQueues
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Ordering",
  })
  ordering?: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * The SID of the Worker with the TaskQueue resources to read.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=WorkerSid",
  })
  workerSid?: string;

  /**
   * The SID of the Workspace with the TaskQueue to read.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=WorkspaceSid",
  })
  workspaceSid: string;
}

export class ListTaskQueueListTaskQueueResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListTaskQueueListTaskQueueResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListTaskQueueListTaskQueueResponseMeta)
  meta?: ListTaskQueueListTaskQueueResponseMeta;

  @SpeakeasyMetadata({ elemType: shared.TaskrouterV1WorkspaceTaskQueue })
  @Expose({ name: "task_queues" })
  @Type(() => shared.TaskrouterV1WorkspaceTaskQueue)
  taskQueues?: shared.TaskrouterV1WorkspaceTaskQueue[];
}

export class ListTaskQueueResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listTaskQueueResponse?: ListTaskQueueListTaskQueueResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
