// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeSecurityGroupReferencesActionEnum
type POSTDescribeSecurityGroupReferencesActionEnum string

const (
	POSTDescribeSecurityGroupReferencesActionEnumDescribeSecurityGroupReferences POSTDescribeSecurityGroupReferencesActionEnum = "DescribeSecurityGroupReferences"
)

func (e *POSTDescribeSecurityGroupReferencesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeSecurityGroupReferences":
		*e = POSTDescribeSecurityGroupReferencesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeSecurityGroupReferencesActionEnum: %s", s)
	}
}

// POSTDescribeSecurityGroupReferencesVersionEnum
type POSTDescribeSecurityGroupReferencesVersionEnum string

const (
	POSTDescribeSecurityGroupReferencesVersionEnumTwoThousandAndSixteen1115 POSTDescribeSecurityGroupReferencesVersionEnum = "2016-11-15"
)

func (e *POSTDescribeSecurityGroupReferencesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDescribeSecurityGroupReferencesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeSecurityGroupReferencesVersionEnum: %s", s)
	}
}

type POSTDescribeSecurityGroupReferencesQueryParams struct {
	Action  POSTDescribeSecurityGroupReferencesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDescribeSecurityGroupReferencesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeSecurityGroupReferencesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeSecurityGroupReferencesRequest struct {
	QueryParams POSTDescribeSecurityGroupReferencesQueryParams
	Headers     POSTDescribeSecurityGroupReferencesHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeSecurityGroupReferencesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
