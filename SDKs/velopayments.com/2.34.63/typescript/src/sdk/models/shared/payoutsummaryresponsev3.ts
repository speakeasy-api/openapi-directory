/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AcceptedPaymentV3 } from "./acceptedpaymentv3";
import { PayoutScheduleV3 } from "./payoutschedulev3";
import { QuoteFxSummaryV3 } from "./quotefxsummaryv3";
import { RejectedPaymentV3 } from "./rejectedpaymentv3";
import { SourceAccountV3 } from "./sourceaccountv3";
import { Expose, Type } from "class-transformer";

/**
 * Details of Payout
 */
export class PayoutSummaryResponseV3 extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AcceptedPaymentV3 })
  @Expose({ name: "acceptedPayments" })
  @Type(() => AcceptedPaymentV3)
  acceptedPayments: AcceptedPaymentV3[];

  @SpeakeasyMetadata({ elemType: SourceAccountV3 })
  @Expose({ name: "accounts" })
  @Type(() => SourceAccountV3)
  accounts: SourceAccountV3[];

  @SpeakeasyMetadata({ elemType: QuoteFxSummaryV3 })
  @Expose({ name: "fxSummaries" })
  @Type(() => QuoteFxSummaryV3)
  fxSummaries: QuoteFxSummaryV3[];

  /**
   * The number of payments that were accepted in the payout
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentsAccepted" })
  paymentsAccepted?: number;

  /**
   * The number of payments that were rejected in the payout
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentsRejected" })
  paymentsRejected?: number;

  /**
   * The number of payments that were submitted in the payout
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentsSubmitted" })
  paymentsSubmitted?: number;

  /**
   * The number of payments that were withdrawn in the payout
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentsWithdrawn" })
  paymentsWithdrawn: number;

  /**
   * The id of the payout
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutId" })
  payoutId?: string;

  @SpeakeasyMetadata({ elemType: RejectedPaymentV3 })
  @Expose({ name: "rejectedPayments" })
  @Type(() => RejectedPaymentV3)
  rejectedPayments: RejectedPaymentV3[];

  /**
   * Details relating to a payout that was executed via a schedule or is still waiting to be executed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedule" })
  @Type(() => PayoutScheduleV3)
  schedule?: PayoutScheduleV3;

  /**
   * The status of the payout (one of SUBMITTED, ACCEPTED, REJECTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, WITHDRAWN)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
