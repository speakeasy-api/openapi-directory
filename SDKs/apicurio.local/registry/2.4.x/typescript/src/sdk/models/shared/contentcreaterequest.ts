/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArtifactReference } from "./artifactreference";
import { Expose, Type } from "class-transformer";

/**
 * The content of the artifact being created. This is often, but not always, JSON data
 *
 * @remarks
 * representing one of the supported artifact types:
 *
 * * Avro (`AVRO`)
 * * Protobuf (`PROTOBUF`)
 * * JSON Schema (`JSON`)
 * * Kafka Connect (`KCONNECT`)
 * * OpenAPI (`OPENAPI`)
 * * AsyncAPI (`ASYNCAPI`)
 * * GraphQL (`GRAPHQL`)
 * * Web Services Description Language (`WSDL`)
 * * XML Schema (`XSD`)
 *
 */
export class ContentCreateRequest extends SpeakeasyBase {
  /**
   * Raw content of the artifact or a valid (and accessible) URL where the content can be found.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content: string;

  /**
   * Collection of references to other artifacts.
   */
  @SpeakeasyMetadata({ elemType: ArtifactReference })
  @Expose({ name: "references" })
  @Type(() => ArtifactReference)
  references: ArtifactReference[];
}
