/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FileLabels - A group of labels for the file.
 */
public class FileLabels {
    /**
     * Deprecated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hidden")
    public Boolean hidden;

    public FileLabels withHidden(Boolean hidden) {
        this.hidden = hidden;
        return this;
    }
    
    /**
     * Whether the file has been modified by this user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modified")
    public Boolean modified;

    public FileLabels withModified(Boolean modified) {
        this.modified = modified;
        return this;
    }
    
    /**
     * Deprecated - use copyRequiresWriterPermission instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restricted")
    public Boolean restricted;

    public FileLabels withRestricted(Boolean restricted) {
        this.restricted = restricted;
        return this;
    }
    
    /**
     * Whether this file is starred by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("starred")
    public Boolean starred;

    public FileLabels withStarred(Boolean starred) {
        this.starred = starred;
        return this;
    }
    
    /**
     * Whether the file has been trashed, either explicitly or from a trashed parent folder. Only the owner may trash a file. The trashed item is excluded from all files.list responses returned for any user who does not own the file. However, all users with access to the file can see the trashed item metadata in an API response. All users with access can copy, download, export, and share the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trashed")
    public Boolean trashed;

    public FileLabels withTrashed(Boolean trashed) {
        this.trashed = trashed;
        return this;
    }
    
    /**
     * Whether this file has been viewed by this user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("viewed")
    public Boolean viewed;

    public FileLabels withViewed(Boolean viewed) {
        this.viewed = viewed;
        return this;
    }
    
    public FileLabels(){}
}
