/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * <p>The chronological sorting order of the requested information.</p> <p>Default: <code>ASCENDING</code> </p>
 */
export enum GetAssetPropertyAggregatesTimeOrderingEnum {
  Ascending = "ASCENDING",
  Descending = "DESCENDING",
}

export class GetAssetPropertyAggregatesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The data aggregating function.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=aggregateTypes",
  })
  aggregateTypes: shared.AggregateTypeEnum[];

  /**
   * The ID of the asset.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=assetId",
  })
  assetId?: string;

  /**
   * The inclusive end of the range from which to query historical data, expressed in seconds in Unix epoch time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  endDate: Date;

  /**
   * <p>The maximum number of results to return for each paginated request.</p> <p>Default: 100</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxResults",
  })
  maxResults?: number;

  /**
   * The token to be used for the next set of paginated results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=nextToken",
  })
  nextToken?: string;

  /**
   * The alias that identifies the property, such as an OPC-UA server data stream path (for example, <code>/company/windfarm/3/turbine/7/temperature</code>). For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/connect-data-streams.html">Mapping industrial data streams to asset properties</a> in the <i>IoT SiteWise User Guide</i>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=propertyAlias",
  })
  propertyAlias?: string;

  /**
   * The ID of the asset property.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=propertyId",
  })
  propertyId?: string;

  /**
   * The quality by which to filter asset data.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=qualities",
  })
  qualities?: shared.QualityEnum[];

  /**
   * The time interval over which to aggregate data.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resolution",
  })
  resolution: string;

  /**
   * The exclusive start of the range from which to query historical data, expressed in seconds in Unix epoch time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startDate: Date;

  /**
   * <p>The chronological sorting order of the requested information.</p> <p>Default: <code>ASCENDING</code> </p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timeOrdering",
  })
  timeOrdering?: GetAssetPropertyAggregatesTimeOrderingEnum;
}

export class GetAssetPropertyAggregatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getAssetPropertyAggregatesResponse?: shared.GetAssetPropertyAggregatesResponse;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
