// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SigningAlgorithmEnum string

const (
	SigningAlgorithmEnumSha256Withecdsa SigningAlgorithmEnum = "SHA256WITHECDSA"
	SigningAlgorithmEnumSha384Withecdsa SigningAlgorithmEnum = "SHA384WITHECDSA"
	SigningAlgorithmEnumSha512Withecdsa SigningAlgorithmEnum = "SHA512WITHECDSA"
	SigningAlgorithmEnumSha256Withrsa   SigningAlgorithmEnum = "SHA256WITHRSA"
	SigningAlgorithmEnumSha384Withrsa   SigningAlgorithmEnum = "SHA384WITHRSA"
	SigningAlgorithmEnumSha512Withrsa   SigningAlgorithmEnum = "SHA512WITHRSA"
)

func (e *SigningAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SHA256WITHECDSA":
		fallthrough
	case "SHA384WITHECDSA":
		fallthrough
	case "SHA512WITHECDSA":
		fallthrough
	case "SHA256WITHRSA":
		fallthrough
	case "SHA384WITHRSA":
		fallthrough
	case "SHA512WITHRSA":
		*e = SigningAlgorithmEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SigningAlgorithmEnum: %s", s)
	}
}
