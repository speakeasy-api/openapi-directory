// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type CancelReportSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type CancelReportRequest struct {
	// UUID of the report
	ReportID string `pathParam:"style=simple,explode=false,name=report_id"`
}

// CancelReport409ApplicationJSON - Invalid Abort Operation
type CancelReport409ApplicationJSON struct {
	Detail   *string `json:"detail,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// CancelReport404ApplicationJSON - Not found
type CancelReport404ApplicationJSON struct {
	Detail   *string `json:"detail,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// CancelReport401ApplicationJSON - Unauthorized
type CancelReport401ApplicationJSON struct {
	Detail   *string `json:"detail,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

type CancelReport200ApplicationJSONType string

const (
	CancelReport200ApplicationJSONTypeSmsResponseGetReport           CancelReport200ApplicationJSONType = "sms_response_get_report"
	CancelReport200ApplicationJSONTypeVoiceCallResponseGetReport     CancelReport200ApplicationJSONType = "voice_call_response_get_report"
	CancelReport200ApplicationJSONTypeInAppVoiceResponseGetReport    CancelReport200ApplicationJSONType = "in_app_voice_response_get_report"
	CancelReport200ApplicationJSONTypeWebsocketCallResponseGetReport CancelReport200ApplicationJSONType = "websocket_call_response_get_report"
	CancelReport200ApplicationJSONTypeVerifyAPIResponseGetReport     CancelReport200ApplicationJSONType = "verify_api_response_get_report"
	CancelReport200ApplicationJSONTypeNumberInsightResponseGetReport CancelReport200ApplicationJSONType = "number_insight_response_get_report"
	CancelReport200ApplicationJSONTypeMessagesResponseGetReport      CancelReport200ApplicationJSONType = "messages_response_get_report"
	CancelReport200ApplicationJSONTypeConversationsResponseGetReport CancelReport200ApplicationJSONType = "conversations_response_get_report"
	CancelReport200ApplicationJSONTypeAsrResponseGetReport           CancelReport200ApplicationJSONType = "asr_response_get_report"
)

type CancelReport200ApplicationJSON struct {
	SmsResponseGetReport           *shared.SmsResponseGetReport
	VoiceCallResponseGetReport     *shared.VoiceCallResponseGetReport
	InAppVoiceResponseGetReport    *shared.InAppVoiceResponseGetReport
	WebsocketCallResponseGetReport *shared.WebsocketCallResponseGetReport
	VerifyAPIResponseGetReport     *shared.VerifyAPIResponseGetReport
	NumberInsightResponseGetReport *shared.NumberInsightResponseGetReport
	MessagesResponseGetReport      *shared.MessagesResponseGetReport
	ConversationsResponseGetReport *shared.ConversationsResponseGetReport
	AsrResponseGetReport           *shared.AsrResponseGetReport

	Type CancelReport200ApplicationJSONType
}

func CreateCancelReport200ApplicationJSONSmsResponseGetReport(smsResponseGetReport shared.SmsResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeSmsResponseGetReport

	return CancelReport200ApplicationJSON{
		SmsResponseGetReport: &smsResponseGetReport,
		Type:                 typ,
	}
}

func CreateCancelReport200ApplicationJSONVoiceCallResponseGetReport(voiceCallResponseGetReport shared.VoiceCallResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeVoiceCallResponseGetReport

	return CancelReport200ApplicationJSON{
		VoiceCallResponseGetReport: &voiceCallResponseGetReport,
		Type:                       typ,
	}
}

func CreateCancelReport200ApplicationJSONInAppVoiceResponseGetReport(inAppVoiceResponseGetReport shared.InAppVoiceResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeInAppVoiceResponseGetReport

	return CancelReport200ApplicationJSON{
		InAppVoiceResponseGetReport: &inAppVoiceResponseGetReport,
		Type:                        typ,
	}
}

func CreateCancelReport200ApplicationJSONWebsocketCallResponseGetReport(websocketCallResponseGetReport shared.WebsocketCallResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeWebsocketCallResponseGetReport

	return CancelReport200ApplicationJSON{
		WebsocketCallResponseGetReport: &websocketCallResponseGetReport,
		Type:                           typ,
	}
}

func CreateCancelReport200ApplicationJSONVerifyAPIResponseGetReport(verifyAPIResponseGetReport shared.VerifyAPIResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeVerifyAPIResponseGetReport

	return CancelReport200ApplicationJSON{
		VerifyAPIResponseGetReport: &verifyAPIResponseGetReport,
		Type:                       typ,
	}
}

func CreateCancelReport200ApplicationJSONNumberInsightResponseGetReport(numberInsightResponseGetReport shared.NumberInsightResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeNumberInsightResponseGetReport

	return CancelReport200ApplicationJSON{
		NumberInsightResponseGetReport: &numberInsightResponseGetReport,
		Type:                           typ,
	}
}

func CreateCancelReport200ApplicationJSONMessagesResponseGetReport(messagesResponseGetReport shared.MessagesResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeMessagesResponseGetReport

	return CancelReport200ApplicationJSON{
		MessagesResponseGetReport: &messagesResponseGetReport,
		Type:                      typ,
	}
}

func CreateCancelReport200ApplicationJSONConversationsResponseGetReport(conversationsResponseGetReport shared.ConversationsResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeConversationsResponseGetReport

	return CancelReport200ApplicationJSON{
		ConversationsResponseGetReport: &conversationsResponseGetReport,
		Type:                           typ,
	}
}

func CreateCancelReport200ApplicationJSONAsrResponseGetReport(asrResponseGetReport shared.AsrResponseGetReport) CancelReport200ApplicationJSON {
	typ := CancelReport200ApplicationJSONTypeAsrResponseGetReport

	return CancelReport200ApplicationJSON{
		AsrResponseGetReport: &asrResponseGetReport,
		Type:                 typ,
	}
}

func (u *CancelReport200ApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	smsResponseGetReport := new(shared.SmsResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&smsResponseGetReport); err == nil {
		u.SmsResponseGetReport = smsResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeSmsResponseGetReport
		return nil
	}

	voiceCallResponseGetReport := new(shared.VoiceCallResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&voiceCallResponseGetReport); err == nil {
		u.VoiceCallResponseGetReport = voiceCallResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeVoiceCallResponseGetReport
		return nil
	}

	inAppVoiceResponseGetReport := new(shared.InAppVoiceResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&inAppVoiceResponseGetReport); err == nil {
		u.InAppVoiceResponseGetReport = inAppVoiceResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeInAppVoiceResponseGetReport
		return nil
	}

	websocketCallResponseGetReport := new(shared.WebsocketCallResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&websocketCallResponseGetReport); err == nil {
		u.WebsocketCallResponseGetReport = websocketCallResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeWebsocketCallResponseGetReport
		return nil
	}

	verifyAPIResponseGetReport := new(shared.VerifyAPIResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&verifyAPIResponseGetReport); err == nil {
		u.VerifyAPIResponseGetReport = verifyAPIResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeVerifyAPIResponseGetReport
		return nil
	}

	numberInsightResponseGetReport := new(shared.NumberInsightResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&numberInsightResponseGetReport); err == nil {
		u.NumberInsightResponseGetReport = numberInsightResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeNumberInsightResponseGetReport
		return nil
	}

	messagesResponseGetReport := new(shared.MessagesResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&messagesResponseGetReport); err == nil {
		u.MessagesResponseGetReport = messagesResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeMessagesResponseGetReport
		return nil
	}

	conversationsResponseGetReport := new(shared.ConversationsResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&conversationsResponseGetReport); err == nil {
		u.ConversationsResponseGetReport = conversationsResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeConversationsResponseGetReport
		return nil
	}

	asrResponseGetReport := new(shared.AsrResponseGetReport)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&asrResponseGetReport); err == nil {
		u.AsrResponseGetReport = asrResponseGetReport
		u.Type = CancelReport200ApplicationJSONTypeAsrResponseGetReport
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CancelReport200ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.SmsResponseGetReport != nil {
		return json.Marshal(u.SmsResponseGetReport)
	}

	if u.VoiceCallResponseGetReport != nil {
		return json.Marshal(u.VoiceCallResponseGetReport)
	}

	if u.InAppVoiceResponseGetReport != nil {
		return json.Marshal(u.InAppVoiceResponseGetReport)
	}

	if u.WebsocketCallResponseGetReport != nil {
		return json.Marshal(u.WebsocketCallResponseGetReport)
	}

	if u.VerifyAPIResponseGetReport != nil {
		return json.Marshal(u.VerifyAPIResponseGetReport)
	}

	if u.NumberInsightResponseGetReport != nil {
		return json.Marshal(u.NumberInsightResponseGetReport)
	}

	if u.MessagesResponseGetReport != nil {
		return json.Marshal(u.MessagesResponseGetReport)
	}

	if u.ConversationsResponseGetReport != nil {
		return json.Marshal(u.ConversationsResponseGetReport)
	}

	if u.AsrResponseGetReport != nil {
		return json.Marshal(u.AsrResponseGetReport)
	}

	return nil, nil
}

type CancelReportResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	CancelReport200ApplicationJSONOneOf *CancelReport200ApplicationJSON
	// Unauthorized
	CancelReport401ApplicationJSONObject *CancelReport401ApplicationJSON
	// Not found
	CancelReport404ApplicationJSONObject *CancelReport404ApplicationJSON
	// Invalid Abort Operation
	CancelReport409ApplicationJSONObject *CancelReport409ApplicationJSON
}
