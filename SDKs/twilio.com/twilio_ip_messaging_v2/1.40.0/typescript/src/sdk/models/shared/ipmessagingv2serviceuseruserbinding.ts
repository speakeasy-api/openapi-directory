/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserBindingEnumBindingTypeEnum } from "./userbindingenumbindingtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class IpMessagingV2ServiceUserUserBinding extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "binding_type" })
  bindingType?: UserBindingEnumBindingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "credential_sid" })
  credentialSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "endpoint" })
  endpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  identity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message_types" })
  messageTypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "service_sid" })
  serviceSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_sid" })
  userSid?: string;
}
