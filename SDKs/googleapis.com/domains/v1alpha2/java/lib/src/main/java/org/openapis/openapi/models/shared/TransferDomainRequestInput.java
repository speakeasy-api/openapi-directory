/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransferDomainRequestInput - Request for the `TransferDomain` method.
 */
public class TransferDomainRequestInput {
    /**
     * Defines an authorization code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationCode")
    public AuthorizationCode authorizationCode;
    public TransferDomainRequestInput withAuthorizationCode(AuthorizationCode authorizationCode) {
        this.authorizationCode = authorizationCode;
        return this;
    }
    
    /**
     * The list of contact notices that you acknowledge. The notices needed here depend on the values specified in `registration.contact_settings`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactNotices")
    public TransferDomainRequestContactNoticesEnum[] contactNotices;
    public TransferDomainRequestInput withContactNotices(TransferDomainRequestContactNoticesEnum[] contactNotices) {
        this.contactNotices = contactNotices;
        return this;
    }
    
    /**
     * The `Registration` resource facilitates managing and configuring domain name registrations. There are several ways to create a new `Registration` resource: To create a new `Registration` resource, find a suitable domain name by calling the `SearchDomains` method with a query to see available domain name options. After choosing a name, call `RetrieveRegisterParameters` to ensure availability and obtain information like pricing, which is needed to build a call to `RegisterDomain`. Another way to create a new `Registration` is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call `RetrieveTransferParameters` to confirm that the domain is unlocked and to get values needed to build a call to `TransferDomain`. Finally, you can create a new `Registration` by importing an existing domain managed with [Google Domains](https://domains.google/). First, call `RetrieveImportableDomains` to list domains to which the calling user has sufficient access. Then call `ImportDomain` on any domain names you want to use with Cloud Domains.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registration")
    public RegistrationInput registration;
    public TransferDomainRequestInput withRegistration(RegistrationInput registration) {
        this.registration = registration;
        return this;
    }
    
    /**
     * Validate the request without actually transferring the domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validateOnly")
    public Boolean validateOnly;
    public TransferDomainRequestInput withValidateOnly(Boolean validateOnly) {
        this.validateOnly = validateOnly;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("yearlyPrice")
    public Money yearlyPrice;
    public TransferDomainRequestInput withYearlyPrice(Money yearlyPrice) {
        this.yearlyPrice = yearlyPrice;
        return this;
    }
    
}
