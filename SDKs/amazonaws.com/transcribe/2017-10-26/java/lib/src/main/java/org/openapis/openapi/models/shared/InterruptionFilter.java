/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InterruptionFilter - &lt;p&gt;Flag the presence or absence of interruptions in your Call Analytics transcription output.&lt;/p&gt; &lt;p&gt;Rules using &lt;code&gt;InterruptionFilter&lt;/code&gt; are designed to match:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Instances where an agent interrupts a customer&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Instances where a customer interrupts an agent&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Either participant interrupting the other&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A lack of interruptions&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;See &lt;a href="https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html#tca-rules-batch"&gt;Rule criteria for post-call categories&lt;/a&gt; for usage examples.&lt;/p&gt;
 */
public class InterruptionFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AbsoluteTimeRange")
    public AbsoluteTimeRange absoluteTimeRange;

    public InterruptionFilter withAbsoluteTimeRange(AbsoluteTimeRange absoluteTimeRange) {
        this.absoluteTimeRange = absoluteTimeRange;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Negate")
    public Boolean negate;

    public InterruptionFilter withNegate(Boolean negate) {
        this.negate = negate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ParticipantRole")
    public ParticipantRoleEnum participantRole;

    public InterruptionFilter withParticipantRole(ParticipantRoleEnum participantRole) {
        this.participantRole = participantRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RelativeTimeRange")
    public RelativeTimeRange relativeTimeRange;

    public InterruptionFilter withRelativeTimeRange(RelativeTimeRange relativeTimeRange) {
        this.relativeTimeRange = relativeTimeRange;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Threshold")
    public Long threshold;

    public InterruptionFilter withThreshold(Long threshold) {
        this.threshold = threshold;
        return this;
    }
    
    public InterruptionFilter(){}
}
