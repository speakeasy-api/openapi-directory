/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Sentiment } from "./sentiment";
import { TextSpan } from "./textspan";
import { Expose, Type } from "class-transformer";

/**
 * The type of the entity mention.
 */
export enum EntityMentionTypeEnum {
  TypeUnknown = "TYPE_UNKNOWN",
  Proper = "PROPER",
  Common = "COMMON",
}

/**
 * Represents a mention for an entity in the text. Currently, proper noun mentions are supported.
 */
export class EntityMention extends SpeakeasyBase {
  /**
   * Represents the feeling associated with the entire text or entities in the text. Next ID: 6
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sentiment" })
  @Type(() => Sentiment)
  sentiment?: Sentiment;

  /**
   * Represents an output piece of text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  @Type(() => TextSpan)
  text?: TextSpan;

  /**
   * The type of the entity mention.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: EntityMentionTypeEnum;
}
