"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2contentitem as shared_googleprivacydlpv2contentitem
from ..shared import googleprivacydlpv2hybridfindingdetails as shared_googleprivacydlpv2hybridfindingdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2HybridContentItem:
    r"""An individual hybrid item to inspect. Will be stored temporarily during processing."""
    
    finding_details: Optional[shared_googleprivacydlpv2hybridfindingdetails.GooglePrivacyDlpV2HybridFindingDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('findingDetails'), 'exclude': lambda f: f is None }})
    r"""Populate to associate additional data with each finding."""  
    item: Optional[shared_googleprivacydlpv2contentitem.GooglePrivacyDlpV2ContentItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item'), 'exclude': lambda f: f is None }})  
    