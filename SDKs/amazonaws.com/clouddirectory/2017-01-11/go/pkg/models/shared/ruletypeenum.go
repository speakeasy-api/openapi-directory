// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RuleTypeEnum string

const (
	RuleTypeEnumBinaryLength     RuleTypeEnum = "BINARY_LENGTH"
	RuleTypeEnumNumberComparison RuleTypeEnum = "NUMBER_COMPARISON"
	RuleTypeEnumStringFromSet    RuleTypeEnum = "STRING_FROM_SET"
	RuleTypeEnumStringLength     RuleTypeEnum = "STRING_LENGTH"
)

func (e *RuleTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BINARY_LENGTH":
		fallthrough
	case "NUMBER_COMPARISON":
		fallthrough
	case "STRING_FROM_SET":
		fallthrough
	case "STRING_LENGTH":
		*e = RuleTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleTypeEnum: %s", s)
	}
}
