// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConsentAcknowledgementStatusEnum string

const (
	ConsentAcknowledgementStatusEnumOk      ConsentAcknowledgementStatusEnum = "OK"
	ConsentAcknowledgementStatusEnumUnknown ConsentAcknowledgementStatusEnum = "UNKNOWN"
)

func (e ConsentAcknowledgementStatusEnum) ToPointer() *ConsentAcknowledgementStatusEnum {
	return &e
}

func (e *ConsentAcknowledgementStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OK":
		fallthrough
	case "UNKNOWN":
		*e = ConsentAcknowledgementStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsentAcknowledgementStatusEnum: %v", v)
	}
}

type ConsentAcknowledgement struct {
	ConsentID string                           `json:"consentId"`
	Status    ConsentAcknowledgementStatusEnum `json:"status"`
}
