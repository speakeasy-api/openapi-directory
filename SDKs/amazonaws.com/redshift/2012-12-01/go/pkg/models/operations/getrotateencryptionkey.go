// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRotateEncryptionKeyActionEnum
type GETRotateEncryptionKeyActionEnum string

const (
	GETRotateEncryptionKeyActionEnumRotateEncryptionKey GETRotateEncryptionKeyActionEnum = "RotateEncryptionKey"
)

func (e *GETRotateEncryptionKeyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RotateEncryptionKey":
		*e = GETRotateEncryptionKeyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRotateEncryptionKeyActionEnum: %s", s)
	}
}

// GETRotateEncryptionKeyVersionEnum
type GETRotateEncryptionKeyVersionEnum string

const (
	GETRotateEncryptionKeyVersionEnumTwoThousandAndTwelve1201 GETRotateEncryptionKeyVersionEnum = "2012-12-01"
)

func (e *GETRotateEncryptionKeyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETRotateEncryptionKeyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRotateEncryptionKeyVersionEnum: %s", s)
	}
}

type GETRotateEncryptionKeyRequest struct {
	Action GETRotateEncryptionKeyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The unique identifier of the cluster that you want to rotate the encryption keys for.</p> <p>Constraints: Must be the name of valid cluster that has encryption enabled.</p>
	ClusterIdentifier string                            `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	Version           GETRotateEncryptionKeyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRotateEncryptionKeyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
