/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListZRLocationsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ListZRLocationsRequest extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * A unique identifier of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1. Use this parameter to filter the response by a specific location hierarchy level.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parent_location_id",
  })
  parentLocationId?: string;

  /**
   * Use this field to filter the response by the type of location. The value can be one of the following:
   *
   * @remarks
   * `country`, `states`, `city`, `campus`, `building`, `floor`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string;
}

/**
 * The type of location. The value can be one of the following:
 *
 * @remarks
 * `country`, `states`, `city`, `campus`, `building`, `floor`.
 */
export enum ListZRLocations200ApplicationXMLLocationsTypeEnum {
  Country = "country",
  States = "states",
  City = "city",
  Campus = "campus",
  Building = "building",
  Floor = "floor",
}

export class ListZRLocations200ApplicationXMLLocations extends SpeakeasyBase {
  /**
   * Unique Identifier of the location.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the location.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * ID (Unique Identifier) of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the parent_location_id of Floor 1 will be the ID of Building A.<br>
   *
   * @remarks
   * The value of parent_location_id of the top-level location (country) is the Account ID of the Zoom account.
   */
  @SpeakeasyMetadata()
  parentLocationId?: string;

  /**
   * The type of location. The value can be one of the following:
   *
   * @remarks
   * `country`, `states`, `city`, `campus`, `building`, `floor`.
   */
  @SpeakeasyMetadata()
  type?: ListZRLocations200ApplicationXMLLocationsTypeEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Zoom Room locations listed successfully.
 *
 */
export class ListZRLocations200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListZRLocations200ApplicationXMLLocations })
  locations?: ListZRLocations200ApplicationXMLLocations[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;
}

/**
 * The type of location. The value can be one of the following:
 *
 * @remarks
 * `country`, `states`, `city`, `campus`, `building`, `floor`.
 */
export enum ListZRLocations200ApplicationJSONLocationsTypeEnum {
  Country = "country",
  States = "states",
  City = "city",
  Campus = "campus",
  Building = "building",
  Floor = "floor",
}

export class ListZRLocations200ApplicationJSONLocations extends SpeakeasyBase {
  /**
   * Unique Identifier of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * ID (Unique Identifier) of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the parent_location_id of Floor 1 will be the ID of Building A.<br>
   *
   * @remarks
   * The value of parent_location_id of the top-level location (country) is the Account ID of the Zoom account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_location_id" })
  parentLocationId?: string;

  /**
   * The type of location. The value can be one of the following:
   *
   * @remarks
   * `country`, `states`, `city`, `campus`, `building`, `floor`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ListZRLocations200ApplicationJSONLocationsTypeEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Zoom Room locations listed successfully.
 *
 */
export class ListZRLocations200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListZRLocations200ApplicationJSONLocations })
  @Expose({ name: "locations" })
  @Type(() => ListZRLocations200ApplicationJSONLocations)
  locations?: ListZRLocations200ApplicationJSONLocations[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;
}

export class ListZRLocationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Zoom Room locations listed successfully.
   *
   */
  @SpeakeasyMetadata()
  listZRLocations200ApplicationJSONObject?: ListZRLocations200ApplicationJSON;
}
