// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// TableListTablesView - Additional details for a view.
type TableListTablesView struct {
	// True if view is defined in legacy SQL dialect, false if in standard SQL.
	UseLegacySQL *bool `json:"useLegacySql,omitempty"`
}

type TableListTables struct {
	Clustering *Clustering `json:"clustering,omitempty"`
	// The time when this table was created, in milliseconds since the epoch.
	CreationTime *string `json:"creationTime,omitempty"`
	// [Optional] The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.
	ExpirationTime *string `json:"expirationTime,omitempty"`
	// The user-friendly name for this table.
	FriendlyName *string `json:"friendlyName,omitempty"`
	// An opaque ID of the table
	ID *string `json:"id,omitempty"`
	// The resource type.
	Kind *string `json:"kind,omitempty"`
	// The labels associated with this table. You can use these to organize and group your tables.
	Labels            map[string]string  `json:"labels,omitempty"`
	RangePartitioning *RangePartitioning `json:"rangePartitioning,omitempty"`
	TableReference    *TableReference    `json:"tableReference,omitempty"`
	TimePartitioning  *TimePartitioning  `json:"timePartitioning,omitempty"`
	// The type of table. Possible values are: TABLE, VIEW.
	Type *string `json:"type,omitempty"`
	// Additional details for a view.
	View *TableListTablesView `json:"view,omitempty"`
}

// TableList - Successful response
type TableList struct {
	// A hash of this page of results.
	Etag *string `json:"etag,omitempty"`
	// The type of list.
	Kind *string `json:"kind,omitempty"`
	// A token to request the next page of results.
	NextPageToken *string `json:"nextPageToken,omitempty"`
	// Tables in the requested dataset.
	Tables []TableListTables `json:"tables,omitempty"`
	// The total number of tables in the dataset.
	TotalItems *int `json:"totalItems,omitempty"`
}
