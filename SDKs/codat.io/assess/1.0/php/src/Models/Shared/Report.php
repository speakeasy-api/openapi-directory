<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Report - Assess reports follow a consistent structure. Reports contain four sections of information:
 * 
 * 
 * 1. Report definition information such as:
 *   a. The report info (e.g. enhanced_profit_and_loss).
 *   b. The display name of the report (e.g. Enhanced Profit and Loss).
 * 2. Information about the dimension contained in the reports such as:
 *   a. The type of dimension (e.g. datetime, recordRef).
 *   b. The display name of the dimension (e.g. Period, Category type, Category sub type).
 *   c. The details about each item within the dimension (e.g. displayName:"Jan 2022", start:"...", end:"...", id:"...", name:"...").
 * 3. Information about the measures contained in the report such as:
 *   a. The display name of the measure (e.g. value of account, percentage change).
 *   b. The type of the measure (e.g. currency, percentage).
 *   c. The unit of the measure (e.g. %, GBP).
 * 4. The data for the report. When the *includeDisplayName* parameter is set to *true*, it shows the *dimensionDisplayName* and *itemDisplayName* to make the data human-readable. The default setting for *includeDisplayName* is *false*.
 * 
 * Reports can be rendered as follows (ordering is implicit rather than explicit):
 * 
 * ![A table showing an example of how a report can be rendered](https://files.readme.io/1fa20ca-Report1.png)
 * 
 * # Data model
 * 
 * ## Dimensions
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Report
{
    /**
     * $dimensions
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReportDimension> $dimensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReportDimension>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensions = null;
    
    /**
     * $errors
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReportError> $errors
     */
	#[\JMS\Serializer\Annotation\SerializedName('errors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReportError>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $errors = null;
    
    /**
     * $measures
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReportMeasure> $measures
     */
	#[\JMS\Serializer\Annotation\SerializedName('measures')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReportMeasure>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $measures = null;
    
    /**
     * $reportData
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReportComponent> $reportData
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportData')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReportComponent>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reportData = null;
    
    /**
     * $reportInfo
     * 
     * @var ?array<string, string> $reportInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportInfo')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reportInfo = null;
    
	public function __construct()
	{
		$this->dimensions = null;
		$this->errors = null;
		$this->measures = null;
		$this->reportData = null;
		$this->reportInfo = null;
	}
}
