// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// MedicalTranscriptionJob - <p>Provides detailed information about a medical transcription job.</p> <p>To view the status of the specified medical transcription job, check the <code>TranscriptionJobStatus</code> field. If the status is <code>COMPLETED</code>, the job is finished and you can find the results at the location specified in <code>TranscriptFileUri</code>. If the status is <code>FAILED</code>, <code>FailureReason</code> provides details on why your transcription job failed.</p>
type MedicalTranscriptionJob struct {
	CompletionTime            *time.Time                            `json:"CompletionTime,omitempty"`
	ContentIdentificationType *MedicalContentIdentificationTypeEnum `json:"ContentIdentificationType,omitempty"`
	CreationTime              *time.Time                            `json:"CreationTime,omitempty"`
	FailureReason             *string                               `json:"FailureReason,omitempty"`
	LanguageCode              *LanguageCodeEnum                     `json:"LanguageCode,omitempty"`
	// <p>Describes the Amazon S3 location of the media file you want to use in your request.</p> <p>For information on supported media formats, refer to the <a href="https://docs.aws.amazon.com/APIReference/API_StartTranscriptionJob.html#transcribe-StartTranscriptionJob-request-MediaFormat">MediaFormat</a> parameter or the <a href="https://docs.aws.amazon.com/transcribe/latest/dg/how-input.html#how-input-audio">Media formats</a> section in the Amazon S3 Developer Guide.</p>
	Media                       *Media                       `json:"Media,omitempty"`
	MediaFormat                 *MediaFormatEnum             `json:"MediaFormat,omitempty"`
	MediaSampleRateHertz        *int64                       `json:"MediaSampleRateHertz,omitempty"`
	MedicalTranscriptionJobName *string                      `json:"MedicalTranscriptionJobName,omitempty"`
	Settings                    *MedicalTranscriptionSetting `json:"Settings,omitempty"`
	Specialty                   *SpecialtyEnum               `json:"Specialty,omitempty"`
	StartTime                   *time.Time                   `json:"StartTime,omitempty"`
	Tags                        []Tag                        `json:"Tags,omitempty"`
	Transcript                  *MedicalTranscript           `json:"Transcript,omitempty"`
	TranscriptionJobStatus      *TranscriptionJobStatusEnum  `json:"TranscriptionJobStatus,omitempty"`
	Type                        *TypeEnum                    `json:"Type,omitempty"`
}
