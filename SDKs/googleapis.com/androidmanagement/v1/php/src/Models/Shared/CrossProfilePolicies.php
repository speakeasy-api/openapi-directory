<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CrossProfilePolicies - Cross-profile policies applied on the device.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CrossProfilePolicies
{
    /**
     * Whether text copied from one profile (personal or work) can be pasted in the other profile.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesCrossProfileCopyPasteEnum $crossProfileCopyPaste
     */
	#[\JMS\Serializer\Annotation\SerializedName('crossProfileCopyPaste')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesCrossProfileCopyPasteEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CrossProfilePoliciesCrossProfileCopyPasteEnum $crossProfileCopyPaste = null;
    
    /**
     * Whether data from one profile (personal or work) can be shared with apps in the other profile. Specifically controls simple data sharing via intents. Management of other cross-profile communication channels, such as contact search, copy/paste, or connected work & personal apps, are configured separately.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesCrossProfileDataSharingEnum $crossProfileDataSharing
     */
	#[\JMS\Serializer\Annotation\SerializedName('crossProfileDataSharing')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesCrossProfileDataSharingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CrossProfilePoliciesCrossProfileDataSharingEnum $crossProfileDataSharing = null;
    
    /**
     * Whether contacts stored in the work profile can be shown in personal profile contact searches and incoming calls.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesShowWorkContactsInPersonalProfileEnum $showWorkContactsInPersonalProfile
     */
	#[\JMS\Serializer\Annotation\SerializedName('showWorkContactsInPersonalProfile')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesShowWorkContactsInPersonalProfileEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CrossProfilePoliciesShowWorkContactsInPersonalProfileEnum $showWorkContactsInPersonalProfile = null;
    
    /**
     * Specifies the default behaviour for work profile widgets. If the policy does not specify work_profile_widgets for a specific application, it will behave according to the value specified here.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesWorkProfileWidgetsDefaultEnum $workProfileWidgetsDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('workProfileWidgetsDefault')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CrossProfilePoliciesWorkProfileWidgetsDefaultEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CrossProfilePoliciesWorkProfileWidgetsDefaultEnum $workProfileWidgetsDefault = null;
    
	public function __construct()
	{
		$this->crossProfileCopyPaste = null;
		$this->crossProfileDataSharing = null;
		$this->showWorkContactsInPersonalProfile = null;
		$this->workProfileWidgetsDefault = null;
	}
}
