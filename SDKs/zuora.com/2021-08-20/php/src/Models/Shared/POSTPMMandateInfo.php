<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * POSTPMMandateInfo - The mandate information for the Credit Card, ACH, or Bank Transfer payment method.
 * 
 * 
 * The following mandate fields are specific to the ACH and Bank Transfer payment methods:
 * * `mandateId`
 * * `mandateReceivedStatus`
 * * `existingMandateStatus`
 * * `mandateCreationDate`
 * * `mandateUpdateDate`
 * * `mandateStatus`
 * * `mandateReason`
 * 
 * The following mandate fields are specific to the Credit Card payment method:
 * * `mitTransactionId`
 * * `mitProfileAgreedOn`
 * * `mitConsentAgreementRef`
 * * `mitConsentAgreementSrc`
 * * `mitProfileType`
 * * `mitProfileAction`
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class POSTPMMandateInfo
{
    /**
     * Indicates whether the mandate is an existing mandate.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfoExistingMandateStatusEnum $existingMandateStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('existingMandateStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfoExistingMandateStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPMMandateInfoExistingMandateStatusEnum $existingMandateStatus = null;
    
    /**
     * The date on which the mandate was created.
     * 
     * 
     * 
     * @var ?\DateTime $mandateCreationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateCreationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $mandateCreationDate = null;
    
    /**
     * The mandate ID.
     * 
     * 
     * 
     * @var ?string $mandateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandateId = null;
    
    /**
     * The reason of the mandate from the gateway side.
     * 
     * 
     * 
     * @var ?string $mandateReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandateReason = null;
    
    /**
     * Indicates whether the mandate is received from the gateway
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfoMandateReceivedStatusEnum $mandateReceivedStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateReceivedStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfoMandateReceivedStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPMMandateInfoMandateReceivedStatusEnum $mandateReceivedStatus = null;
    
    /**
     * The status of the mandate from the gateway side.
     * 
     * 
     * 
     * @var ?string $mandateStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandateStatus = null;
    
    /**
     * The date on which the mandate was updated.
     * 
     * 
     * 
     * @var ?\DateTime $mandateUpdateDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateUpdateDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $mandateUpdateDate = null;
    
    /**
     * Reference for the consent agreement that you have established with the customer.  
     * 
     * 
     * 
     * @var ?string $mitConsentAgreementRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('mitConsentAgreementRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mitConsentAgreementRef = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('mitConsentAgreementSrc')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfoMitConsentAgreementSrcEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPMMandateInfoMitConsentAgreementSrcEnum $mitConsentAgreementSrc = null;
    
    /**
     * Specifies how Zuora activates the stored credential profile. Only applicable if you set the `status` field to `Active`.
     * 
     * 
     * * `Activate` (default) - Use this value if you are creating the stored credential profile after receiving the customer's consent.
     * 
     *   Zuora will create the stored credential profile then send a cardholder-initiated transaction (CIT) to the payment gateway to validate the stored credential profile. If the CIT succeeds, the status of the stored credential profile will be `Active`. If the CIT does not succeed, Zuora will not create a stored credential profile.
     *   
     *   If the payment gateway does not support the stored credential transaction framework, the status of the stored credential profile will be `Agreed`.
     * 
     * 
     * * `Persist` - Use this value if the stored credential profile represents a stored credential profile in an external system. The status of the payment method's stored credential profile will be `Active`.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfoMitProfileActionEnum $mitProfileAction
     */
	#[\JMS\Serializer\Annotation\SerializedName('mitProfileAction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfoMitProfileActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPMMandateInfoMitProfileActionEnum $mitProfileAction = null;
    
    /**
     * The date on which the stored credential profile is agreed. The date format is `yyyy-mm-dd`.
     * 
     * 
     * 
     * @var ?\DateTime $mitProfileAgreedOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('mitProfileAgreedOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $mitProfileAgreedOn = null;
    
    /**
     * Indicates the type of the stored credential profile.
     * 
     * 
     * 
     * @var ?string $mitProfileType
     */
	#[\JMS\Serializer\Annotation\SerializedName('mitProfileType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mitProfileType = null;
    
    /**
     * Specifies the ID of the transaction. Only applicable if you set the `mitProfileAction` field to `Persist`.
     * 
     * 
     * 
     * @var ?string $mitTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('mitTransactionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mitTransactionId = null;
    
	public function __construct()
	{
		$this->existingMandateStatus = null;
		$this->mandateCreationDate = null;
		$this->mandateId = null;
		$this->mandateReason = null;
		$this->mandateReceivedStatus = null;
		$this->mandateStatus = null;
		$this->mandateUpdateDate = null;
		$this->mitConsentAgreementRef = null;
		$this->mitConsentAgreementSrc = null;
		$this->mitProfileAction = null;
		$this->mitProfileAgreedOn = null;
		$this->mitProfileType = null;
		$this->mitTransactionId = null;
	}
}
