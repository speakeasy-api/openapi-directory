// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDataplexV1SessionStateEnum - Output only. State of Session
type GoogleCloudDataplexV1SessionStateEnum string

const (
	GoogleCloudDataplexV1SessionStateEnumStateUnspecified GoogleCloudDataplexV1SessionStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudDataplexV1SessionStateEnumActive           GoogleCloudDataplexV1SessionStateEnum = "ACTIVE"
	GoogleCloudDataplexV1SessionStateEnumCreating         GoogleCloudDataplexV1SessionStateEnum = "CREATING"
	GoogleCloudDataplexV1SessionStateEnumDeleting         GoogleCloudDataplexV1SessionStateEnum = "DELETING"
	GoogleCloudDataplexV1SessionStateEnumActionRequired   GoogleCloudDataplexV1SessionStateEnum = "ACTION_REQUIRED"
)

func (e GoogleCloudDataplexV1SessionStateEnum) ToPointer() *GoogleCloudDataplexV1SessionStateEnum {
	return &e
}

func (e *GoogleCloudDataplexV1SessionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "CREATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "ACTION_REQUIRED":
		*e = GoogleCloudDataplexV1SessionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDataplexV1SessionStateEnum: %v", v)
	}
}

// GoogleCloudDataplexV1Session - Represents an active analyze session running for a user.
type GoogleCloudDataplexV1Session struct {
	// Output only. Session start time.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The relative resource name of the content, of the form: projects/{project_id}/locations/{location_id}/lakes/{lake_id}/environment/{environment_id}/sessions/{session_id}
	Name *string `json:"name,omitempty"`
	// Output only. State of Session
	State *GoogleCloudDataplexV1SessionStateEnum `json:"state,omitempty"`
	// Output only. Email of user running the session.
	UserID *string `json:"userId,omitempty"`
}
