/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LoyaltyProgramAccrualRule - Defines an accrual rule, which is how buyers can earn points.
 */
public class LoyaltyProgramAccrualRule {
    /**
     * The type of the accrual rule that defines how buyers can earn points.
     */
    @JsonProperty("accrual_type")
    public String accrualType;

    public LoyaltyProgramAccrualRule withAccrualType(String accrualType) {
        this.accrualType = accrualType;
        return this;
    }
    
    /**
     * When the accrual rule is item-based or category-based, this field specifies the ID 
     * of the [catalog object](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) that buyers can purchase to earn points. 
     * If `accrual_type` is `ITEM_VARIATION`, the object is an item variation. 
     * If `accrual_type` is `CATEGORY`, the object is a category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalog_object_id")
    public String catalogObjectId;

    public LoyaltyProgramAccrualRule withCatalogObjectId(String catalogObjectId) {
        this.catalogObjectId = catalogObjectId;
        return this;
    }
    
    /**
     * When the accrual rule is spend-based (`accrual_type` is `SPEND`), this field 
     * lists the IDs of any `CATEGORY` catalog objects that are excluded from points accrual. 
     * 
     * You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects) 
     * endpoint to retrieve information about the excluded categories.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excluded_category_ids")
    public String[] excludedCategoryIds;

    public LoyaltyProgramAccrualRule withExcludedCategoryIds(String[] excludedCategoryIds) {
        this.excludedCategoryIds = excludedCategoryIds;
        return this;
    }
    
    /**
     * When the accrual rule is spend-based (`accrual_type` is `SPEND`), this field 
     * lists the IDs of any `ITEM_VARIATION` catalog objects that are excluded from points accrual. 
     * 
     * You can use the [BatchRetrieveCatalogObjects](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/batch-retrieve-catalog-objects) 
     * endpoint to retrieve information about the excluded item variations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excluded_item_variation_ids")
    public String[] excludedItemVariationIds;

    public LoyaltyProgramAccrualRule withExcludedItemVariationIds(String[] excludedItemVariationIds) {
        this.excludedItemVariationIds = excludedItemVariationIds;
        return this;
    }
    
    /**
     * The number of points that 
     * buyers earn based on the `accrual_type`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("points")
    public Long points;

    public LoyaltyProgramAccrualRule withPoints(Long points) {
        this.points = points;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spend_amount_money")
    public Money spendAmountMoney;

    public LoyaltyProgramAccrualRule withSpendAmountMoney(Money spendAmountMoney) {
        this.spendAmountMoney = spendAmountMoney;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visit_minimum_amount_money")
    public Money visitMinimumAmountMoney;

    public LoyaltyProgramAccrualRule withVisitMinimumAmountMoney(Money visitMinimumAmountMoney) {
        this.visitMinimumAmountMoney = visitMinimumAmountMoney;
        return this;
    }
    
    public LoyaltyProgramAccrualRule(@JsonProperty("accrual_type") String accrualType) {
        this.accrualType = accrualType;
  }
}
