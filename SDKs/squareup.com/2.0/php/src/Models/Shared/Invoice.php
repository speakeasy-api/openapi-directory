<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Invoice - Stores information about an invoice. You use the Invoices API to create and manage
 * 
 * invoices. For more information, see [Manage Invoices Using the Invoices API](https://developer.squareup.com/docs/invoices-api/overview).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Invoice
{
    /**
     * The payment methods that customers can use to pay an invoice on the Square-hosted invoice page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InvoiceAcceptedPaymentMethods $acceptedPaymentMethods
     */
	#[\JMS\Serializer\Annotation\SerializedName('accepted_payment_methods')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InvoiceAcceptedPaymentMethods')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InvoiceAcceptedPaymentMethods $acceptedPaymentMethods = null;
    
    /**
     * The timestamp when the invoice was created, in RFC 3339 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * Additional seller-defined fields to render on the invoice. These fields are visible to sellers and buyers
     * 
     * on the Square-hosted invoice page and in emailed or PDF copies of invoices. For more information, see
     * [Custom fields](https://developer.squareup.com/docs/invoices-api/overview#custom-fields).
     * 
     * Adding custom fields to an invoice requires an 
     * [Invoices Plus subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
     * 
     * Max: 2 custom fields
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InvoiceCustomField> $customFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InvoiceCustomField>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFields = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('delivery_method')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $deliveryMethod = null;
    
    /**
     * The description of the invoice. This is visible to the customer receiving the invoice.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The Square-assigned ID of the invoice.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * A user-friendly invoice number. The value is unique within a location.
     * 
     * If not provided when creating an invoice, Square assigns a value.
     * It increments from 1 and padded with zeros making it 7 characters long
     * (for example, 0000001 and 0000002).
     * 
     * @var ?string $invoiceNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoice_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $invoiceNumber = null;
    
    /**
     * The ID of the location that this invoice is associated with. 
     * 
     * 
     * If specified in a `CreateInvoice` request, the value must match the `location_id` of the associated order.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $nextPaymentAmountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('next_payment_amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $nextPaymentAmountMoney = null;
    
    /**
     * The ID of the [order](https://developer.squareup.com/reference/square_2021-08-18/objects/Order) for which the invoice is created. 
     * 
     * This field is required when creating an invoice, and the order must be in the `OPEN` state.
     * 
     * To view the line items and other information for the associated order, call the 
     * [RetrieveOrder](https://developer.squareup.com/reference/square_2021-08-18/orders-api/retrieve-order) endpoint using the order ID.
     * 
     * @var ?string $orderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('order_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orderId = null;
    
    /**
     * The payment schedule for the invoice, represented by one or more payment requests that
     * 
     * define payment settings, such as amount due and due date. An invoice supports the following payment request combinations:
     * - One balance
     * - One deposit with one balance
     * - 2–12 installments 
     * - One deposit with 2–12 installments
     * 
     * This field is required when creating an invoice. It must contain at least one payment request. 
     * All payment requests for the invoice must equal the total order amount. For more information, see 
     * [Payment requests](https://developer.squareup.com/docs/invoices-api/overview#payment-requests).
     * 
     * Adding `INSTALLMENT` payment requests to an invoice requires an 
     * [Invoices Plus subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InvoicePaymentRequest> $paymentRequests
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_requests')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InvoicePaymentRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $paymentRequests = null;
    
    /**
     * Provides customer data that Square uses to deliver an invoice.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InvoiceRecipient $primaryRecipient
     */
	#[\JMS\Serializer\Annotation\SerializedName('primary_recipient')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InvoiceRecipient')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InvoiceRecipient $primaryRecipient = null;
    
    /**
     * The URL of the Square-hosted invoice page.
     * 
     * After you publish the invoice using the `PublishInvoice` endpoint, Square hosts the invoice
     * page and returns the page URL in the response.
     * 
     * @var ?string $publicUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicUrl = null;
    
    /**
     * The timestamp when the invoice is scheduled for processing, in RFC 3339 format.
     * 
     * After the invoice is published, Square processes the invoice on the specified date,
     * according to the delivery method and payment request settings.
     * 
     * If the field is not set, Square processes the invoice immediately after it is published.
     * 
     * @var ?string $scheduledAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduled_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheduledAt = null;
    
    /**
     * The status of the invoice.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * The ID of the [subscription](https://developer.squareup.com/reference/square_2021-08-18/objects/Subscription) associated with the invoice.
     * 
     * This field is present only on subscription billing invoices.
     * 
     * @var ?string $subscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscription_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionId = null;
    
    /**
     * The time zone used to interpret calendar dates on the invoice, such as `due_date`.
     * 
     * When an invoice is created, this field is set to the `timezone` specified for the seller
     * location. The value cannot be changed.
     * 
     * For example, a payment `due_date` of 2021-03-09 with a `timezone` of America/Los\_Angeles
     * becomes overdue at midnight on March 9 in America/Los\_Angeles (which equals a UTC timestamp
     * of 2021-03-10T08:00:00Z).
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
    /**
     * The title of the invoice.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * The timestamp when the invoice was last updated, in RFC 3339 format.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * The Square-assigned version number, which is incremented each time an update is committed to the invoice.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->acceptedPaymentMethods = null;
		$this->createdAt = null;
		$this->customFields = null;
		$this->deliveryMethod = null;
		$this->description = null;
		$this->id = null;
		$this->invoiceNumber = null;
		$this->locationId = null;
		$this->nextPaymentAmountMoney = null;
		$this->orderId = null;
		$this->paymentRequests = null;
		$this->primaryRecipient = null;
		$this->publicUrl = null;
		$this->scheduledAt = null;
		$this->status = null;
		$this->subscriptionId = null;
		$this->timezone = null;
		$this->title = null;
		$this->updatedAt = null;
		$this->version = null;
	}
}
