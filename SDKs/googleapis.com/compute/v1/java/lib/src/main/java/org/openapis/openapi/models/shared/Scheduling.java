/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Scheduling - Sets the scheduling options for an Instance.
 */
public class Scheduling {
    /**
     * Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automaticRestart")
    public Boolean automaticRestart;
    public Scheduling withAutomaticRestart(Boolean automaticRestart) {
        this.automaticRestart = automaticRestart;
        return this;
    }
    
    /**
     * Specifies the termination action for the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceTerminationAction")
    public SchedulingInstanceTerminationActionEnum instanceTerminationAction;
    public Scheduling withInstanceTerminationAction(SchedulingInstanceTerminationActionEnum instanceTerminationAction) {
        this.instanceTerminationAction = instanceTerminationAction;
        return this;
    }
    
    /**
     * An opaque location hint used to place the instance close to other resources. This field is for use by internal tools that use the public API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationHint")
    public String locationHint;
    public Scheduling withLocationHint(String locationHint) {
        this.locationHint = locationHint;
        return this;
    }
    
    /**
     * The minimum number of virtual CPUs this instance will consume when running on a sole-tenant node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minNodeCpus")
    public Integer minNodeCpus;
    public Scheduling withMinNodeCpus(Integer minNodeCpus) {
        this.minNodeCpus = minNodeCpus;
        return this;
    }
    
    /**
     * A set of node affinity and anti-affinity configurations. Refer to Configuring node affinity for more information. Overrides reservationAffinity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeAffinities")
    public SchedulingNodeAffinity[] nodeAffinities;
    public Scheduling withNodeAffinities(SchedulingNodeAffinity[] nodeAffinities) {
        this.nodeAffinities = nodeAffinities;
        return this;
    }
    
    /**
     * Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Set VM host maintenance policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onHostMaintenance")
    public SchedulingOnHostMaintenanceEnum onHostMaintenance;
    public Scheduling withOnHostMaintenance(SchedulingOnHostMaintenanceEnum onHostMaintenance) {
        this.onHostMaintenance = onHostMaintenance;
        return this;
    }
    
    /**
     * Defines whether the instance is preemptible. This can only be set during instance creation or while the instance is stopped and therefore, in a `TERMINATED` state. See Instance Life Cycle for more information on the possible instance states.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preemptible")
    public Boolean preemptible;
    public Scheduling withPreemptible(Boolean preemptible) {
        this.preemptible = preemptible;
        return this;
    }
    
    /**
     * Specifies the provisioning model of the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provisioningModel")
    public SchedulingProvisioningModelEnum provisioningModel;
    public Scheduling withProvisioningModel(SchedulingProvisioningModelEnum provisioningModel) {
        this.provisioningModel = provisioningModel;
        return this;
    }
    
}
