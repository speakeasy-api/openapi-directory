/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * WorkspaceDescription - A structure containing information about an Amazon Managed Grafana workspace in your account.
 */
public class WorkspaceDescription {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountAccessType")
    public AccountAccessTypeEnum accountAccessType;
    public WorkspaceDescription withAccountAccessType(AccountAccessTypeEnum accountAccessType) {
        this.accountAccessType = accountAccessType;
        return this;
    }
    
    @JsonProperty("authentication")
    public AuthenticationSummary authentication;
    public WorkspaceDescription withAuthentication(AuthenticationSummary authentication) {
        this.authentication = authentication;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;
    public WorkspaceDescription withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonProperty("dataSources")
    public DataSourceTypeEnum[] dataSources;
    public WorkspaceDescription withDataSources(DataSourceTypeEnum[] dataSources) {
        this.dataSources = dataSources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public WorkspaceDescription withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("endpoint")
    public String endpoint;
    public WorkspaceDescription withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("freeTrialConsumed")
    public Boolean freeTrialConsumed;
    public WorkspaceDescription withFreeTrialConsumed(Boolean freeTrialConsumed) {
        this.freeTrialConsumed = freeTrialConsumed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("freeTrialExpiration")
    public OffsetDateTime freeTrialExpiration;
    public WorkspaceDescription withFreeTrialExpiration(OffsetDateTime freeTrialExpiration) {
        this.freeTrialExpiration = freeTrialExpiration;
        return this;
    }
    
    @JsonProperty("grafanaVersion")
    public String grafanaVersion;
    public WorkspaceDescription withGrafanaVersion(String grafanaVersion) {
        this.grafanaVersion = grafanaVersion;
        return this;
    }
    
    @JsonProperty("id")
    public String id;
    public WorkspaceDescription withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("licenseExpiration")
    public OffsetDateTime licenseExpiration;
    public WorkspaceDescription withLicenseExpiration(OffsetDateTime licenseExpiration) {
        this.licenseExpiration = licenseExpiration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseType")
    public LicenseTypeEnum licenseType;
    public WorkspaceDescription withLicenseType(LicenseTypeEnum licenseType) {
        this.licenseType = licenseType;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modified")
    public OffsetDateTime modified;
    public WorkspaceDescription withModified(OffsetDateTime modified) {
        this.modified = modified;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public WorkspaceDescription withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkAccessControl")
    public NetworkAccessConfiguration networkAccessControl;
    public WorkspaceDescription withNetworkAccessControl(NetworkAccessConfiguration networkAccessControl) {
        this.networkAccessControl = networkAccessControl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notificationDestinations")
    public NotificationDestinationTypeEnum[] notificationDestinations;
    public WorkspaceDescription withNotificationDestinations(NotificationDestinationTypeEnum[] notificationDestinations) {
        this.notificationDestinations = notificationDestinations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationRoleName")
    public String organizationRoleName;
    public WorkspaceDescription withOrganizationRoleName(String organizationRoleName) {
        this.organizationRoleName = organizationRoleName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationalUnits")
    public String[] organizationalUnits;
    public WorkspaceDescription withOrganizationalUnits(String[] organizationalUnits) {
        this.organizationalUnits = organizationalUnits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissionType")
    public PermissionTypeEnum permissionType;
    public WorkspaceDescription withPermissionType(PermissionTypeEnum permissionType) {
        this.permissionType = permissionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stackSetName")
    public String stackSetName;
    public WorkspaceDescription withStackSetName(String stackSetName) {
        this.stackSetName = stackSetName;
        return this;
    }
    
    @JsonProperty("status")
    public WorkspaceStatusEnum status;
    public WorkspaceDescription withStatus(WorkspaceStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public WorkspaceDescription withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcConfiguration")
    public VpcConfiguration vpcConfiguration;
    public WorkspaceDescription withVpcConfiguration(VpcConfiguration vpcConfiguration) {
        this.vpcConfiguration = vpcConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceRoleArn")
    public String workspaceRoleArn;
    public WorkspaceDescription withWorkspaceRoleArn(String workspaceRoleArn) {
        this.workspaceRoleArn = workspaceRoleArn;
        return this;
    }
    
}
