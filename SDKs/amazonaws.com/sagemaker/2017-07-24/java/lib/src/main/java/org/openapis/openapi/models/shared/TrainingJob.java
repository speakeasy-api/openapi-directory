/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TrainingJob - Contains information about a training job.
 */
public class TrainingJob {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AlgorithmSpecification")
    public AlgorithmSpecification algorithmSpecification;
    public TrainingJob withAlgorithmSpecification(AlgorithmSpecification algorithmSpecification) {
        this.algorithmSpecification = algorithmSpecification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutoMLJobArn")
    public String autoMLJobArn;
    public TrainingJob withAutoMLJobArn(String autoMLJobArn) {
        this.autoMLJobArn = autoMLJobArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillableTimeInSeconds")
    public Long billableTimeInSeconds;
    public TrainingJob withBillableTimeInSeconds(Long billableTimeInSeconds) {
        this.billableTimeInSeconds = billableTimeInSeconds;
        return this;
    }
    
    /**
     * Contains information about the output location for managed spot training checkpoint data. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CheckpointConfig")
    public CheckpointConfig checkpointConfig;
    public TrainingJob withCheckpointConfig(CheckpointConfig checkpointConfig) {
        this.checkpointConfig = checkpointConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public TrainingJob withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * Configuration information for the Amazon SageMaker Debugger hook parameters, metric and tensor collections, and storage paths. To learn more about how to configure the &lt;code&gt;DebugHookConfig&lt;/code&gt; parameter, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html"&gt;Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DebugHookConfig")
    public DebugHookConfig debugHookConfig;
    public TrainingJob withDebugHookConfig(DebugHookConfig debugHookConfig) {
        this.debugHookConfig = debugHookConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DebugRuleConfigurations")
    public DebugRuleConfiguration[] debugRuleConfigurations;
    public TrainingJob withDebugRuleConfigurations(DebugRuleConfiguration[] debugRuleConfigurations) {
        this.debugRuleConfigurations = debugRuleConfigurations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DebugRuleEvaluationStatuses")
    public DebugRuleEvaluationStatus[] debugRuleEvaluationStatuses;
    public TrainingJob withDebugRuleEvaluationStatuses(DebugRuleEvaluationStatus[] debugRuleEvaluationStatuses) {
        this.debugRuleEvaluationStatuses = debugRuleEvaluationStatuses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableInterContainerTrafficEncryption")
    public Boolean enableInterContainerTrafficEncryption;
    public TrainingJob withEnableInterContainerTrafficEncryption(Boolean enableInterContainerTrafficEncryption) {
        this.enableInterContainerTrafficEncryption = enableInterContainerTrafficEncryption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableManagedSpotTraining")
    public Boolean enableManagedSpotTraining;
    public TrainingJob withEnableManagedSpotTraining(Boolean enableManagedSpotTraining) {
        this.enableManagedSpotTraining = enableManagedSpotTraining;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnableNetworkIsolation")
    public Boolean enableNetworkIsolation;
    public TrainingJob withEnableNetworkIsolation(Boolean enableNetworkIsolation) {
        this.enableNetworkIsolation = enableNetworkIsolation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Environment")
    public java.util.Map<String, String> environment;
    public TrainingJob withEnvironment(java.util.Map<String, String> environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * &lt;p&gt;Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateProcessingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTrainingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTransformJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExperimentConfig")
    public ExperimentConfig experimentConfig;
    public TrainingJob withExperimentConfig(ExperimentConfig experimentConfig) {
        this.experimentConfig = experimentConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureReason")
    public String failureReason;
    public TrainingJob withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FinalMetricDataList")
    public MetricData[] finalMetricDataList;
    public TrainingJob withFinalMetricDataList(MetricData[] finalMetricDataList) {
        this.finalMetricDataList = finalMetricDataList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameters")
    public java.util.Map<String, String> hyperParameters;
    public TrainingJob withHyperParameters(java.util.Map<String, String> hyperParameters) {
        this.hyperParameters = hyperParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputDataConfig")
    public Channel[] inputDataConfig;
    public TrainingJob withInputDataConfig(Channel[] inputDataConfig) {
        this.inputDataConfig = inputDataConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LabelingJobArn")
    public String labelingJobArn;
    public TrainingJob withLabelingJobArn(String labelingJobArn) {
        this.labelingJobArn = labelingJobArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public TrainingJob withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModelArtifacts")
    public ModelArtifacts modelArtifacts;
    public TrainingJob withModelArtifacts(ModelArtifacts modelArtifacts) {
        this.modelArtifacts = modelArtifacts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputDataConfig")
    public OutputDataConfig outputDataConfig;
    public TrainingJob withOutputDataConfig(OutputDataConfig outputDataConfig) {
        this.outputDataConfig = outputDataConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceConfig")
    public ResourceConfig resourceConfig;
    public TrainingJob withResourceConfig(ResourceConfig resourceConfig) {
        this.resourceConfig = resourceConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RetryStrategy")
    public RetryStrategy retryStrategy;
    public TrainingJob withRetryStrategy(RetryStrategy retryStrategy) {
        this.retryStrategy = retryStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoleArn")
    public String roleArn;
    public TrainingJob withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecondaryStatus")
    public SecondaryStatusEnum secondaryStatus;
    public TrainingJob withSecondaryStatus(SecondaryStatusEnum secondaryStatus) {
        this.secondaryStatus = secondaryStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecondaryStatusTransitions")
    public SecondaryStatusTransition[] secondaryStatusTransitions;
    public TrainingJob withSecondaryStatusTransitions(SecondaryStatusTransition[] secondaryStatusTransitions) {
        this.secondaryStatusTransitions = secondaryStatusTransitions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StoppingCondition")
    public StoppingCondition stoppingCondition;
    public TrainingJob withStoppingCondition(StoppingCondition stoppingCondition) {
        this.stoppingCondition = stoppingCondition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public TrainingJob withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Configuration of storage locations for the Amazon SageMaker Debugger TensorBoard output data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TensorBoardOutputConfig")
    public TensorBoardOutputConfig tensorBoardOutputConfig;
    public TrainingJob withTensorBoardOutputConfig(TensorBoardOutputConfig tensorBoardOutputConfig) {
        this.tensorBoardOutputConfig = tensorBoardOutputConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TrainingEndTime")
    public OffsetDateTime trainingEndTime;
    public TrainingJob withTrainingEndTime(OffsetDateTime trainingEndTime) {
        this.trainingEndTime = trainingEndTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingJobArn")
    public String trainingJobArn;
    public TrainingJob withTrainingJobArn(String trainingJobArn) {
        this.trainingJobArn = trainingJobArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingJobName")
    public String trainingJobName;
    public TrainingJob withTrainingJobName(String trainingJobName) {
        this.trainingJobName = trainingJobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingJobStatus")
    public TrainingJobStatusEnum trainingJobStatus;
    public TrainingJob withTrainingJobStatus(TrainingJobStatusEnum trainingJobStatus) {
        this.trainingJobStatus = trainingJobStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TrainingStartTime")
    public OffsetDateTime trainingStartTime;
    public TrainingJob withTrainingStartTime(OffsetDateTime trainingStartTime) {
        this.trainingStartTime = trainingStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingTimeInSeconds")
    public Long trainingTimeInSeconds;
    public TrainingJob withTrainingTimeInSeconds(Long trainingTimeInSeconds) {
        this.trainingTimeInSeconds = trainingTimeInSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TuningJobArn")
    public String tuningJobArn;
    public TrainingJob withTuningJobArn(String tuningJobArn) {
        this.tuningJobArn = tuningJobArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcConfig")
    public VpcConfig vpcConfig;
    public TrainingJob withVpcConfig(VpcConfig vpcConfig) {
        this.vpcConfig = vpcConfig;
        return this;
    }
    
}
