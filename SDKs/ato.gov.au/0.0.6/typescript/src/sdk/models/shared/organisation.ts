/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ElectronicAddress, ElectronicAddressInput } from "./electronicaddress";
import {
  OrganisationAddress,
  OrganisationAddressInput,
} from "./organisationaddress";
import { OrganisationName, OrganisationNameInput } from "./organisationname";
import {
  RegisteredIdentifier,
  RegisteredIdentifierInput,
} from "./registeredidentifier";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The organisation's legal entity type.
 */
export enum OrganisationLegalEntityTypeEnum {
  Company = "Company",
  Partnership = "Partnership",
  Trust = "Trust",
  JointVenture = "Joint Venture",
}

/**
 * The Organisation resource.
 */
export class OrganisationInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: OrganisationAddressInput })
  @Expose({ name: "addresses" })
  @Type(() => OrganisationAddressInput)
  addresses?: OrganisationAddressInput[];

  @SpeakeasyMetadata({ elemType: ElectronicAddressInput })
  @Expose({ name: "electronicAddresses" })
  @Type(() => ElectronicAddressInput)
  electronicAddresses?: ElectronicAddressInput[];

  /**
   * The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "establishmentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  establishmentDate: Date;

  /**
   * The organisation's legal entity type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalEntityType" })
  legalEntityType: OrganisationLegalEntityTypeEnum;

  @SpeakeasyMetadata({ elemType: OrganisationNameInput })
  @Expose({ name: "names" })
  @Type(() => OrganisationNameInput)
  names?: OrganisationNameInput[];

  @SpeakeasyMetadata({ elemType: RegisteredIdentifierInput })
  @Expose({ name: "registeredIdentifiers" })
  @Type(() => RegisteredIdentifierInput)
  registeredIdentifiers?: RegisteredIdentifierInput[];
}

/**
 * The Organisation resource.
 */
export class Organisation extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: OrganisationAddress })
  @Expose({ name: "addresses" })
  @Type(() => OrganisationAddress)
  addresses?: OrganisationAddress[];

  @SpeakeasyMetadata({ elemType: ElectronicAddress })
  @Expose({ name: "electronicAddresses" })
  @Type(() => ElectronicAddress)
  electronicAddresses?: ElectronicAddress[];

  /**
   * The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "establishmentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  establishmentDate: Date;

  /**
   * The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fromDate?: Date;

  /**
   * The party's unique identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The organisation's legal entity type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalEntityType" })
  legalEntityType: OrganisationLegalEntityTypeEnum;

  @SpeakeasyMetadata({ elemType: OrganisationName })
  @Expose({ name: "names" })
  @Type(() => OrganisationName)
  names?: OrganisationName[];

  @SpeakeasyMetadata({ elemType: RegisteredIdentifier })
  @Expose({ name: "registeredIdentifiers" })
  @Type(() => RegisteredIdentifier)
  registeredIdentifiers?: RegisteredIdentifier[];

  /**
   * The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  toDate?: Date;
}
