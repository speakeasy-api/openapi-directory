/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PUTScUpdateType - Container for custom fields of a Rate Plan Charge object.
 * 
 */
public class PUTScUpdateType {
    /**
     * Aligns charges within the same subscription if multiple charges begin on different dates.
     * 
     * Values:
     * 
     * * `AlignToCharge`
     * * `AlignToSubscriptionStart`
     * * `AlignToTermStart`
     * 
     * Available for the following charge types:
     * 
     * * Recurring
     * * Usage-based
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingPeriodAlignment")
    public String billingPeriodAlignment;
    public PUTScUpdateType withBillingPeriodAlignment(String billingPeriodAlignment) {
        this.billingPeriodAlignment = billingPeriodAlignment;
        return this;
    }
    
    /**
     * Container for charge model configuration data.
     * 
     * **Note**: This field is only available if you have the High Water Mark, Pre-Rated Pricing, or Multi-Attribute Pricing charge models enabled. These charge models are available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeModelConfiguration")
    public ChargeModelConfigurationType chargeModelConfiguration;
    public PUTScUpdateType withChargeModelConfiguration(ChargeModelConfigurationType chargeModelConfiguration) {
        this.chargeModelConfiguration = chargeModelConfiguration;
        return this;
    }
    
    /**
     * Description of the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PUTScUpdateType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Specifies the number of units in the base set of units for this charge. Must be &gt;=0.
     * 
     * Available for the following charge types for the Overage charge model:
     * 
     * * `Recurring`
     * * `Usage-based`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includedUnits")
    public Double includedUnits;
    public PUTScUpdateType withIncludedUnits(Double includedUnits) {
        this.includedUnits = includedUnits;
        return this;
    }
    
    /**
     * Price for units over the allowed amount. 
     * 
     * Available for the following charge type for the Overage and Tiered with Overage charge models:
     * 
     * * Usage-based
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overagePrice")
    public Double overagePrice;
    public PUTScUpdateType withOveragePrice(Double overagePrice) {
        this.overagePrice = overagePrice;
        return this;
    }
    
    /**
     * Price for units in the subscription rate plan.
     * 
     * Supports all charge types for the Flat Fee and Per Unit charge models
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;
    public PUTScUpdateType withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * Applies an automatic price change when a termed subscription is renewed. The Billing Admin setting **Enable Automatic Price Change When Subscriptions are Renewed?** must be set to Yes to use this field.
     * 
     * Values:
     * 
     * * `NoChange` (default)
     * * `SpecificPercentageValue`
     * * `UseLatestProductCatalogPricing`
     * 
     * Available for the following charge types:
     * 
     * * Recurring
     * * Usage-based
     * 
     * Not available for the Fixed-Amount Discount charge model.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceChangeOption")
    public String priceChangeOption;
    public PUTScUpdateType withPriceChangeOption(String priceChangeOption) {
        this.priceChangeOption = priceChangeOption;
        return this;
    }
    
    /**
     * Specifies the percentage to increase or decrease the price of a termed subscription's renewal. Required if you set the `PriceChangeOption` field to `SpecificPercentageValue`.
     * 
     * Decimal between `-100` and `100`.
     * 
     * Available for the following charge types:
     * 
     * * Recurring
     * * Usage-based
     * 
     * Not available for the Fixed-Amount Discount charge model.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceIncreasePercentage")
    public Double priceIncreasePercentage;
    public PUTScUpdateType withPriceIncreasePercentage(Double priceIncreasePercentage) {
        this.priceIncreasePercentage = priceIncreasePercentage;
        return this;
    }
    
    /**
     * Quantity of units; must be greater than zero.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;
    public PUTScUpdateType withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * ID of a rate-plan charge for this subscription.
     * 
     */
    @JsonProperty("ratePlanChargeId")
    public String ratePlanChargeId;
    public PUTScUpdateType withRatePlanChargeId(String ratePlanChargeId) {
        this.ratePlanChargeId = ratePlanChargeId;
        return this;
    }
    
    /**
     * Container for Volume, Tiered or Tiered with Overage charge models. Supports the following charge types:
     * 
     * * One-time
     * * Recurring
     * * Usage-based
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tiers")
    public POSTTierType[] tiers;
    public PUTScUpdateType withTiers(POSTTierType[] tiers) {
        this.tiers = tiers;
        return this;
    }
    
    /**
     * Specifies when to start billing the customer for the charge. Required if the `triggerEvent` field is set to USD.
     * 
     * `triggerDate` cannot be updated for the following using the REST update subscription call:
     * 
     * * One-time charge type
     * * Discount-Fixed Amount charge model
     * * Discount-Percentage charge model
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("triggerDate")
    public LocalDate triggerDate;
    public PUTScUpdateType withTriggerDate(LocalDate triggerDate) {
        this.triggerDate = triggerDate;
        return this;
    }
    
    /**
     * Specifies when to start billing the customer for the charge.
     * 
     * Values:
     * 
     * * `UCE`
     * * `USA`
     * * `UCA`
     * * `USD`
     * 
     * This is the date when charge changes in the REST request become effective.
     * 
     * `triggerEvent` cannot be updated for the following using the REST update subscription call:
     * 
     * * One-time charge type
     * * Discount-Fixed Amount charge model
     * * Discount-Percentage charge model
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerEvent")
    public String triggerEvent;
    public PUTScUpdateType withTriggerEvent(String triggerEvent) {
        this.triggerEvent = triggerEvent;
        return this;
    }
    
}
