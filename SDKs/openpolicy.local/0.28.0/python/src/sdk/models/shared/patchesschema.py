"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class PatchesSchemaOpEnum(str, Enum):
    r"""JSON patch operation type"""
    ADD = 'add'
    REMOVE = 'remove'
    REPLACE = 'replace'
    MOVE = 'move'
    COPY = 'copy'
    TEST = 'test'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchesSchema:
    r"""A JSON patch operation"""
    
    op: PatchesSchemaOpEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('op') }})
    r"""JSON patch operation type"""  
    path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path') }})
    r"""A [JSON pointer](https://tools.ietf.org/html/rfc6901) to a location within the target document where the operation is performed.
    
    The *effective path* is this value prefixed with the API call's `path` parameter.
    
    The server will return a *bad request* (404) response if:
    
    - The *parent* of the effective path does not refer to an existing document
    - For **remove** and **replace** operations, the effective path does not refer to an existing document.
    """  
    value: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value to add, replace or test."""  
    