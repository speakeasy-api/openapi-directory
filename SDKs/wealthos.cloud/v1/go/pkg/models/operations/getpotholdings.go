// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetPotHoldingsSecurity struct {
	APISecretKey shared.SchemeAPISecretKey `security:"scheme,type=apiKey,subtype=header"`
}

type GetPotHoldingsPathParams struct {
	// Pot Id
	PotID string `pathParam:"style=simple,explode=false,name=pot_id"`
}

type GetPotHoldingsHeaders struct {
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

type GetPotHoldingsRequest struct {
	PathParams GetPotHoldingsPathParams
	Headers    GetPotHoldingsHeaders
	Security   GetPotHoldingsSecurity
}

// GetPotHoldings500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type GetPotHoldings500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPotHoldings429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type GetPotHoldings429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPotHoldings404ApplicationJSON - The specified resource was not found
type GetPotHoldings404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPotHoldings403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type GetPotHoldings403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPotHoldings401ApplicationJSON - You do not have permissions to access this resource.
type GetPotHoldings401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPotHoldings400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type GetPotHoldings400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

type GetPotHoldings200ApplicationJSONHoldings struct {
	// Additional external details of the holding. This may be populated in reconciliation process
	AdditionalExternalDetails map[string]interface{} `json:"additional_external_details,omitempty"`
	// Per-unit book cost for a particular holding (applicable for investment product holdings only)
	AverageBookCost *string `json:"average_book_cost,omitempty"`
	// Total book cost for the total units currently held within the pot (applicable for investment product holdings only)
	CostOfHolding *string `json:"cost_of_holding,omitempty"`
	// Currency of the pot
	Currency string `json:"currency"`
	// Free quantity of the investment product holding. Will be empty for the cash holding
	FreeQuantity *string `json:"free_quantity,omitempty"`
	// Free value of the holding
	FreeValue string `json:"free_value"`
	// Investment product id of the holding. Will be 'cash' for cash holdings
	InvestmentProductID string `json:"investment_product_id"`
	// Investment product name of the holding. Will be empty for cash holdings
	InvestmentProductName *string `json:"investment_product_name,omitempty"`
	// Locked quantity of the investment product holding. Will be empty for the cash holding
	LockedQuantity *string `json:"locked_quantity,omitempty"`
	// Locked value of the holding
	LockedValue string `json:"locked_value"`
	// Last price available for the investment product. Will be empty for the cash holding
	Price *string `json:"price,omitempty"`
	// Last price updated date for the investment product. Will be empty for the cash holding
	PriceDate *string `json:"price_date,omitempty"`
	// Settled cash amount within the pot (applicable for cash holdings only)
	SettledCashPosition *string `json:"settled_cash_position,omitempty"`
	// Total quantity of the investment product holding. Will be empty for the cash holding
	TotalQuantity *string `json:"total_quantity,omitempty"`
	// Total value of the holding
	TotalValue string `json:"total_value"`
}

// GetPotHoldings200ApplicationJSON - success
type GetPotHoldings200ApplicationJSON struct {
	// Array of holdings belonging to a respective pot
	Holdings []GetPotHoldings200ApplicationJSONHoldings `json:"holdings"`
	PotID    string                                     `json:"pot_id"`
}

type GetPotHoldingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	GetPotHoldings200ApplicationJSONObject *GetPotHoldings200ApplicationJSON
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	GetPotHoldings400ApplicationJSONObject *GetPotHoldings400ApplicationJSON
	// You do not have permissions to access this resource.
	GetPotHoldings401ApplicationJSONObject *GetPotHoldings401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	GetPotHoldings403ApplicationJSONObject *GetPotHoldings403ApplicationJSON
	// The specified resource was not found
	GetPotHoldings404ApplicationJSONObject *GetPotHoldings404ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	GetPotHoldings429ApplicationJSONObject *GetPotHoldings429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	GetPotHoldings500ApplicationJSONObject *GetPotHoldings500ApplicationJSON
}
