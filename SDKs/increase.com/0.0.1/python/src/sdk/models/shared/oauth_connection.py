"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils

class OauthConnectionStatusEnum(str, Enum):
    r"""Whether the connection is active."""
    ACTIVE = 'active'
    INACTIVE = 'inactive'

class OauthConnectionTypeEnum(str, Enum):
    r"""A constant representing the object's type. For this resource it will always be `oauth_connection`."""
    OAUTH_CONNECTION = 'oauth_connection'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OauthConnection:
    r"""When a user authorizes your OAuth application, an OAuth Connection object is created."""
    
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp when the OAuth Connection was created."""  
    group_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_id') }})
    r"""The identifier of the Group that has authorized your OAuth application."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The OAuth Connection's identifier."""  
    status: OauthConnectionStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Whether the connection is active."""  
    type: OauthConnectionTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""A constant representing the object's type. For this resource it will always be `oauth_connection`."""  
    