// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SMSRequestGmtZoneEnum - Fuseau horaire de la date d'envoi
type SMSRequestGmtZoneEnum string

const (
	SMSRequestGmtZoneEnumPacificMidway               SMSRequestGmtZoneEnum = "Pacific/Midway"
	SMSRequestGmtZoneEnumAmericaAdak                 SMSRequestGmtZoneEnum = "America/Adak"
	SMSRequestGmtZoneEnumEtcGmtPlus10                SMSRequestGmtZoneEnum = "Etc/GMT+10"
	SMSRequestGmtZoneEnumPacificMarquesas            SMSRequestGmtZoneEnum = "Pacific/Marquesas"
	SMSRequestGmtZoneEnumPacificGambier              SMSRequestGmtZoneEnum = "Pacific/Gambier"
	SMSRequestGmtZoneEnumAmericaAnchorage            SMSRequestGmtZoneEnum = "America/Anchorage"
	SMSRequestGmtZoneEnumAmericaEnsenada             SMSRequestGmtZoneEnum = "America/Ensenada"
	SMSRequestGmtZoneEnumEtcGmtPlus8                 SMSRequestGmtZoneEnum = "Etc/GMT+8"
	SMSRequestGmtZoneEnumAmericaLosAngeles           SMSRequestGmtZoneEnum = "America/Los_Angeles"
	SMSRequestGmtZoneEnumAmericaDenver               SMSRequestGmtZoneEnum = "America/Denver"
	SMSRequestGmtZoneEnumAmericaChihuahua            SMSRequestGmtZoneEnum = "America/Chihuahua"
	SMSRequestGmtZoneEnumAmericaDawsonCreek          SMSRequestGmtZoneEnum = "America/Dawson_Creek"
	SMSRequestGmtZoneEnumAmericaBelize               SMSRequestGmtZoneEnum = "America/Belize"
	SMSRequestGmtZoneEnumAmericaCancun               SMSRequestGmtZoneEnum = "America/Cancun"
	SMSRequestGmtZoneEnumChileEasterIsland           SMSRequestGmtZoneEnum = "Chile/EasterIsland"
	SMSRequestGmtZoneEnumAmericaChicago              SMSRequestGmtZoneEnum = "America/Chicago"
	SMSRequestGmtZoneEnumAmericaNewYork              SMSRequestGmtZoneEnum = "America/New_York"
	SMSRequestGmtZoneEnumAmericaHavana               SMSRequestGmtZoneEnum = "America/Havana"
	SMSRequestGmtZoneEnumAmericaBogota               SMSRequestGmtZoneEnum = "America/Bogota"
	SMSRequestGmtZoneEnumAmericaCaracas              SMSRequestGmtZoneEnum = "America/Caracas"
	SMSRequestGmtZoneEnumAmericaSantiago             SMSRequestGmtZoneEnum = "America/Santiago"
	SMSRequestGmtZoneEnumAmericaLaPaz                SMSRequestGmtZoneEnum = "America/La_Paz"
	SMSRequestGmtZoneEnumAtlanticStanley             SMSRequestGmtZoneEnum = "Atlantic/Stanley"
	SMSRequestGmtZoneEnumAmericaCampoGrande          SMSRequestGmtZoneEnum = "America/Campo_Grande"
	SMSRequestGmtZoneEnumAmericaGooseBay             SMSRequestGmtZoneEnum = "America/Goose_Bay"
	SMSRequestGmtZoneEnumAmericaGlaceBay             SMSRequestGmtZoneEnum = "America/Glace_Bay"
	SMSRequestGmtZoneEnumAmericaStJohns              SMSRequestGmtZoneEnum = "America/St_Johns"
	SMSRequestGmtZoneEnumAmericaAraguaina            SMSRequestGmtZoneEnum = "America/Araguaina"
	SMSRequestGmtZoneEnumAmericaMontevideo           SMSRequestGmtZoneEnum = "America/Montevideo"
	SMSRequestGmtZoneEnumAmericaMiquelon             SMSRequestGmtZoneEnum = "America/Miquelon"
	SMSRequestGmtZoneEnumAmericaGodthab              SMSRequestGmtZoneEnum = "America/Godthab"
	SMSRequestGmtZoneEnumAmericaArgentinaBuenosAires SMSRequestGmtZoneEnum = "America/Argentina/Buenos_Aires"
	SMSRequestGmtZoneEnumAmericaSaoPaulo             SMSRequestGmtZoneEnum = "America/Sao_Paulo"
	SMSRequestGmtZoneEnumAmericaNoronha              SMSRequestGmtZoneEnum = "America/Noronha"
	SMSRequestGmtZoneEnumAtlanticCapeVerde           SMSRequestGmtZoneEnum = "Atlantic/Cape_Verde"
	SMSRequestGmtZoneEnumAtlanticAzores              SMSRequestGmtZoneEnum = "Atlantic/Azores"
	SMSRequestGmtZoneEnumEuropeBelfast               SMSRequestGmtZoneEnum = "Europe/Belfast"
	SMSRequestGmtZoneEnumEuropeDublin                SMSRequestGmtZoneEnum = "Europe/Dublin"
	SMSRequestGmtZoneEnumEuropeLisbon                SMSRequestGmtZoneEnum = "Europe/Lisbon"
	SMSRequestGmtZoneEnumEuropeLondon                SMSRequestGmtZoneEnum = "Europe/London"
	SMSRequestGmtZoneEnumAfricaAbidjan               SMSRequestGmtZoneEnum = "Africa/Abidjan"
	SMSRequestGmtZoneEnumEuropeAmsterdam             SMSRequestGmtZoneEnum = "Europe/Amsterdam"
	SMSRequestGmtZoneEnumEuropeBelgrade              SMSRequestGmtZoneEnum = "Europe/Belgrade"
	SMSRequestGmtZoneEnumEuropeBrussels              SMSRequestGmtZoneEnum = "Europe/Brussels"
	SMSRequestGmtZoneEnumAfricaAlgiers               SMSRequestGmtZoneEnum = "Africa/Algiers"
	SMSRequestGmtZoneEnumAfricaWindhoek              SMSRequestGmtZoneEnum = "Africa/Windhoek"
	SMSRequestGmtZoneEnumAsiaBeirut                  SMSRequestGmtZoneEnum = "Asia/Beirut"
	SMSRequestGmtZoneEnumAfricaCairo                 SMSRequestGmtZoneEnum = "Africa/Cairo"
	SMSRequestGmtZoneEnumAsiaGaza                    SMSRequestGmtZoneEnum = "Asia/Gaza"
	SMSRequestGmtZoneEnumAfricaBlantyre              SMSRequestGmtZoneEnum = "Africa/Blantyre"
	SMSRequestGmtZoneEnumAsiaJerusalem               SMSRequestGmtZoneEnum = "Asia/Jerusalem"
	SMSRequestGmtZoneEnumEuropeMinsk                 SMSRequestGmtZoneEnum = "Europe/Minsk"
	SMSRequestGmtZoneEnumAsiaDamascus                SMSRequestGmtZoneEnum = "Asia/Damascus"
	SMSRequestGmtZoneEnumEuropeMoscow                SMSRequestGmtZoneEnum = "Europe/Moscow"
	SMSRequestGmtZoneEnumAfricaAddisAbaba            SMSRequestGmtZoneEnum = "Africa/Addis_Ababa"
	SMSRequestGmtZoneEnumAsiaTehran                  SMSRequestGmtZoneEnum = "Asia/Tehran"
	SMSRequestGmtZoneEnumAsiaDubai                   SMSRequestGmtZoneEnum = "Asia/Dubai"
	SMSRequestGmtZoneEnumAsiaYerevan                 SMSRequestGmtZoneEnum = "Asia/Yerevan"
	SMSRequestGmtZoneEnumAsiaKabul                   SMSRequestGmtZoneEnum = "Asia/Kabul"
	SMSRequestGmtZoneEnumAsiaYekaterinburg           SMSRequestGmtZoneEnum = "Asia/Yekaterinburg"
	SMSRequestGmtZoneEnumAsiaTashkent                SMSRequestGmtZoneEnum = "Asia/Tashkent"
	SMSRequestGmtZoneEnumAsiaKolkata                 SMSRequestGmtZoneEnum = "Asia/Kolkata"
	SMSRequestGmtZoneEnumAsiaKatmandu                SMSRequestGmtZoneEnum = "Asia/Katmandu"
	SMSRequestGmtZoneEnumAsiaDhaka                   SMSRequestGmtZoneEnum = "Asia/Dhaka"
	SMSRequestGmtZoneEnumAsiaNovosibirsk             SMSRequestGmtZoneEnum = "Asia/Novosibirsk"
	SMSRequestGmtZoneEnumAsiaRangoon                 SMSRequestGmtZoneEnum = "Asia/Rangoon"
	SMSRequestGmtZoneEnumAsiaBangkok                 SMSRequestGmtZoneEnum = "Asia/Bangkok"
	SMSRequestGmtZoneEnumAsiaKrasnoyarsk             SMSRequestGmtZoneEnum = "Asia/Krasnoyarsk"
	SMSRequestGmtZoneEnumAsiaHongKong                SMSRequestGmtZoneEnum = "Asia/Hong_Kong"
	SMSRequestGmtZoneEnumAsiaIrkutsk                 SMSRequestGmtZoneEnum = "Asia/Irkutsk"
	SMSRequestGmtZoneEnumAustraliaPerth              SMSRequestGmtZoneEnum = "Australia/Perth"
	SMSRequestGmtZoneEnumAustraliaEucla              SMSRequestGmtZoneEnum = "Australia/Eucla"
	SMSRequestGmtZoneEnumAsiaTokyo                   SMSRequestGmtZoneEnum = "Asia/Tokyo"
	SMSRequestGmtZoneEnumAsiaSeoul                   SMSRequestGmtZoneEnum = "Asia/Seoul"
	SMSRequestGmtZoneEnumAsiaYakutsk                 SMSRequestGmtZoneEnum = "Asia/Yakutsk"
	SMSRequestGmtZoneEnumAustraliaAdelaide           SMSRequestGmtZoneEnum = "Australia/Adelaide"
	SMSRequestGmtZoneEnumAustraliaDarwin             SMSRequestGmtZoneEnum = "Australia/Darwin"
	SMSRequestGmtZoneEnumAustraliaBrisbane           SMSRequestGmtZoneEnum = "Australia/Brisbane"
	SMSRequestGmtZoneEnumAustraliaHobart             SMSRequestGmtZoneEnum = "Australia/Hobart"
	SMSRequestGmtZoneEnumAsiaVladivostok             SMSRequestGmtZoneEnum = "Asia/Vladivostok"
	SMSRequestGmtZoneEnumAustraliaLordHowe           SMSRequestGmtZoneEnum = "Australia/Lord_Howe"
	SMSRequestGmtZoneEnumEtcGmt11                    SMSRequestGmtZoneEnum = "Etc/GMT-11"
	SMSRequestGmtZoneEnumAsiaMagadan                 SMSRequestGmtZoneEnum = "Asia/Magadan"
	SMSRequestGmtZoneEnumPacificNorfolk              SMSRequestGmtZoneEnum = "Pacific/Norfolk"
	SMSRequestGmtZoneEnumAsiaAnadyr                  SMSRequestGmtZoneEnum = "Asia/Anadyr"
	SMSRequestGmtZoneEnumPacificAuckland             SMSRequestGmtZoneEnum = "Pacific/Auckland"
	SMSRequestGmtZoneEnumEtcGmt12                    SMSRequestGmtZoneEnum = "Etc/GMT-12"
	SMSRequestGmtZoneEnumPacificChatham              SMSRequestGmtZoneEnum = "Pacific/Chatham"
	SMSRequestGmtZoneEnumPacificTongatapu            SMSRequestGmtZoneEnum = "Pacific/Tongatapu"
	SMSRequestGmtZoneEnumPacificKiritimati           SMSRequestGmtZoneEnum = "Pacific/Kiritimati"
)

func (e *SMSRequestGmtZoneEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pacific/Midway":
		fallthrough
	case "America/Adak":
		fallthrough
	case "Etc/GMT+10":
		fallthrough
	case "Pacific/Marquesas":
		fallthrough
	case "Pacific/Gambier":
		fallthrough
	case "America/Anchorage":
		fallthrough
	case "America/Ensenada":
		fallthrough
	case "Etc/GMT+8":
		fallthrough
	case "America/Los_Angeles":
		fallthrough
	case "America/Denver":
		fallthrough
	case "America/Chihuahua":
		fallthrough
	case "America/Dawson_Creek":
		fallthrough
	case "America/Belize":
		fallthrough
	case "America/Cancun":
		fallthrough
	case "Chile/EasterIsland":
		fallthrough
	case "America/Chicago":
		fallthrough
	case "America/New_York":
		fallthrough
	case "America/Havana":
		fallthrough
	case "America/Bogota":
		fallthrough
	case "America/Caracas":
		fallthrough
	case "America/Santiago":
		fallthrough
	case "America/La_Paz":
		fallthrough
	case "Atlantic/Stanley":
		fallthrough
	case "America/Campo_Grande":
		fallthrough
	case "America/Goose_Bay":
		fallthrough
	case "America/Glace_Bay":
		fallthrough
	case "America/St_Johns":
		fallthrough
	case "America/Araguaina":
		fallthrough
	case "America/Montevideo":
		fallthrough
	case "America/Miquelon":
		fallthrough
	case "America/Godthab":
		fallthrough
	case "America/Argentina/Buenos_Aires":
		fallthrough
	case "America/Sao_Paulo":
		fallthrough
	case "America/Noronha":
		fallthrough
	case "Atlantic/Cape_Verde":
		fallthrough
	case "Atlantic/Azores":
		fallthrough
	case "Europe/Belfast":
		fallthrough
	case "Europe/Dublin":
		fallthrough
	case "Europe/Lisbon":
		fallthrough
	case "Europe/London":
		fallthrough
	case "Africa/Abidjan":
		fallthrough
	case "Europe/Amsterdam":
		fallthrough
	case "Europe/Belgrade":
		fallthrough
	case "Europe/Brussels":
		fallthrough
	case "Africa/Algiers":
		fallthrough
	case "Africa/Windhoek":
		fallthrough
	case "Asia/Beirut":
		fallthrough
	case "Africa/Cairo":
		fallthrough
	case "Asia/Gaza":
		fallthrough
	case "Africa/Blantyre":
		fallthrough
	case "Asia/Jerusalem":
		fallthrough
	case "Europe/Minsk":
		fallthrough
	case "Asia/Damascus":
		fallthrough
	case "Europe/Moscow":
		fallthrough
	case "Africa/Addis_Ababa":
		fallthrough
	case "Asia/Tehran":
		fallthrough
	case "Asia/Dubai":
		fallthrough
	case "Asia/Yerevan":
		fallthrough
	case "Asia/Kabul":
		fallthrough
	case "Asia/Yekaterinburg":
		fallthrough
	case "Asia/Tashkent":
		fallthrough
	case "Asia/Kolkata":
		fallthrough
	case "Asia/Katmandu":
		fallthrough
	case "Asia/Dhaka":
		fallthrough
	case "Asia/Novosibirsk":
		fallthrough
	case "Asia/Rangoon":
		fallthrough
	case "Asia/Bangkok":
		fallthrough
	case "Asia/Krasnoyarsk":
		fallthrough
	case "Asia/Hong_Kong":
		fallthrough
	case "Asia/Irkutsk":
		fallthrough
	case "Australia/Perth":
		fallthrough
	case "Australia/Eucla":
		fallthrough
	case "Asia/Tokyo":
		fallthrough
	case "Asia/Seoul":
		fallthrough
	case "Asia/Yakutsk":
		fallthrough
	case "Australia/Adelaide":
		fallthrough
	case "Australia/Darwin":
		fallthrough
	case "Australia/Brisbane":
		fallthrough
	case "Australia/Hobart":
		fallthrough
	case "Asia/Vladivostok":
		fallthrough
	case "Australia/Lord_Howe":
		fallthrough
	case "Etc/GMT-11":
		fallthrough
	case "Asia/Magadan":
		fallthrough
	case "Pacific/Norfolk":
		fallthrough
	case "Asia/Anadyr":
		fallthrough
	case "Pacific/Auckland":
		fallthrough
	case "Etc/GMT-12":
		fallthrough
	case "Pacific/Chatham":
		fallthrough
	case "Pacific/Tongatapu":
		fallthrough
	case "Pacific/Kiritimati":
		*e = SMSRequestGmtZoneEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SMSRequestGmtZoneEnum: %s", s)
	}
}

type SMSRequestNumAzurEnum string

const (
	SMSRequestNumAzurEnumOne SMSRequestNumAzurEnum = "1"
)

func (e *SMSRequestNumAzurEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		*e = SMSRequestNumAzurEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SMSRequestNumAzurEnum: %s", s)
	}
}

// SMSRequest - sms request
type SMSRequest struct {
	// Paramètre optionnel, date d'envoi au format YYYY-MM-DD hh:mm
	DateEnvoi *string `json:"date_envoi,omitempty"`
	// L'emetteur doit être une chaîne alphanumérique comprise entre 4 et 11 caractères. Les caractères acceptés sont les chiffres entre 0 et 9, les lettres entre A et Z et l’espace. Il ne peut pas comporter uniquement des chiffres. Pour la modification de l’émetteur et dans le cadre de campagnes commerciales, les opérateurs imposent contractuellement d’ajouter en fin de message le texte suivant : STOP XXXXX De ce fait, le message envoyé ne pourra excéder une longueur de 148 caractères au lieu des 160 caractères, le « STOP » étant rajouté automatiquement.
	Emetteur *string `json:"emetteur,omitempty"`
	// Fuseau horaire de la date d'envoi
	GmtZone *SMSRequestGmtZoneEnum `json:"gmt_zone,omitempty"`
	// Clé API
	Keyid string `json:"keyid"`
	// Si le message n’est pas à but commercial, vous pouvez faire une demande pour retirer l’obligation du STOP. Une fois votre demande validée par nos services, vous pourrez supprimer la mention STOP SMS en ajoutant nostop = "1"
	Nostop  *string                `json:"nostop,omitempty"`
	Num     []string               `json:"num"`
	NumAzur *SMSRequestNumAzurEnum `json:"numAzur,omitempty"`
	// Id du repertoire
	RepertoireID *string  `json:"repertoireId,omitempty"`
	Sms          []string `json:"sms"`
	// Le SMS long permet de dépasser la limite de 160 caractères en envoyant un message constitué de plusieurs SMS. Il est possible d’envoyer jusqu’à 6 SMS concaténés pour une longueur totale maximale de 918 caractères par message. Pour des raisons technique, la limite par SMS concaténé étant de 153 caractères. En cas de modification de l’émetteur, il faut considérer l’ajout automatique de 12 caractères du « STOP SMS ». Pour envoyer un smslong, il faut ajouter le paramètre smslong aux appels. La valeur de SMS doit être le nombre maximum de sms concaténé autorisé.   Pour ne pas avoir ce message d’erreur et obtenir un calcul dynamique du nombre de SMS alors il faut renseigner smslong = "999"
	Smslong *string  `json:"smslong,omitempty"`
	Tracker []string `json:"tracker,omitempty"`
	// Il est également possible d’envoyer des SMS en alphabet non latin (russe, chinois, arabe, etc) sur les numéros hors France métropolitaine. Pour ce faire, la requête devrait être encodée au format UTF-8 et contenir l’argument ucs2 = "1" Du fait de contraintes techniques, 1 SMS unique ne pourra pas dépasser 70 caractères (au lieu des 160 usuels) et dans le cas de SMS long, chaque sms ne pourra dépasser 67 caractères.
	Ucs2 *string `json:"ucs2,omitempty"`
}
